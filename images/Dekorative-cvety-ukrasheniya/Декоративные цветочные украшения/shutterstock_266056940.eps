%!PS-Adobe-3.1 EPSF-3.0
%%Title: page decorations with branches [Converted].eps
%%Creator: Adobe Illustrator(R) 11
%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: pingwin pingwin
%%CreationDate: 4/2/2015
%%BoundingBox: 0 0 569 565
%%HiResBoundingBox: 0 0 568.0799 564.4314
%%CropBox: 0 0 568.0799 564.4314
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)
%%+ procset Adobe_CoolType_Core (2.23 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 68 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/agm_sethalftone
{ 
	dup
	begin
		/_Data load
		/Thresholds xdf
	end
	level3 
	{ sethalftone }{
		dup /HalftoneType get 3 eq {
			sethalftone
		} {pop} ifelse
	}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ imageDict begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height { 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 
	dup type /dicttype eq
		{
			AGMCORE_tmp
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			AGMCORE_tmp exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	AGMCORE_tmp 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		/CSD known
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 216 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_gradientcache 32 dict def
/AGMCORE_in_pattern false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/add_grad
{
	AGMCORE_gradientcache 3 1 roll put
}bdf
/exec_grad
{
	AGMCORE_gradientcache exch get exec
}bdf
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&usrshfill /shfill load def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not currentpagedevice/OverrideSeparations known and
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		/AGMCORE_IsSeparationAProcessColor
			{
			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				gsave
				false setoverprint
				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
				currentgray 0 eq 
				grestore
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				clonedict
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					currentdict end
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 xpt
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 xpt
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/currentpagedevice currentpagedevice def
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
ColorSpaceFamily /Separation eq
	{
	sep
	}
	{
	ColorSpaceFamily /DeviceN eq
		{
		devn
		}
		{
		setcolor
		}ifelse
	}ifelse
} bind def
/sssetbackground { aload pop setcolor } bind def
/RadialShade {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bind def
/GenStrips {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bind def
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		6 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get 0 get null eq {
					dup /Names get names_index get /name xdf
					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
					or or or not {
						/AliasedColorants false def
						exit
					} if
				} if
			} for
			AliasedColorants {
				dup begin
				/Names new_names def
				/AliasedColorants true def
				/LookupTables new_LookupTables def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				currentdict /NComponents known not {
					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			Names {
				AvoidAliasedColorants {
					/currentspotalias current_spot_alias def
					false set_spot_alias
				} if
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				AvoidAliasedColorants {
					currentspotalias set_spot_alias
				} if
				/names_index names_index 1 add def
			} forall
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				/setcolor ldf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSD known {
			CSD get_csd /Names known {
				CSD get_csd begin
				currentdict devncs
				AGMCORE_host_sep{
					4 dict begin
					/devnCompCnt Names length def
					/NewLookup HiVal 1 add string def
					0 1 HiVal {
						/tableIndex xdf
						Lookup dup type /stringtype eq {
							devnCompCnt tableIndex map_index
						}{
							exec
						} ifelse
						setdevicencolor
						currentgray
						tableIndex exch
						HiVal mul cvi 
						NewLookup 3 1 roll put
					} for
					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
					end
				}{
					level3
					{
					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
					[/Indexed MappedCSA HiVal
						[
						Lookup dup type /stringtype eq
							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
						]cvx
					]setcolorspace_opt
					}ifelse
				} ifelse
				end
			}{
			} ifelse
			set_crd
		}
		{
			/MappedCSA CSA map_csa def
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {
			begin
			CSD get_csd begin
			map_indexed_devn
			devn
			end
			end
		}{
			AGMCORE_gget/Lookup get 4 3 -1 roll map_index
			pop setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {
			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		1 dict begin
		/name xdf
		AGMCORE_CSA_cache
		{
			0 get name eq {
				exit
			}{
				pop
			} ifelse
		}forall
		end
		end
	}{
		pop
	} ifelse
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
		dup wrap_paintproc
	}if
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	  begin
		/OldPaintProc /PaintProc load def
		/PaintProc
		{
		  mark exch
		  dup /OldPaintProc get stopped
		  {closefile restore end} if
		  cleartomark
		}  def
	  end
  } {pop} ifelse
} def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		dup /customcolor_tint exch AGMCORE_gput
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.23 0
%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.23 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.23 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel
		2 copy known not
			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 2 sub 1 index lt
				{ pop count 1 sub }
			if
			dup /argCount exch def
			dup 0 gt
				{
				exch 1 index 2 add 1 roll
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count 1 sub /restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup begin
		mark
			{
				(*) { pop stop } 128 string /Category
			resourceforall
			}
		stopped
		cleartomark
		currentdict eq dup
			{ end }
		if
		not
		}
		{ false }
	ifelse
	def
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
	userdict /Adobe_CoolType_Data 10 dict dup
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end put
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	currentcolorspace 0 get dup /DeviceCMYK eq {
		pop 4
	}
	{
		/DeviceRGB eq {
			pop 3
		}{
			1
		} ifelse
	} ifelse
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/srcDataStrs xdf
	/dstDataStr xdf
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/samplesNeedDecoding
		0 0 1 origDecode length 1 sub {
			origDecode exch get add
		} for
		origDecode length 2 div div
		dup 1 eq {
			/decodeDivisor 2 origBitsPerComponent exp 1 sub def
		} if
		2 origBitsPerComponent exp 1 sub ne
	def
	[
		0 1 dsCnt 1 sub [
			currentdict /origMultipleDataSources get {
				dup currentdict /origDataSource get exch get dup type
			}{
				currentdict /origDataSource get dup type
			} ifelse
			dup /filetype eq {
				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx
			}{
				/stringtype ne {
					/exec cvx
				} if
				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx
			} ifelse
		] cvx /for cvx
		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [
			0 1 Width 1 sub [
				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx
				currentdict /origMultipleDataSources get {
					0 1 dsCnt 1 sub [
						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx
						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs
								BitsPerComponent /decode_image_sample load /exec cvx
							} ifelse
						} if
					] cvx /for cvx
				}{
					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx
					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx		
					currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 
					[
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx
								BitsPerComponent /decode_image_sample load /exec cvx
								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx
							} ifelse
						} if
					] cvx /forall cvx
				} ifelse
				currentdict /convProc get /exec cvx
				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [
					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx
					currentdict /convProc get /filter_indexed_devn load ne {
						255 /mul cvx /cvi cvx 
					} if
					/put cvx 
				] cvx /for cvx
			] cvx /for cvx
			currentdict /dstDataStr get
		] cvx /if cvx
	] cvx bind
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	2 dict begin
	dup dup
	/dstDataStr exch /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						dstDataStr srcDataStrs devn_alt_datasource /exec cvx
						] cvx 0 () /SubFileDecode filter def
					/MultipleDataSources false def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA map_csa 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							[
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							dstDataStr srcDataStrs devn_alt_datasource /exec cvx
							] cvx
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource [
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								dstDataStr srcDataStrs devn_alt_datasource /exec cvx
								] cvx 0 () /SubFileDecode filter def
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get map_csa
				}{
					/CSD get get_csd /Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
					CSD get_csd begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (page decorations with branches [Converted].eps) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2015-04-02T02:52:53Z</xap:CreateDate>
  <xap:ModifyDate>2015-04-02T02:52:53Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>256</xapGImg:width>
     <xapGImg:height>256</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qg9ZtLu80i+tLK6ay&#xA;vLi3litr1BVoZXQqkoB2JRiGxV8n+bvz4/5yO8hzxWHmfTreNoo5rdNSltKwXsxYlJkliKRVRCKI&#xA;lP8AKXfZVmv5U/8AOTfmHzpfaD5di8ui9124kY69fxO8NnbWyMf3oHGZuRQdCQvKgB+L4VX0Pirz&#xA;7z/quuar5p0r8v8AQL2TS5tQt5dS13VoKC4t9NhdYuNuxBCyzytwV/2ACRviqJtvyV/K23i9MaBb&#xA;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&#xA;irzHy3+Q/kvV57mS18xTeT/MekuUvhFP9YgtZ6lOH74WdzA1R0Z2V9/TlcA0VZPpf5O/m1dKU8u/&#xA;nS+pWyr9pLq4l4hTx2CzzgD6cVRn/QqXm7WeI84/mTqWqW9PjtaTS++0lxPIBv8A8V4q9M/L/wDI&#xA;b8tPI0i3OkaZ9Y1NKcdUviLi4UjuhICRn3jVcVU/zD/JPy75qe11DTvR0PX7NiY9QitYp4po3/vI&#xA;Ly2bjHcRP3V/4mqrJPKHl+XSbCSzutL0q0ZlVZJdJh+rw3HUMXtyv7v/AFeb/PFWPeRfy+0r/lTF&#xA;v5PuVLaZqNpdfCQOSRahLJcJ4UaMTingRiqe/l8+q23l+20HXDy1zRYYrW8lG63CIDHDdIe6zrHX&#xA;fcNyU9MVZNQVBpuNge9DirTokiNHIodHBV0YVBB2IIOKt4q7FXYqhdQ0zTtRgMN9aQXkW9IriNZU&#xA;qf8AJYEYq+cPzV/Jm3g1O2vLPT9Ne6nJ+p+W/L2ioLiZhWjSzTSTW8UY/bleHgP5WOKpr+VX5Jed&#xA;4PNEPnfzglpp0+mQyL5f8rWPD0YZGjdFMxjPp/CJGoFY7n7SqoXFWQf84oaPrVj+VX13Vmdp9b1G&#xA;61KIS15hHCRVYHpzeFn/ANlXFWfar5KEmuP5h0O+fRtcmRIr2VEWa2u449o1u7divqFBsrqyOBty&#xA;47YqyK3W4WBBcOkk4A9SSNDGhbuVQtIVHtyOKqmKuxV2KuxV2KuxV2KuxV2KuxVTuFuGgcW7pHOQ&#xA;fTkkQyIG7FkDRlh7chirHdJ8lenrq+Ytcv31nW4UeKykdFhtrOOTaQWlupbgZBs7szORty47YqwD&#xA;/nLDRtav/wAqfrmks6zaLqNtqMyx15mNA8PwgdeDzK/+xrirHvzX/JDzvdeaJfPPk9bXULrU4Il1&#xA;/wAs3/D0p5EjVCY/U/dkMEFVZl3HUhiuKpZ+Vf5Mwz6ncXt5p2mx3MJH1zy35h0VDcRE0q0M8MkN&#xA;vLFX7EqQlD04KcVfR+n6Zp2nQCGxtILOLasVvGsSVH+SoAxVFYq7FXYq0iJGixxqERAFRFFAANgA&#xA;BirdBWvfxxV2KuxV2KuxV2KuxV2KuxVLbq90Hy1oolvbmDTNJsY1T1p3WKJEUUUcnIHb6cVY7b/m&#xA;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&#xA;FXrGKuxV2KuxV2KuxV//2Q==</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -564.431 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 564.431 li
568.08 564.431 li
568.08 0 li
clp
[1 0 0 1 0 0 ] concat
53.928 17.8071 mo
53.928 17.8071 59.832 19.0313 63.864 16.5833 cv
67.824 14.1353 66.8879 11.7593 67.824 10.8953 cv
68.76 10.0313 69.3362 9.45532 69.3362 9.45532 cv
69.3362 9.45532 67.032 7.94312 63.792 9.23926 cv
61.9199 9.95923 57.0959 14.1353 55.656 15.0713 cv
55.656 15.0713 57.6719 12.8391 58.248 11.4712 cv
60.1919 6.79126 48.4561 2.18335 48.96 11.1111 cv
49.032 12.1191 49.4639 13.9912 49.4639 13.9912 cv
49.4639 13.9912 47.7361 12.6233 48.312 9.67114 cv
49.4639 2.90308 41.04 5.63916 42.552 9.16724 cv
43.344 10.9673 43.7759 11.5432 43.7759 11.5432 cv
43.7759 11.5432 42.9119 11.6873 41.5439 9.16724 cv
40.176 6.5752 39.7439 5.35132 37.4399 5.06323 cv
35.064 4.70313 33.2639 3.33521 33.2639 3.33521 cv
32.9041 4.6311 33.408 6.21509 34.272 7.79907 cv
37.8 14.1353 41.688 15.2151 47.592 16.0793 cv
47.592 16.0793 45.4319 16.2952 44.208 18.3113 cv
42.9119 20.3271 44.064 21.5513 44.064 21.5513 cv
44.064 21.5513 45 20.3271 46.3679 19.6072 cv
47.8079 18.8872 49.3918 18.6711 49.3918 18.6711 cv
47.9519 20.6873 48.6719 22.1992 49.3201 23.6392 cv
49.3201 23.9272 49.3201 24.2874 49.248 24.6472 cv
49.104 27.5271 49.032 30.3352 49.104 32.9993 cv
48.8159 32.9272 li
45.5759 32.2073 44.28 17.6633 31.824 20.5432 cv
29.0159 21.2632 25.488 22.5593 25.488 22.5593 cv
29.8799 24.5752 31.3918 28.8953 35.136 31.4871 cv
38.52 33.7913 42.7681 34.6553 46.584 33.5032 cv
47.376 33.2151 48.384 33.3591 49.176 33.6472 cv
49.3918 41.1353 50.76 47.3992 53.208 52.3672 cv
52.344 51.9353 51.48 51.5032 50.5439 51.0713 cv
46.2239 49.1272 40.752 48.5513 35.7119 49.6311 cv
32.832 48.9111 30.168 47.4712 28.1519 45.0952 cv
28.0801 45.0232 28.0081 44.9512 27.936 44.8071 cv
28.0081 44.8792 28.1519 44.9512 28.2239 44.9512 cv
29.304 45.3831 30.7439 45.5991 32.76 44.9512 cv
36.2161 43.7991 37.584 38.1833 33.624 36.6711 cv
27.4319 34.2231 25.5601 39.3352 24.1199 38.1833 cv
22.6799 37.1033 li
22.6799 37.1033 23.76 36.2393 25.2 35.5911 cv
27.072 34.7273 32.5439 33.7913 29.7361 29.5432 cv
29.2319 28.7512 27.2878 25.2952 27.2878 25.2952 cv
27.2878 25.2952 27 24.7192 25.1279 25.5833 cv
21.5999 27.0952 20.8079 31.5593 20.8079 34.8713 cv
20.8079 34.8713 19.584 33.6472 19.3679 31.4153 cv
19.0801 29.2551 20.2319 27.2393 20.2319 27.2393 cv
17.5679 26.8071 16.416 29.1833 13.968 28.8232 cv
13.032 28.6792 11.52 30.1191 11.2319 31.3433 cv
11.0159 32.5671 12.6719 33.2151 11.8079 34.9431 cv
10.9438 36.6711 9.71997 36.7432 10.0801 37.5352 cv
10.3679 38.2551 13.3201 39.3352 14.4719 39.0471 cv
15.696 38.7593 16.488 38.9031 16.488 38.9031 cv
14.1841 40.9912 11.7361 39.6951 9.35986 38.5432 cv
9.35986 38.5432 8.06396 39.1912 7.19995 41.6392 cv
6.33594 44.0151 6.76807 46.8953 9.79199 48.1912 cv
12.8159 49.4153 14.9761 47.4712 16.6321 45.7432 cv
18.2878 44.0151 19.728 40.7751 19.728 40.7751 cv
21.312 43.0793 19.1519 42.6472 18.3599 45.7432 cv
17.4958 48.7673 18.144 49.2712 19.0801 50.2073 cv
20.592 51.7192 21.312 53.5193 23.9041 53.6633 cv
26.7119 53.8792 28.3679 49.4871 27.6479 47.2551 cv
27.5039 46.8953 27.3599 46.4631 27.2878 46.1033 cv
28.0081 46.8953 28.8 47.5432 29.6641 48.1912 cv
30.5999 48.8391 31.6799 49.3433 32.76 49.8472 cv
33.0479 49.9192 33.3359 50.0632 33.624 50.1353 cv
27.3599 52.0793 22.3201 56.6873 22.3918 64.3191 cv
22.3918 70.9431 31.248 76.0552 34.8479 69.0713 cv
35.4958 67.7751 35.3521 66.7673 35.064 65.3992 cv
35.064 65.1111 34.9919 64.9673 34.9919 64.9673 cv
34.9919 65.1111 34.9919 65.3271 35.064 65.4712 cv
35.208 66.7673 35.136 67.8472 34.344 68.9272 cv
31.032 73.7512 23.832 70.4392 24.552 64.7512 cv
26.136 52.2952 40.032 49.6311 49.6079 54.0232 cv
52.2 55.175 54.72 56.7593 57.168 58.4153 cv
57.168 58.3433 li
60.0479 61.5112 63.5759 63.6711 67.8958 64.8232 cv
67.968 64.8232 68.0398 64.8232 68.0398 64.8232 cv
62.28 65.5432 58.4639 63.8872 52.6321 63.9592 cv
49.3918 64.0313 46.3679 64.8232 45.5039 67.1272 cv
44.5679 69.5032 40.104 67.9192 39.24 73.0313 cv
38.8799 75.1191 38.592 77.2791 35.6399 78.5752 cv
33.408 79.5112 32.4719 79.7273 32.4719 79.7273 cv
35.3521 80.3032 40.968 81.3831 43.488 79.5112 cv
44.928 78.3591 45.6479 77.0632 49.3918 77.2073 cv
53.208 77.2791 53.928 75.4072 55.0081 74.6152 cv
57.8879 72.4553 60.48 74.3271 63 70.7991 cv
64.0081 69.4312 68.1121 66.7673 70.8479 65.4712 cv
81.5042 67.5593 91.7278 65.9031 101.88 62.1592 cv
98.136 64.3191 94.5359 66.3352 90.3601 67.7751 cv
85.2478 69.5752 80.928 73.6072 78.3362 78.4312 cv
74.8801 85.0552 76.032 92.3992 71.2078 98.6633 cv
71.2078 98.6633 77.2561 97.8713 81.864 96.7192 cv
96.696 92.8313 95.616 79.9431 95.616 72.0232 cv
95.6877 67.9912 97.9202 65.7593 101.232 63.8152 cv
104.04 62.1592 106.92 60.5032 109.8 58.9192 cv
140.328 44.9512 170.28 17.0872 206.352 25.1511 cv
228.456 30.1191 241.92 42.4312 253.872 58.2712 cv
242.424 50.3513 229.752 44.1592 217.008 39.3352 cv
200.376 33.5752 181.728 28.3911 166.392 40.0552 cv
165.6 40.6311 164.88 41.2073 164.232 41.8552 cv
160.344 40.7751 155.52 42.4312 153.288 46.1033 cv
153.216 46.3191 153.144 46.4631 153.072 46.6072 cv
151.776 45.6711 149.544 44.1592 147.312 43.8713 cv
137.736 42.7192 137.592 49.4871 131.256 53.5193 cv
130.752 53.8792 129.6 55.5352 129.6 55.5352 cv
130.752 55.8953 li
130.752 55.8953 127.872 58.7751 126.792 62.0872 cv
125.352 66.4792 124.992 71.3032 123.624 75.7673 cv
123.624 75.7673 128.376 72.3831 131.328 72.0232 cv
139.752 71.0151 149.616 64.5352 151.56 55.5352 cv
152.28 52.2231 154.368 50.4951 153.792 47.2551 cv
153.936 46.8953 154.08 46.5352 154.296 46.2473 cv
156.384 43.4392 160.2 41.9272 163.44 42.5752 cv
158.184 47.6873 154.728 54.5991 154.44 62.6633 cv
154.44 66.6233 155.16 70.0071 156.528 72.8872 cv
156.384 73.1033 li
157.464 74.4712 158.544 76.7031 158.544 76.7031 cv
158.544 76.7031 157.176 78.7192 155.376 80.8071 cv
153.576 82.8953 151.992 86.4231 152.928 88.9431 cv
153.864 91.4631 156.744 91.9673 157.464 91.175 cv
158.256 90.3831 160.848 87.5032 160.848 87.5032 cv
160.848 87.5032 161.136 88.5833 161.28 89.9512 cv
161.64 92.1833 163.872 95.3513 166.464 94.7031 cv
168.336 94.2712 168.84 91.2473 168.84 91.2473 cv
173.232 91.9673 175.32 87.2871 173.232 83.6873 cv
172.512 82.4631 168.768 80.0872 168.768 80.0872 cv
168.768 80.0872 171.792 81.2393 174.096 81.7432 cv
176.328 82.2473 177.12 82.9673 180.72 79.0793 cv
185.688 73.6792 180.36 68.7832 175.248 70.2952 cv
172.08 71.2312 171.216 72.0232 170.208 72.6711 cv
169.128 73.3911 170.424 71.3752 170.28 69.7913 cv
170.064 68.2791 169.056 68.2073 165.384 67.9192 cv
161.712 67.6311 161.712 66.1912 159.336 68.2791 cv
157.104 70.1511 158.544 73.7512 158.832 74.3992 cv
158.616 73.8953 158.328 73.3911 158.112 72.8152 cv
153.576 61.0071 159.264 48.1191 169.56 41.4951 cv
179.712 35.3752 190.872 37.1033 202.032 39.0471 cv
212.616 41.4231 222.984 45.1672 232.848 50.1353 cv
224.424 47.9753 217.368 47.2551 210.168 44.2312 cv
205.128 42.1433 199.224 42.2151 194.04 44.0872 cv
187.056 46.6072 183.024 52.8713 175.176 54.3113 cv
175.176 54.3113 180.216 57.7673 184.392 59.9993 cv
198 67.0552 205.848 56.7593 211.176 50.9272 cv
213.912 47.9753 217.08 47.8313 220.824 48.5513 cv
223.992 49.1992 227.232 49.9192 230.4 50.7112 cv
217.584 49.7751 202.968 56.3992 203.04 70.8713 cv
203.112 79.2952 214.344 85.7031 218.952 76.8472 cv
219.744 75.2632 219.6 73.8953 219.24 72.1672 cv
219.168 71.8071 219.096 71.5911 219.096 71.5911 cv
219.096 71.8071 219.168 72.0952 219.168 72.3113 cv
219.384 73.8953 219.312 75.2632 218.304 76.6311 cv
214.056 82.8232 204.912 78.5752 205.848 71.3032 cv
207.864 55.4631 225.504 52.0793 237.672 57.6951 cv
243.72 60.5032 249.624 64.6792 254.88 68.6392 cv
260.64 68.6392 li
261.216 68.6392 li
263.376 68.6392 li
267.048 68.6392 li
267.912 68.6392 li
268.416 68.6392 li
269.424 68.6392 li
266.256 65.9031 265.176 60.5752 266.976 56.4712 cv
267.192 56.1111 267.408 55.7512 267.696 55.3911 cv
271.296 54.1672 271.872 50.9272 274.824 48.3352 cv
282.744 41.1353 283.536 27.3831 279.72 18.3113 cv
278.352 15.1433 279 8.37524 279 8.37524 cv
275.256 12.3352 270.576 15.5032 266.976 19.4631 cv
264.312 22.4871 263.016 27.0952 263.016 27.0952 cv
262.008 26.1592 li
262.008 26.1592 261 28.2473 261 29.0393 cv
260.496 37.7512 253.728 41.7832 260.496 50.7832 cv
262.08 52.9431 264.96 54.3113 266.688 55.0313 cv
266.544 55.175 266.4 55.3911 266.256 55.5352 cv
264.816 58.1992 264.6 61.3672 265.464 64.175 cv
261.432 58.3433 257.112 52.7273 252.432 47.5432 cv
251.136 43.8713 249.192 39.1912 249.408 35.8792 cv
249.912 29.2551 256.464 15.0713 241.704 7.87134 cv
237.672 5.99927 232.272 4.1272 232.272 4.1272 cv
235.584 10.8232 233.136 17.3032 235.152 23.9993 cv
236.88 29.8313 241.128 35.0151 246.816 37.2473 cv
247.536 37.5352 249.12 41.7832 250.416 45.3831 cv
239.112 33.5032 225.576 24.2874 208.44 19.8953 cv
180.288 12.6951 156.312 28.1033 132.912 42.5032 cv
130.032 43.5833 126.936 44.2312 123.696 44.3752 cv
114.552 44.3752 106.416 40.2712 101.592 32.4231 cv
96.9119 24.0713 97.488 13.4871 104.616 6.71924 cv
111.384 .599121 123.264 .167236 128.592 8.37524 cv
131.76 13.4871 130.824 21.0471 124.632 23.4231 cv
121.32 24.5032 117 22.9912 117.216 18.8872 cv
117.216 18.5991 117.72 16.7991 117.432 16.7273 cv
116.856 18.5271 116.352 19.7512 117.144 21.6233 cv
118.872 24.7192 122.544 25.1511 125.568 23.8552 cv
132.192 20.4712 132.408 12.1912 128.592 6.5752 cv
122.256 -1.99292 110.448 -1.77686 102.744 4.84717 cv
93.24 13.5593 93.6721 27.7432 101.808 37.1033 cv
108.576 44.5911 118.296 47.3271 127.728 45.6711 cv
109.152 56.8313 90.72 66.2632 70.7039 61.9431 cv
68.9041 60.6472 67.3918 58.9912 66.3118 56.9031 cv
64.728 53.5193 64.9438 49.3433 67.824 46.8232 cv
67.6082 47.4712 67.3201 48.3352 67.176 49.3433 cv
66.1677 55.1033 76.824 57.6951 76.7522 54.0232 cv
76.7522 52.5112 77.2561 52.4392 77.2561 52.4392 cv
77.2561 52.4392 78.1199 54.5991 80.3518 55.3191 cv
82.656 56.0393 85.824 53.0872 84.3118 49.9912 cv
82.7278 46.6792 72.3601 42.9353 77.4719 42.6472 cv
78.8401 42.5752 80.7122 44.1592 82.4402 46.6072 cv
84.1677 48.9832 85.7522 47.4712 88.2 47.5432 cv
98.136 47.8313 92.7361 32.3513 79.5598 36.5991 cv
79.5598 36.5991 80.3518 35.7351 81.6482 35.1592 cv
82.8718 34.5833 86.1121 33.7913 88.4158 32.4951 cv
91.8 30.4792 85.3201 21.6233 79.5598 26.8071 cv
77.76 28.3911 74.8079 34.1511 74.8079 34.1511 cv
74.8079 34.1511 77.3279 27.4553 76.7522 25.7991 cv
75.0959 21.1191 58.5359 20.4712 62.856 32.8552 cv
63.792 35.5193 69.6238 36.8872 69.6238 36.8872 cv
67.3918 39.4792 65.0159 36.0232 61.5601 36.2393 cv
58.6079 36.3831 58.6799 43.7991 60.552 46.2473 cv
61.488 47.4712 63.3599 47.3992 65.0159 46.9673 cv
64.584 47.6873 64.2959 48.4792 64.0081 49.2712 cv
63.792 50.1353 63.72 51.0713 63.6479 51.9353 cv
63.72 52.8713 63.792 53.8071 64.0081 54.8152 cv
64.2959 55.7512 64.728 56.6873 65.1599 57.6233 cv
65.7361 58.5593 66.384 59.4231 67.1038 60.2871 cv
67.3918 60.6472 67.7522 60.9353 68.1121 61.2952 cv
67.968 61.2231 67.824 61.2231 67.7522 61.1511 cv
55.584 57.6951 50.1838 45.0952 50.1838 24.5752 cv
50.1838 24.3591 50.1838 24.0713 50.1838 23.8552 cv
50.832 23.3513 51.8398 22.4153 52.1279 21.4072 cv
52.6321 19.8953 52.416 18.8152 52.416 18.8152 cv
54.144 20.2551 54.792 22.0552 53.856 24.1433 cv
53.856 24.1433 55.8721 23.2791 55.728 21.5513 cv
55.584 19.8232 54.4319 18.5271 54.4319 18.5271 cv
53.928 17.8071 li
false sop
/0 
[/DeviceCMYK] add_csa
0 0 0 1 cmyk
ef
514.224 17.8071 mo
514.224 17.8071 508.248 19.0313 504.288 16.5833 cv
500.328 14.1353 501.192 11.7593 500.328 10.8953 cv
499.392 10.0313 498.744 9.45532 498.744 9.45532 cv
498.744 9.45532 501.12 7.94312 504.288 9.23926 cv
506.232 9.95923 510.984 14.1353 512.496 15.0713 cv
512.496 15.0713 510.408 12.8391 509.904 11.4712 cv
507.888 6.79126 519.624 2.18335 519.12 11.1111 cv
519.048 12.1191 518.688 13.9912 518.688 13.9912 cv
518.688 13.9912 520.344 12.6233 519.84 9.67114 cv
518.616 2.90308 527.04 5.63916 525.528 9.16724 cv
524.808 10.9673 524.376 11.5432 524.376 11.5432 cv
524.376 11.5432 525.168 11.6873 526.536 9.16724 cv
527.904 6.5752 528.336 5.35132 530.712 5.06323 cv
533.016 4.70313 534.816 3.33521 534.816 3.33521 cv
535.176 4.6311 534.744 6.21509 533.88 7.79907 cv
530.28 14.1353 526.392 15.2151 520.56 16.0793 cv
520.56 16.0793 522.72 16.2952 523.944 18.3113 cv
525.168 20.3271 524.016 21.5513 524.016 21.5513 cv
524.016 21.5513 523.152 20.3271 521.712 19.6072 cv
520.344 18.8872 518.76 18.6711 518.76 18.6711 cv
520.128 20.6873 519.408 22.1992 518.76 23.6392 cv
518.76 23.9272 518.832 24.2874 518.832 24.6472 cv
519.048 27.5271 519.048 30.3352 518.976 32.9993 cv
519.264 32.9272 li
522.576 32.2073 523.8 17.6633 536.256 20.5432 cv
539.136 21.2632 542.664 22.5593 542.664 22.5593 cv
538.2 24.5752 536.76 28.8953 532.944 31.4871 cv
529.632 33.7913 525.312 34.6553 521.496 33.5032 cv
520.704 33.2151 519.768 33.3591 518.976 33.6472 cv
518.688 41.1353 517.32 47.3992 514.872 52.3672 cv
515.808 51.9353 516.672 51.5032 517.536 51.0713 cv
521.856 49.1272 527.4 48.5513 532.368 49.6311 cv
535.32 48.9111 537.912 47.4712 540 45.0952 cv
540.072 45.0232 540.144 44.9512 540.216 44.8071 cv
540.072 44.8792 540 44.9512 539.856 44.9512 cv
538.776 45.3831 537.336 45.5991 535.32 44.9512 cv
531.864 43.7991 530.496 38.1833 534.456 36.6711 cv
540.648 34.2231 542.52 39.3352 544.032 38.1833 cv
545.472 37.1033 li
545.472 37.1033 544.392 36.2393 542.88 35.5911 cv
541.08 34.7273 535.608 33.7913 538.416 29.5432 cv
538.92 28.7512 540.792 25.2952 540.792 25.2952 cv
540.792 25.2952 541.08 24.7192 543.024 25.5833 cv
546.552 27.0952 547.272 31.5593 547.272 34.8713 cv
547.272 34.8713 548.496 33.6472 548.784 31.4153 cv
549 29.2551 547.848 27.2393 547.848 27.2393 cv
550.512 26.8071 551.664 29.1833 554.184 28.8232 cv
555.048 28.6792 556.632 30.1191 556.848 31.3433 cv
557.136 32.5671 555.408 33.2151 556.344 34.9431 cv
557.208 36.6711 558.36 36.7432 558.072 37.5352 cv
557.784 38.2551 554.832 39.3352 553.608 39.0471 cv
552.456 38.7593 551.664 38.9031 551.664 38.9031 cv
553.896 40.9912 556.344 39.6951 558.72 38.5432 cv
558.72 38.5432 560.088 39.1912 560.88 41.6392 cv
561.744 44.0151 561.384 46.8953 558.288 48.1912 cv
555.264 49.4153 553.104 47.4712 551.448 45.7432 cv
549.792 44.0151 548.424 40.7751 548.424 40.7751 cv
546.768 43.0793 548.928 42.6472 549.792 45.7432 cv
550.656 48.7673 549.936 49.2712 549 50.2073 cv
547.56 51.7192 546.84 53.5193 544.248 53.6633 cv
541.368 53.8792 539.712 49.4871 540.504 47.2551 cv
540.576 46.8953 540.72 46.4631 540.864 46.1033 cv
540.144 46.8953 539.352 47.5432 538.416 48.1912 cv
537.48 48.8391 536.472 49.3433 535.32 49.8472 cv
535.032 49.9192 534.744 50.0632 534.456 50.1353 cv
540.792 52.0793 545.76 56.6873 545.76 64.3191 cv
545.688 70.9431 536.832 76.0552 533.304 69.0713 cv
532.656 67.7751 532.728 66.7673 533.016 65.3992 cv
533.088 65.1111 533.088 64.9673 533.16 64.9673 cv
533.16 65.1111 533.088 65.3271 533.088 65.4712 cv
532.944 66.7673 533.016 67.8472 533.736 68.9272 cv
537.12 73.7512 544.32 70.4392 543.528 64.7512 cv
541.944 52.2952 528.12 49.6311 518.544 54.0232 cv
515.952 55.175 513.36 56.7593 510.912 58.4153 cv
510.912 58.3433 li
508.104 61.5112 504.504 63.6711 500.256 64.8232 cv
500.184 64.8232 500.112 64.8232 500.04 64.8232 cv
505.872 65.5432 509.688 63.8872 515.52 63.9592 cv
518.76 64.0313 521.712 64.8232 522.576 67.1272 cv
523.512 69.5032 527.976 67.9192 528.912 73.0313 cv
529.272 75.1191 529.56 77.2791 532.44 78.5752 cv
534.744 79.5112 535.608 79.7273 535.608 79.7273 cv
532.8 80.3032 527.112 81.3831 524.664 79.5112 cv
523.152 78.3591 522.504 77.0632 518.688 77.2073 cv
514.872 77.2791 514.152 75.4072 513.072 74.6152 cv
510.264 72.4553 507.672 74.3271 505.08 70.7991 cv
504.072 69.4312 500.04 66.7673 497.232 65.4712 cv
486.648 67.5593 476.352 65.9031 466.2 62.1592 cv
469.944 64.3191 473.616 66.3352 477.72 67.7751 cv
482.904 69.5752 487.152 73.6072 489.744 78.4312 cv
493.272 85.0552 492.048 92.3992 496.872 98.6633 cv
496.872 98.6633 490.824 97.8713 486.288 96.7192 cv
471.384 92.8313 472.536 79.9431 472.464 72.0232 cv
472.464 67.9912 470.232 65.7593 466.92 63.8152 cv
464.04 62.1592 461.16 60.5032 458.28 58.9192 cv
427.752 44.9512 397.8 17.0872 361.8 25.1511 cv
339.624 30.1191 326.16 42.4312 314.208 58.2712 cv
325.656 50.3513 338.328 44.1592 351.144 39.3352 cv
367.776 33.5752 386.424 28.3911 401.76 40.0552 cv
402.48 40.6311 403.2 41.2073 403.92 41.8552 cv
407.808 40.7751 412.56 42.4312 414.792 46.1033 cv
414.936 46.3191 415.008 46.4631 415.08 46.6072 cv
416.304 45.6711 418.536 44.1592 420.84 43.8713 cv
430.416 42.7192 430.56 49.4871 436.824 53.5193 cv
437.4 53.8792 438.48 55.5352 438.48 55.5352 cv
437.4 55.8953 li
437.4 55.8953 440.208 58.7751 441.36 62.0872 cv
442.728 66.4792 443.16 71.3032 444.456 75.7673 cv
444.456 75.7673 439.704 72.3831 436.752 72.0232 cv
428.4 71.0151 418.464 64.5352 416.592 55.5352 cv
415.872 52.2231 413.712 50.4951 414.288 47.2551 cv
414.36 47.2551 li
414.144 46.8953 414 46.5352 413.784 46.2473 cv
411.768 43.4392 407.952 41.9272 404.712 42.5752 cv
409.968 47.6873 413.424 54.5991 413.64 62.6633 cv
413.64 66.6233 412.92 70.0071 411.552 72.8872 cv
411.696 73.1033 li
410.616 74.4712 409.608 76.7031 409.608 76.7031 cv
409.608 76.7031 410.976 78.7192 412.776 80.8071 cv
414.504 82.8953 416.16 86.4231 415.224 88.9431 cv
414.288 91.4631 411.336 91.9673 410.616 91.175 cv
409.896 90.3831 407.232 87.5032 407.232 87.5032 cv
407.232 87.5032 407.016 88.5833 406.8 89.9512 cv
406.512 92.1833 404.208 95.3513 401.616 94.7031 cv
399.816 94.2712 399.312 91.2473 399.312 91.2473 cv
394.848 91.9673 392.76 87.2871 394.848 83.6873 cv
395.568 82.4631 399.312 80.0872 399.312 80.0872 cv
399.312 80.0872 396.36 81.2393 394.056 81.7432 cv
391.752 82.2473 390.96 82.9673 387.36 79.0793 cv
382.464 73.6792 387.72 68.7832 392.904 70.2952 cv
396 71.2312 396.864 72.0232 397.944 72.6711 cv
398.952 73.3911 397.728 71.3752 397.872 69.7913 cv
398.016 68.2791 399.024 68.2073 402.696 67.9192 cv
406.368 67.6311 406.44 66.1912 408.816 68.2791 cv
410.976 70.1511 409.536 73.7512 409.248 74.3992 cv
409.536 73.8953 409.752 73.3911 409.968 72.8152 cv
414.504 61.0071 408.888 48.1191 398.52 41.4951 cv
388.368 35.3752 377.28 37.1033 366.048 39.0471 cv
355.536 41.4231 345.096 45.1672 335.232 50.1353 cv
343.656 47.9753 350.784 47.2551 357.984 44.2312 cv
363.024 42.1433 368.856 42.2151 374.04 44.0872 cv
381.096 46.6072 385.128 52.8713 392.904 54.3113 cv
392.904 54.3113 387.936 57.7673 383.688 59.9993 cv
370.152 67.0552 362.304 56.7593 356.904 50.9272 cv
354.168 47.9753 351.072 47.8313 347.256 48.5513 cv
344.088 49.1992 340.92 49.9192 337.68 50.7112 cv
350.496 49.7751 365.112 56.3992 365.04 70.8713 cv
365.04 79.2952 353.736 85.7031 349.2 76.8472 cv
348.336 75.2632 348.552 73.8953 348.84 72.1672 cv
348.912 71.8071 348.984 71.5911 349.056 71.5911 cv
348.984 71.8071 348.984 72.0952 348.912 72.3113 cv
348.696 73.8953 348.84 75.2632 349.776 76.6311 cv
354.024 82.8232 363.24 78.5752 362.304 71.3032 cv
360.216 55.4631 342.576 52.0793 330.408 57.6951 cv
324.36 60.5032 318.528 64.6792 313.2 68.6392 cv
307.512 68.6392 li
306.864 68.6392 li
304.776 68.6392 li
301.032 68.6392 li
300.168 68.6392 li
299.664 68.6392 li
298.656 68.6392 li
301.896 65.9031 302.904 60.5752 301.104 56.4712 cv
300.96 56.1111 300.672 55.7512 300.456 55.3911 cv
300.384 55.3911 li
296.784 54.1672 296.208 50.9272 293.328 48.3352 cv
285.48 41.1353 284.616 27.3831 288.504 18.3113 cv
289.872 15.1433 289.224 8.37524 289.224 8.37524 cv
292.896 12.3352 297.576 15.5032 301.104 19.4631 cv
303.84 22.4871 305.136 27.0952 305.136 27.0952 cv
306.144 26.1592 li
306.144 26.1592 307.08 28.2473 307.152 29.0393 cv
307.584 37.7512 314.352 41.7832 307.584 50.7832 cv
306 52.9431 303.192 54.3113 301.464 55.0313 cv
301.608 55.175 301.752 55.3911 301.824 55.5352 cv
303.336 58.1992 303.48 61.3672 302.688 64.175 cv
306.648 58.3433 310.968 52.7273 315.648 47.5432 cv
317.016 43.8713 318.96 39.1912 318.672 35.8792 cv
318.24 29.2551 311.616 15.0713 326.448 7.87134 cv
330.408 5.99927 335.808 4.1272 335.808 4.1272 cv
332.496 10.8232 334.944 17.3032 332.928 23.9993 cv
331.2 29.8313 327.024 35.0151 321.336 37.2473 cv
320.616 37.5352 319.032 41.7832 317.736 45.3831 cv
329.04 33.5032 342.576 24.2874 359.712 19.8953 cv
387.792 12.6951 411.768 28.1033 435.168 42.5032 cv
438.048 43.5833 441.144 44.2312 444.456 44.3752 cv
453.528 44.3752 461.736 40.2712 466.488 32.4231 cv
471.168 24.0713 470.592 13.4871 463.464 6.71924 cv
456.696 .599121 444.816 .167236 439.488 8.37524 cv
436.392 13.4871 437.328 21.0471 443.448 23.4231 cv
446.832 24.5032 451.152 22.9912 450.936 18.8872 cv
450.864 18.5991 450.432 16.7991 450.72 16.7273 cv
451.224 18.5271 451.8 19.7512 451.008 21.6233 cv
449.28 24.7192 445.608 25.1511 442.512 23.8552 cv
435.96 20.4712 435.744 12.1912 439.488 6.5752 cv
445.824 -1.99292 457.704 -1.77686 465.336 4.84717 cv
474.84 13.5593 474.408 27.7432 466.272 37.1033 cv
459.504 44.5911 449.784 47.3271 440.424 45.6711 cv
459 56.8313 477.36 66.2632 497.376 61.9431 cv
499.176 60.6472 500.688 58.9912 501.768 56.9031 cv
503.424 53.5193 503.208 49.3433 500.256 46.8232 cv
500.544 47.4712 500.76 48.3352 500.976 49.3433 cv
501.984 55.1033 491.328 57.6951 491.328 54.0232 cv
491.4 52.5112 490.824 52.4392 490.824 52.4392 cv
490.824 52.4392 489.96 54.5991 487.728 55.3191 cv
485.496 56.0393 482.328 53.0872 483.768 49.9912 cv
485.352 46.6792 495.72 42.9353 490.608 42.6472 cv
489.312 42.5752 487.368 44.1592 485.64 46.6072 cv
483.984 48.9832 482.4 47.4712 479.952 47.5432 cv
469.944 47.8313 475.416 32.3513 488.52 36.5991 cv
488.52 36.5991 487.8 35.7351 486.504 35.1592 cv
485.208 34.5833 482.04 33.7913 479.736 32.4951 cv
476.28 30.4792 482.832 21.6233 488.592 26.8071 cv
490.32 28.3911 493.344 34.1511 493.344 34.1511 cv
493.344 34.1511 490.824 27.4553 491.4 25.7991 cv
493.056 21.1191 509.544 20.4712 505.224 32.8552 cv
504.288 35.5193 498.456 36.8872 498.456 36.8872 cv
500.688 39.4792 503.064 36.0232 506.592 36.2393 cv
509.472 36.3831 509.4 43.7991 507.528 46.2473 cv
506.592 47.4712 504.72 47.3992 503.064 46.9673 cv
503.496 47.6873 503.856 48.4792 504.072 49.2712 cv
504.288 50.1353 504.432 51.0713 504.432 51.9353 cv
504.432 52.8713 504.288 53.8071 504.072 54.8152 cv
503.784 55.7512 503.424 56.6873 502.92 57.6233 cv
502.416 58.5593 501.768 59.4231 501.048 60.2871 cv
500.688 60.6472 500.4 60.9353 500.04 61.2952 cv
500.112 61.2231 500.256 61.2231 500.4 61.1511 cv
512.568 57.6951 517.896 45.0952 517.968 24.5752 cv
517.968 24.3591 517.968 24.0713 517.968 23.8552 cv
517.32 23.3513 516.24 22.4153 515.952 21.4072 cv
515.52 19.8953 515.664 18.8152 515.664 18.8152 cv
514.008 20.2551 513.288 22.0552 514.224 24.1433 cv
514.224 24.1433 512.28 23.2791 512.352 21.5513 cv
512.496 19.8232 513.648 18.5271 513.648 18.5271 cv
514.224 17.8071 li
ef
155.52 181.895 mo
150.768 180.599 147.384 176.711 146.088 172.319 cv
142.776 161.591 151.2 153.239 160.704 150.215 cv
159.768 150.143 158.976 149.999 158.256 149.999 cv
153.504 149.783 149.328 152.159 146.448 154.535 cv
146.808 154.391 147.24 154.175 147.6 154.031 cv
139.68 161.303 137.376 173.255 144.288 182.543 cv
150.984 190.751 163.44 192.479 170.64 183.911 cv
175.248 177.719 174.528 168.071 166.68 164.975 cv
162.36 163.535 156.528 165.407 156.384 170.591 cv
156.456 172.535 157.536 174.479 159.624 174.551 cv
161.712 174.479 161.856 171.383 164.16 172.679 cv
165.888 173.903 165.888 176.279 165.096 178.079 cv
163.296 181.679 159.192 182.903 155.52 181.895 cv
ef
58.6079 163.175 mo
58.6079 163.175 59.1838 160.367 57.168 156.335 cv
52.272 146.615 57.0239 134.879 65.8801 129.335 cv
70.7761 126.311 83.304 124.583 88.488 129.119 cv
93.6721 133.655 92.9519 138.551 89.8557 141.143 cv
83.304 146.759 74.0159 142.079 67.2478 148.415 cv
64.656 150.863 64.656 152.159 64.656 152.159 cv
64.656 152.159 66.0242 151.439 68.2561 150.647 cv
77.3279 147.335 89.136 147.119 98.2078 151.799 cv
103.464 154.463 106.056 156.623 102.024 162.239 cv
97.9919 167.783 96.9841 168.071 96.9841 168.071 cv
96.9841 168.071 99.3601 171.527 97.0559 175.631 cv
92.2322 184.127 82.9441 180.239 78.1199 175.127 cv
73.5837 170.303 71.7122 167.639 68.6877 167.279 cv
65.6638 166.919 64.8 167.423 64.8 167.423 cv
64.8 167.423 65.7361 167.495 67.3201 168.215 cv
68.8318 168.935 72.3601 171.023 74.7361 173.687 cv
81.3601 180.959 84.5999 191.039 71.0637 192.263 cv
70.1282 192.335 li
69.6238 193.199 li
62.5679 204.719 54.936 197.375 51.3359 188.231 cv
50.04 184.919 49.6799 180.815 49.752 179.159 cv
49.752 177.431 50.1121 176.567 50.1121 176.567 cv
50.1121 176.567 49.3201 177.071 48.312 179.951 cv
47.2319 182.831 48.8159 185.711 51.1199 191.903 cv
53.5679 198.455 52.9919 208.535 43.272 209.111 cv
38.52 209.327 36.5039 205.727 36.5039 205.727 cv
36.5039 205.727 35.7839 206.447 29.0159 207.671 cv
22.248 208.823 21.4561 205.511 21.384 199.607 cv
21.168 189.383 26.5679 178.871 33.552 172.247 cv
35.28 170.591 36.5039 169.655 36.5039 169.655 cv
36.5039 169.655 35.28 169.079 31.968 170.375 cv
23.3279 173.615 23.3999 183.983 15.48 187.439 cv
11.8079 189.023 7.05591 187.511 5.32788 180.887 cv
3.52808 174.191 10.584 163.679 15.48 160.655 cv
24.3359 155.183 37.0081 156.119 43.5601 164.831 cv
46.2239 168.431 49.032 169.151 49.032 169.151 cv
49.032 169.151 50.04 169.079 52.5601 168.935 cv
54.3599 168.863 54.6479 167.999 54.72 167.567 cv
55.1519 167.711 56.0159 167.855 56.8799 166.271 cv
58.104 164.039 58.6079 163.175 58.6079 163.175 cv
ef
40.104 163.031 mo
40.104 163.031 33.9119 161.231 29.7361 159.863 cv
25.5601 158.495 18.6479 158.279 13.3918 163.391 cv
8.06396 168.503 6.47998 173.327 7.27197 178.151 cv
8.71191 187.439 17.6399 187.007 20.7361 179.303 cv
21.96 176.279 27.5759 169.511 32.76 169.079 cv
38.0159 168.575 38.1599 168.719 40.3201 167.855 cv
42.48 166.919 43.272 166.559 43.272 166.559 cv
43.272 166.559 42.48 165.263 40.6079 165.047 cv
37.0081 164.615 30.168 165.911 26.7119 167.351 cv
25.9919 167.639 24.9119 168.287 24.408 168.575 cv
23.3279 169.295 20.6641 169.079 23.1121 167.567 cv
24.0479 167.063 25.8479 167.351 28.1519 166.487 cv
30.8159 165.407 34.9199 164.759 38.0159 163.967 cv
38.8799 163.751 39.4561 163.679 40.104 163.031 cv
0 0 0 0 cmyk
ef
12.96 133.439 mo
13.968 132.791 15.2639 133.007 15.8398 133.943 cv
16.416 134.879 16.0559 136.175 15.0479 136.823 cv
14.04 137.399 12.7439 137.183 12.168 136.247 cv
11.592 135.311 11.9519 134.087 12.96 133.439 cv
0 0 0 1 cmyk
ef
14.688 142.439 mo
14.832 141.215 15.8398 140.351 16.9199 140.495 cv
18 140.567 18.792 141.647 18.6479 142.871 cv
18.5039 144.095 17.5679 144.959 16.416 144.815 cv
15.3359 144.671 14.5439 143.663 14.688 142.439 cv
ef
15.696 150.719 mo
17.064 150.215 18.6479 150.863 19.0801 152.159 cv
19.512 153.527 18.6479 154.967 17.208 155.399 cv
15.7681 155.903 14.2559 155.183 13.824 153.887 cv
13.3918 152.591 14.2559 151.151 15.696 150.719 cv
ef
42.696 123.287 mo
42.552 123.503 li
39.312 131.135 44.856 148.919 48.4561 157.559 cv
42.3359 150.503 28.8 137.687 20.592 137.183 cv
20.304 137.183 li
19.512 138.191 23.04 138.767 23.688 139.127 cv
24.9119 139.127 24.8398 139.055 27.072 139.991 cv
29.304 140.927 34.344 145.535 35.6399 146.759 cv
36.864 148.055 38.9519 149.063 37.728 149.351 cv
36.936 149.567 36 149.351 34.488 148.847 cv
31.032 147.767 27.936 146.615 24.2639 147.191 cv
22.5359 147.407 21.0959 147.767 20.6641 147.623 cv
18.5759 146.831 16.488 149.279 17.064 149.135 cv
18.2878 148.919 li
18.2878 148.919 20.0159 148.271 22.5359 147.911 cv
27.144 147.191 31.104 148.271 35.208 150.143 cv
36.5039 150.719 37.656 151.367 38.2319 151.799 cv
39.4561 152.663 38.2319 152.879 38.2319 152.879 cv
38.2319 152.879 37.8721 152.735 36.3599 152.375 cv
33.8398 151.727 28.728 151.655 26.064 151.583 cv
25.0559 151.511 23.9041 151.511 23.5439 151.583 cv
21.384 152.087 20.8799 153.815 23.04 152.807 cv
23.9041 152.375 25.6321 151.871 26.5679 151.943 cv
34.272 152.519 41.616 154.967 47.6641 160.007 cv
49.3918 161.519 49.3201 161.951 51.2639 162.023 cv
52.0559 160.223 51.624 160.151 51.0479 157.847 cv
49.176 150.215 50.2559 142.583 53.136 135.455 cv
53.4958 134.591 54.72 133.223 55.4399 132.575 cv
57.312 131.063 55.584 130.847 54.144 132.503 cv
53.928 132.791 53.4241 133.871 52.9919 134.807 cv
51.9119 137.183 49.752 141.863 49.248 144.383 cv
48.8879 145.895 48.8159 146.255 48.8159 146.255 cv
48.8159 146.255 48.0959 147.335 47.8799 145.823 cv
47.7361 145.031 47.6641 143.807 47.7361 142.367 cv
47.8079 137.831 48.6719 133.799 51.3359 129.983 cv
52.7759 127.967 54.144 126.671 54.144 126.671 cv
54.864 125.591 li
55.1519 125.159 52.1279 126.023 51.9119 128.183 cv
51.8398 128.687 50.9041 129.839 49.896 131.207 cv
47.7361 134.303 47.448 137.543 46.8721 141.143 cv
46.656 142.727 46.4399 143.663 45.864 144.311 cv
45.072 145.247 45.072 142.943 44.5679 141.215 cv
43.9919 139.559 42.0479 132.935 42.1919 130.559 cv
42.3359 128.111 42.408 128.255 42.9119 127.175 cv
42.9119 126.455 43.9199 122.999 42.696 123.287 cv
ef
53.136 146.759 mo
53.136 146.759 52.7759 153.527 53.4958 157.631 cv
54.144 161.591 54.144 161.663 52.1279 163.391 cv
49.6799 164.399 49.6079 164.399 46.3679 162.023 cv
42.9839 159.575 36.792 156.911 36.792 156.911 cv
36.072 157.271 li
36.072 157.271 36.5759 157.343 37.728 157.775 cv
40.3201 158.711 41.4719 159.791 43.416 161.735 cv
45.864 164.255 49.4639 170.375 53.856 166.127 cv
59.616 164.111 55.656 158.135 54.5039 154.823 cv
53.6399 152.231 53.136 150.719 53.4241 147.983 cv
53.5679 146.759 53.7119 146.255 53.7119 146.255 cv
53.136 146.759 li
ef
57.0959 152.447 mo
57.0959 152.447 58.248 146.039 58.824 141.719 cv
59.4719 137.399 62.3521 131.135 69.2639 128.615 cv
76.176 126.095 81.2161 126.815 85.2478 129.695 cv
92.8801 135.095 88.5598 142.871 80.28 142.295 cv
77.0398 142.079 68.4719 144.095 65.7361 148.559 cv
63.072 153.023 63.072 153.167 61.344 154.751 cv
59.616 156.335 58.896 156.911 58.896 156.911 cv
58.896 156.911 58.032 155.543 58.6799 153.743 cv
59.9041 150.431 64.1519 144.815 66.9602 142.295 cv
67.4641 141.863 68.5442 141.143 69.0481 140.855 cv
70.1282 140.207 71.136 137.687 68.6877 139.271 cv
67.824 139.847 67.3201 141.575 65.5198 143.231 cv
63.3599 145.175 60.9839 148.559 58.896 151.007 cv
58.3201 151.655 57.96 152.159 57.0959 152.447 cv
0 0 0 0 cmyk
ef
55.656 169.079 mo
55.4399 169.799 54.2878 173.399 55.9438 176.783 cv
57.7439 180.599 58.896 181.751 60.9119 182.903 cv
61.8479 183.479 61.7039 184.847 63.5039 184.559 cv
64.0081 184.487 63.864 184.271 62.7839 183.695 cv
62.28 183.407 61.6321 183.047 60.9839 182.615 cv
59.3279 181.535 57.96 179.159 57.24 177.215 cv
56.1599 174.479 56.304 172.607 57.168 173.039 cv
57.96 173.543 59.3279 176.783 60.696 177.791 cv
60.9839 178.007 61.272 178.223 61.488 178.439 cv
61.416 178.151 61.344 177.791 61.272 177.431 cv
60.9119 175.703 58.6799 173.111 58.6079 172.175 cv
58.5359 171.239 60.2639 171.959 62.28 174.047 cv
63.72 175.631 65.2319 177.935 65.448 179.807 cv
65.5198 180.599 65.592 181.319 65.592 181.895 cv
65.6638 183.191 65.7361 183.407 66.0242 182.975 cv
67.1038 181.463 65.8079 181.031 65.7361 179.951 cv
65.592 177.575 65.0159 176.063 62.4241 172.751 cv
60.1199 169.799 56.376 169.151 55.656 169.079 cv
cp
61.488 158.135 mo
61.488 157.991 64.656 153.383 71.3518 151.367 cv
77.9758 149.351 90.5042 151.511 94.032 153.239 cv
97.488 154.967 105.264 154.751 101.448 159.647 cv
97.7039 164.471 95.4719 165.839 95.5442 167.999 cv
95.9758 177.071 88.7039 182.687 81.5042 175.199 cv
77.0398 170.663 75.1677 165.839 67.5359 166.127 cv
59.9041 166.415 59.3279 166.631 59.3999 166.703 cv
59.3999 166.775 61.488 167.135 64.0801 168.071 cv
69.552 170.015 80.136 178.511 78.4797 184.919 cv
77.1838 189.815 74.5198 189.671 71.5681 188.447 cv
69.9119 187.727 70.2 190.607 68.76 190.175 cv
68.5442 191.615 66.0959 190.103 66.0242 191.975 cv
65.8079 195.071 64.728 197.591 59.76 196.583 cv
53.28 195.215 50.3279 181.967 50.9761 176.135 cv
51.3359 173.399 51.9119 171.383 51.9119 171.383 cv
51.8398 171.239 51.408 171.743 47.7361 178.439 cv
44.136 185.135 47.592 188.951 49.752 194.927 cv
53.28 204.719 45 208.751 37.0801 204.359 cv
35.136 203.279 32.9761 204.719 26.928 206.015 cv
20.8799 207.239 24.48 200.327 24.48 196.439 cv
24.48 192.623 28.0801 180.383 32.832 175.271 cv
37.656 170.231 43.1279 169.439 43.2 169.439 cv
43.344 169.511 42.7681 170.159 40.6799 172.607 cv
38.2319 175.343 37.2959 179.159 36 182.543 cv
34.9199 185.495 33.624 185.495 34.416 186.863 cv
35.208 188.231 36.2878 186.647 36.2161 184.127 cv
36.072 181.679 40.3201 173.471 42.0479 172.031 cv
43.8479 170.591 44.5679 171.599 43.7039 172.895 cv
42.9119 174.263 40.104 180.383 39.168 184.919 cv
38.2319 189.383 39.8159 189.815 40.752 189.239 cv
41.76 188.663 40.5359 188.375 39.96 186.071 cv
38.8079 181.391 45.936 169.079 51.624 169.511 cv
53.928 169.655 54.792 168.431 55.0081 168.071 cv
55.4399 168.071 56.9519 167.783 57.8159 165.623 cv
59.9761 160.367 74.1599 159.359 77.8318 162.455 cv
79.6321 164.039 79.344 165.263 80.28 164.615 cv
81.2161 164.039 81.5759 162.455 77.1121 161.303 cv
72.72 160.151 65.9519 159.935 64.3679 160.079 cv
62.856 160.223 62.28 159.143 64.2959 158.207 cv
66.384 157.199 75.5999 157.127 77.76 158.279 cv
79.9919 159.503 81.864 159.143 80.9998 157.847 cv
80.136 156.623 79.488 157.775 76.3918 157.415 cv
72.864 157.055 68.9758 156.263 65.448 157.199 cv
62.3521 157.991 61.488 158.207 61.488 158.135 cv
ef
42.552 115.007 mo
41.5439 115.655 41.1838 116.951 41.76 117.887 cv
42.3359 118.823 43.6321 119.039 44.6399 118.391 cv
45.6479 117.743 46.0081 116.447 45.4319 115.583 cv
44.856 114.647 43.5601 114.359 42.552 115.007 cv
0 0 0 1 cmyk
ef
49.896 120.551 mo
48.7439 120.119 47.52 120.623 47.1599 121.703 cv
46.728 122.711 47.376 123.863 48.5281 124.295 cv
49.6079 124.727 50.832 124.223 51.2639 123.215 cv
51.624 122.135 50.9761 120.983 49.896 120.551 cv
ef
56.8799 125.087 mo
55.8 126.167 55.728 127.823 56.7361 128.759 cv
57.6719 129.767 59.3279 129.623 60.408 128.543 cv
61.488 127.463 61.5601 125.807 60.552 124.871 cv
59.5439 123.863 57.8879 124.007 56.8799 125.087 cv
ef
21.5999 124.943 mo
23.5439 123.647 26.064 124.151 27.2161 125.951 cv
28.2959 127.751 27.5759 130.199 25.6321 131.423 cv
23.688 132.647 21.168 132.215 20.0159 130.415 cv
18.936 128.615 19.584 126.167 21.5999 124.943 cv
ef
29.7361 132.863 mo
30.7439 132.287 32.04 132.503 32.616 133.439 cv
33.2639 134.375 32.832 135.599 31.824 136.247 cv
30.8159 136.895 29.52 136.679 28.9438 135.743 cv
28.3679 134.807 28.728 133.511 29.7361 132.863 cv
ef
36.792 138.623 mo
38.2319 137.687 40.104 138.047 40.896 139.343 cv
41.76 140.711 41.2559 142.511 39.7439 143.447 cv
38.304 144.311 36.4319 143.951 35.6399 142.655 cv
34.7759 141.359 35.28 139.487 36.792 138.623 cv
ef
31.248 118.895 mo
29.304 120.119 28.584 122.567 29.7361 124.367 cv
30.8159 126.167 33.3359 126.599 35.3521 125.375 cv
37.2959 124.151 38.0159 121.703 36.864 119.903 cv
35.7839 118.103 33.2639 117.671 31.248 118.895 cv
ef
34.6321 129.839 mo
33.624 130.487 33.2639 131.711 33.8398 132.647 cv
34.416 133.583 35.7119 133.871 36.792 133.223 cv
37.8 132.575 38.1599 131.279 37.584 130.343 cv
37.0081 129.407 35.7119 129.191 34.6321 129.839 cv
ef
23.3279 117.023 mo
24.7681 116.087 26.6399 116.447 27.5039 117.743 cv
28.2959 119.111 27.792 120.911 26.3521 121.775 cv
24.8398 122.711 22.968 122.351 22.176 121.055 cv
21.312 119.687 21.8879 117.887 23.3279 117.023 cv
ef
147.168 193.631 mo
157.824 207.023 148.464 208.967 171 211.415 cv
171 211.415 170.064 212.279 168.408 213.431 cv
157.536 219.767 143.208 219.263 132.336 210.911 cv
126.36 206.087 122.4 199.751 120.6 192.839 cv
119.16 187.079 118.944 182.399 120.456 178.367 cv
125.28 189.887 140.112 184.775 147.168 193.631 cv
ef
171.576 216.167 mo
173.088 215.303 175.176 213.431 175.176 213.431 cv
167.256 226.247 154.008 233.303 140.04 233.087 cv
114.912 232.799 103.464 204.647 114.696 184.055 cv
115.128 183.263 115.488 182.615 115.776 182.039 cv
115.56 186.287 116.28 190.175 117.216 194.495 cv
120.24 208.319 130.968 218.399 143.784 221.207 cv
154.296 223.439 162.576 221.351 171.576 216.167 cv
ef
111.096 184.487 mo
110.088 185.207 107.64 187.727 103.608 190.751 cv
99.3601 193.919 94.4641 197.231 91.8718 197.375 cv
66.8879 198.599 76.968 215.159 64.656 218.759 cv
61.2 219.767 58.896 220.055 58.896 220.055 cv
72.5042 229.271 94.032 224.879 98.7122 207.455 cv
100.08 202.271 102.888 196.871 105.48 192.551 cv
108.504 187.583 111.384 184.271 111.096 184.487 cv
ef
149.04 150.863 mo
148.032 150.791 145.224 151.007 141.264 150.791 cv
137.016 150.575 132.264 149.999 130.68 148.775 cv
114.768 136.607 112.32 151.871 102.96 147.695 cv
100.368 146.543 98.7839 145.463 98.7839 145.463 cv
102.312 158.135 117.72 166.631 129.528 158.423 cv
133.128 155.975 137.592 154.103 141.408 152.879 cv
145.872 151.439 149.328 150.863 149.04 150.863 cv
ef
231.12 157.487 mo
230.112 157.703 227.304 157.775 223.344 158.495 cv
219.168 159.215 214.56 160.367 213.12 161.807 cv
198.72 175.703 194.472 160.799 185.76 166.055 cv
183.24 167.567 181.8 168.719 181.8 168.719 cv
183.888 155.759 198.144 145.535 210.888 152.303 cv
214.632 154.319 219.384 155.615 223.272 156.407 cv
227.88 157.343 231.336 157.487 231.12 157.487 cv
ef
412.632 181.895 mo
417.312 180.599 420.696 176.711 422.064 172.319 cv
425.304 161.591 416.952 153.239 407.448 150.215 cv
408.312 150.143 409.104 149.999 409.824 149.999 cv
414.648 149.783 418.752 152.159 421.704 154.535 cv
421.272 154.391 420.912 154.175 420.48 154.031 cv
428.472 161.303 430.704 173.255 423.792 182.543 cv
417.096 190.751 404.64 192.479 397.512 183.911 cv
392.832 177.719 393.552 168.071 401.4 164.975 cv
405.72 163.535 411.552 165.407 411.696 170.591 cv
411.696 172.535 410.616 174.479 408.528 174.551 cv
406.368 174.479 406.224 171.383 403.992 172.679 cv
402.192 173.903 402.192 176.279 402.984 178.079 cv
404.784 181.679 408.96 182.903 412.632 181.895 cv
ef
349.632 202.559 mo
359.28 204.431 368.568 192.983 367.416 183.983 cv
366.336 175.559 357.912 168.287 348.12 165.983 cv
340.632 164.255 332.712 165.983 325.656 168.791 cv
312.048 174.191 301.104 184.415 286.992 190.247 cv
286.056 190.607 284.904 190.823 284.112 191.615 cv
283.392 191.039 282.6 190.751 281.736 190.463 cv
267.264 184.631 256.248 174.263 242.424 168.791 cv
235.44 165.983 227.52 164.255 220.032 165.983 cv
210.24 168.287 201.744 175.559 200.664 183.983 cv
199.584 192.983 208.872 204.431 218.448 202.559 cv
223.848 201.551 228.312 197.087 225.504 191.687 cv
224.496 189.743 222.336 188.447 220.104 189.095 cv
219.024 189.455 218.016 190.391 218.16 191.615 cv
218.52 193.127 219.888 191.903 220.752 192.839 cv
221.544 193.775 221.112 194.999 220.32 195.719 cv
218.016 197.735 214.92 195.935 213.912 193.559 cv
212.184 188.951 216 184.775 220.392 184.487 cv
224.568 184.199 227.736 186.647 229.248 190.031 cv
232.416 196.871 227.88 203.855 221.328 206.303 cv
211.824 209.903 202.176 201.983 198.36 192.839 cv
197.208 196.583 193.896 199.247 189.648 198.887 cv
185.544 198.383 182.304 194.495 183.744 190.319 cv
184.824 187.439 188.28 185.711 190.944 187.655 cv
192.312 188.807 192.888 191.183 191.16 192.335 cv
190.512 192.695 189.648 192.767 189.144 192.047 cv
188.784 191.327 189.792 190.607 188.856 190.175 cv
188.064 189.815 187.272 190.319 186.84 190.967 cv
185.976 192.335 186.48 193.991 187.56 194.999 cv
189 196.295 191.016 196.655 192.744 196.151 cv
195.768 195.359 197.208 192.911 197.424 190.175 cv
196.848 188.015 196.56 185.783 196.776 183.695 cv
197.712 173.399 207.36 164.543 219.168 161.951 cv
228.024 160.007 235.008 161.303 244.08 165.263 cv
254.592 169.799 263.592 177.215 273.744 183.191 cv
260.928 172.463 248.112 161.231 231.696 155.327 cv
195.408 142.295 156.888 146.903 127.656 167.927 cv
118.152 174.767 116.136 182.183 119.088 193.487 cv
120.888 200.687 124.992 207.383 131.256 212.279 cv
141.12 219.983 153.864 221.279 164.448 217.031 cv
168.048 215.591 171.648 213.359 174.6 210.983 cv
175.32 210.335 175.968 209.831 175.968 209.831 cv
175.608 210.263 175.32 210.695 174.96 211.127 cv
172.08 214.439 169.2 216.743 165.168 218.399 cv
144.648 226.391 122.4 213.791 117.72 192.551 cv
116.568 186.935 115.632 182.111 116.64 176.279 cv
110.16 182.183 102.744 187.727 94.824 190.319 cv
86.5442 193.127 78.408 194.063 69.4797 192.263 cv
70.2 190.391 li
78.4797 192.119 86.8318 191.183 94.824 188.519 cv
109.872 183.551 113.256 171.599 125.568 163.607 cv
156.24 143.735 193.392 139.055 229.608 151.151 cv
250.92 158.279 266.976 173.831 284.112 186.719 cv
301.176 173.831 317.16 158.279 338.472 151.151 cv
374.76 139.055 411.84 143.735 442.512 163.607 cv
454.896 171.599 458.28 183.551 473.328 188.519 cv
481.248 191.183 489.672 192.119 497.952 190.391 cv
498.6 192.263 li
489.672 194.063 481.536 193.127 473.256 190.319 cv
465.336 187.727 457.92 182.183 451.44 176.279 cv
452.448 182.111 451.512 186.935 450.36 192.551 cv
445.68 213.791 423.504 226.391 402.984 218.399 cv
398.952 216.743 396 214.439 393.192 211.127 cv
392.832 210.695 392.472 210.263 392.184 209.831 cv
392.184 209.831 392.76 210.335 393.552 210.983 cv
396.504 213.359 400.104 215.591 403.632 217.031 cv
414.216 221.279 426.96 219.983 436.896 212.279 cv
443.16 207.383 447.192 200.687 449.064 193.487 cv
451.944 182.183 450 174.767 440.496 167.927 cv
411.192 146.903 372.672 142.295 336.456 155.327 cv
320.04 161.231 307.224 172.463 294.336 183.191 cv
304.488 177.215 313.56 169.799 324 165.263 cv
333.072 161.303 340.056 160.007 348.912 161.951 cv
360.72 164.543 370.368 173.399 371.304 183.695 cv
371.52 185.783 371.304 188.015 370.656 190.175 cv
370.944 192.911 372.384 195.359 375.336 196.151 cv
377.136 196.655 379.152 196.295 380.52 194.999 cv
381.672 193.991 382.104 192.335 381.24 190.967 cv
380.808 190.319 380.016 189.815 379.224 190.175 cv
378.36 190.607 379.368 191.327 378.936 192.047 cv
378.432 192.767 377.568 192.695 376.92 192.335 cv
375.192 191.183 375.768 188.807 377.208 187.655 cv
379.872 185.711 383.256 187.439 384.408 190.319 cv
385.776 194.495 382.608 198.383 378.432 198.887 cv
374.256 199.247 370.872 196.583 369.72 192.839 cv
365.976 201.983 356.256 209.903 346.752 206.303 cv
340.272 203.855 335.736 196.871 338.832 190.031 cv
340.344 186.647 343.584 184.199 347.688 184.487 cv
352.152 184.775 355.968 188.951 354.24 193.559 cv
353.16 195.935 350.064 197.735 347.76 195.719 cv
346.968 194.999 346.608 193.775 347.328 192.839 cv
348.192 191.903 349.632 193.127 349.92 191.615 cv
350.136 190.391 349.056 189.455 347.976 189.095 cv
345.744 188.447 343.656 189.743 342.648 191.687 cv
339.84 197.087 344.304 201.551 349.632 202.559 cv
ef
509.472 163.175 mo
509.472 163.175 508.896 160.367 510.912 156.335 cv
515.808 146.615 511.128 134.879 502.272 129.335 cv
497.376 126.311 484.776 124.583 479.592 129.119 cv
474.48 133.655 475.2 138.551 478.224 141.143 cv
484.776 146.759 494.136 142.079 500.832 148.415 cv
503.424 150.863 503.424 152.159 503.424 152.159 cv
503.424 152.159 502.056 151.439 499.824 150.647 cv
490.752 147.335 479.016 147.119 469.872 151.799 cv
464.688 154.463 462.024 156.623 466.056 162.239 cv
470.088 167.783 471.096 168.071 471.096 168.071 cv
471.096 168.071 468.72 171.527 471.096 175.631 cv
475.848 184.127 485.208 180.239 489.96 175.127 cv
494.496 170.303 496.44 167.639 499.464 167.279 cv
502.488 166.919 503.28 167.423 503.28 167.423 cv
503.28 167.423 502.344 167.495 500.832 168.215 cv
499.248 168.935 495.792 171.023 493.344 173.687 cv
486.72 180.959 483.552 191.039 497.016 192.263 cv
497.952 192.335 li
498.456 193.199 li
505.584 204.719 513.144 197.375 516.744 188.231 cv
518.112 184.919 518.4 180.815 518.4 179.159 cv
518.328 177.431 517.968 176.567 517.968 176.567 cv
517.968 176.567 518.832 177.071 519.84 179.951 cv
520.848 182.831 519.336 185.711 516.96 191.903 cv
514.512 198.455 515.16 208.535 524.808 209.111 cv
529.632 209.327 531.648 205.727 531.648 205.727 cv
531.648 205.727 532.296 206.447 539.136 207.671 cv
545.904 208.823 546.696 205.511 546.768 199.607 cv
546.912 189.383 541.584 178.871 534.6 172.247 cv
532.872 170.591 531.648 169.655 531.648 169.655 cv
531.648 169.655 532.8 169.079 536.112 170.375 cv
544.752 173.615 544.752 183.983 552.6 187.439 cv
556.344 189.023 561.024 187.511 562.824 180.887 cv
564.624 174.191 557.496 163.679 552.6 160.655 cv
543.744 155.183 531.144 156.119 524.592 164.831 cv
521.856 168.431 519.048 169.151 519.048 169.151 cv
519.048 169.151 518.04 169.079 515.52 168.935 cv
513.72 168.863 513.432 167.999 513.432 167.567 cv
513 167.711 512.136 167.855 511.2 166.271 cv
509.976 164.039 509.472 163.175 509.472 163.175 cv
ef
528.048 163.031 mo
528.048 163.031 534.24 161.231 538.416 159.863 cv
542.592 158.495 549.432 158.279 554.76 163.391 cv
560.088 168.503 561.672 173.327 560.88 178.151 cv
559.368 187.439 550.512 187.007 547.344 179.303 cv
546.12 176.279 540.576 169.511 535.32 169.079 cv
530.136 168.575 529.992 168.719 527.832 167.855 cv
525.672 166.919 524.808 166.559 524.808 166.559 cv
524.808 166.559 525.672 165.263 527.544 165.047 cv
531.072 164.615 537.984 165.911 541.44 167.351 cv
542.088 167.639 543.24 168.287 543.672 168.575 cv
544.752 169.295 547.488 169.079 544.968 167.567 cv
544.104 167.063 542.232 167.351 540 166.487 cv
537.336 165.407 533.232 164.759 530.136 163.967 cv
529.2 163.751 528.624 163.679 528.048 163.031 cv
0 0 0 0 cmyk
ef
555.12 133.439 mo
554.112 132.791 552.816 133.007 552.24 133.943 cv
551.664 134.879 552.024 136.175 553.032 136.823 cv
554.112 137.399 555.408 137.183 555.984 136.247 cv
556.56 135.311 556.2 134.087 555.12 133.439 cv
0 0 0 1 cmyk
ef
553.392 142.439 mo
553.248 141.215 552.312 140.351 551.232 140.495 cv
550.08 140.567 549.36 141.647 549.432 142.871 cv
549.576 144.095 550.584 144.959 551.664 144.815 cv
552.744 144.671 553.536 143.663 553.392 142.439 cv
ef
552.456 150.719 mo
551.016 150.215 549.504 150.863 549.072 152.159 cv
548.64 153.527 549.432 154.967 550.872 155.399 cv
552.312 155.903 553.824 155.183 554.256 153.887 cv
554.688 152.591 553.896 151.151 552.456 150.719 cv
ef
525.456 123.287 mo
525.528 123.503 li
528.768 131.135 523.224 148.919 519.624 157.559 cv
525.744 150.503 539.28 137.687 547.56 137.183 cv
547.776 137.183 li
548.568 138.191 545.04 138.767 544.392 139.127 cv
543.168 139.127 543.312 139.055 541.08 139.991 cv
538.848 140.927 533.808 145.535 532.512 146.759 cv
531.216 148.055 529.128 149.063 530.352 149.351 cv
531.144 149.567 532.08 149.351 533.664 148.847 cv
537.048 147.767 540.144 146.615 543.888 147.191 cv
545.544 147.407 547.056 147.767 547.488 147.623 cv
549.504 146.831 551.592 149.279 551.088 149.135 cv
549.792 148.919 li
549.792 148.919 548.064 148.271 545.616 147.911 cv
541.008 147.191 537.048 148.271 532.872 150.143 cv
531.576 150.719 530.496 151.367 529.848 151.799 cv
528.624 152.663 529.92 152.879 529.92 152.879 cv
529.92 152.879 530.28 152.735 531.792 152.375 cv
534.24 151.727 539.352 151.655 542.016 151.583 cv
543.096 151.511 544.248 151.511 544.536 151.583 cv
546.696 152.087 547.272 153.815 545.112 152.807 cv
544.248 152.375 542.448 151.871 541.512 151.943 cv
533.808 152.519 526.464 154.967 520.488 160.007 cv
518.688 161.519 518.832 161.951 516.816 162.023 cv
516.024 160.223 516.456 160.151 517.032 157.847 cv
518.904 150.215 517.824 142.583 514.944 135.455 cv
514.584 134.591 513.36 133.223 512.64 132.575 cv
510.768 131.063 512.568 130.847 514.008 132.503 cv
514.224 132.791 514.656 133.871 515.088 134.807 cv
516.168 137.183 518.4 141.863 518.904 144.383 cv
519.192 145.895 519.264 146.255 519.264 146.255 cv
519.264 146.255 519.984 147.335 520.272 145.823 cv
520.416 145.031 520.416 143.807 520.416 142.367 cv
520.272 137.831 519.408 133.799 516.816 129.983 cv
515.376 127.967 514.008 126.671 514.008 126.671 cv
513.216 125.591 li
512.928 125.159 516.024 126.023 516.24 128.183 cv
516.312 128.687 517.248 129.839 518.184 131.207 cv
520.344 134.303 520.704 137.543 521.208 141.143 cv
521.496 142.727 521.712 143.663 522.216 144.311 cv
523.08 145.247 523.008 142.943 523.584 141.215 cv
524.088 139.559 526.104 132.935 525.888 130.559 cv
525.744 128.111 525.744 128.255 525.24 127.175 cv
525.168 126.455 524.16 122.999 525.456 123.287 cv
ef
515.016 146.759 mo
515.016 146.759 515.376 153.527 514.656 157.631 cv
514.008 161.591 514.008 161.663 515.952 163.391 cv
518.472 164.399 518.544 164.399 521.712 162.023 cv
525.096 159.575 531.36 156.911 531.36 156.911 cv
532.08 157.271 li
532.08 157.271 531.576 157.343 530.424 157.775 cv
527.832 158.711 526.608 159.791 524.736 161.735 cv
522.288 164.255 518.688 170.375 514.296 166.127 cv
508.536 164.111 512.424 158.135 513.576 154.823 cv
514.512 152.231 514.944 150.719 514.656 147.983 cv
514.512 146.759 514.368 146.255 514.368 146.255 cv
515.016 146.759 li
ef
510.984 152.447 mo
510.984 152.447 509.832 146.039 509.256 141.719 cv
508.68 137.399 505.8 131.135 498.816 128.615 cv
491.904 126.095 486.936 126.815 482.904 129.695 cv
475.2 135.095 479.592 142.871 487.8 142.295 cv
491.112 142.079 499.608 144.095 502.344 148.559 cv
505.08 153.023 505.008 153.167 506.808 154.751 cv
508.536 156.335 509.256 156.911 509.256 156.911 cv
509.256 156.911 510.048 155.543 509.4 153.743 cv
508.248 150.431 504 144.815 501.192 142.295 cv
500.616 141.863 499.536 141.143 499.104 140.855 cv
498.024 140.207 496.944 137.687 499.392 139.271 cv
500.256 139.847 500.832 141.575 502.632 143.231 cv
504.72 145.175 507.168 148.559 509.256 151.007 cv
509.832 151.655 510.12 152.159 510.984 152.447 cv
0 0 0 0 cmyk
ef
512.496 169.079 mo
512.712 169.799 513.792 173.399 512.136 176.783 cv
510.336 180.599 509.184 181.751 507.168 182.903 cv
506.232 183.479 506.376 184.847 504.576 184.559 cv
504.072 184.487 504.216 184.271 505.296 183.695 cv
505.872 183.407 506.448 183.047 507.168 182.615 cv
508.752 181.535 510.12 179.159 510.912 177.215 cv
511.92 174.479 511.776 172.607 510.984 173.039 cv
510.12 173.543 508.824 176.783 507.456 177.791 cv
507.168 178.007 506.88 178.223 506.664 178.439 cv
506.736 178.151 506.736 177.791 506.808 177.431 cv
507.168 175.703 509.472 173.111 509.544 172.175 cv
509.616 171.239 507.816 171.959 505.872 174.047 cv
504.432 175.631 502.92 177.935 502.704 179.807 cv
502.56 180.599 502.56 181.319 502.56 181.895 cv
502.488 183.191 502.344 183.407 502.056 182.975 cv
500.976 181.463 502.344 181.031 502.344 179.951 cv
502.488 177.575 503.064 176.063 505.656 172.751 cv
507.96 169.799 511.704 169.151 512.496 169.079 cv
cp
506.592 158.135 mo
506.592 157.991 503.496 153.383 496.8 151.367 cv
490.104 149.351 477.576 151.511 474.12 153.239 cv
470.664 154.967 462.816 154.751 466.632 159.647 cv
470.448 164.471 472.68 165.839 472.536 167.999 cv
472.176 177.071 479.376 182.687 486.648 175.199 cv
491.04 170.663 492.912 165.839 500.544 166.127 cv
508.176 166.415 508.824 166.631 508.752 166.703 cv
508.752 166.775 506.664 167.135 504.072 168.071 cv
498.6 170.015 487.944 178.511 489.6 184.919 cv
490.896 189.815 493.632 189.671 496.512 188.447 cv
498.168 187.727 497.952 190.607 499.32 190.175 cv
499.608 191.615 501.984 190.103 502.128 191.975 cv
502.272 195.071 503.352 197.591 508.392 196.583 cv
514.872 195.215 517.752 181.967 517.104 176.135 cv
516.816 173.399 516.168 171.383 516.24 171.383 cv
516.24 171.239 516.744 171.743 520.344 178.439 cv
524.016 185.135 520.488 188.951 518.4 194.927 cv
514.872 204.719 523.08 208.751 531.072 204.359 cv
532.944 203.279 535.176 204.719 541.224 206.015 cv
547.2 207.239 543.6 200.327 543.6 196.439 cv
543.6 192.623 540.072 180.383 535.248 175.271 cv
530.496 170.231 524.952 169.439 524.88 169.439 cv
524.808 169.511 525.384 170.159 527.472 172.607 cv
529.848 175.343 530.856 179.159 532.08 182.543 cv
533.16 185.495 534.456 185.495 533.664 186.863 cv
532.944 188.231 531.792 186.647 531.936 184.127 cv
532.008 181.679 527.832 173.471 526.032 172.031 cv
524.304 170.591 523.512 171.599 524.376 172.895 cv
525.24 174.263 527.976 180.383 528.912 184.919 cv
529.848 189.383 528.336 189.815 527.328 189.239 cv
526.392 188.663 527.616 188.375 528.192 186.071 cv
529.344 181.391 522.144 169.079 516.528 169.511 cv
514.152 169.655 513.288 168.431 513.072 168.071 cv
512.64 168.071 511.2 167.783 510.264 165.623 cv
508.176 160.367 493.92 159.359 490.248 162.455 cv
488.448 164.039 488.736 165.263 487.8 164.615 cv
486.864 164.039 486.576 162.455 490.968 161.303 cv
495.432 160.151 502.2 159.935 503.712 160.079 cv
505.296 160.223 505.872 159.143 503.784 158.207 cv
501.696 157.199 492.552 157.127 490.32 158.279 cv
488.088 159.503 486.216 159.143 487.152 157.847 cv
488.016 156.623 488.592 157.775 491.688 157.415 cv
495.288 157.055 499.104 156.263 502.704 157.199 cv
505.8 157.991 506.664 158.207 506.592 158.135 cv
ef
525.528 115.007 mo
526.608 115.655 526.968 116.951 526.392 117.887 cv
525.816 118.823 524.52 119.039 523.44 118.391 cv
522.432 117.743 522.072 116.447 522.648 115.583 cv
523.224 114.647 524.52 114.359 525.528 115.007 cv
0 0 0 1 cmyk
ef
518.256 120.551 mo
519.408 120.119 520.632 120.623 520.992 121.703 cv
521.352 122.711 520.776 123.863 519.624 124.295 cv
518.472 124.727 517.248 124.223 516.888 123.215 cv
516.528 122.135 517.104 120.983 518.256 120.551 cv
ef
511.272 125.087 mo
512.352 126.167 512.424 127.823 511.416 128.759 cv
510.408 129.767 508.752 129.623 507.744 128.543 cv
506.664 127.463 506.592 125.807 507.6 124.871 cv
508.536 123.863 510.192 124.007 511.272 125.087 cv
ef
546.552 124.943 mo
544.536 123.647 542.016 124.151 540.936 125.951 cv
539.784 127.751 540.504 130.199 542.448 131.423 cv
544.464 132.647 546.984 132.215 548.064 130.415 cv
549.216 128.615 548.496 126.167 546.552 124.943 cv
ef
538.344 132.863 mo
537.336 132.287 536.04 132.503 535.464 133.439 cv
534.888 134.375 535.248 135.599 536.256 136.247 cv
537.264 136.895 538.632 136.679 539.208 135.743 cv
539.784 134.807 539.424 133.511 538.344 132.863 cv
ef
531.36 138.623 mo
529.848 137.687 528.048 138.047 527.184 139.343 cv
526.392 140.711 526.896 142.511 528.336 143.447 cv
529.848 144.311 531.648 143.951 532.512 142.655 cv
533.304 141.359 532.8 139.487 531.36 138.623 cv
ef
536.832 118.895 mo
538.776 120.119 539.496 122.567 538.416 124.367 cv
537.264 126.167 534.744 126.599 532.8 125.375 cv
530.784 124.151 530.136 121.703 531.216 119.903 cv
532.368 118.103 534.888 117.671 536.832 118.895 cv
ef
533.448 129.839 mo
534.456 130.487 534.816 131.711 534.24 132.647 cv
533.664 133.583 532.368 133.871 531.36 133.223 cv
530.352 132.575 529.992 131.279 530.568 130.343 cv
531.144 129.407 532.44 129.191 533.448 129.839 cv
ef
544.824 117.023 mo
543.312 116.087 541.44 116.447 540.648 117.743 cv
539.784 119.111 540.36 120.911 541.8 121.775 cv
543.24 122.711 545.112 122.351 545.976 121.055 cv
546.768 119.687 546.264 117.887 544.824 117.023 cv
ef
420.984 193.631 mo
410.256 207.023 419.688 208.967 397.08 211.415 cv
397.08 211.415 398.016 212.279 399.672 213.431 cv
410.544 219.767 424.872 219.263 435.744 210.911 cv
441.792 206.087 445.752 199.751 447.48 192.839 cv
448.992 187.079 449.136 182.399 447.696 178.367 cv
442.8 189.887 428.04 184.775 420.984 193.631 cv
ef
396.576 216.167 mo
395.064 215.303 392.904 213.431 392.904 213.431 cv
400.896 226.247 414.072 233.303 428.04 233.087 cv
453.168 232.799 464.616 204.647 453.456 184.055 cv
453.024 183.263 452.664 182.615 452.376 182.039 cv
452.592 186.287 451.8 190.175 450.936 194.495 cv
447.84 208.319 437.112 218.399 424.368 221.207 cv
413.856 223.439 405.576 221.351 396.576 216.167 cv
ef
456.984 184.487 mo
458.064 185.207 460.512 187.727 464.472 190.751 cv
468.72 193.919 473.688 197.231 476.208 197.375 cv
501.264 198.599 491.184 215.159 503.424 218.759 cv
506.88 219.767 509.256 220.055 509.256 220.055 cv
495.576 229.271 474.048 224.879 469.44 207.455 cv
468.072 202.271 465.264 196.871 462.672 192.551 cv
459.576 187.583 456.696 184.271 456.984 184.487 cv
ef
285.192 184.343 mo
285.696 183.191 287.64 180.239 289.8 175.775 cv
291.96 170.951 294.12 165.407 293.688 162.887 cv
289.872 138.119 308.088 144.527 309.024 131.855 cv
309.312 128.183 309.096 125.879 309.096 125.879 cv
320.904 137.327 321.12 159.287 305.064 167.423 cv
300.24 169.871 295.488 173.759 291.888 177.143 cv
287.712 181.175 285.048 184.703 285.192 184.343 cv
ef
419.04 150.863 mo
420.12 150.791 422.856 151.007 426.888 150.791 cv
431.136 150.575 435.816 149.999 437.472 148.775 cv
453.384 136.607 455.832 151.871 465.12 147.695 cv
467.784 146.543 469.296 145.463 469.296 145.463 cv
465.768 158.135 450.36 166.631 438.552 158.423 cv
435.024 155.975 430.488 154.103 426.672 152.879 cv
422.28 151.439 418.824 150.863 419.04 150.863 cv
ef
337.032 157.487 mo
338.04 157.703 340.848 157.775 344.736 158.495 cv
348.984 159.215 353.592 160.367 355.032 161.807 cv
369.36 175.703 373.608 160.799 382.392 166.055 cv
384.84 167.567 386.28 168.719 386.28 168.719 cv
384.264 155.759 369.936 145.535 357.264 152.303 cv
353.448 154.319 348.768 155.615 344.808 156.407 cv
340.272 157.343 336.744 157.487 337.032 157.487 cv
ef
283.392 184.343 mo
282.888 183.191 280.944 180.239 278.856 175.775 cv
276.552 170.951 274.392 165.407 274.824 162.887 cv
278.712 138.119 260.424 144.527 259.488 131.855 cv
259.2 128.183 259.416 125.879 259.416 125.879 cv
247.608 137.327 247.392 159.287 263.448 167.423 cv
268.272 169.871 273.024 173.759 276.624 177.143 cv
280.872 181.175 283.536 184.703 283.392 184.343 cv
ef
501.048 404.375 mo
503.208 403.511 504.864 401.783 507.096 401.063 cv
516.384 398.111 522.216 407.255 521.28 415.607 cv
519.192 431.591 502.344 441.815 487.512 443.543 cv
475.344 444.911 462.528 441.455 453.456 433.175 cv
456.84 433.967 460.512 433.823 464.328 432.671 cv
467.064 431.879 469.368 430.583 471.24 428.855 cv
473.184 427.703 475.704 427.559 477.792 428.999 cv
479.952 430.655 480.744 433.823 478.656 435.839 cv
477.648 436.703 476.208 436.991 475.128 436.199 cv
474.552 435.767 474.192 435.047 474.552 434.399 cv
475.056 433.679 475.56 434.615 476.208 434.255 cv
476.856 433.895 476.856 433.103 476.568 432.527 cv
475.704 431.015 473.616 431.375 472.536 432.455 cv
470.664 434.687 471.96 437.711 474.336 438.863 cv
477.864 440.303 481.392 437.855 482.112 434.255 cv
482.328 433.247 482.256 432.239 482.04 431.375 cv
483.12 431.591 484.272 431.591 485.496 431.375 cv
489.816 430.367 492.696 426.119 491.184 421.799 cv
489.816 418.415 485.928 416.543 482.688 418.631 cv
480.528 420.215 479.736 423.455 482.04 425.255 cv
483.264 426.191 485.352 426.191 486 424.463 cv
486.144 423.815 486 423.095 485.352 422.879 cv
484.632 422.663 484.272 423.671 483.624 423.023 cv
483.192 422.375 483.408 421.655 483.912 421.151 cv
484.848 420.143 486.288 420.215 487.44 420.863 cv
489.816 422.447 489.6 425.759 487.8 427.703 cv
485.784 429.719 482.976 429.863 480.672 428.711 cv
479.376 427.055 477.216 425.975 474.912 425.831 cv
474.552 425.831 474.12 425.831 473.832 425.903 cv
475.992 422.519 477 418.415 476.712 413.879 cv
476.496 410.783 475.056 407.831 473.688 405.095 cv
473.472 404.663 473.112 403.655 472.608 403.295 cv
472.68 403.511 472.752 403.727 472.824 403.871 cv
473.184 404.807 473.544 405.671 473.904 406.535 cv
474.624 408.983 475.416 411.287 475.272 413.879 cv
474.912 421.367 471.168 427.271 463.32 428.711 cv
456.768 429.935 450.576 428.495 446.4 424.463 cv
448.416 425.183 450.72 425.327 453.096 424.679 cv
458.496 422.879 461.736 416.975 458.856 411.791 cv
456.624 408.263 451.656 406.751 448.56 410.063 cv
447.048 411.935 446.832 415.247 449.424 416.327 cv
450.36 416.687 451.584 416.471 452.016 415.463 cv
452.376 414.383 450.864 413.735 451.944 412.871 cv
452.88 412.223 454.104 412.655 454.824 413.375 cv
456.336 414.959 456.12 417.335 454.896 418.919 cv
453.384 421.079 450.792 422.015 448.344 421.871 cv
443.952 421.511 441.936 418.559 440.928 414.887 cv
441.072 413.591 441.072 412.223 441 410.927 cv
439.56 391.919 422.496 374.999 405.432 368.807 cv
376.272 358.799 343.152 374.207 330.912 402.071 cv
329.616 405.023 328.68 407.975 327.96 410.927 cv
327.888 411.071 li
327.6 410.351 327.24 409.559 326.88 408.767 cv
321.552 397.823 307.512 388.175 295.272 394.007 cv
291.096 395.879 288.072 398.759 287.064 403.295 cv
285.768 409.343 289.728 410.567 291.672 414.815 cv
294.408 420.791 289.368 425.759 284.112 427.775 cv
289.8 426.263 294.336 422.735 295.128 416.615 cv
295.632 412.367 291.744 409.127 292.536 405.095 cv
293.256 401.711 295.848 399.695 299.088 398.615 cv
310.104 395.159 320.256 404.735 323.64 414.311 cv
324.504 416.543 325.008 418.919 325.296 421.367 cv
325.584 423.959 325.656 426.551 325.296 429.215 cv
325.296 429.359 325.296 429.503 325.296 429.647 cv
330.552 424.967 li
330.552 424.823 li
330.696 424.319 330.48 423.095 330.48 422.591 cv
330.912 418.631 332.64 410.639 335.52 406.319 cv
348.84 386.159 382.824 385.655 386.568 414.527 cv
387.864 424.031 383.76 433.823 374.76 438.935 cv
363.096 445.271 347.832 440.303 344.232 427.055 cv
341.496 416.615 348.624 405.311 359.784 405.167 cv
368.496 405.095 376.416 413.447 372.816 422.231 cv
370.872 426.551 365.04 430.007 360.792 426.551 cv
360.144 426.047 358.344 423.527 359.784 422.951 cv
361.224 422.879 363.312 421.367 363.384 419.927 cv
363.456 418.703 362.592 417.767 361.44 417.551 cv
357.696 417.119 355.536 420.863 356.328 424.247 cv
358.2 430.583 366.12 431.087 370.8 427.487 cv
377.928 421.583 375.768 410.927 368.64 405.959 cv
358.344 399.119 345.168 405.743 342.072 417.047 cv
338.4 430.943 349.632 443.687 363.528 444.047 cv
378.936 444.191 389.232 430.295 388.296 415.319 cv
386.352 386.375 351.648 382.487 335.376 401.423 cv
337.032 397.463 340.128 391.199 344.808 386.087 cv
360.864 368.663 385.992 361.967 407.664 372.119 cv
422.712 379.247 438.624 394.799 437.688 412.727 cv
437.04 422.951 428.04 432.527 417.528 426.983 cv
415.08 425.687 413.424 423.239 411.12 421.727 cv
411.336 431.879 420.12 436.487 429.84 432.239 cv
434.232 430.367 437.328 426.695 439.056 422.447 cv
449.208 439.079 468.792 449.447 488.664 446.423 cv
503.496 443.831 519.768 432.815 523.656 417.551 cv
524.808 413.159 524.52 407.975 522.36 403.871 cv
522.432 401.927 523.368 399.983 525.24 398.831 cv
527.688 397.463 531 398.039 532.008 400.775 cv
532.44 402.071 532.152 403.511 530.928 404.231 cv
530.352 404.591 529.488 404.663 528.984 404.087 cv
528.48 403.295 529.56 403.151 529.56 402.431 cv
529.488 401.711 528.768 401.351 528.048 401.423 cv
526.248 401.567 525.744 403.655 526.392 405.167 cv
527.688 407.831 531.072 407.831 533.088 406.031 cv
535.896 403.295 535.032 398.975 531.936 396.887 cv
531.072 396.311 530.136 395.951 529.2 395.807 cv
529.848 394.871 530.352 393.863 530.64 392.639 cv
531.432 388.175 528.552 383.783 523.872 383.423 cv
520.2 383.279 516.888 386.231 517.464 390.119 cv
518.04 392.783 520.776 394.799 523.44 393.431 cv
524.808 392.567 525.672 390.623 524.304 389.327 cv
523.8 388.967 523.008 388.751 522.504 389.327 cv
522 389.903 522.864 390.623 522 390.911 cv
521.208 391.127 520.632 390.551 520.272 389.975 cv
519.768 388.679 520.416 387.311 521.496 386.519 cv
524.016 384.935 526.968 386.447 528.12 388.967 cv
529.2 391.631 528.192 394.367 526.176 395.951 cv
524.016 396.527 522.144 398.111 521.064 400.271 cv
520.92 400.559 520.776 400.919 520.704 401.279 cv
519.84 400.271 518.904 399.407 517.824 398.687 cv
510.552 393.863 502.776 396.239 501.048 404.375 cv
ef
429.984 388.175 mo
429.408 390.407 428.256 392.567 426.528 394.439 cv
424.944 396.023 422.856 396.959 420.912 397.967 cv
420.624 398.111 419.904 398.471 419.472 398.471 cv
419.616 398.399 419.76 398.327 419.904 398.255 cv
420.48 397.895 421.056 397.535 421.632 397.175 cv
423.144 396.167 424.656 395.231 425.736 393.863 cv
427.248 391.775 428.112 389.471 428.256 387.239 cv
429.984 388.175 li
ef
313.488 363.119 mo
313.416 363.623 313.488 364.343 313.704 364.919 cv
314.064 365.927 314.064 366.719 313.992 367.151 cv
313.92 367.583 313.848 367.655 313.848 367.655 cv
313.416 367.655 li
313.56 368.231 li
313.2 368.231 li
313.272 368.807 li
312.84 368.879 li
312.84 368.879 312.768 369.743 312.768 369.959 cv
312.768 370.175 312.768 370.391 312.768 370.391 cv
312.192 370.391 li
312.192 370.391 312.192 370.751 312.264 371.039 cv
312.336 371.327 312.336 371.615 312.336 371.615 cv
311.616 371.759 li
311.76 372.911 li
311.256 372.767 li
311.4 373.703 li
310.824 373.919 li
311.112 375.287 li
310.608 375.287 li
310.968 376.655 li
310.608 376.655 li
310.896 378.311 li
310.32 378.311 li
310.32 378.311 310.536 378.959 310.68 379.319 cv
310.752 379.751 310.968 380.111 310.968 380.111 cv
310.536 380.255 li
310.536 380.255 310.608 380.831 310.896 381.191 cv
311.112 381.551 311.328 381.767 311.328 381.767 cv
310.896 381.983 li
310.896 381.983 311.328 382.631 311.472 382.847 cv
311.616 382.991 311.832 383.279 311.832 383.279 cv
311.616 383.783 li
311.616 383.783 311.976 384.143 312.264 384.431 cv
312.48 384.719 312.696 384.791 312.696 384.791 cv
312.264 384.935 li
312.264 384.935 312.768 385.511 312.984 385.799 cv
313.128 386.015 313.56 386.303 313.56 386.303 cv
313.128 386.447 li
313.128 386.447 313.704 387.095 313.92 387.311 cv
314.136 387.455 314.208 387.599 314.208 387.599 cv
313.848 387.599 li
314.784 388.391 li
314.496 388.607 li
315.864 389.903 li
315.576 390.047 li
315.576 390.047 316.08 390.479 316.296 390.839 cv
316.584 391.127 316.872 391.271 316.872 391.271 cv
316.728 391.415 li
316.728 391.415 317.448 392.135 317.736 392.279 cv
317.952 392.423 318.384 392.567 318.384 392.567 cv
318.096 392.711 li
318.096 392.711 318.96 393.719 319.392 394.007 cv
319.896 394.295 320.472 394.367 320.472 394.367 cv
320.184 394.583 li
320.184 394.583 320.976 395.159 321.408 395.159 cv
321.768 395.231 322.128 395.303 322.128 395.303 cv
321.768 395.591 li
321.768 395.591 322.416 395.879 322.848 395.951 cv
323.28 396.023 323.712 396.023 323.712 396.023 cv
323.496 396.311 li
323.496 396.311 324.288 396.599 324.648 396.599 cv
325.08 396.527 325.296 396.527 325.296 396.527 cv
324.864 396.887 li
324.864 396.887 325.584 397.031 325.944 396.959 cv
326.232 396.815 326.448 396.743 326.448 396.743 cv
326.088 397.247 li
326.088 397.247 326.808 397.175 327.096 397.103 cv
327.312 397.031 327.744 396.887 327.744 396.887 cv
327.456 397.247 li
327.456 397.247 328.032 397.247 328.392 397.103 cv
328.464 397.103 328.536 397.103 328.608 397.103 cv
329.688 401.351 329.832 405.383 329.04 408.839 cv
329.544 408.839 li
330.336 405.383 330.192 401.279 329.184 397.031 cv
329.328 396.815 329.472 396.599 329.688 396.527 cv
330.048 396.311 330.408 395.951 330.408 395.951 cv
329.976 395.879 li
329.976 395.879 330.264 395.663 330.552 395.519 cv
330.768 395.375 331.272 394.871 331.272 394.871 cv
330.696 394.799 li
330.696 394.799 330.912 394.799 331.128 394.583 cv
331.416 394.439 331.776 393.719 331.776 393.719 cv
331.2 393.863 li
331.2 393.863 331.416 393.719 331.704 393.431 cv
331.992 393.143 332.28 392.351 332.28 392.351 cv
331.92 392.279 li
331.92 392.279 332.208 391.991 332.424 391.631 cv
332.64 391.271 332.856 390.551 332.856 390.551 cv
332.424 390.623 li
332.424 390.623 332.496 390.335 332.784 390.047 cv
333 389.687 333 388.607 333 388.607 cv
332.712 388.679 li
332.712 388.679 333 388.247 333.072 387.671 cv
333.144 387.167 333 385.871 333 385.871 cv
332.64 386.015 li
332.64 386.015 332.856 385.583 332.856 385.295 cv
332.928 385.007 332.856 383.999 332.856 383.999 cv
332.64 383.999 li
332.64 383.999 332.712 383.711 332.64 383.279 cv
332.568 382.847 332.64 382.199 332.64 382.199 cv
332.28 382.343 li
332.208 380.471 li
331.848 380.543 li
331.848 379.319 li
331.56 379.607 li
331.56 379.607 331.56 379.391 331.56 379.175 cv
331.56 378.887 331.416 378.023 331.416 378.023 cv
331.056 378.239 li
331.056 378.239 331.128 377.735 331.056 377.447 cv
330.984 377.087 330.84 376.367 330.84 376.367 cv
330.48 376.655 li
330.48 376.655 330.48 376.367 330.48 376.007 cv
330.408 375.647 330.408 375.071 330.408 375.071 cv
329.904 374.927 li
329.904 374.927 329.832 374.567 329.76 374.351 cv
329.688 374.135 329.472 373.415 329.472 373.415 cv
329.04 373.631 li
329.04 373.631 329.04 373.343 328.896 372.911 cv
328.752 372.407 328.392 372.047 328.392 372.047 cv
328.032 372.263 li
328.032 372.263 327.816 371.831 327.6 371.543 cv
327.384 371.183 327.096 370.607 327.096 370.607 cv
326.736 371.039 li
325.656 369.743 li
325.368 370.031 li
324.576 368.807 li
324.288 369.239 li
323.352 368.159 li
322.848 368.375 li
322.272 367.727 li
322.056 368.159 li
321.264 367.295 li
320.688 367.799 li
320.688 367.799 320.472 367.583 320.256 367.367 cv
320.04 367.079 319.824 366.863 319.824 366.863 cv
319.464 367.367 li
319.464 367.367 319.32 367.151 319.104 367.007 cv
318.96 366.863 318.24 366.431 318.24 366.431 cv
317.952 366.719 li
317.52 366.287 li
317.304 366.503 li
316.944 365.999 li
316.656 366.359 li
316.656 366.359 316.584 366.359 316.224 366.143 cv
315.864 365.927 315.216 365.423 314.712 364.415 cv
314.424 363.911 313.848 363.407 313.488 363.119 cv
ef
560.664 430.007 mo
560.304 428.711 560.088 427.343 558.936 426.767 cv
558.576 426.623 558.648 427.271 558.288 426.839 cv
558.072 426.551 558.144 426.551 557.856 426.767 cv
557.784 426.695 557.64 426.551 557.496 426.407 cv
557.352 426.479 557.28 426.551 557.208 426.623 cv
556.992 426.767 556.056 426.119 555.84 425.975 cv
555.84 425.975 555.624 426.191 555.552 426.263 cv
555.408 426.479 555.192 426.191 554.976 426.047 cv
554.472 425.687 554.544 425.687 554.112 426.119 cv
554.04 426.119 554.04 426.119 553.968 426.191 cv
553.824 426.335 553.032 425.615 552.96 425.759 cv
552.816 426.047 552.888 426.191 552.6 426.047 cv
552.528 425.975 552.456 425.903 552.384 425.903 cv
551.808 425.543 551.808 426.263 551.16 425.903 cv
551.016 425.831 550.872 425.759 550.728 425.687 cv
550.008 425.327 550.44 426.191 549.936 425.831 cv
549.648 425.687 549.36 425.543 549 425.399 cv
548.784 425.759 548.856 425.759 548.424 425.615 cv
548.064 425.471 547.704 425.399 547.344 425.255 cv
547.272 425.399 547.2 425.615 547.128 425.759 cv
547.056 425.759 547.056 425.831 547.056 425.759 cv
546.552 425.615 546.12 425.471 545.616 425.183 cv
545.616 425.111 545.4 425.471 545.328 425.471 cv
545.04 425.831 544.248 425.183 544.032 424.967 cv
544.032 424.895 543.744 425.255 543.672 425.327 cv
543.672 425.327 543.672 425.399 543.6 425.327 cv
543.24 425.183 542.952 424.967 542.664 424.679 cv
542.592 424.679 542.088 425.111 542.016 424.967 cv
541.8 424.751 541.368 424.463 541.296 424.175 cv
541.152 424.391 li
541.152 424.463 541.08 424.679 541.008 424.607 cv
540.648 424.391 540.144 424.247 539.928 423.815 cv
539.856 423.743 539.64 424.103 539.64 424.175 cv
539.568 424.319 539.568 424.247 539.424 424.175 cv
539.208 424.103 538.992 423.959 538.848 423.815 cv
538.56 423.599 538.632 423.671 538.488 423.959 cv
538.416 424.103 538.488 424.031 538.344 423.959 cv
537.912 423.599 537.912 423.383 537.552 423.815 cv
537.408 423.959 536.832 423.527 536.616 423.455 cv
536.184 423.311 536.256 423.311 536.04 423.671 cv
535.968 423.671 535.392 423.455 535.248 423.383 cv
534.888 423.383 534.96 423.095 534.672 423.311 cv
534.456 423.599 533.664 423.095 533.448 422.879 cv
533.232 422.591 533.304 423.167 533.16 423.167 cv
532.512 423.095 531.504 423.239 531.288 422.447 cv
531.288 422.447 531.072 422.807 531 422.807 cv
530.784 422.807 530.208 422.663 530.208 422.447 cv
530.064 421.799 529.992 422.087 529.704 422.447 cv
529.56 422.807 529.056 422.015 529.056 421.799 cv
528.984 421.655 529.056 421.439 528.912 421.583 cv
528.624 421.871 528.624 422.087 528.264 421.583 cv
528.12 421.367 528.12 421.151 528.192 420.863 cv
528.192 420.791 528.12 420.935 528.12 421.007 cv
527.904 421.367 527.76 421.799 527.544 421.151 cv
527.472 420.935 527.616 420.647 527.616 420.359 cv
527.616 420.359 527.4 420.647 527.4 420.719 cv
527.112 421.079 527.112 421.295 527.112 420.719 cv
527.04 420.359 527.184 420.071 527.256 419.711 cv
527.256 419.711 527.04 419.999 526.968 420.071 cv
526.896 420.143 526.824 420.287 526.824 420.215 cv
526.752 420.071 526.752 419.855 526.752 419.711 cv
525.96 420.431 519.84 426.263 519.12 427.127 cv
518.976 426.551 li
519.624 425.759 525.816 419.927 526.608 419.207 cv
526.608 419.135 526.68 419.135 526.68 419.135 cv
526.68 419.063 526.68 419.063 526.68 419.063 cv
527.112 418.487 527.328 417.839 527.76 417.263 cv
527.832 417.119 527.976 417.479 528.048 417.335 cv
528.264 416.831 528.552 416.327 528.912 415.823 cv
529.056 415.535 529.056 416.183 529.2 415.895 cv
529.488 415.319 529.92 414.887 530.352 414.383 cv
530.424 414.383 530.424 414.815 530.424 414.743 cv
530.64 414.383 531.936 412.943 532.224 413.087 cv
532.368 413.159 li
532.944 412.511 533.664 411.935 534.384 411.503 cv
534.672 411.287 534.384 411.863 534.6 411.647 cv
535.464 411.071 536.184 410.567 537.12 410.207 cv
537.264 410.135 537.12 410.423 537.192 410.423 cv
538.344 409.559 539.784 409.199 541.152 408.983 cv
541.296 408.911 540.936 409.271 541.152 409.199 cv
541.584 408.983 543.744 408.191 543.96 408.551 cv
544.032 408.623 544.824 408.407 544.968 408.407 cv
545.472 408.407 545.976 408.335 546.48 408.263 cv
546.552 408.263 546.48 408.479 546.48 408.551 cv
547.344 408.479 548.208 408.407 549.072 408.407 cv
549.072 408.767 549.144 408.695 549.576 408.695 cv
549.936 408.695 550.296 408.695 550.656 408.695 cv
550.44 408.839 550.296 408.839 550.728 408.911 cv
551.304 408.911 551.88 408.983 552.456 409.055 cv
552.528 409.055 552.312 409.343 552.312 409.343 cv
553.176 409.343 553.968 409.559 554.688 409.775 cv
555.048 409.847 554.328 409.991 554.616 409.991 cv
555.048 410.063 556.344 410.207 556.56 410.567 cv
556.776 410.999 557.064 410.999 557.496 411.143 cv
557.856 411.287 558.144 411.431 558.504 411.575 cv
558.72 411.719 558.216 411.935 558.504 412.007 cv
559.08 412.223 559.656 412.511 560.16 413.015 cv
560.304 413.159 559.872 413.303 560.016 413.375 cv
560.592 413.807 561.168 414.311 561.672 414.815 cv
561.672 414.887 561.312 414.959 561.24 414.959 cv
561.672 415.463 562.032 416.039 562.464 416.543 cv
562.104 416.615 562.032 416.543 562.32 416.903 cv
562.536 417.263 562.824 417.623 563.112 417.983 cv
562.608 417.983 li
562.896 418.415 563.184 418.919 563.4 419.423 cv
563.328 419.495 563.184 419.567 563.04 419.639 cv
562.968 419.711 563.328 420.287 563.328 420.431 cv
563.544 420.935 562.824 420.287 562.968 420.647 cv
563.112 420.935 563.256 421.223 563.328 421.583 cv
563.4 421.871 562.68 421.655 562.752 421.943 cv
562.824 422.303 562.968 422.663 563.112 423.095 cv
563.112 423.167 562.536 423.023 562.536 423.095 cv
562.608 423.383 562.752 424.607 562.536 424.607 cv
562.248 424.607 562.248 424.607 562.248 424.967 cv
562.392 425.831 562.464 428.279 561.528 430.223 cv
560.448 433.895 557.136 436.559 552.744 434.111 cv
552.6 434.039 551.376 432.959 551.376 432.959 cv
552.456 433.751 553.68 434.327 554.832 434.543 cv
558.216 435.119 560.016 432.743 560.664 430.007 cv
ef
422.352 403.295 mo
422.28 401.495 421.92 399.551 421.416 397.535 cv
420.768 397.679 li
421.2 399.191 421.488 400.703 421.632 402.143 cv
420.984 401.135 420.12 400.127 419.112 399.263 cv
419.112 399.191 419.112 399.047 419.184 398.975 cv
419.256 398.831 419.256 398.615 419.256 398.615 cv
419.04 398.687 li
419.04 398.687 419.112 398.543 419.184 398.471 cv
419.256 398.327 419.256 398.039 419.256 398.039 cv
419.04 398.183 li
419.04 398.183 419.112 398.039 419.112 397.967 cv
419.184 397.823 419.184 397.463 419.184 397.463 cv
418.968 397.679 li
418.968 397.679 419.04 397.607 419.04 397.391 cv
419.04 397.247 418.968 396.887 418.968 396.887 cv
418.824 396.959 li
418.824 396.959 418.824 396.815 418.824 396.599 cv
418.824 396.455 418.68 396.167 418.68 396.167 cv
418.608 396.311 li
418.608 396.311 418.536 396.167 418.536 395.951 cv
418.536 395.807 418.32 395.447 418.32 395.447 cv
418.176 395.591 li
418.176 395.591 418.176 395.303 418.104 395.087 cv
417.96 394.943 417.6 394.583 417.6 394.583 cv
417.528 394.727 li
417.528 394.727 417.456 394.511 417.384 394.439 cv
417.312 394.295 417.096 394.007 417.096 394.007 cv
417.024 394.007 li
417.024 394.007 416.952 393.935 416.808 393.791 cv
416.664 393.647 416.52 393.431 416.52 393.431 cv
416.448 393.575 li
415.944 392.927 li
415.872 393.071 li
415.584 392.639 li
415.512 392.783 li
415.512 392.783 415.44 392.783 415.44 392.639 cv
415.368 392.567 415.08 392.351 415.08 392.351 cv
415.008 392.495 li
415.008 392.495 414.936 392.279 414.792 392.207 cv
414.72 392.135 414.432 391.919 414.432 391.919 cv
414.432 392.063 li
414.432 392.063 414.36 391.991 414.288 391.847 cv
414.144 391.775 414 391.559 414 391.559 cv
413.784 391.631 li
413.784 391.631 413.64 391.559 413.568 391.487 cv
413.496 391.415 413.28 391.271 413.28 391.271 cv
413.136 391.415 li
413.136 391.415 413.064 391.343 412.92 391.199 cv
412.776 391.055 412.56 391.055 412.56 391.055 cv
412.488 391.199 li
412.488 391.199 412.344 391.127 412.2 391.055 cv
411.984 390.983 411.768 390.911 411.768 390.911 cv
411.696 391.127 li
411.048 390.983 li
411.048 391.127 li
410.472 390.911 li
410.472 391.127 li
409.896 390.983 li
409.752 391.199 li
409.392 391.127 li
409.392 391.343 li
408.96 391.199 li
408.888 391.559 li
408.888 391.559 408.744 391.487 408.6 391.487 cv
408.456 391.487 408.312 391.415 408.312 391.415 cv
408.312 391.703 li
408.312 391.703 408.24 391.631 408.168 391.631 cv
408.024 391.631 407.664 391.631 407.664 391.631 cv
407.664 391.847 li
407.448 391.775 li
407.376 391.919 li
407.16 391.847 li
407.16 392.063 li
407.16 392.063 407.16 392.063 406.944 392.063 cv
406.728 392.135 406.44 392.063 406.008 391.919 cv
405.792 391.775 405.432 391.775 405.288 391.775 cv
405.36 391.919 405.576 392.135 405.792 392.279 cv
406.152 392.567 406.368 392.855 406.44 392.999 cv
406.512 393.143 406.512 393.215 406.512 393.215 cv
406.368 393.287 li
406.584 393.503 li
406.44 393.575 li
406.584 393.719 li
406.512 393.863 li
406.512 393.863 406.656 394.151 406.728 394.295 cv
406.8 394.367 406.872 394.439 406.872 394.439 cv
406.656 394.511 li
406.656 394.511 406.728 394.655 406.8 394.727 cv
406.944 394.799 407.016 394.871 407.016 394.871 cv
406.8 395.087 li
407.088 395.447 li
406.944 395.519 li
407.16 395.807 li
407.088 396.023 li
407.52 396.383 li
407.304 396.527 li
407.808 396.887 li
407.664 397.031 li
408.168 397.463 li
408.024 397.607 li
408.024 397.607 408.24 397.823 408.384 397.895 cv
408.528 397.967 408.672 398.111 408.672 398.111 cv
408.528 398.255 li
408.528 398.255 408.744 398.399 408.888 398.471 cv
409.104 398.543 409.176 398.543 409.176 398.543 cv
409.104 398.759 li
409.104 398.759 409.392 398.831 409.464 398.903 cv
409.608 398.903 409.752 398.975 409.752 398.975 cv
409.752 399.191 li
409.752 399.191 410.04 399.191 410.184 399.263 cv
410.328 399.263 410.4 399.263 410.4 399.263 cv
410.328 399.407 li
410.328 399.407 410.616 399.479 410.76 399.479 cv
410.904 399.551 411.12 399.551 411.12 399.551 cv
410.976 399.695 li
410.976 399.695 411.336 399.767 411.48 399.767 cv
411.552 399.767 411.624 399.767 411.624 399.767 cv
411.552 399.911 li
412.056 399.911 li
411.984 400.055 li
412.776 400.199 li
412.704 400.343 li
412.704 400.343 412.992 400.343 413.136 400.343 cv
413.352 400.415 413.424 400.415 413.424 400.415 cv
413.424 400.487 li
413.424 400.487 413.856 400.559 414 400.487 cv
414.144 400.487 414.288 400.487 414.288 400.487 cv
414.216 400.631 li
414.216 400.631 414.792 400.703 415.008 400.703 cv
415.224 400.703 415.44 400.559 415.44 400.559 cv
415.44 400.703 li
415.44 400.703 415.872 400.703 416.016 400.631 cv
416.16 400.559 416.232 400.487 416.232 400.487 cv
416.232 400.703 li
416.232 400.703 416.52 400.631 416.664 400.487 cv
416.88 400.415 416.952 400.343 416.952 400.343 cv
417.024 400.487 li
417.024 400.487 417.312 400.343 417.456 400.271 cv
417.6 400.127 417.672 400.055 417.672 400.055 cv
417.6 400.343 li
417.6 400.343 417.888 400.199 417.96 400.055 cv
418.032 399.983 418.104 399.911 418.104 399.911 cv
418.104 400.127 li
418.104 400.127 418.32 399.911 418.392 399.839 cv
418.464 399.767 418.608 399.623 418.608 399.623 cv
418.608 399.767 li
418.608 399.767 418.752 399.695 418.896 399.479 cv
420.12 400.415 421.056 401.495 421.704 402.647 cv
421.704 402.863 421.704 403.079 421.704 403.295 cv
418.968 403.007 417.744 401.135 415.8 401.567 cv
412.56 402.359 409.896 404.663 409.896 411.431 cv
409.896 418.343 415.512 423.887 422.352 423.887 cv
429.264 423.887 434.88 418.343 434.88 411.431 cv
434.88 404.663 432.216 402.359 428.904 401.567 cv
426.888 401.063 425.592 403.295 422.352 403.295 cv
ef
473.832 393.143 mo
473.4 392.927 472.824 392.567 472.176 392.495 cv
471.096 392.279 470.448 391.847 470.088 391.631 cv
469.728 391.343 469.728 391.271 469.728 391.271 cv
469.944 390.839 li
469.368 390.695 li
469.512 390.407 li
469.008 390.191 li
469.152 389.759 li
469.152 389.759 468.504 389.255 468.288 389.111 cv
468.072 389.039 467.856 388.967 467.856 388.967 cv
468.216 388.463 li
468.216 388.463 467.928 388.319 467.64 388.175 cv
467.28 388.103 467.064 387.959 467.064 387.959 cv
467.28 387.239 li
466.272 386.807 li
466.56 386.447 li
465.768 386.087 li
465.768 385.511 li
464.472 385.079 li
464.76 384.647 li
463.32 384.287 li
463.536 383.927 li
461.952 383.351 li
462.24 382.847 li
462.24 382.847 461.592 382.703 461.232 382.631 cv
460.8 382.559 460.368 382.559 460.368 382.559 cv
460.44 382.055 li
460.44 382.055 459.936 381.839 459.504 381.911 cv
459.072 381.911 458.784 382.055 458.784 382.055 cv
458.784 381.551 li
458.784 381.551 458.064 381.551 457.776 381.623 cv
457.56 381.623 457.2 381.695 457.2 381.695 cv
456.912 381.263 li
456.912 381.263 456.408 381.407 456.048 381.479 cv
455.688 381.551 455.4 381.695 455.4 381.695 cv
455.616 381.263 li
455.616 381.263 454.824 381.335 454.464 381.407 cv
454.176 381.479 453.744 381.695 453.744 381.695 cv
453.744 381.263 li
453.744 381.263 452.952 381.407 452.736 381.479 cv
452.448 381.623 452.304 381.623 452.304 381.623 cv
452.448 381.263 li
451.296 381.695 li
451.224 381.335 li
449.496 381.839 li
449.496 381.551 li
449.496 381.551 448.848 381.767 448.416 381.839 cv
448.056 381.911 447.768 382.127 447.768 382.127 cv
447.696 381.839 li
447.696 381.839 446.76 382.199 446.472 382.343 cv
446.184 382.487 445.896 382.775 445.896 382.775 cv
445.896 382.343 li
445.896 382.343 444.6 382.631 444.096 382.919 cv
443.664 383.135 443.304 383.639 443.304 383.639 cv
443.304 383.279 li
443.304 383.279 442.296 383.711 442.08 383.999 cv
441.864 384.359 441.576 384.575 441.576 384.575 cv
441.504 384.071 li
441.504 384.071 440.928 384.503 440.64 384.863 cv
440.352 385.223 440.208 385.583 440.208 385.583 cv
439.992 385.223 li
439.992 385.223 439.416 385.799 439.2 386.159 cv
439.056 386.519 438.984 386.735 438.984 386.735 cv
438.84 386.159 li
438.84 386.159 438.336 386.735 438.264 387.023 cv
438.192 387.383 438.192 387.599 438.192 387.599 cv
437.904 387.023 li
437.904 387.023 437.616 387.743 437.544 387.959 cv
437.544 388.247 437.4 388.607 437.4 388.607 cv
437.184 388.247 li
437.184 388.247 436.968 388.679 436.896 389.111 cv
436.896 389.183 436.824 389.255 436.824 389.327 cv
432.648 388.103 429.048 386.231 426.456 383.783 cv
426.096 384.215 li
428.76 386.663 432.36 388.607 436.608 389.831 cv
436.68 390.047 436.752 390.263 436.752 390.479 cv
436.752 390.911 436.896 391.415 436.896 391.415 cv
437.184 391.055 li
437.184 391.055 437.184 391.487 437.184 391.775 cv
437.184 391.991 437.4 392.783 437.4 392.783 cv
437.76 392.207 li
437.76 392.207 437.76 392.495 437.76 392.783 cv
437.76 393.143 438.192 393.791 438.192 393.791 cv
438.408 393.215 li
438.408 393.215 438.408 393.431 438.552 393.863 cv
438.624 394.223 439.128 394.799 439.128 394.799 cv
439.344 394.583 li
439.344 394.583 439.488 394.871 439.704 395.303 cv
439.92 395.663 440.424 396.239 440.424 396.239 cv
440.568 395.807 li
440.568 395.807 440.784 396.023 440.928 396.383 cv
441.072 396.743 442.008 397.319 442.008 397.319 cv
442.08 396.959 li
442.08 396.959 442.368 397.535 442.728 397.823 cv
443.16 398.183 444.384 398.687 444.384 398.687 cv
444.456 398.327 li
444.456 398.327 444.744 398.687 444.96 398.831 cv
445.176 399.047 446.04 399.479 446.04 399.479 cv
446.184 399.335 li
446.184 399.335 446.4 399.551 446.832 399.695 cv
447.192 399.839 447.768 400.199 447.768 400.199 cv
447.84 399.839 li
449.496 400.703 li
449.64 400.343 li
450.648 400.919 li
450.576 400.559 li
450.576 400.559 450.72 400.631 450.936 400.775 cv
451.152 400.919 451.944 401.207 451.944 401.207 cv
452.016 400.775 li
452.016 400.775 452.376 401.063 452.664 401.207 cv
453.024 401.279 453.744 401.567 453.744 401.567 cv
453.672 401.063 li
453.672 401.063 453.888 401.279 454.176 401.423 cv
454.536 401.567 455.04 401.783 455.04 401.783 cv
455.4 401.423 li
455.4 401.423 455.76 401.567 455.976 401.639 cv
456.192 401.711 456.912 401.855 456.912 401.855 cv
456.984 401.351 li
456.984 401.351 457.272 401.495 457.704 401.639 cv
458.136 401.711 458.64 401.639 458.64 401.639 cv
458.712 401.135 li
458.712 401.135 459.144 401.207 459.504 401.207 cv
459.936 401.135 460.584 401.135 460.584 401.135 cv
460.368 400.631 li
462.024 400.343 li
461.88 399.983 li
463.392 399.839 li
463.176 399.407 li
464.544 399.191 li
464.616 398.615 li
465.48 398.399 li
465.192 398.039 li
466.344 397.751 li
466.2 397.031 li
466.2 397.031 466.488 396.959 466.776 396.887 cv
467.136 396.815 467.424 396.743 467.424 396.743 cv
467.208 396.167 li
467.208 396.167 467.424 396.167 467.64 396.095 cv
467.856 396.023 468.648 395.663 468.648 395.663 cv
468.504 395.159 li
469.08 395.087 li
469.008 394.799 li
469.584 394.799 li
469.44 394.367 li
469.44 394.367 469.44 394.223 469.872 394.079 cv
470.232 393.863 471.024 393.575 472.104 393.575 cv
472.752 393.575 473.4 393.359 473.832 393.143 cv
ef
523.584 431.447 mo
522.936 429.863 521.352 427.127 520.344 425.615 cv
519.768 425.903 li
521.28 428.063 522.288 429.863 523.008 431.591 cv
520.56 432.095 518.904 430.871 517.392 431.807 cv
514.8 433.463 513.144 436.199 515.16 442.103 cv
517.104 448.079 523.584 451.247 529.56 449.303 cv
535.536 447.287 538.776 440.807 536.76 434.831 cv
534.816 428.999 531.864 427.703 528.768 427.991 cv
526.824 428.207 526.32 430.439 523.584 431.447 cv
ef
67.032 404.375 mo
64.9438 403.511 63.2161 401.783 61.0559 401.063 cv
51.7681 398.111 45.864 407.255 46.8721 415.607 cv
48.8879 431.591 65.7361 441.815 80.5681 443.543 cv
92.8079 444.911 105.624 441.455 114.696 433.175 cv
111.312 433.967 107.568 433.823 103.824 432.671 cv
101.088 431.879 98.7839 430.583 96.9119 428.855 cv
94.8958 427.703 92.448 427.559 90.2878 428.999 cv
88.2 430.655 87.408 433.823 89.4958 435.839 cv
90.4319 436.703 91.8718 436.991 93.0242 436.199 cv
93.5281 435.767 93.8879 435.047 93.5999 434.399 cv
93.0959 433.679 92.5198 434.615 91.8718 434.255 cv
91.2961 433.895 91.2239 433.103 91.512 432.527 cv
92.448 431.015 94.4641 431.375 95.5442 432.455 cv
97.488 434.687 96.1921 437.711 93.7439 438.863 cv
90.2161 440.303 86.6877 437.855 85.968 434.255 cv
85.824 433.247 85.8958 432.239 86.1121 431.375 cv
85.032 431.591 83.8079 431.591 82.656 431.375 cv
78.3362 430.367 75.4558 426.119 76.968 421.799 cv
78.3362 418.415 82.2239 416.543 85.4641 418.631 cv
87.6238 420.215 88.344 423.455 86.1121 425.255 cv
84.8162 426.191 82.7278 426.191 82.1521 424.463 cv
81.9358 423.815 82.1521 423.095 82.8 422.879 cv
83.5198 422.663 83.8801 423.671 84.4558 423.023 cv
84.9602 422.375 84.6721 421.655 84.24 421.151 cv
83.304 420.143 81.7917 420.215 80.7122 420.863 cv
78.2639 422.447 78.4797 425.759 80.28 427.703 cv
82.2961 429.719 85.1038 429.863 87.408 428.711 cv
88.7761 427.055 90.864 425.975 93.24 425.831 cv
93.5999 425.831 93.9602 425.831 94.3201 425.903 cv
92.0881 422.519 91.0798 418.415 91.4402 413.879 cv
91.656 410.783 93.0959 407.831 94.3918 405.095 cv
94.6082 404.663 95.0398 403.655 95.4719 403.295 cv
95.4001 403.511 95.3279 403.727 95.2561 403.871 cv
94.8958 404.807 94.6082 405.671 94.2478 406.535 cv
93.5281 408.983 92.6638 411.287 92.8079 413.879 cv
93.1677 421.367 96.9841 427.271 104.76 428.711 cv
111.384 429.935 117.504 428.495 121.752 424.463 cv
119.664 425.183 117.432 425.327 115.056 424.679 cv
109.656 422.879 106.344 416.975 109.296 411.791 cv
111.456 408.263 116.496 406.751 119.52 410.063 cv
121.104 411.935 121.248 415.247 118.656 416.327 cv
117.72 416.687 116.568 416.471 116.064 415.463 cv
115.704 414.383 117.216 413.735 116.136 412.871 cv
115.2 412.223 113.976 412.655 113.256 413.375 cv
111.816 414.959 112.032 417.335 113.184 418.919 cv
114.768 421.079 117.36 422.015 119.808 421.871 cv
124.2 421.511 126.216 418.559 127.152 414.887 cv
127.08 413.591 127.008 412.223 127.08 410.927 cv
128.592 391.919 145.656 374.999 162.72 368.807 cv
191.808 358.799 224.928 374.207 237.24 402.071 cv
238.464 405.023 239.4 407.975 240.12 410.927 cv
240.192 411.071 li
240.48 410.351 240.84 409.559 241.2 408.767 cv
246.528 397.823 260.568 388.175 272.88 394.007 cv
277.056 395.879 280.08 398.759 281.088 403.295 cv
282.456 409.343 278.496 410.567 276.48 414.815 cv
273.672 420.791 278.784 425.759 284.112 427.775 cv
278.352 426.263 273.744 422.735 273.024 416.615 cv
272.448 412.367 276.408 409.127 275.544 405.095 cv
274.824 401.711 272.304 399.695 269.064 398.615 cv
257.976 395.159 247.896 404.735 244.44 414.311 cv
243.648 416.543 243.072 418.919 242.784 421.367 cv
242.496 423.959 242.496 426.551 242.784 429.215 cv
242.784 429.359 242.856 429.503 242.856 429.647 cv
237.6 424.967 li
237.6 424.823 li
237.384 424.319 237.6 423.095 237.672 422.591 cv
237.168 418.631 235.44 410.639 232.632 406.319 cv
219.312 386.159 185.328 385.655 181.512 414.527 cv
180.288 424.031 184.392 433.823 193.392 438.935 cv
204.984 445.271 220.248 440.303 223.92 427.055 cv
226.584 416.615 219.456 405.311 208.296 405.167 cv
199.584 405.095 191.664 413.447 195.336 422.231 cv
197.208 426.551 203.04 430.007 207.36 426.551 cv
207.936 426.047 209.808 423.527 208.296 422.951 cv
206.928 422.879 204.768 421.367 204.696 419.927 cv
204.696 418.703 205.56 417.767 206.64 417.551 cv
210.456 417.119 212.616 420.863 211.752 424.247 cv
209.88 430.583 201.96 431.087 197.352 427.487 cv
190.224 421.583 192.312 410.927 199.44 405.959 cv
209.808 399.119 222.912 405.743 226.08 417.047 cv
229.68 430.943 218.448 443.687 204.624 444.047 cv
189.144 444.191 178.848 430.295 179.856 415.319 cv
181.728 386.375 216.504 382.487 232.704 401.423 cv
231.048 397.463 227.952 391.199 223.344 386.087 cv
207.288 368.663 182.16 361.967 160.488 372.119 cv
145.44 379.247 129.456 394.799 130.392 412.727 cv
131.112 422.951 140.112 432.527 150.552 426.983 cv
153.072 425.687 154.656 423.239 157.032 421.727 cv
156.744 431.879 147.96 436.487 138.24 432.239 cv
133.848 430.367 130.824 426.695 129.024 422.447 cv
118.944 439.079 99.3601 449.447 79.4158 446.423 cv
64.584 443.831 48.312 432.815 44.4241 417.551 cv
43.344 413.159 43.6321 407.975 45.72 403.871 cv
45.72 401.927 44.7839 399.983 42.8398 398.831 cv
40.4639 397.463 37.1519 398.039 36.072 400.775 cv
35.7119 402.071 36 403.511 37.2239 404.231 cv
37.8 404.591 38.6641 404.663 39.0959 404.087 cv
39.5999 403.295 38.52 403.151 38.592 402.431 cv
38.6641 401.711 39.384 401.351 40.032 401.423 cv
41.832 401.567 42.3359 403.655 41.76 405.167 cv
40.4639 407.831 37.0801 407.831 34.9919 406.031 cv
32.1841 403.295 33.1199 398.975 36.144 396.887 cv
37.0801 396.311 38.0159 395.951 38.9519 395.807 cv
38.304 394.871 37.8 393.863 37.512 392.639 cv
36.72 388.175 39.5281 383.783 44.208 383.423 cv
47.9519 383.279 51.2639 386.231 50.616 390.119 cv
50.04 392.783 47.304 394.799 44.7119 393.431 cv
43.344 392.567 42.48 390.623 43.8479 389.327 cv
44.3521 388.967 45.072 388.751 45.5759 389.327 cv
46.0801 389.903 45.2878 390.623 46.1519 390.911 cv
46.8721 391.127 47.52 390.551 47.8079 389.975 cv
48.384 388.679 47.6641 387.311 46.584 386.519 cv
44.136 384.935 41.1121 386.447 40.032 388.967 cv
38.9519 391.631 39.96 394.367 41.9041 395.951 cv
44.064 396.527 45.936 398.111 47.0159 400.271 cv
47.1599 400.559 47.304 400.919 47.448 401.279 cv
48.24 400.271 49.176 399.407 50.3279 398.687 cv
57.5281 393.863 65.304 396.239 67.032 404.375 cv
ef
138.168 388.175 mo
138.672 390.407 139.896 392.567 141.624 394.439 cv
143.136 396.023 145.224 396.959 147.24 397.967 cv
147.528 398.111 148.176 398.471 148.608 398.471 cv
148.464 398.399 148.32 398.327 148.248 398.255 cv
147.672 397.895 147.024 397.535 146.448 397.175 cv
145.008 396.167 143.496 395.231 142.416 393.863 cv
140.904 391.775 139.968 389.471 139.896 387.239 cv
138.168 388.175 li
ef
254.664 363.119 mo
254.664 363.623 254.664 364.343 254.448 364.919 cv
254.088 365.927 254.088 366.719 254.16 367.151 cv
254.16 367.583 254.232 367.655 254.232 367.655 cv
254.736 367.655 li
254.592 368.231 li
254.88 368.231 li
254.808 368.807 li
255.24 368.879 li
255.24 368.879 255.384 369.743 255.384 369.959 cv
255.384 370.175 255.312 370.391 255.312 370.391 cv
255.888 370.391 li
255.888 370.391 255.888 370.751 255.816 371.039 cv
255.816 371.327 255.744 371.615 255.744 371.615 cv
256.464 371.759 li
256.392 372.911 li
256.824 372.767 li
256.752 373.703 li
257.256 373.919 li
256.968 375.287 li
257.472 375.287 li
257.112 376.655 li
257.544 376.655 li
257.184 378.311 li
257.76 378.311 li
257.76 378.311 257.544 378.959 257.472 379.319 cv
257.328 379.751 257.112 380.111 257.112 380.111 cv
257.616 380.255 li
257.616 380.255 257.544 380.831 257.256 381.191 cv
256.968 381.551 256.752 381.767 256.752 381.767 cv
257.184 381.983 li
257.184 381.983 256.824 382.631 256.68 382.847 cv
256.536 382.991 256.32 383.279 256.32 383.279 cv
256.536 383.783 li
256.536 383.783 256.104 384.143 255.888 384.431 cv
255.672 384.719 255.384 384.791 255.384 384.791 cv
255.888 384.935 li
255.888 384.935 255.384 385.511 255.168 385.799 cv
254.952 386.015 254.52 386.303 254.52 386.303 cv
254.952 386.447 li
254.952 386.447 254.448 387.095 254.232 387.311 cv
254.016 387.455 253.872 387.599 253.872 387.599 cv
254.232 387.599 li
253.296 388.391 li
253.584 388.607 li
252.288 389.903 li
252.576 390.047 li
252.576 390.047 252.072 390.479 251.784 390.839 cv
251.496 391.127 251.208 391.271 251.208 391.271 cv
251.352 391.415 li
251.352 391.415 250.632 392.135 250.416 392.279 cv
250.128 392.423 249.696 392.567 249.696 392.567 cv
250.056 392.711 li
250.056 392.711 249.12 393.719 248.688 394.007 cv
248.256 394.295 247.68 394.367 247.68 394.367 cv
247.968 394.583 li
247.968 394.583 247.104 395.159 246.744 395.159 cv
246.312 395.231 246.024 395.303 246.024 395.303 cv
246.384 395.591 li
246.384 395.591 245.736 395.879 245.304 395.951 cv
244.8 396.023 244.44 396.023 244.44 396.023 cv
244.584 396.311 li
244.584 396.311 243.864 396.599 243.432 396.599 cv
243.072 396.527 242.784 396.527 242.784 396.527 cv
243.288 396.887 li
243.288 396.887 242.496 397.031 242.208 396.959 cv
241.92 396.815 241.632 396.743 241.632 396.743 cv
242.064 397.247 li
242.064 397.247 241.272 397.175 241.056 397.103 cv
240.768 397.031 240.408 396.887 240.408 396.887 cv
240.624 397.247 li
240.624 397.247 240.12 397.247 239.688 397.103 cv
239.616 397.103 239.544 397.103 239.472 397.103 cv
238.464 401.351 238.32 405.383 239.112 408.839 cv
238.536 408.839 li
237.744 405.383 237.888 401.279 238.896 397.031 cv
238.752 396.815 238.608 396.599 238.464 396.527 cv
238.032 396.311 237.744 395.951 237.744 395.951 cv
238.176 395.879 li
238.176 395.879 237.816 395.663 237.6 395.519 cv
237.384 395.375 236.808 394.871 236.808 394.871 cv
237.456 394.799 li
237.456 394.799 237.24 394.799 236.952 394.583 cv
236.664 394.439 236.304 393.719 236.304 393.719 cv
236.88 393.863 li
236.88 393.863 236.736 393.719 236.448 393.431 cv
236.16 393.143 235.872 392.351 235.872 392.351 cv
236.232 392.279 li
236.232 392.279 235.944 391.991 235.728 391.631 cv
235.44 391.271 235.224 390.551 235.224 390.551 cv
235.728 390.623 li
235.728 390.623 235.584 390.335 235.368 390.047 cv
235.152 389.687 235.08 388.607 235.08 388.607 cv
235.44 388.679 li
235.44 388.679 235.08 388.247 235.008 387.671 cv
234.936 387.167 235.08 385.871 235.08 385.871 cv
235.44 386.015 li
235.44 386.015 235.296 385.583 235.224 385.295 cv
235.224 385.007 235.224 383.999 235.224 383.999 cv
235.44 383.999 li
235.44 383.999 235.368 383.711 235.44 383.279 cv
235.512 382.847 235.512 382.199 235.512 382.199 cv
235.8 382.343 li
235.944 380.471 li
236.304 380.543 li
236.232 379.319 li
236.592 379.607 li
236.592 379.607 236.592 379.391 236.592 379.175 cv
236.52 378.887 236.664 378.023 236.664 378.023 cv
237.096 378.239 li
237.096 378.239 237.024 377.735 237.096 377.447 cv
237.168 377.087 237.312 376.367 237.312 376.367 cv
237.672 376.655 li
237.672 376.655 237.6 376.367 237.672 376.007 cv
237.672 375.647 237.744 375.071 237.744 375.071 cv
238.248 374.927 li
238.248 374.927 238.32 374.567 238.32 374.351 cv
238.392 374.135 238.608 373.415 238.608 373.415 cv
239.112 373.631 li
239.112 373.631 239.112 373.343 239.184 372.911 cv
239.328 372.407 239.688 372.047 239.688 372.047 cv
240.12 372.263 li
240.12 372.263 240.264 371.831 240.48 371.543 cv
240.696 371.183 241.056 370.607 241.056 370.607 cv
241.416 371.039 li
242.496 369.743 li
242.712 370.031 li
243.576 368.807 li
243.864 369.239 li
244.728 368.159 li
245.304 368.375 li
245.88 367.727 li
246.096 368.159 li
246.888 367.295 li
247.464 367.799 li
247.464 367.799 247.68 367.583 247.896 367.367 cv
248.04 367.079 248.328 366.863 248.328 366.863 cv
248.688 367.367 li
248.688 367.367 248.76 367.151 248.976 367.007 cv
249.192 366.863 249.84 366.431 249.84 366.431 cv
250.2 366.719 li
250.56 366.287 li
250.776 366.503 li
251.136 365.999 li
251.424 366.359 li
251.424 366.359 251.496 366.359 251.928 366.143 cv
252.288 365.927 252.864 365.423 253.44 364.415 cv
253.728 363.911 254.232 363.407 254.664 363.119 cv
ef
7.41602 430.007 mo
7.8479 428.711 8.06396 427.343 9.21606 426.767 cv
9.50391 426.623 9.50391 427.271 9.79199 426.839 cv
10.0081 426.551 10.0081 426.551 10.2239 426.767 cv
10.3679 426.695 10.512 426.551 10.656 426.407 cv
10.728 426.479 10.8 426.551 10.9438 426.623 cv
11.0879 426.767 12.0239 426.119 12.24 425.975 cv
12.312 425.975 12.5281 426.191 12.5281 426.263 cv
12.7439 426.479 12.96 426.191 13.176 426.047 cv
13.6079 425.687 13.6079 425.687 14.04 426.119 cv
14.04 426.119 14.1121 426.119 14.1841 426.191 cv
14.2559 426.335 15.1199 425.615 15.1919 425.759 cv
15.2639 426.047 15.1919 426.191 15.552 426.047 cv
15.624 425.975 15.696 425.903 15.7681 425.903 cv
16.344 425.543 16.272 426.263 16.9199 425.903 cv
17.064 425.831 17.208 425.759 17.3521 425.687 cv
18.072 425.327 17.6399 426.191 18.144 425.831 cv
18.5039 425.687 18.792 425.543 19.0801 425.399 cv
19.2959 425.759 19.2239 425.759 19.728 425.615 cv
20.0879 425.471 20.448 425.399 20.7361 425.255 cv
20.8799 425.399 20.9519 425.615 21.0239 425.759 cv
21.0239 425.759 21.0239 425.831 21.0239 425.759 cv
21.5281 425.615 22.032 425.471 22.4639 425.183 cv
22.5359 425.111 22.752 425.471 22.824 425.471 cv
23.1121 425.831 23.832 425.183 24.0479 424.967 cv
24.1199 424.895 24.408 425.255 24.408 425.327 cv
24.48 425.327 24.48 425.399 24.48 425.327 cv
24.8398 425.183 25.1279 424.967 25.488 424.679 cv
25.5601 424.679 25.9919 425.111 26.136 424.967 cv
26.3521 424.751 26.7119 424.463 26.856 424.175 cv
26.856 424.175 26.928 424.391 27 424.391 cv
27 424.463 27.072 424.679 27.072 424.607 cv
27.5039 424.391 27.936 424.247 28.2239 423.815 cv
28.2239 423.743 28.4399 424.103 28.512 424.175 cv
28.584 424.319 28.584 424.247 28.656 424.175 cv
28.8721 424.103 29.0879 423.959 29.304 423.815 cv
29.52 423.599 29.52 423.671 29.592 423.959 cv
29.6641 424.103 29.6641 424.031 29.8079 423.959 cv
30.168 423.599 30.24 423.383 30.5999 423.815 cv
30.6719 423.959 31.3201 423.527 31.4639 423.455 cv
31.896 423.311 31.896 423.311 32.1121 423.671 cv
32.1121 423.671 32.688 423.455 32.832 423.383 cv
33.1919 423.383 33.1919 423.095 33.408 423.311 cv
33.696 423.599 34.488 423.095 34.7039 422.879 cv
34.8479 422.591 34.8479 423.167 34.9919 423.167 cv
35.6399 423.095 36.6479 423.239 36.792 422.447 cv
36.792 422.447 37.0081 422.807 37.1519 422.807 cv
37.3679 422.807 37.8721 422.663 37.9438 422.447 cv
38.0879 421.799 38.1599 422.087 38.376 422.447 cv
38.592 422.807 39.0239 422.015 39.0959 421.799 cv
39.0959 421.655 39.0959 421.439 39.168 421.583 cv
39.4561 421.871 39.5281 422.087 39.8159 421.583 cv
39.96 421.367 39.96 421.151 39.96 420.863 cv
39.96 420.791 40.032 420.935 40.032 421.007 cv
40.248 421.367 40.3201 421.799 40.5359 421.151 cv
40.6079 420.935 40.5359 420.647 40.4639 420.359 cv
40.4639 420.359 40.6799 420.647 40.752 420.719 cv
41.04 421.079 41.04 421.295 41.04 420.719 cv
41.04 420.359 40.968 420.071 40.896 419.711 cv
40.896 419.711 41.1121 419.999 41.1838 420.071 cv
41.1838 420.143 41.3279 420.287 41.3279 420.215 cv
41.3999 420.071 41.3279 419.855 41.3279 419.711 cv
42.1199 420.431 48.312 426.263 49.032 427.127 cv
49.176 426.551 li
48.4561 425.759 42.3359 419.927 41.5439 419.207 cv
41.4719 419.135 41.4719 419.135 41.3999 419.135 cv
41.4719 419.063 41.4719 419.063 41.4719 419.063 cv
41.04 418.487 40.752 417.839 40.3918 417.263 cv
40.248 417.119 40.176 417.479 40.104 417.335 cv
39.8159 416.831 39.5999 416.327 39.24 415.823 cv
39.0959 415.535 39.0239 416.183 38.8799 415.895 cv
38.592 415.319 38.2319 414.887 37.728 414.383 cv
37.656 414.383 37.728 414.815 37.656 414.743 cv
37.4399 414.383 36.2161 412.943 35.928 413.087 cv
35.856 413.087 35.7839 413.159 35.7839 413.159 cv
35.136 412.511 34.488 411.935 33.696 411.503 cv
33.408 411.287 33.696 411.863 33.48 411.647 cv
32.688 411.071 31.968 410.567 30.96 410.207 cv
30.8879 410.135 30.96 410.423 30.8879 410.423 cv
29.8079 409.559 28.3679 409.199 27 408.983 cv
26.7839 408.911 27.144 409.271 27 409.199 cv
26.4958 408.983 24.408 408.191 24.1199 408.551 cv
24.1199 408.623 23.2559 408.407 23.1121 408.407 cv
22.6079 408.407 22.104 408.335 21.6719 408.263 cv
21.5999 408.263 21.6719 408.479 21.6719 408.551 cv
20.8079 408.479 19.9438 408.407 19.0801 408.407 cv
19.0801 408.767 19.0081 408.695 18.5759 408.695 cv
18.2161 408.695 17.7839 408.695 17.4241 408.695 cv
17.7119 408.839 17.856 408.839 17.4241 408.911 cv
16.8479 408.911 16.272 408.983 15.624 409.055 cv
15.552 409.055 15.8398 409.343 15.7681 409.343 cv
14.9761 409.343 14.1841 409.559 13.3918 409.775 cv
13.104 409.847 13.824 409.991 13.5359 409.991 cv
13.104 410.063 11.7361 410.207 11.52 410.567 cv
11.304 410.999 11.0159 410.999 10.584 411.143 cv
10.2959 411.287 9.93604 411.431 9.64795 411.575 cv
9.35986 411.719 9.86401 411.935 9.64795 412.007 cv
9 412.223 8.42407 412.511 7.91992 413.015 cv
7.77588 413.159 8.28003 413.303 8.13599 413.375 cv
7.48804 413.807 6.98389 414.311 6.40796 414.815 cv
6.40796 414.887 6.83984 414.959 6.91187 414.959 cv
6.47998 415.463 6.04785 416.039 5.68799 416.543 cv
6.04785 416.615 6.11987 416.543 5.83203 416.903 cv
5.54395 417.263 5.25586 417.623 5.04004 417.983 cv
5.47192 417.983 li
5.18408 418.415 4.96802 418.919 4.67993 419.423 cv
4.82397 419.495 4.896 419.567 5.04004 419.639 cv
5.11206 419.711 4.82397 420.287 4.75195 420.431 cv
4.53589 420.935 5.25586 420.287 5.11206 420.647 cv
4.96802 420.935 4.896 421.223 4.75195 421.583 cv
4.67993 421.871 5.47192 421.655 5.3999 421.943 cv
5.25586 422.303 5.11206 422.663 5.04004 423.095 cv
5.04004 423.167 5.61597 423.023 5.54395 423.095 cv
5.47192 423.383 5.32788 424.607 5.54395 424.607 cv
5.90405 424.607 5.90405 424.607 5.83203 424.967 cv
5.68799 425.831 5.61597 428.279 6.552 430.223 cv
7.63208 433.895 10.9438 436.559 15.408 434.111 cv
15.552 434.039 16.7039 432.959 16.7039 432.959 cv
15.624 433.751 14.3999 434.327 13.248 434.543 cv
9.93604 435.119 8.13599 432.743 7.41602 430.007 cv
ef
145.728 403.295 mo
145.872 401.495 146.16 399.551 146.736 397.535 cv
147.312 397.679 li
146.952 399.191 146.664 400.703 146.52 402.143 cv
147.096 401.135 147.96 400.127 149.04 399.263 cv
149.04 399.191 148.968 399.047 148.968 398.975 cv
148.896 398.831 148.896 398.615 148.896 398.615 cv
149.04 398.687 li
149.04 398.687 148.968 398.543 148.968 398.471 cv
148.896 398.327 148.824 398.039 148.824 398.039 cv
149.04 398.183 li
149.04 398.183 149.04 398.039 148.968 397.967 cv
148.896 397.823 148.968 397.463 148.968 397.463 cv
149.112 397.679 li
149.112 397.679 149.112 397.607 149.112 397.391 cv
149.04 397.247 149.112 396.887 149.112 396.887 cv
149.256 396.959 li
149.256 396.959 149.256 396.815 149.256 396.599 cv
149.328 396.455 149.4 396.167 149.4 396.167 cv
149.544 396.311 li
149.544 396.311 149.544 396.167 149.544 395.951 cv
149.544 395.807 149.832 395.447 149.832 395.447 cv
149.904 395.591 li
149.904 395.591 149.904 395.303 150.048 395.087 cv
150.12 394.943 150.552 394.583 150.552 394.583 cv
150.624 394.727 li
150.624 394.727 150.624 394.511 150.696 394.439 cv
150.768 394.295 151.056 394.007 151.056 394.007 cv
151.128 394.007 li
151.128 394.007 151.2 393.935 151.272 393.791 cv
151.416 393.647 151.56 393.431 151.56 393.431 cv
151.632 393.575 li
152.136 392.927 li
152.28 393.071 li
152.568 392.639 li
152.568 392.783 li
152.568 392.783 152.64 392.783 152.712 392.639 cv
152.784 392.567 153 392.351 153 392.351 cv
153.144 392.495 li
153.144 392.495 153.216 392.279 153.288 392.207 cv
153.432 392.135 153.648 391.919 153.648 391.919 cv
153.72 392.063 li
153.72 392.063 153.72 391.991 153.864 391.847 cv
153.936 391.775 154.152 391.559 154.152 391.559 cv
154.296 391.631 li
154.296 391.631 154.44 391.559 154.512 391.487 cv
154.584 391.415 154.872 391.271 154.872 391.271 cv
154.944 391.415 li
154.944 391.415 155.016 391.343 155.16 391.199 cv
155.304 391.055 155.52 391.055 155.52 391.055 cv
155.664 391.199 li
155.664 391.199 155.808 391.127 155.952 391.055 cv
156.096 390.983 156.384 390.911 156.384 390.911 cv
156.384 391.127 li
157.104 390.983 li
157.104 391.127 li
157.68 390.911 li
157.68 391.127 li
158.256 390.983 li
158.328 391.199 li
158.76 391.127 li
158.688 391.343 li
159.192 391.199 li
159.264 391.559 li
159.264 391.559 159.408 391.487 159.48 391.487 cv
159.624 391.487 159.768 391.415 159.768 391.415 cv
159.768 391.703 li
159.768 391.703 159.84 391.631 159.984 391.631 cv
160.056 391.631 160.416 391.631 160.416 391.631 cv
160.488 391.847 li
160.704 391.775 li
160.704 391.919 li
160.92 391.847 li
160.992 392.063 li
160.992 392.063 160.992 392.063 161.208 392.063 cv
161.352 392.135 161.712 392.063 162.144 391.919 cv
162.36 391.775 162.648 391.775 162.864 391.775 cv
162.72 391.919 162.576 392.135 162.36 392.279 cv
161.928 392.567 161.784 392.855 161.712 392.999 cv
161.568 393.143 161.568 393.215 161.568 393.215 cv
161.784 393.287 li
161.568 393.503 li
161.64 393.575 li
161.496 393.719 li
161.64 393.863 li
161.64 393.863 161.496 394.151 161.424 394.295 cv
161.352 394.367 161.28 394.439 161.28 394.439 cv
161.496 394.511 li
161.496 394.511 161.352 394.655 161.28 394.727 cv
161.208 394.799 161.136 394.871 161.136 394.871 cv
161.352 395.087 li
160.992 395.447 li
161.208 395.519 li
160.92 395.807 li
161.064 396.023 li
160.632 396.383 li
160.776 396.527 li
160.344 396.887 li
160.416 397.031 li
159.912 397.463 li
160.128 397.607 li
160.128 397.607 159.912 397.823 159.768 397.895 cv
159.624 397.967 159.48 398.111 159.48 398.111 cv
159.552 398.255 li
159.552 398.255 159.408 398.399 159.192 398.471 cv
159.048 398.543 158.904 398.543 158.904 398.543 cv
158.976 398.759 li
158.976 398.759 158.688 398.831 158.616 398.903 cv
158.544 398.903 158.4 398.975 158.4 398.975 cv
158.328 399.191 li
158.328 399.191 158.112 399.191 157.968 399.263 cv
157.824 399.263 157.68 399.263 157.68 399.263 cv
157.824 399.407 li
157.824 399.407 157.464 399.479 157.392 399.479 cv
157.248 399.551 157.032 399.551 157.032 399.551 cv
157.104 399.695 li
157.104 399.695 156.816 399.767 156.672 399.767 cv
156.528 399.767 156.456 399.767 156.456 399.767 cv
156.6 399.911 li
156.096 399.911 li
156.096 400.055 li
155.376 400.199 li
155.376 400.343 li
155.376 400.343 155.088 400.343 154.944 400.343 cv
154.8 400.415 154.656 400.415 154.656 400.415 cv
154.656 400.487 li
154.656 400.487 154.224 400.559 154.08 400.487 cv
154.008 400.487 153.792 400.487 153.792 400.487 cv
153.864 400.631 li
153.864 400.631 153.36 400.703 153.072 400.703 cv
152.856 400.703 152.64 400.559 152.64 400.559 cv
152.712 400.703 li
152.712 400.703 152.28 400.703 152.136 400.631 cv
151.992 400.559 151.848 400.487 151.848 400.487 cv
151.92 400.703 li
151.92 400.703 151.632 400.631 151.416 400.487 cv
151.272 400.415 151.128 400.343 151.128 400.343 cv
151.128 400.487 li
151.128 400.487 150.768 400.343 150.624 400.271 cv
150.552 400.127 150.48 400.055 150.48 400.055 cv
150.552 400.343 li
150.552 400.343 150.192 400.199 150.12 400.055 cv
150.048 399.983 149.976 399.911 149.976 399.911 cv
149.976 400.127 li
149.976 400.127 149.76 399.911 149.688 399.839 cv
149.616 399.767 149.544 399.623 149.544 399.623 cv
149.544 399.767 li
149.544 399.767 149.328 399.695 149.256 399.479 cv
149.184 399.479 li
148.032 400.415 147.096 401.495 146.448 402.647 cv
146.448 402.863 146.376 403.079 146.376 403.295 cv
149.112 403.007 150.408 401.135 152.28 401.567 cv
155.592 402.359 158.184 404.663 158.184 411.431 cv
158.184 418.343 152.64 423.887 145.728 423.887 cv
138.816 423.887 133.272 418.343 133.272 411.431 cv
133.272 404.663 135.864 402.359 139.176 401.567 cv
141.192 401.063 142.56 403.295 145.728 403.295 cv
ef
94.2478 393.143 mo
94.6799 392.927 95.3279 392.567 95.9041 392.495 cv
96.9841 392.279 97.7039 391.847 98.0637 391.631 cv
98.3518 391.343 98.4241 391.271 98.4241 391.271 cv
98.136 390.839 li
98.7122 390.695 li
98.5681 390.407 li
99.1438 390.191 li
98.928 389.759 li
98.928 389.759 99.5759 389.255 99.7917 389.111 cv
100.008 389.039 100.224 388.967 100.224 388.967 cv
99.9358 388.463 li
99.9358 388.463 100.224 388.319 100.512 388.175 cv
100.8 388.103 101.088 387.959 101.088 387.959 cv
100.8 387.239 li
101.88 386.807 li
101.52 386.447 li
102.384 386.087 li
102.312 385.511 li
103.608 385.079 li
103.32 384.647 li
104.76 384.287 li
104.544 383.927 li
106.128 383.351 li
105.912 382.847 li
105.912 382.847 106.488 382.703 106.92 382.631 cv
107.28 382.559 107.712 382.559 107.712 382.559 cv
107.64 382.055 li
107.64 382.055 108.144 381.839 108.648 381.911 cv
109.08 381.911 109.368 382.055 109.368 382.055 cv
109.296 381.551 li
109.296 381.551 110.088 381.551 110.304 381.623 cv
110.52 381.623 110.88 381.695 110.88 381.695 cv
111.168 381.263 li
111.168 381.263 111.744 381.407 112.104 381.479 cv
112.464 381.551 112.68 381.695 112.68 381.695 cv
112.536 381.263 li
112.536 381.263 113.328 381.335 113.616 381.407 cv
113.976 381.479 114.408 381.695 114.408 381.695 cv
114.336 381.263 li
114.336 381.263 115.128 381.407 115.416 381.479 cv
115.632 381.623 115.848 381.623 115.848 381.623 cv
115.704 381.263 li
116.784 381.695 li
116.856 381.335 li
118.656 381.839 li
118.656 381.551 li
118.656 381.551 119.304 381.767 119.664 381.839 cv
120.096 381.911 120.312 382.127 120.312 382.127 cv
120.456 381.839 li
120.456 381.839 121.392 382.199 121.608 382.343 cv
121.896 382.487 122.256 382.775 122.256 382.775 cv
122.184 382.343 li
122.184 382.343 123.552 382.631 123.984 382.919 cv
124.488 383.135 124.776 383.639 124.776 383.639 cv
124.848 383.279 li
124.848 383.279 125.856 383.711 126.072 383.999 cv
126.288 384.359 126.504 384.575 126.504 384.575 cv
126.576 384.071 li
126.576 384.071 127.152 384.503 127.44 384.863 cv
127.728 385.223 127.944 385.583 127.944 385.583 cv
128.088 385.223 li
128.088 385.223 128.736 385.799 128.88 386.159 cv
129.096 386.519 129.168 386.735 129.168 386.735 cv
129.24 386.159 li
129.24 386.159 129.744 386.735 129.816 387.023 cv
129.888 387.383 129.96 387.599 129.96 387.599 cv
130.176 387.023 li
130.176 387.023 130.536 387.743 130.536 387.959 cv
130.608 388.247 130.68 388.607 130.68 388.607 cv
130.896 388.247 li
130.896 388.247 131.184 388.679 131.256 389.111 cv
131.256 389.183 131.256 389.255 131.328 389.327 cv
135.504 388.103 139.104 386.231 141.696 383.783 cv
141.984 384.215 li
139.32 386.663 135.72 388.607 131.544 389.831 cv
131.472 390.047 131.328 390.263 131.328 390.479 cv
131.4 390.911 131.184 391.415 131.184 391.415 cv
130.896 391.055 li
130.896 391.055 130.896 391.487 130.896 391.775 cv
130.896 391.991 130.752 392.783 130.752 392.783 cv
130.392 392.207 li
130.392 392.207 130.392 392.495 130.32 392.783 cv
130.32 393.143 129.96 393.791 129.96 393.791 cv
129.744 393.215 li
129.744 393.215 129.744 393.431 129.6 393.863 cv
129.456 394.223 129.024 394.799 129.024 394.799 cv
128.736 394.583 li
128.736 394.583 128.592 394.871 128.448 395.303 cv
128.232 395.663 127.728 396.239 127.728 396.239 cv
127.512 395.807 li
127.512 395.807 127.368 396.023 127.224 396.383 cv
127.008 396.743 126.144 397.319 126.144 397.319 cv
126 396.959 li
126 396.959 125.784 397.535 125.352 397.823 cv
124.92 398.183 123.696 398.687 123.696 398.687 cv
123.696 398.327 li
123.696 398.327 123.408 398.687 123.12 398.831 cv
122.904 399.047 122.04 399.479 122.04 399.479 cv
121.896 399.335 li
121.896 399.335 121.68 399.551 121.32 399.695 cv
120.888 399.839 120.384 400.199 120.384 400.199 cv
120.24 399.839 li
118.656 400.703 li
118.512 400.343 li
117.504 400.919 li
117.576 400.559 li
117.576 400.559 117.432 400.631 117.144 400.775 cv
116.928 400.919 116.136 401.207 116.136 401.207 cv
116.136 400.775 li
116.136 400.775 115.776 401.063 115.416 401.207 cv
115.128 401.279 114.408 401.567 114.408 401.567 cv
114.48 401.063 li
114.48 401.063 114.264 401.279 113.904 401.423 cv
113.544 401.567 113.04 401.783 113.04 401.783 cv
112.68 401.423 li
112.68 401.423 112.32 401.567 112.104 401.639 cv
111.888 401.711 111.168 401.855 111.168 401.855 cv
111.096 401.351 li
111.096 401.351 110.88 401.495 110.448 401.639 cv
109.944 401.711 109.44 401.639 109.44 401.639 cv
109.44 401.135 li
109.44 401.135 109.008 401.207 108.576 401.207 cv
108.216 401.135 107.568 401.135 107.568 401.135 cv
107.712 400.631 li
106.056 400.343 li
106.2 399.983 li
104.76 399.839 li
104.976 399.407 li
103.536 399.191 li
103.536 398.615 li
102.6 398.399 li
102.888 398.039 li
101.808 397.751 li
101.88 397.031 li
101.88 397.031 101.592 396.959 101.304 396.887 cv
101.016 396.815 100.656 396.743 100.656 396.743 cv
100.872 396.167 li
100.872 396.167 100.728 396.167 100.44 396.095 cv
100.224 396.023 99.5042 395.663 99.5042 395.663 cv
99.5759 395.159 li
98.9998 395.087 li
99.1438 394.799 li
98.4958 394.799 li
98.6399 394.367 li
98.6399 394.367 98.6399 394.223 98.28 394.079 cv
97.8479 393.863 97.1282 393.575 96.0481 393.575 cv
95.4001 393.575 94.7522 393.359 94.2478 393.143 cv
ef
44.5679 431.447 mo
45.144 429.863 46.728 427.127 47.8079 425.615 cv
48.312 425.903 li
46.8721 428.063 45.792 429.863 45.144 431.591 cv
47.592 432.095 49.176 430.871 50.76 431.807 cv
53.3521 433.463 54.936 436.199 52.9919 442.103 cv
50.9761 448.079 44.4958 451.247 38.52 449.303 cv
32.5439 447.287 29.376 440.807 31.3918 434.831 cv
33.3359 428.999 36.2878 427.703 39.384 427.991 cv
41.2559 428.207 41.76 430.439 44.4958 431.447 cv
44.5679 431.447 44.5679 431.447 44.5679 431.447 cv
ef
284.4 500.423 mo
284.472 500.351 284.472 500.351 284.544 500.351 cv
284.832 500.135 285.768 499.487 285.768 497.039 cv
285.768 495.887 285.624 494.663 285.408 493.439 cv
285.12 491.423 284.832 489.407 285.48 487.463 cv
285.408 487.391 li
284.76 489.407 285.048 491.423 285.336 493.439 cv
285.552 494.663 285.696 495.887 285.696 497.039 cv
285.696 498.911 285.12 499.775 284.76 500.063 cv
285.264 499.415 285.408 497.975 285.408 496.535 cv
285.408 494.591 284.4 492.575 284.112 488.687 cv
283.752 492.575 282.744 494.591 282.744 496.535 cv
282.744 497.975 282.96 499.415 283.392 500.063 cv
283.032 499.775 282.528 498.911 282.456 497.039 cv
282.456 495.887 282.672 494.663 282.816 493.439 cv
283.104 491.423 283.464 489.407 282.744 487.391 cv
282.672 487.463 li
283.392 489.407 283.032 491.423 282.744 493.439 cv
282.6 494.663 282.384 495.887 282.384 497.039 cv
282.456 499.487 283.32 500.135 283.608 500.351 cv
283.68 500.351 283.752 500.351 283.752 500.423 cv
283.752 501.791 li
283.752 501.719 283.68 501.575 283.68 501.431 cv
283.248 500.351 282.672 499.271 282.096 498.191 cv
281.088 496.391 280.08 494.663 280.008 492.575 cv
279.864 492.575 li
280.008 494.663 281.016 496.463 282.024 498.263 cv
282.6 499.271 283.176 500.351 283.608 501.503 cv
283.68 501.719 283.752 501.935 283.752 502.079 cv
283.752 503.375 li
283.68 502.727 283.464 501.863 283.104 501.071 cv
282.456 499.271 280.8 497.759 279.144 494.231 cv
280.152 497.975 280.008 500.207 280.656 502.007 cv
281.16 503.375 281.88 504.599 282.528 505.103 cv
282.096 504.959 281.304 504.383 280.584 502.655 cv
280.152 501.503 279.864 500.351 279.648 499.127 cv
279.216 497.111 278.784 495.167 277.416 493.511 cv
277.344 493.583 li
278.712 495.167 279.144 497.183 279.576 499.199 cv
279.792 500.351 280.08 501.503 280.512 502.655 cv
281.448 504.959 282.456 505.247 282.816 505.247 cv
282.96 505.319 283.176 505.319 283.32 505.247 cv
283.464 505.175 283.608 505.103 283.68 504.959 cv
283.68 504.887 283.752 504.815 283.752 504.815 cv
283.752 508.271 li
283.68 507.983 283.536 507.623 283.32 507.263 cv
282.672 506.183 281.952 505.247 281.16 504.311 cv
279.936 502.655 278.64 501.071 278.208 499.055 cv
278.136 499.055 li
278.568 501.143 279.864 502.727 281.16 504.311 cv
281.88 505.247 282.672 506.255 283.248 507.263 cv
283.464 507.767 283.68 508.127 283.752 508.487 cv
283.752 509.351 li
283.608 508.631 283.176 507.767 282.672 506.975 cv
281.736 505.247 279.864 504.023 277.632 500.855 cv
279.288 504.383 279.432 506.543 280.44 508.271 cv
281.16 509.495 282.024 510.647 282.744 511.007 cv
282.312 510.935 281.448 510.503 280.44 508.847 cv
279.864 507.839 279.36 506.759 278.928 505.607 cv
278.208 503.663 277.416 501.791 275.832 500.351 cv
275.76 500.423 li
277.344 501.863 278.136 503.735 278.856 505.607 cv
279.288 506.759 279.792 507.911 280.368 508.919 cv
281.664 511.007 282.744 511.151 283.104 511.151 cv
283.248 511.151 283.392 511.151 283.536 511.007 cv
283.68 511.007 283.752 510.935 283.752 510.791 cv
283.752 514.319 li
283.68 514.031 283.536 513.671 283.32 513.311 cv
282.672 512.231 281.952 511.295 281.16 510.359 cv
279.936 508.775 278.64 507.191 278.208 505.103 cv
278.136 505.103 li
278.568 507.191 279.864 508.775 281.16 510.431 cv
281.88 511.367 282.672 512.303 283.248 513.311 cv
283.464 513.815 283.68 514.175 283.752 514.535 cv
283.752 515.399 li
283.608 514.679 283.176 513.815 282.672 513.023 cv
281.736 511.295 279.864 510.143 277.632 506.903 cv
279.288 510.431 279.432 512.663 280.44 514.319 cv
281.16 515.543 282.024 516.695 282.744 517.055 cv
282.312 516.983 281.448 516.551 280.44 514.967 cv
279.864 513.887 279.36 512.807 278.928 511.655 cv
278.208 509.783 277.416 507.839 275.832 506.471 cv
275.76 506.543 li
277.344 507.911 278.136 509.783 278.856 511.727 cv
279.288 512.807 279.792 513.959 280.368 514.967 cv
281.664 517.055 282.744 517.199 283.104 517.199 cv
283.248 517.199 283.392 517.199 283.536 517.127 cv
283.68 517.055 283.752 516.983 283.752 516.839 cv
283.752 520.439 li
283.68 520.151 283.536 519.791 283.32 519.431 cv
282.672 518.351 281.952 517.415 281.16 516.479 cv
279.936 514.895 278.64 513.311 278.208 511.223 cv
278.136 511.223 li
278.568 513.311 279.864 514.895 281.16 516.551 cv
281.88 517.487 282.672 518.423 283.248 519.431 cv
283.464 519.935 283.68 520.295 283.752 520.655 cv
283.752 521.519 li
283.608 520.799 283.176 519.935 282.672 519.143 cv
281.736 517.415 279.864 516.191 277.632 513.023 cv
279.288 516.551 279.432 518.783 280.44 520.439 cv
281.16 521.663 282.024 522.815 282.744 523.175 cv
282.312 523.103 281.448 522.671 280.44 521.087 cv
279.864 520.007 279.36 518.927 278.928 517.775 cv
278.208 515.903 277.416 513.959 275.832 512.591 cv
275.76 512.591 li
277.344 514.031 278.136 515.903 278.856 517.847 cv
279.288 518.927 279.792 520.079 280.368 521.087 cv
281.664 523.175 282.744 523.319 283.104 523.319 cv
283.248 523.319 283.392 523.319 283.536 523.247 cv
283.68 523.175 283.752 523.103 283.752 522.959 cv
283.752 528.863 li
284.4 528.863 li
284.4 522.959 li
284.472 523.103 284.544 523.175 284.616 523.247 cv
284.76 523.319 284.904 523.319 285.12 523.319 cv
285.48 523.319 286.56 523.175 287.784 521.087 cv
288.432 520.079 288.864 518.927 289.296 517.847 cv
290.088 515.903 290.736 514.031 292.32 512.591 cv
292.248 512.591 li
290.664 513.959 290.016 515.903 289.224 517.775 cv
288.792 518.927 288.36 520.007 287.712 521.087 cv
286.776 522.671 285.912 523.103 285.408 523.175 cv
286.2 522.815 287.064 521.663 287.784 520.439 cv
288.72 518.783 288.864 516.551 290.448 513.023 cv
288.288 516.191 286.488 517.415 285.48 519.143 cv
284.976 519.935 284.616 520.799 284.4 521.519 cv
284.4 520.655 li
284.544 520.295 284.688 519.935 284.976 519.431 cv
285.552 518.423 286.272 517.487 287.064 516.551 cv
288.36 514.895 289.656 513.311 290.016 511.223 cv
289.944 511.223 li
289.584 513.311 288.288 514.895 286.992 516.479 cv
286.272 517.415 285.48 518.351 284.904 519.431 cv
284.688 519.791 284.544 520.151 284.4 520.439 cv
284.4 516.839 li
284.472 516.983 284.544 517.055 284.616 517.127 cv
284.76 517.199 284.904 517.199 285.12 517.199 cv
285.48 517.199 286.56 517.055 287.784 514.967 cv
288.432 513.959 288.864 512.807 289.296 511.727 cv
290.088 509.783 290.736 507.911 292.32 506.543 cv
292.248 506.471 li
290.664 507.839 290.016 509.783 289.224 511.655 cv
288.792 512.807 288.36 513.887 287.712 514.967 cv
286.776 516.551 285.912 516.983 285.408 517.055 cv
286.2 516.695 287.064 515.543 287.784 514.319 cv
288.72 512.663 288.864 510.431 290.448 506.903 cv
288.288 510.143 286.488 511.295 285.48 513.023 cv
284.976 513.815 284.616 514.679 284.4 515.399 cv
284.4 514.535 li
284.544 514.175 284.688 513.815 284.976 513.311 cv
285.552 512.303 286.272 511.367 287.064 510.431 cv
288.36 508.775 289.656 507.191 290.016 505.103 cv
289.944 505.103 li
289.584 507.191 288.288 508.775 286.992 510.359 cv
286.272 511.295 285.48 512.231 284.904 513.311 cv
284.688 513.671 284.544 514.031 284.4 514.319 cv
284.4 510.791 li
284.472 510.935 284.544 511.007 284.616 511.007 cv
284.76 511.151 284.904 511.151 285.12 511.151 cv
285.48 511.151 286.56 511.007 287.784 508.919 cv
288.432 507.911 288.864 506.759 289.296 505.607 cv
290.088 503.735 290.736 501.863 292.32 500.423 cv
292.248 500.351 li
290.664 501.791 290.016 503.663 289.224 505.607 cv
288.792 506.759 288.36 507.839 287.712 508.847 cv
286.776 510.503 285.912 510.935 285.408 511.007 cv
286.2 510.647 287.064 509.495 287.784 508.271 cv
288.72 506.543 288.864 504.383 290.448 500.855 cv
288.288 504.023 286.488 505.247 285.48 506.975 cv
284.976 507.767 284.616 508.631 284.4 509.351 cv
284.4 508.487 li
284.544 508.127 284.688 507.767 284.976 507.263 cv
285.552 506.255 286.272 505.247 287.064 504.311 cv
288.36 502.727 289.656 501.143 290.016 499.055 cv
289.944 499.055 li
289.584 501.071 288.288 502.655 286.992 504.311 cv
286.272 505.247 285.48 506.183 284.904 507.263 cv
284.688 507.623 284.544 507.983 284.4 508.271 cv
284.4 504.815 li
284.472 504.815 284.472 504.887 284.544 504.959 cv
284.616 505.103 284.688 505.175 284.904 505.247 cv
285.048 505.319 285.192 505.319 285.336 505.247 cv
285.696 505.247 286.776 504.959 287.64 502.655 cv
288.144 501.503 288.36 500.351 288.648 499.199 cv
289.08 497.183 289.512 495.167 290.736 493.583 cv
290.664 493.511 li
289.44 495.167 289.008 497.111 288.576 499.127 cv
288.288 500.351 288 501.503 287.568 502.655 cv
286.92 504.383 286.128 504.959 285.624 505.103 cv
286.344 504.599 286.992 503.375 287.496 502.007 cv
288.216 500.207 288 497.975 289.08 494.231 cv
287.352 497.759 285.768 499.271 285.048 501.071 cv
284.76 501.863 284.472 502.727 284.4 503.375 cv
284.4 502.079 li
284.472 501.935 284.544 501.719 284.616 501.503 cv
284.976 500.351 285.624 499.271 286.2 498.263 cv
287.208 496.463 288.216 494.663 288.288 492.575 cv
288.216 492.575 li
288.144 494.663 287.136 496.391 286.128 498.191 cv
285.552 499.271 284.904 500.351 284.544 501.431 cv
284.472 501.575 284.472 501.719 284.4 501.791 cv
284.4 500.423 li
ef
122.328 505.319 mo
120.312 504.815 118.224 504.383 116.136 504.095 cv
113.688 503.735 111.384 503.447 109.224 503.303 cv
108.288 503.303 107.424 503.375 106.488 503.447 cv
102.672 503.879 98.5681 504.815 94.6799 506.327 cv
105.624 508.919 112.752 505.823 122.328 505.319 cv
cp
284.112 528.791 mo
282.384 527.135 280.728 525.623 279.072 524.183 cv
278.208 523.463 277.272 522.743 276.336 522.095 cv
273.528 520.079 270.36 518.495 267.264 518.927 cv
265.32 519.287 263.592 520.295 262.44 522.167 cv
260.784 524.759 261.216 528.503 264.24 529.943 cv
265.68 530.519 267.912 530.303 268.416 528.575 cv
268.56 527.927 268.344 527.063 267.624 527.351 cv
266.688 527.711 265.896 527.567 265.464 526.559 cv
264.96 524.975 266.4 523.679 267.84 523.463 cv
270.288 523.247 272.016 525.335 272.16 527.639 cv
272.232 531.167 269.208 533.543 265.896 533.471 cv
261.576 533.255 258.696 529.583 258.768 525.407 cv
258.984 520.295 263.16 516.695 268.056 516.623 cv
264.672 514.535 261.144 512.735 257.472 511.079 cv
246.888 508.775 234.36 509.783 226.872 517.847 cv
221.904 523.463 221.4 533.111 229.68 535.775 cv
231.696 536.423 233.784 535.991 235.8 536.423 cv
230.328 541.535 223.416 539.231 220.68 531.959 cv
218.304 525.983 221.544 519.215 226.152 515.255 cv
232.704 509.783 241.776 507.767 250.632 508.271 cv
241.776 505.031 232.488 503.015 223.272 502.367 cv
214.704 502.079 206.208 502.079 199.296 507.767 cv
192.312 513.815 189.504 524.111 194.256 532.391 cv
196.632 536.423 199.944 537.863 204.192 539.303 cv
204.12 539.447 202.68 538.943 202.464 538.871 cv
195.552 536.999 191.448 532.607 190.368 525.263 cv
189.576 518.135 192.168 511.727 196.704 507.047 cv
206.856 496.607 221.4 498.407 234.432 500.855 cv
237.168 501.431 239.976 502.151 242.712 502.871 cv
233.208 498.047 223.2 496.175 213.696 496.967 cv
207.216 497.543 201.6 500.351 196.056 503.663 cv
187.56 509.639 180.936 517.703 177.912 527.927 cv
178.704 526.703 180.144 527.063 180.792 528.359 cv
182.088 530.807 181.8 534.839 185.112 535.703 cv
185.04 535.775 li
182.088 535.055 181.872 531.527 181.008 529.151 cv
180.72 528.359 180.144 527.135 179.064 527.279 cv
180.432 527.567 181.08 530.519 181.224 531.599 cv
181.584 533.327 182.016 534.911 183.024 536.351 cv
182.808 536.207 182.52 535.991 182.304 535.847 cv
180 534.119 177.552 533.039 177.48 529.727 cv
177.48 529.799 177.408 529.871 177.408 529.943 cv
176.616 533.687 181.512 535.415 182.664 538.583 cv
182.52 538.583 li
181.44 535.631 177.696 534.335 177.192 531.095 cv
176.904 532.535 176.76 533.975 176.688 535.487 cv
177.192 534.335 178.56 534.335 179.424 535.127 cv
181.8 537.215 182.16 541.247 186.048 541.607 cv
186.048 541.679 li
182.664 541.391 181.728 538.223 180 535.919 cv
179.496 535.271 178.632 534.479 177.696 534.695 cv
179.136 534.767 180.504 537.359 181.008 538.367 cv
181.8 539.951 182.664 541.391 184.032 542.543 cv
181.224 541.175 177.552 540.671 176.616 537.287 cv
176.616 537.359 176.616 537.359 176.616 537.431 cv
176.688 541.175 182.232 541.967 184.104 544.559 cv
184.032 544.631 li
182.16 541.967 177.984 541.607 176.688 538.511 cv
176.76 539.879 176.904 541.247 177.12 542.615 cv
177.408 541.391 178.992 541.391 179.928 541.895 cv
183.024 543.479 184.248 546.935 188.424 546.791 cv
188.424 546.863 li
184.968 547.007 183.312 544.631 180.936 542.687 cv
180.216 542.111 179.064 541.319 178.056 541.751 cv
179.712 541.607 181.8 543.983 182.736 545.063 cv
183.816 546.215 184.968 547.151 186.408 547.871 cv
183.384 547.151 179.28 547.367 177.48 544.271 cv
177.552 544.343 177.552 544.487 177.552 544.559 cv
178.344 547.583 183.312 547.727 185.616 548.879 cv
185.76 548.951 187.056 549.527 186.912 549.815 cv
184.248 547.655 179.928 548.159 177.84 545.423 cv
178.2 546.719 178.632 547.943 179.136 549.095 cv
179.28 547.295 181.152 547.511 182.448 548.303 cv
184.896 549.815 186.552 552.119 189.432 552.839 cv
189.792 552.911 191.304 552.983 191.232 553.127 cv
187.704 553.055 185.76 550.823 183.096 548.879 cv
182.304 548.303 181.08 547.439 180.072 547.871 cv
181.8 547.727 184.104 550.103 185.184 551.183 cv
186.408 552.407 187.704 553.343 189.288 553.991 cv
185.976 553.271 182.016 553.415 179.784 550.463 cv
180.072 550.895 180.288 551.327 180.504 551.759 cv
182.664 553.703 185.904 553.703 188.496 554.927 cv
188.64 554.999 190.08 555.647 189.936 555.863 cv
187.128 553.847 183.24 554.207 180.648 551.975 cv
180.936 552.407 181.224 552.839 181.512 553.271 cv
183.096 552.695 184.68 554.783 185.616 555.863 cv
187.2 557.735 188.64 559.463 190.872 560.615 cv
191.088 560.759 192.6 561.263 192.528 561.407 cv
190.224 560.687 188.496 559.319 186.912 557.519 cv
185.76 556.295 183.816 553.199 181.944 553.271 cv
183.816 553.775 185.688 556.655 186.696 558.023 cv
187.776 559.463 189.072 560.615 190.512 561.767 cv
190.224 561.551 189.864 561.407 189.504 561.263 cv
186.552 559.967 181.368 558.311 181.008 554.351 cv
180.936 554.639 181.008 554.927 181.008 555.215 cv
181.872 559.175 186.912 560.327 189.72 562.415 cv
189.864 562.559 191.16 563.639 190.872 563.783 cv
189.432 561.767 186.624 560.903 184.608 559.607 cv
182.808 558.455 180.216 556.151 181.008 553.775 cv
180.72 553.343 180.432 552.911 180.216 552.479 cv
181.08 555.575 181.296 559.031 183.312 561.767 cv
183.528 561.983 184.68 563.063 184.536 563.207 cv
181.296 560.543 181.152 555.935 180.072 552.191 cv
179.784 551.759 179.568 551.399 179.352 550.967 cv
180.72 554.783 180.72 558.887 182.52 562.559 cv
180.288 559.391 176.04 554.495 177.48 550.103 cv
177.336 550.391 177.264 550.679 177.192 550.967 cv
176.112 555.935 181.08 559.967 182.016 564.431 cv
181.8 564.431 181.872 564.071 181.8 563.855 cv
180.504 559.679 176.616 556.223 177.048 551.543 cv
177.12 550.751 177.552 548.951 178.632 549.527 cv
178.128 548.375 177.624 547.151 177.264 545.855 cv
177.264 549.671 176.184 553.631 177.264 557.375 cv
177.336 557.663 178.056 559.175 177.984 559.247 cv
175.608 555.071 177.264 550.103 177.192 545.639 cv
177.12 545.279 177.048 544.991 176.976 544.703 cv
177.048 549.095 175.824 553.415 176.328 557.879 cv
175.176 553.487 173.376 548.375 175.32 543.983 cv
175.392 543.767 175.536 543.623 175.608 543.407 cv
175.32 543.695 175.104 544.055 174.96 544.415 cv
172.8 549.239 175.68 554.567 175.32 559.463 cv
175.176 559.391 175.248 557.807 175.248 557.519 cv
174.888 553.343 173.16 548.807 174.816 544.703 cv
174.888 544.415 175.896 542.399 176.616 543.047 cv
176.328 541.679 176.184 540.239 176.112 538.871 cv
175.248 542.831 173.448 546.719 173.808 550.895 cv
173.808 551.255 174.168 552.983 174.096 553.055 cv
172.656 548.159 175.176 543.335 176.112 538.583 cv
176.04 538.295 176.04 537.935 176.04 537.575 cv
175.176 542.255 173.088 546.503 172.8 551.255 cv
172.584 546.791 171.72 539.807 175.104 536.063 cv
174.888 536.207 174.672 536.495 174.456 536.711 cv
171.432 540.743 172.44 546.791 171.864 551.471 cv
171.864 551.615 171.792 552.911 171.576 552.767 cv
172.728 547.655 171.072 541.391 174.312 536.783 cv
174.456 536.639 175.68 535.127 176.112 535.775 cv
176.184 534.263 176.328 532.823 176.544 531.311 cv
174.888 535.343 172.368 539.087 171.792 543.479 cv
171.72 543.839 171.792 545.711 171.648 545.783 cv
171.432 542.903 172.44 540.167 173.592 537.575 cv
174.672 535.055 176.256 532.679 176.832 530.015 cv
174.96 534.695 172.08 538.799 170.856 543.695 cv
171.504 538.871 172.224 531.671 176.328 528.287 cv
176.04 528.431 175.752 528.647 175.536 528.863 cv
171.72 532.607 171.36 538.943 169.92 543.767 cv
169.848 543.911 169.56 545.279 169.416 545.135 cv
170.712 541.751 171.072 538.007 172.224 534.551 cv
173.016 532.463 174.024 530.159 175.68 528.647 cv
175.824 528.503 177.048 527.495 177.264 528.143 cv
179.856 519.143 185.256 511.727 192.24 506.039 cv
189.144 507.911 188.136 508.631 185.112 510.287 cv
181.152 512.519 176.976 514.391 172.296 515.327 cv
170.496 515.759 168.624 516.047 166.824 516.191 cv
158.112 522.527 157.392 527.495 162.792 537.503 cv
165.096 541.679 164.88 548.159 162.144 551.687 cv
159.336 555.287 155.736 557.231 155.736 557.231 cv
155.736 557.231 157.824 555.575 158.4 554.999 cv
165.024 548.375 163.656 542.327 158.688 535.775 cv
153.936 529.295 156.096 520.367 162.936 516.479 cv
162.072 516.551 161.208 516.551 160.344 516.479 cv
159.336 516.479 158.4 516.407 157.464 516.335 cv
147.456 516.623 137.88 519.647 129.96 526.127 cv
131.256 525.623 132.192 526.703 132.048 528.071 cv
131.76 530.879 129.312 534.047 131.472 536.639 cv
131.4 536.711 li
129.384 534.407 131.184 531.383 131.832 528.863 cv
131.976 528.071 132.192 526.775 131.256 526.271 cv
132.192 527.279 131.04 530.087 130.608 531.023 cv
129.888 532.679 129.384 534.191 129.384 535.991 cv
129.312 535.703 129.24 535.487 129.096 535.199 cv
128.232 532.463 126.72 530.159 128.52 527.423 cv
128.448 527.423 128.448 527.495 128.376 527.567 cv
125.64 530.159 128.664 534.335 127.872 537.575 cv
127.728 537.575 li
128.52 534.479 126.144 531.383 127.584 528.359 cv
126.504 529.439 125.568 530.519 124.704 531.671 cv
125.712 531.095 126.792 531.815 127.08 532.967 cv
127.944 536.063 126 539.591 128.952 542.039 cv
128.88 542.111 li
126.288 539.951 127.368 536.783 127.152 533.975 cv
127.08 533.111 126.864 531.959 125.928 531.671 cv
127.08 532.535 126.792 535.415 126.648 536.567 cv
126.36 538.295 126.288 539.951 126.792 541.607 cv
125.208 539.015 122.472 536.495 123.624 533.183 cv
123.624 533.183 123.552 533.255 123.552 533.327 cv
121.464 536.423 125.64 540.167 125.712 543.407 cv
125.568 543.407 li
125.496 540.167 122.328 537.503 122.976 534.191 cv
122.256 535.415 121.608 536.639 121.032 537.863 cv
121.968 536.999 123.264 537.863 123.768 538.799 cv
125.424 541.895 124.488 545.423 128.016 547.655 cv
127.944 547.727 li
125.064 545.927 124.992 542.975 124.128 540.095 cv
123.84 539.159 123.336 537.863 122.256 537.647 cv
123.768 538.439 124.128 541.607 124.272 543.047 cv
124.488 544.631 124.92 546.071 125.712 547.439 cv
123.624 545.135 120.096 542.975 120.384 539.447 cv
120.384 539.519 120.312 539.591 120.312 539.663 cv
119.232 542.615 123.264 545.567 124.488 547.799 cv
124.632 547.943 125.352 549.167 125.064 549.239 cv
124.056 545.999 120.24 544.055 120.024 540.599 cv
119.592 541.823 119.304 543.047 119.016 544.343 cv
120.168 542.903 121.608 544.127 122.184 545.567 cv
123.408 548.159 123.48 550.967 125.496 553.271 cv
125.712 553.487 126.936 554.351 126.792 554.495 cv
123.912 552.407 123.552 549.455 122.472 546.431 cv
122.112 545.495 121.608 544.127 120.528 543.839 cv
122.04 544.775 122.544 547.943 122.832 549.455 cv
123.192 551.111 123.768 552.623 124.632 554.135 cv
122.4 551.615 118.944 549.527 118.8 545.855 cv
118.8 546.359 118.728 546.791 118.728 547.295 cv
119.376 550.175 122.04 551.975 123.48 554.423 cv
123.624 554.567 124.416 555.935 124.128 556.007 cv
122.976 552.767 119.592 550.895 118.656 547.583 cv
118.656 548.087 118.656 548.591 118.656 549.095 cv
120.312 549.599 120.384 552.191 120.6 553.559 cv
120.816 556.007 121.032 558.311 122.256 560.471 cv
122.4 560.687 123.336 561.911 123.192 562.055 cv
121.752 560.111 121.032 558.023 120.744 555.647 cv
120.528 553.991 120.6 550.319 119.016 549.383 cv
120.24 550.823 120.168 554.279 120.24 555.935 cv
120.384 557.807 120.744 559.463 121.32 561.191 cv
121.176 560.903 120.96 560.543 120.816 560.255 cv
119.088 557.519 115.704 553.199 117.576 549.743 cv
117.432 549.959 117.288 550.175 117.144 550.463 cv
115.632 554.207 119.16 558.023 120.24 561.335 cv
120.312 561.551 120.816 563.063 120.456 563.135 cv
120.384 560.615 118.584 558.383 117.648 556.079 cv
116.856 554.135 115.992 550.751 118.008 549.239 cv
118.008 548.735 118.008 548.231 118.008 547.727 cv
117 550.823 115.272 553.775 115.344 557.159 cv
115.344 557.447 115.704 559.031 115.56 559.031 cv
114.408 554.999 116.856 551.111 118.008 547.439 cv
118.08 546.935 118.08 546.431 118.152 545.999 cv
117.144 549.959 114.84 553.343 114.264 557.447 cv
114.192 553.559 113.472 547.079 117.072 544.271 cv
116.856 544.415 116.568 544.559 116.352 544.775 cv
112.68 548.303 114.48 554.423 112.824 558.671 cv
112.608 558.527 112.896 558.239 112.968 558.023 cv
114.192 553.847 112.896 548.879 115.92 545.207 cv
116.424 544.559 117.792 543.335 118.368 544.487 cv
118.584 543.191 118.944 541.895 119.304 540.599 cv
117.144 543.767 114.048 546.431 112.824 550.103 cv
112.752 550.463 112.464 552.119 112.32 552.119 cv
112.752 547.295 116.928 544.127 119.376 540.383 cv
119.52 540.095 119.592 539.807 119.736 539.447 cv
117.288 543.191 113.832 545.999 111.816 550.031 cv
113.256 545.783 114.624 540.527 118.728 538.007 cv
118.944 537.863 119.16 537.791 119.304 537.647 cv
118.944 537.719 118.584 537.935 118.224 538.151 cv
113.688 540.887 113.112 546.935 110.088 550.751 cv
109.944 550.607 110.952 549.383 111.096 549.095 cv
113.112 545.423 114.264 540.743 117.936 538.223 cv
118.152 538.079 120.168 536.999 120.384 537.863 cv
120.888 536.639 121.536 535.343 122.256 534.191 cv
119.304 536.999 115.632 539.231 113.616 542.831 cv
113.4 543.119 112.752 544.775 112.608 544.775 cv
114.192 539.951 119.016 537.359 122.4 533.975 cv
122.616 533.687 122.76 533.399 122.976 533.111 cv
119.664 536.423 115.488 538.799 112.608 542.615 cv
114.912 538.727 118.152 532.463 123.048 531.311 cv
122.76 531.311 122.4 531.383 122.112 531.455 cv
117.36 533.111 114.84 538.655 111.744 542.183 cv
111.6 542.327 110.808 543.407 110.736 543.119 cv
114.552 539.519 116.712 533.471 121.968 531.455 cv
122.184 531.383 124.056 530.807 123.984 531.599 cv
124.92 530.447 125.856 529.295 126.936 528.215 cv
123.264 530.591 119.088 532.247 116.136 535.559 cv
115.92 535.847 114.84 537.431 114.696 537.359 cv
116.208 534.911 118.512 533.183 120.888 531.671 cv
123.192 530.231 125.928 529.151 127.872 527.279 cv
123.696 530.015 119.016 531.887 115.2 535.199 cv
118.44 531.599 123.12 526.055 128.448 525.551 cv
128.088 525.479 127.8 525.551 127.44 525.623 cv
122.184 526.559 118.368 531.599 114.408 534.767 cv
114.264 534.839 113.256 535.847 113.256 535.559 cv
116.208 533.471 118.584 530.663 121.536 528.503 cv
123.336 527.135 125.496 525.839 127.728 525.479 cv
127.872 525.479 129.528 525.335 129.312 525.983 cv
136.728 519.791 145.728 516.695 155.088 515.975 cv
153.144 515.687 151.2 515.183 149.256 514.607 cv
142.848 512.807 136.944 510.215 130.896 508.055 cv
128.736 507.551 126.504 507.335 124.272 507.191 cv
114.048 506.687 103.968 509.063 93.8879 506.687 cv
93.7439 506.687 93.5999 506.759 93.4558 506.831 cv
91.8718 508.055 90.3601 509.207 88.9202 510.287 cv
85.824 512.447 82.8 515.111 82.2239 518.495 cv
81.9358 520.439 82.3679 522.455 83.7361 524.111 cv
85.7522 526.487 89.4241 527.207 91.7278 524.831 cv
92.7361 523.679 93.24 521.447 91.7278 520.439 cv
91.2239 520.079 90.2878 520.007 90.3601 520.799 cv
90.3601 521.807 89.928 522.527 88.9202 522.599 cv
87.2639 522.599 86.4719 520.871 86.76 519.359 cv
87.3362 516.983 89.7839 515.975 92.0159 516.551 cv
95.4001 517.631 96.696 521.231 95.616 524.399 cv
94.032 528.359 89.6399 529.943 85.7522 528.647 cv
80.7122 526.703 78.6238 521.159 80.4958 516.335 cv
80.6399 515.975 80.7839 515.615 80.928 515.327 cv
78.6238 517.847 76.824 520.799 75.8162 524.255 cv
73.8 531.455 77.6877 540.311 86.2561 539.015 cv
88.344 538.727 89.9998 537.431 92.0159 536.927 cv
89.3518 543.911 82.1521 544.919 76.4641 539.663 cv
71.7122 535.271 71.6399 527.783 73.9441 522.167 cv
75.384 518.999 77.4001 516.191 79.9202 513.671 cv
79.2 513.887 78.4797 514.031 77.76 514.247 cv
73.3679 515.399 68.9041 516.119 64.3679 516.263 cv
61.5601 516.335 59.9041 516.263 56.8799 516.263 cv
55.728 516.263 54.5039 516.263 53.28 516.263 cv
49.752 516.263 46.8 515.831 43.416 515.255 cv
35.5679 513.959 27.3599 514.247 19.8721 516.335 cv
15.2639 517.559 10.8 519.215 8.20801 523.463 cv
5.61597 527.927 5.97607 533.831 9.93604 537.431 cv
11.9519 539.087 13.968 539.231 16.416 539.231 cv
16.416 539.303 15.624 539.303 15.48 539.375 cv
11.448 539.591 8.49585 538.007 6.62402 534.335 cv
4.896 530.663 5.11206 526.847 6.69604 523.535 cv
10.2239 516.191 18.2161 514.607 25.488 513.527 cv
31.6079 512.807 37.9438 512.735 44.064 513.671 cv
46.2239 513.959 48.312 514.247 50.3999 514.535 cv
47.52 513.671 44.6399 512.519 41.9041 511.007 cv
42.2639 511.655 40.6799 511.799 40.4639 511.799 cv
38.2319 511.943 35.7839 511.007 33.8398 510.071 cv
30.5281 508.487 27.6479 506.111 24.3359 504.671 cv
24.3359 504.455 25.488 505.175 25.6321 505.247 cv
30.0959 507.623 34.8479 511.799 40.176 511.727 cv
40.5359 511.727 40.824 511.727 41.1121 511.655 cv
35.856 512.159 30.24 507.551 26.3521 504.671 cv
30.6719 507.263 35.6399 508.127 40.248 510.071 cv
38.0159 508.559 35.136 507.983 32.616 507.047 cv
29.9519 506.039 27.3599 504.815 25.416 502.655 cv
25.5601 502.583 26.856 503.951 27.144 504.167 cv
30.6719 506.831 35.136 507.695 39.168 509.279 cv
37.9438 508.415 36.72 507.479 35.6399 506.471 cv
35.856 507.263 33.9119 507.047 33.696 507.047 cv
28.1519 506.111 24.8398 500.567 20.376 497.759 cv
20.448 497.471 21.4561 498.335 21.5999 498.479 cv
25.272 501.359 28.8721 506.327 33.8398 506.975 cv
34.1279 507.047 34.488 507.047 34.7759 507.047 cv
29.7361 506.759 25.344 501.287 22.3201 497.903 cv
25.9199 501.071 30.4561 502.583 34.344 505.247 cv
34.1279 505.031 33.8398 504.743 33.624 504.527 cv
29.6641 501.863 24.408 500.207 21.96 495.743 cv
22.104 495.743 23.04 497.255 23.2559 497.471 cv
25.9919 500.639 30.0239 502.151 33.48 504.311 cv
32.5439 503.303 31.6799 502.223 30.8879 501.071 cv
30.8159 502.007 28.656 501.287 28.4399 501.143 cv
24.3359 499.415 22.3201 495.023 19.656 491.855 cv
19.4399 491.567 18.2161 490.559 18.2878 490.343 cv
22.032 493.583 23.76 499.415 28.728 501.215 cv
29.0879 501.359 29.52 501.431 29.8799 501.431 cv
29.6641 501.431 29.52 501.359 29.304 501.287 cv
24.7681 499.559 22.3918 494.663 20.1599 490.775 cv
22.896 494.303 26.856 496.391 29.9519 499.631 cv
29.7361 499.343 29.592 499.055 29.448 498.767 cv
26.28 495.599 21.5999 493.223 20.304 488.615 cv
20.448 488.615 20.9519 490.199 21.168 490.487 cv
23.04 493.871 26.5679 495.887 29.304 498.551 cv
28.728 497.399 28.1519 496.247 27.6479 494.951 cv
27.2878 496.247 25.7039 495.239 25.1279 494.735 cv
21.4561 491.711 21.8159 486.527 19.728 482.711 cv
19.656 482.495 19.2959 482.279 19.512 482.063 cv
21.96 485.951 21.384 492.287 25.6321 495.023 cv
25.9199 495.167 26.136 495.311 26.4241 495.383 cv
22.3918 493.367 21.8159 486.887 21.168 483.071 cv
22.5359 486.959 25.416 489.839 27.144 493.511 cv
27 493.079 26.856 492.575 26.7839 492.143 cv
24.9119 488.687 21.7439 485.375 22.176 481.199 cv
22.3201 481.199 22.248 482.783 22.248 483.071 cv
22.824 486.383 25.0559 489.047 26.7119 491.855 cv
26.5679 491.351 26.4241 490.847 26.3521 490.343 cv
24.1199 489.263 24.2639 485.807 24.696 483.719 cv
25.2 481.271 26.5679 478.751 26.136 476.231 cv
26.4958 476.231 26.28 477.815 26.28 478.103 cv
25.8479 481.559 23.1121 485.879 25.344 489.335 cv
25.488 489.551 25.7039 489.767 25.9199 489.983 cv
23.3279 486.887 25.8479 482.063 27 479.039 cv
27.144 478.679 27.2878 478.319 27.3599 477.959 cv
27.144 479.759 27.072 481.487 27.3599 483.287 cv
27.5759 485.015 28.2959 488.399 27.3599 490.055 cv
28.728 488.759 27.936 485.159 27.792 483.503 cv
27.6479 481.127 27.936 478.967 29.0159 476.807 cv
29.1599 476.879 28.512 478.247 28.3679 478.535 cv
27.6479 480.911 27.864 483.215 28.0801 485.591 cv
28.2239 486.959 28.584 489.551 27.072 490.343 cv
27.144 490.847 27.2161 491.351 27.3599 491.855 cv
27.5759 488.471 30.5999 485.951 31.104 482.567 cv
31.3918 482.567 30.8879 484.007 30.7439 484.223 cv
29.8079 486.887 27.5039 489.191 27.4319 492.143 cv
27.5759 492.575 27.72 493.079 27.864 493.511 cv
27.2878 489.911 30.24 487.175 31.968 484.295 cv
31.3918 485.951 31.104 487.535 31.104 489.191 cv
31.104 490.703 31.176 494.015 29.8799 495.167 cv
30.8879 494.735 31.176 493.295 31.3201 492.287 cv
31.752 489.047 31.5359 486.095 33.9839 483.503 cv
34.1279 483.647 33.1199 484.727 32.9761 485.015 cv
31.3918 487.607 31.896 490.415 31.248 493.223 cv
30.8879 494.663 29.7361 496.175 28.3679 494.951 cv
28.8 496.175 29.376 497.327 30.0239 498.479 cv
29.592 495.023 32.9761 492.359 33.2639 488.975 cv
33.624 488.975 33.1199 490.343 33.0479 490.559 cv
32.2559 493.007 28.8721 496.607 30.4561 499.271 cv
30.5281 499.343 30.5281 499.415 30.5999 499.487 cv
29.6641 496.103 32.688 493.295 34.344 490.631 cv
33.7681 492.143 33.624 493.655 33.7681 495.239 cv
33.8398 496.679 34.1279 499.847 32.832 500.927 cv
33.8398 500.495 34.0559 499.127 34.1279 498.191 cv
34.488 495.167 33.9839 492.287 36.4319 489.911 cv
36.5039 489.983 li
33.48 492.863 35.064 496.175 33.9839 499.487 cv
33.696 500.495 32.616 501.575 31.5359 500.927 cv
32.3279 502.079 33.1919 503.159 34.1279 504.167 cv
32.832 500.999 35.4958 497.831 34.9919 494.663 cv
35.064 494.663 li
35.5679 497.831 32.2559 502.295 34.8479 504.959 cv
34.9199 504.959 34.9199 505.031 34.9919 505.031 cv
33.1919 502.007 35.4241 499.055 36.4319 496.175 cv
36.2878 497.903 36.6479 499.487 37.2959 501.143 cv
37.656 502.295 38.52 505.031 37.584 506.111 cv
38.376 505.607 38.376 504.455 38.304 503.591 cv
37.9438 500.783 36.2878 497.903 38.448 495.311 cv
38.52 495.311 li
36.072 498.335 38.6641 501.431 38.448 504.599 cv
38.376 505.751 37.4399 506.687 36.2878 506.327 cv
37.3679 507.263 38.592 508.199 39.7439 509.063 cv
37.8 506.327 39.5281 502.799 38.1599 499.919 cv
38.304 499.919 li
39.6719 502.943 37.512 507.623 40.752 509.639 cv
40.752 509.711 40.824 509.711 40.896 509.783 cv
38.592 507.407 39.5999 504.887 39.96 502.007 cv
40.032 501.719 40.104 501.431 40.104 501.143 cv
40.3918 502.943 41.2559 504.383 42.2639 505.823 cv
42.8398 506.687 44.5679 509.207 43.7759 510.359 cv
44.6399 509.711 44.208 508.487 43.8479 507.695 cv
42.7681 505.391 40.3918 502.727 41.9761 500.135 cv
42.0479 500.135 li
40.3918 503.087 43.416 505.751 44.208 508.415 cv
44.6399 509.783 43.9199 511.007 42.552 510.719 cv
47.0879 513.239 51.9119 514.679 56.8799 515.399 cv
59.3279 515.687 61.7759 515.831 64.2959 515.687 cv
68.9041 515.471 73.512 514.607 77.8318 513.023 cv
80.4241 512.015 82.8718 510.719 85.176 509.207 cv
85.176 509.279 li
87.0481 507.983 89.0637 506.831 91.1521 505.895 cv
88.1282 504.887 85.176 503.591 82.3679 501.935 cv
82.656 502.583 81.072 502.655 80.928 502.655 cv
78.6238 502.655 76.3201 501.719 74.304 500.639 cv
71.0637 498.983 68.3279 496.463 65.0159 494.951 cv
65.0159 494.663 66.1677 495.455 66.384 495.527 cv
70.7039 498.047 75.3118 502.439 80.6399 502.583 cv
80.928 502.583 81.2878 502.583 81.5759 502.511 cv
76.2478 502.799 70.8479 498.047 67.032 494.951 cv
71.28 497.687 76.2478 498.767 80.7839 500.855 cv
78.552 499.343 75.7439 498.623 73.2239 497.615 cv
70.6321 496.463 68.0398 495.095 66.24 492.863 cv
66.3118 492.863 67.6082 494.231 67.8958 494.447 cv
71.28 497.327 75.7439 498.335 79.7039 500.063 cv
78.4797 499.199 77.3279 498.191 76.3201 497.183 cv
76.4641 497.975 74.5198 497.687 74.304 497.615 cv
68.8318 496.463 65.7361 490.775 61.416 487.823 cv
61.488 487.535 62.4241 488.471 62.5679 488.615 cv
66.0959 491.567 69.552 496.679 74.448 497.615 cv
74.8079 497.615 75.0959 497.687 75.384 497.615 cv
70.344 497.183 66.24 491.567 63.3599 488.039 cv
66.8162 491.351 71.2078 493.079 75.0242 495.887 cv
74.8079 495.599 74.592 495.383 74.3757 495.095 cv
70.488 492.287 65.304 490.487 63.072 485.951 cv
63.144 485.879 64.0801 487.463 64.2959 487.679 cv
66.8879 490.919 70.8479 492.575 74.1599 494.879 cv
73.2961 493.799 72.5042 492.719 71.7122 491.567 cv
71.6399 492.503 69.552 491.639 69.2639 491.567 cv
65.304 489.695 63.4319 485.159 60.8398 481.919 cv
60.624 481.631 59.4719 480.551 59.616 480.335 cv
63.2161 483.719 64.656 489.623 69.552 491.639 cv
69.9119 491.783 70.344 491.855 70.7761 491.927 cv
70.5598 491.855 70.344 491.783 70.1282 491.711 cv
65.6638 489.767 63.5039 484.871 61.416 480.839 cv
64.0081 484.511 67.8958 486.743 70.8479 490.055 cv
70.7039 489.767 70.5598 489.479 70.4158 489.191 cv
67.3918 485.879 62.7839 483.359 61.6321 478.679 cv
61.7759 478.679 62.28 480.263 62.4241 480.623 cv
64.2239 484.079 67.6799 486.239 70.2717 488.975 cv
69.696 487.823 69.1921 486.599 68.76 485.375 cv
68.4001 486.599 66.8162 485.519 66.24 485.015 cv
62.7119 481.847 63.2161 476.663 61.272 472.775 cv
61.2 472.559 60.9119 472.343 61.0559 472.127 cv
63.4319 476.087 62.5679 482.423 66.7439 485.303 cv
66.9602 485.447 67.2478 485.591 67.5359 485.735 cv
63.5039 483.503 63.2878 477.023 62.7119 473.135 cv
63.936 477.167 66.6721 480.119 68.3279 483.863 cv
68.1838 483.431 68.0398 482.927 67.968 482.495 cv
66.24 478.967 63.2161 475.511 63.792 471.335 cv
63.936 471.407 63.792 472.919 63.864 473.279 cv
64.2239 476.591 66.384 479.255 67.8958 482.207 cv
67.824 481.703 67.6799 481.199 67.6082 480.623 cv
65.448 479.471 65.7361 476.015 66.24 473.999 cv
66.8162 471.551 68.3279 469.103 67.968 466.583 cv
68.2561 466.583 68.0398 468.167 68.0398 468.383 cv
67.4641 471.839 64.584 476.087 66.6721 479.615 cv
66.8162 479.831 66.9602 480.047 67.176 480.263 cv
64.728 477.095 67.4641 472.343 68.76 469.391 cv
68.8318 469.031 68.9758 468.671 69.1199 468.311 cv
68.8318 470.111 68.6877 471.839 68.9041 473.711 cv
69.0481 475.367 69.696 478.751 68.6877 480.407 cv
70.0559 479.183 69.408 475.583 69.3362 473.927 cv
69.2639 471.551 69.696 469.319 70.8479 467.231 cv
70.9919 467.303 70.2 468.671 70.1282 468.959 cv
69.2639 471.263 69.408 473.567 69.552 475.943 cv
69.6238 477.383 69.8401 479.975 68.3279 480.695 cv
68.4001 481.199 68.4719 481.703 68.616 482.207 cv
68.9758 478.823 72.072 476.447 72.72 473.063 cv
73.0081 473.063 72.3601 474.503 72.2878 474.719 cv
71.2078 477.311 68.8318 479.543 68.616 482.495 cv
68.76 482.927 68.8318 483.431 68.9758 483.863 cv
68.5442 480.263 71.6399 477.671 73.4402 474.863 cv
72.7917 476.447 72.5042 478.031 72.4319 479.687 cv
72.3601 481.199 72.2878 484.511 70.9919 485.591 cv
71.9998 485.159 72.2878 483.791 72.5042 482.783 cv
73.0798 479.615 73.0081 476.591 75.5281 474.143 cv
75.6721 474.215 74.592 475.295 74.448 475.583 cv
72.7917 478.103 73.1521 480.911 72.3601 483.719 cv
71.9998 485.159 70.7761 486.599 69.408 485.303 cv
69.8401 486.599 70.344 487.751 70.9919 488.903 cv
70.6321 485.447 74.1599 482.927 74.592 479.543 cv
74.9519 479.615 74.3757 480.911 74.304 481.127 cv
73.4402 483.503 69.9119 487.031 71.4241 489.767 cv
71.4241 489.839 71.4958 489.911 71.4958 489.983 cv
70.7039 486.527 73.8 483.863 75.5999 481.271 cv
75.0242 482.783 74.8079 484.295 74.8079 485.879 cv
74.8801 487.319 75.0242 490.415 73.656 491.495 cv
74.6638 491.063 75.0242 489.767 75.0959 488.831 cv
75.5281 485.807 75.1677 482.927 77.6877 480.623 cv
77.8318 480.695 li
74.6638 483.431 76.1038 486.815 74.9519 490.127 cv
74.592 491.063 73.4402 492.143 72.3601 491.423 cv
73.1521 492.575 73.9441 493.727 74.8801 494.735 cv
73.7278 491.567 76.4641 488.543 76.032 485.303 cv
76.176 485.303 li
76.6082 488.471 73.0798 492.791 75.5999 495.599 cv
75.6721 495.671 li
74.0159 492.575 76.3201 489.695 77.4719 486.815 cv
77.2561 488.615 77.616 490.199 78.1199 491.927 cv
78.4797 493.007 79.2 495.815 78.1921 496.823 cv
79.0559 496.391 79.1282 495.239 79.0559 494.375 cv
78.7678 491.567 77.3279 488.543 79.5598 486.023 cv
79.6321 486.095 li
77.0398 489.047 79.488 492.143 79.2 495.383 cv
79.0559 496.535 78.0481 497.471 76.968 496.967 cv
77.9758 497.975 79.1282 498.983 80.3518 499.847 cv
78.408 497.111 80.3518 493.655 79.0559 490.703 cv
79.2 490.703 li
80.4958 493.727 78.1199 498.335 81.2878 500.495 cv
81.2878 500.567 81.3601 500.567 81.4319 500.639 cv
79.2 498.191 80.3518 495.743 80.7839 492.863 cv
80.8557 492.575 80.928 492.287 80.928 491.999 cv
81.2161 493.799 82.0081 495.239 82.9441 496.679 cv
83.5198 497.615 85.1038 500.207 84.3118 501.359 cv
85.176 500.711 84.7439 499.487 84.4558 498.695 cv
83.448 496.319 81.2161 493.583 82.8 491.063 cv
82.9441 491.063 li
81.1438 493.943 84.0959 496.751 84.8162 499.415 cv
85.176 500.783 84.384 502.007 83.0159 501.647 cv
85.824 503.303 88.7761 504.599 91.8 505.535 cv
97.344 503.087 103.32 501.719 108.864 501.719 cv
113.832 501.719 118.656 502.655 123.12 504.383 cv
123.336 504.383 123.552 504.455 123.768 504.527 cv
123.408 504.167 123.048 503.663 122.544 502.871 cv
118.872 497.255 112.104 494.087 105.48 493.079 cv
102.528 492.647 100.512 490.703 99.6482 489.911 cv
100.512 490.703 98.2078 488.327 98.136 488.183 cv
98.0637 488.111 102.24 491.711 105.768 491.711 cv
109.368 491.639 117.72 493.511 121.32 496.175 cv
124.56 498.695 128.376 503.807 131.328 506.183 cv
135 508.271 138.888 509.495 143.568 511.223 cv
143.496 511.007 143.352 510.791 143.28 510.647 cv
141.336 507.479 139.824 504.311 139.464 500.495 cv
139.176 496.535 140.544 491.927 144 489.623 cv
148.032 486.959 153.648 490.055 155.808 491.639 cv
157.896 493.223 165.024 495.095 164.376 495.023 cv
163.8 494.879 161.208 494.663 157.176 493.223 cv
151.128 491.063 144.144 488.399 140.688 496.175 cv
138.24 503.087 143.136 509.999 149.256 513.095 cv
152.928 514.175 156.672 514.967 160.272 515.111 cv
163.584 515.255 167.328 514.895 171.072 514.175 cv
169.272 514.175 166.896 514.103 165.024 513.959 cv
160.056 513.671 153.288 514.319 148.896 511.295 cv
144.72 508.199 143.352 502.511 146.52 498.191 cv
149.04 494.879 153.576 493.799 157.104 496.319 cv
159.768 498.335 160.632 502.079 158.4 504.743 cv
156.816 506.471 154.224 507.047 152.424 505.319 cv
151.416 504.239 151.056 502.367 152.496 501.503 cv
153.432 500.927 154.152 501.287 154.656 502.151 cv
155.088 502.871 155.808 502.295 156.024 501.719 cv
156.744 499.991 155.088 498.479 153.576 498.047 cv
150.336 497.327 147.672 499.991 147.312 503.015 cv
147.096 505.175 147.816 507.119 149.184 508.559 cv
152.64 512.375 160.128 511.439 164.808 511.799 cv
174.888 512.519 180.432 511.871 188.856 506.471 cv
191.664 504.671 194.4 502.727 197.28 501.071 cv
184.824 501.431 172.656 498.047 163.296 489.551 cv
163.512 490.271 161.928 489.983 161.712 489.983 cv
159.48 489.551 157.392 488.111 155.664 486.743 cv
152.856 484.439 150.624 481.415 147.744 479.255 cv
147.816 478.967 148.752 479.975 148.896 480.119 cv
152.64 483.431 156.312 488.687 161.496 489.839 cv
161.784 489.911 162.144 489.983 162.432 489.983 cv
157.176 489.191 152.784 483.431 149.688 479.687 cv
153.288 483.215 157.896 485.231 162 488.183 cv
160.056 486.239 157.464 485.015 155.232 483.503 cv
152.928 481.919 150.624 480.047 149.328 477.527 cv
149.4 477.455 150.408 479.111 150.624 479.399 cv
153.36 482.855 157.536 484.727 161.064 487.247 cv
160.056 486.095 159.12 484.943 158.328 483.647 cv
158.256 484.511 156.456 483.791 156.24 483.719 cv
151.128 481.487 149.184 475.367 145.584 471.551 cv
145.656 471.335 146.376 472.415 146.52 472.559 cv
149.472 476.231 151.776 481.919 156.456 483.719 cv
156.744 483.863 157.032 483.935 157.32 484.007 cv
152.496 482.567 149.544 476.159 147.384 472.199 cv
150.192 476.087 154.152 478.679 157.32 482.135 cv
157.176 481.847 156.96 481.559 156.816 481.271 cv
153.576 477.743 148.896 474.935 147.528 470.039 cv
147.672 470.039 148.248 471.695 148.392 472.055 cv
150.336 475.727 153.864 478.103 156.672 481.055 cv
156.024 479.831 155.448 478.535 154.944 477.239 cv
154.728 478.175 152.784 476.951 152.568 476.807 cv
148.968 474.143 148.104 469.391 146.232 465.647 cv
146.088 465.359 145.152 464.063 145.296 463.919 cv
148.176 467.879 148.464 473.927 152.856 476.879 cv
153.144 477.095 153.504 477.311 153.936 477.455 cv
153.72 477.311 153.504 477.239 153.36 477.095 cv
149.4 474.359 148.248 469.103 146.952 464.783 cv
148.824 468.815 152.136 471.839 154.368 475.655 cv
154.296 475.367 154.224 475.007 154.08 474.719 cv
151.776 470.831 147.816 467.519 147.6 462.695 cv
147.744 462.695 147.888 464.351 148.032 464.711 cv
149.04 468.455 151.992 471.263 154.008 474.503 cv
153.72 473.207 153.432 471.911 153.288 470.615 cv
152.64 471.695 151.344 470.399 150.84 469.751 cv
148.032 466.007 149.544 461.039 148.464 456.791 cv
148.392 456.575 148.176 456.287 148.392 456.143 cv
149.832 460.463 147.744 466.511 151.272 470.183 cv
151.488 470.399 151.704 470.615 151.992 470.759 cv
148.536 467.807 149.544 461.327 149.76 457.439 cv
150.192 461.615 152.28 465.071 153.144 469.103 cv
153.072 468.599 153.072 468.095 153.072 467.663 cv
152.064 463.847 149.76 459.887 151.128 455.927 cv
151.272 455.927 150.84 457.439 150.84 457.799 cv
150.552 461.111 152.208 464.207 153.072 467.303 cv
153.072 466.799 153.072 466.295 153.072 465.791 cv
151.2 464.207 152.208 460.895 153.072 458.951 cv
154.152 456.719 156.024 454.559 156.24 452.039 cv
156.528 452.111 156.024 453.623 155.952 453.839 cv
154.656 457.079 150.984 460.751 152.352 464.567 cv
152.424 464.783 152.568 465.071 152.712 465.287 cv
150.984 461.687 154.584 457.583 156.384 454.919 cv
156.6 454.631 156.816 454.343 157.032 453.983 cv
156.312 455.711 155.88 457.367 155.664 459.167 cv
155.52 460.895 155.448 464.351 154.152 465.719 cv
155.736 464.783 155.808 461.183 156.096 459.527 cv
156.528 457.151 157.32 455.063 158.904 453.263 cv
159.048 453.335 158.04 454.559 157.896 454.775 cv
156.6 456.935 156.24 459.167 155.88 461.543 cv
155.664 462.983 155.448 465.575 153.72 466.007 cv
153.72 466.511 153.72 467.015 153.72 467.519 cv
154.728 464.279 158.256 462.479 159.552 459.383 cv
159.84 459.455 158.976 460.751 158.832 460.895 cv
157.248 463.271 154.512 464.999 153.72 467.807 cv
153.72 468.239 153.72 468.743 153.792 469.247 cv
154.08 465.575 157.608 463.631 159.984 461.255 cv
159.048 462.695 158.4 464.135 157.968 465.791 cv
157.608 467.303 156.888 470.471 155.376 471.335 cv
156.456 471.119 157.104 469.751 157.464 468.815 cv
158.688 465.791 159.12 462.911 162.144 460.967 cv
162.216 461.111 160.992 461.975 160.776 462.191 cv
158.616 464.279 158.472 467.159 157.176 469.679 cv
156.456 471.047 154.944 472.199 153.936 470.759 cv
154.08 472.055 154.368 473.279 154.728 474.575 cv
155.088 471.119 159.048 469.319 160.128 466.079 cv
160.416 466.223 159.696 467.375 159.552 467.591 cv
158.184 469.751 154.08 472.487 154.944 475.439 cv
155.016 475.511 155.016 475.583 155.088 475.727 cv
154.944 472.127 158.544 470.183 160.776 467.951 cv
159.912 469.319 159.408 470.759 159.12 472.343 cv
158.832 473.711 158.4 476.807 156.888 477.599 cv
157.968 477.383 158.472 476.159 158.832 475.223 cv
159.84 472.415 159.984 469.463 163.008 467.807 cv
163.08 467.807 li
159.408 469.895 160.2 473.495 158.4 476.519 cv
157.824 477.383 156.528 478.175 155.592 477.311 cv
156.096 478.607 156.672 479.831 157.392 481.055 cv
156.888 477.671 160.2 475.223 160.416 471.983 cv
160.56 472.055 li
160.272 475.223 156.024 478.823 157.896 481.991 cv
157.968 481.991 157.968 482.063 158.04 482.135 cv
157.032 478.751 159.84 476.375 161.496 473.783 cv
160.92 475.511 160.992 477.095 161.136 478.895 cv
161.28 480.047 161.424 482.927 160.272 483.719 cv
161.208 483.503 161.496 482.351 161.568 481.487 cv
161.856 478.679 160.992 475.439 163.656 473.423 cv
163.728 473.495 li
160.632 475.871 162.432 479.399 161.496 482.495 cv
161.136 483.647 159.984 484.295 158.976 483.647 cv
159.84 484.871 160.704 486.023 161.712 487.103 cv
160.416 484.007 162.936 481.055 162.36 477.887 cv
162.432 477.887 li
163.08 481.199 159.84 485.159 162.504 487.967 cv
162.576 488.039 162.576 488.039 162.648 488.111 cv
160.992 485.303 162.504 483.071 163.584 480.335 cv
163.656 480.119 163.8 479.831 163.872 479.543 cv
163.8 481.343 164.232 482.927 164.88 484.583 cv
165.312 485.519 166.32 488.399 165.312 489.335 cv
166.248 488.975 166.104 487.607 165.96 486.743 cv
165.528 484.295 163.8 481.199 165.96 478.967 cv
166.032 479.039 li
163.656 481.487 166.032 484.799 166.176 487.607 cv
166.32 488.975 165.312 489.983 164.016 489.407 cv
172.872 497.471 184.176 500.711 195.984 500.567 cv
182.592 497.327 175.032 492.359 169.344 480.911 cv
164.808 471.695 167.184 460.319 177.624 455.279 cv
177.624 455.279 177.192 455.495 174.744 457.439 cv
165.24 465.647 169.992 478.463 175.032 484.583 cv
182.016 492.935 189.792 498.119 200.88 499.055 cv
203.904 497.543 207.072 496.391 210.456 495.887 cv
209.52 495.599 208.44 495.383 207.144 495.311 cv
202.176 495.023 197.568 495.815 193.176 492.719 cv
188.928 489.695 187.632 483.863 190.8 479.543 cv
193.32 476.231 197.856 475.151 201.384 477.671 cv
204.048 479.687 204.912 483.431 202.68 486.167 cv
201.096 487.823 198.504 488.399 196.704 486.743 cv
195.696 485.663 195.408 483.719 196.776 482.855 cv
197.712 482.351 198.432 482.711 198.936 483.503 cv
199.368 484.223 200.088 483.647 200.304 483.071 cv
201.024 481.343 199.368 479.831 197.856 479.399 cv
194.616 478.679 191.952 481.343 191.592 484.367 cv
191.376 486.527 192.096 488.471 193.464 489.911 cv
195.768 492.431 199.728 493.007 203.544 493.151 cv
211.176 493.367 221.976 494.951 229.536 496.679 cv
234.288 497.687 239.04 499.415 243.72 501.791 cv
245.16 502.655 246.528 503.519 247.824 504.455 cv
259.344 508.127 270.504 513.383 280.008 520.799 cv
281.52 523.391 282.816 525.983 284.112 528.791 cv
ef
445.824 505.319 mo
447.84 504.815 449.928 504.383 452.016 504.095 cv
454.392 503.735 456.696 503.447 458.928 503.303 cv
459.792 503.303 460.728 503.375 461.592 503.447 cv
465.408 503.879 469.512 504.815 473.472 506.327 cv
462.528 508.919 455.4 505.823 445.824 505.319 cv
cp
284.112 528.791 mo
285.768 527.135 287.496 525.623 289.152 524.183 cv
290.016 523.463 290.808 522.743 291.744 522.095 cv
294.624 520.079 297.792 518.495 300.816 518.927 cv
302.76 519.287 304.56 520.295 305.712 522.167 cv
307.296 524.759 306.864 528.503 303.912 529.943 cv
302.472 530.519 300.24 530.303 299.664 528.575 cv
299.52 527.927 299.736 527.063 300.528 527.351 cv
301.392 527.711 302.256 527.567 302.616 526.559 cv
303.12 524.975 301.752 523.679 300.24 523.463 cv
297.792 523.247 296.136 525.335 295.92 527.639 cv
295.92 531.167 298.872 533.543 302.256 533.471 cv
306.504 533.255 309.384 529.583 309.384 525.407 cv
309.096 520.295 304.92 516.695 300.024 516.623 cv
303.408 514.535 307.008 512.735 310.608 511.079 cv
321.192 508.775 333.792 509.783 341.208 517.847 cv
346.248 523.463 346.68 533.111 338.4 535.775 cv
336.456 536.423 334.296 535.991 332.352 536.423 cv
337.824 541.535 344.736 539.231 347.472 531.959 cv
349.776 525.983 346.536 519.215 342 515.255 cv
335.448 509.783 326.304 507.767 317.52 508.271 cv
326.376 505.031 335.664 503.015 344.88 502.367 cv
353.448 502.079 361.944 502.079 368.784 507.767 cv
375.768 513.815 378.576 524.111 373.896 532.391 cv
371.52 536.423 368.136 537.863 363.96 539.303 cv
363.96 539.447 365.4 538.943 365.616 538.871 cv
372.528 536.999 376.632 532.607 377.784 525.263 cv
378.576 518.135 375.912 511.727 371.376 507.047 cv
361.224 496.607 346.752 498.407 333.648 500.855 cv
330.912 501.431 328.176 502.151 325.44 502.871 cv
334.872 498.047 344.952 496.175 354.384 496.967 cv
360.936 497.543 366.552 500.351 372.024 503.663 cv
380.592 509.639 387.216 517.703 390.168 527.927 cv
389.376 526.703 388.008 527.063 387.36 528.359 cv
386.064 530.807 386.28 534.839 383.04 535.703 cv
383.04 535.775 li
385.992 535.055 386.208 531.527 387.144 529.151 cv
387.432 528.359 388.008 527.135 389.016 527.279 cv
387.72 527.567 387.072 530.519 386.856 531.599 cv
386.568 533.327 386.136 534.911 385.128 536.351 cv
385.344 536.207 385.56 535.991 385.776 535.847 cv
388.08 534.119 390.6 533.039 390.672 529.727 cv
390.672 529.799 390.672 529.871 390.672 529.943 cv
391.464 533.687 386.64 535.415 385.488 538.583 cv
385.56 538.583 li
386.64 535.631 390.384 534.335 390.888 531.095 cv
391.176 532.535 391.32 533.975 391.464 535.487 cv
390.96 534.335 389.592 534.335 388.728 535.127 cv
386.28 537.215 385.92 541.247 382.032 541.607 cv
382.104 541.679 li
385.416 541.391 386.352 538.223 388.152 535.919 cv
388.656 535.271 389.448 534.479 390.384 534.695 cv
388.944 534.767 387.576 537.359 387.072 538.367 cv
386.352 539.951 385.488 541.391 384.12 542.543 cv
386.928 541.175 390.528 540.671 391.464 537.287 cv
391.464 537.359 391.464 537.359 391.464 537.431 cv
391.392 541.175 385.92 541.967 384.048 544.559 cv
384.12 544.631 li
385.992 541.967 390.096 541.607 391.464 538.511 cv
391.392 539.879 391.248 541.247 390.96 542.615 cv
390.672 541.391 389.16 541.391 388.224 541.895 cv
385.056 543.479 383.832 546.935 379.656 546.791 cv
379.728 546.863 li
383.112 547.007 384.768 544.631 387.144 542.687 cv
387.936 542.111 389.016 541.319 390.096 541.751 cv
388.368 541.607 386.352 543.983 385.416 545.063 cv
384.336 546.215 383.112 547.151 381.672 547.871 cv
384.768 547.151 388.8 547.367 390.6 544.271 cv
390.6 544.343 390.6 544.487 390.528 544.559 cv
389.808 547.583 384.768 547.727 382.536 548.879 cv
382.32 548.951 381.024 549.527 381.24 549.815 cv
383.832 547.655 388.152 548.159 390.312 545.423 cv
389.952 546.719 389.52 547.943 388.944 549.095 cv
388.872 547.295 387 547.511 385.704 548.303 cv
383.256 549.815 381.6 552.119 378.648 552.839 cv
378.36 552.911 376.848 552.983 376.848 553.127 cv
380.448 553.055 382.392 550.823 384.984 548.879 cv
385.776 548.303 387 547.439 388.008 547.871 cv
386.28 547.727 384.048 550.103 382.968 551.183 cv
381.744 552.407 380.448 553.343 378.864 553.991 cv
382.104 553.271 386.136 553.415 388.296 550.463 cv
388.08 550.895 387.864 551.327 387.576 551.759 cv
385.488 553.703 382.176 553.703 379.656 554.927 cv
379.44 554.999 378 555.647 378.216 555.863 cv
380.952 553.847 384.84 554.207 387.432 551.975 cv
387.216 552.407 386.928 552.839 386.64 553.271 cv
384.984 552.695 383.4 554.783 382.536 555.863 cv
380.952 557.735 379.512 559.463 377.28 560.615 cv
376.992 560.759 375.552 561.263 375.552 561.407 cv
377.856 560.687 379.656 559.319 381.24 557.519 cv
382.32 556.295 384.336 553.199 386.136 553.271 cv
384.336 553.775 382.464 556.655 381.384 558.023 cv
380.304 559.463 379.08 560.615 377.568 561.767 cv
377.928 561.551 378.288 561.407 378.576 561.263 cv
381.528 559.967 386.784 558.311 387.144 554.351 cv
387.144 554.639 387.144 554.927 387.072 555.215 cv
386.208 559.175 381.168 560.327 378.432 562.415 cv
378.216 562.559 376.992 563.639 377.208 563.783 cv
378.72 561.767 381.456 560.903 383.544 559.607 cv
385.272 558.455 387.864 556.151 387.072 553.775 cv
387.36 553.343 387.648 552.911 387.936 552.479 cv
387 555.575 386.784 559.031 384.84 561.767 cv
384.624 561.983 383.472 563.063 383.544 563.207 cv
386.856 560.543 387 555.935 388.08 552.191 cv
388.296 551.759 388.584 551.399 388.8 550.967 cv
387.432 554.783 387.36 558.887 385.56 562.559 cv
387.792 559.391 392.04 554.495 390.6 550.103 cv
390.744 550.391 390.888 550.679 390.888 550.967 cv
391.968 555.935 387.072 559.967 386.064 564.431 cv
386.28 564.431 386.28 564.071 386.28 563.855 cv
387.576 559.679 391.536 556.223 391.104 551.543 cv
391.032 550.751 390.6 548.951 389.448 549.527 cv
390.024 548.375 390.456 547.151 390.816 545.855 cv
390.888 549.671 391.896 553.631 390.816 557.375 cv
390.744 557.663 390.024 559.175 390.168 559.247 cv
392.472 555.071 390.816 550.103 390.888 545.639 cv
391.032 545.279 391.104 544.991 391.176 544.703 cv
391.032 549.095 392.328 553.415 391.752 557.879 cv
392.976 553.487 394.776 548.375 392.76 543.983 cv
392.688 543.767 392.616 543.623 392.472 543.407 cv
392.76 543.695 392.976 544.055 393.12 544.415 cv
395.352 549.239 392.4 554.567 392.76 559.463 cv
392.976 559.391 392.832 557.807 392.904 557.519 cv
393.264 553.343 394.92 548.807 393.336 544.703 cv
393.192 544.415 392.184 542.399 391.536 543.047 cv
391.752 541.679 391.968 540.239 392.04 538.871 cv
392.832 542.831 394.632 546.719 394.344 550.895 cv
394.344 551.255 393.912 552.983 394.056 553.055 cv
395.496 548.159 392.976 543.335 392.04 538.583 cv
392.04 538.295 392.04 537.935 392.04 537.575 cv
392.904 542.255 394.992 546.503 395.28 551.255 cv
395.568 546.791 396.36 539.807 392.976 536.063 cv
393.264 536.207 393.48 536.495 393.624 536.711 cv
396.648 540.743 395.64 546.791 396.216 551.471 cv
396.288 551.615 396.288 552.911 396.504 552.767 cv
395.424 547.655 397.008 541.391 393.768 536.783 cv
393.696 536.639 392.472 535.127 392.04 535.775 cv
391.968 534.263 391.824 532.823 391.536 531.311 cv
393.264 535.343 395.784 539.087 396.36 543.479 cv
396.36 543.839 396.36 545.711 396.432 545.783 cv
396.648 542.903 395.712 540.167 394.56 537.575 cv
393.48 535.055 391.824 532.679 391.248 530.015 cv
393.192 534.695 396.072 538.799 397.296 543.695 cv
396.576 538.871 395.928 531.671 391.824 528.287 cv
392.112 528.431 392.328 528.647 392.544 528.863 cv
396.36 532.607 396.72 538.943 398.16 543.767 cv
398.232 543.911 398.52 545.279 398.736 545.135 cv
397.44 541.751 397.08 538.007 395.856 534.551 cv
395.136 532.463 394.056 530.159 392.4 528.647 cv
392.256 528.503 391.032 527.495 390.816 528.143 cv
388.296 519.143 382.896 511.727 375.912 506.039 cv
378.936 507.911 380.016 508.631 382.968 510.287 cv
387 512.519 391.176 514.391 395.784 515.327 cv
397.656 515.759 399.456 516.047 401.256 516.191 cv
409.968 522.527 410.76 527.495 405.288 537.503 cv
402.984 541.679 403.2 548.159 406.008 551.687 cv
408.744 555.287 412.344 557.231 412.344 557.231 cv
412.344 557.231 410.256 555.575 409.68 554.999 cv
403.128 548.375 404.424 542.327 409.464 535.775 cv
414.216 529.295 411.984 520.367 405.144 516.479 cv
406.08 516.551 406.944 516.551 407.808 516.479 cv
408.744 516.479 409.752 516.407 410.688 516.335 cv
420.624 516.623 430.272 519.647 438.192 526.127 cv
436.824 525.623 435.888 526.703 436.032 528.071 cv
436.392 530.879 438.84 534.047 436.608 536.639 cv
436.68 536.711 li
438.696 534.407 436.896 531.383 436.32 528.863 cv
436.104 528.071 435.888 526.775 436.824 526.271 cv
435.888 527.279 437.04 530.087 437.472 531.023 cv
438.192 532.679 438.768 534.191 438.696 535.991 cv
438.84 535.703 438.912 535.487 438.984 535.199 cv
439.92 532.463 441.36 530.159 439.56 527.423 cv
439.632 527.423 439.704 527.495 439.704 527.567 cv
442.512 530.159 439.416 534.335 440.28 537.575 cv
440.352 537.575 li
439.56 534.479 442.008 531.383 440.568 528.359 cv
441.576 529.439 442.584 530.519 443.448 531.671 cv
442.44 531.095 441.288 531.815 441 532.967 cv
440.208 536.063 442.152 539.591 439.128 542.039 cv
439.2 542.111 li
441.792 539.951 440.784 536.783 440.928 533.975 cv
441 533.111 441.216 531.959 442.152 531.671 cv
441 532.535 441.288 535.415 441.504 536.567 cv
441.792 538.295 441.864 539.951 441.36 541.607 cv
442.944 539.015 445.608 536.495 444.456 533.183 cv
444.528 533.183 444.528 533.255 444.6 533.327 cv
446.616 536.423 442.512 540.167 442.44 543.407 cv
442.512 543.407 li
442.584 540.167 445.824 537.503 445.176 534.191 cv
445.896 535.415 446.544 536.639 447.12 537.863 cv
446.184 536.999 444.888 537.863 444.384 538.799 cv
442.656 541.895 443.592 545.423 440.136 547.655 cv
440.136 547.727 li
443.088 545.927 443.088 542.975 443.952 540.095 cv
444.24 539.159 444.744 537.863 445.824 537.647 cv
444.384 538.439 444.024 541.607 443.808 543.047 cv
443.592 544.631 443.16 546.071 442.368 547.439 cv
444.528 545.135 447.984 542.975 447.696 539.447 cv
447.768 539.519 447.768 539.591 447.84 539.663 cv
448.848 542.615 444.816 545.567 443.592 547.799 cv
443.52 547.943 442.8 549.167 443.088 549.239 cv
444.024 545.999 447.912 544.055 448.128 540.599 cv
448.56 541.823 448.848 543.047 449.064 544.343 cv
447.984 542.903 446.544 544.127 445.896 545.567 cv
444.744 548.159 444.672 550.967 442.656 553.271 cv
442.44 553.487 441.216 554.351 441.36 554.495 cv
444.24 552.407 444.6 549.455 445.68 546.431 cv
445.968 545.495 446.544 544.127 447.624 543.839 cv
446.112 544.775 445.608 547.943 445.248 549.455 cv
444.96 551.111 444.384 552.623 443.448 554.135 cv
445.752 551.615 449.136 549.527 449.28 545.855 cv
449.352 546.359 449.424 546.791 449.424 547.295 cv
448.776 550.175 446.112 551.975 444.672 554.423 cv
444.528 554.567 443.664 555.935 443.952 556.007 cv
445.104 552.767 448.56 550.895 449.424 547.583 cv
449.496 548.087 449.496 548.591 449.496 549.095 cv
447.84 549.599 447.696 552.191 447.552 553.559 cv
447.264 556.007 447.048 558.311 445.896 560.471 cv
445.752 560.687 444.816 561.911 444.96 562.055 cv
446.4 560.111 447.12 558.023 447.408 555.647 cv
447.624 553.991 447.552 550.319 449.064 549.383 cv
447.84 550.823 447.912 554.279 447.84 555.935 cv
447.768 557.807 447.336 559.463 446.76 561.191 cv
446.976 560.903 447.12 560.543 447.336 560.255 cv
449.064 557.519 452.448 553.199 450.504 549.743 cv
450.72 549.959 450.864 550.175 450.936 550.463 cv
452.448 554.207 448.92 558.023 447.84 561.335 cv
447.768 561.551 447.336 563.063 447.624 563.135 cv
447.696 560.615 449.496 558.383 450.504 556.079 cv
451.296 554.135 452.16 550.751 450.144 549.239 cv
450.144 548.735 450.144 548.231 450.072 547.727 cv
451.152 550.823 452.88 553.775 452.736 557.159 cv
452.736 557.447 452.376 559.031 452.52 559.031 cv
453.744 554.999 451.296 551.111 450.072 547.439 cv
450.072 546.935 450 546.431 449.928 545.999 cv
451.008 549.959 453.24 553.343 453.888 557.447 cv
453.888 553.559 454.608 547.079 451.008 544.271 cv
451.296 544.415 451.512 544.559 451.728 544.775 cv
455.4 548.303 453.6 554.423 455.328 558.671 cv
455.544 558.527 455.256 558.239 455.184 558.023 cv
453.888 553.847 455.184 548.879 452.232 545.207 cv
451.728 544.559 450.288 543.335 449.712 544.487 cv
449.496 543.191 449.208 541.895 448.776 540.599 cv
450.936 543.767 454.032 546.431 455.256 550.103 cv
455.4 550.463 455.616 552.119 455.76 552.119 cv
455.328 547.295 451.224 544.127 448.704 540.383 cv
448.632 540.095 448.488 539.807 448.416 539.447 cv
450.792 543.191 454.248 545.999 456.336 550.031 cv
454.824 545.783 453.456 540.527 449.352 538.007 cv
449.208 537.863 448.992 537.791 448.776 537.647 cv
449.208 537.719 449.568 537.935 449.928 538.151 cv
454.392 540.887 454.968 546.935 458.064 550.751 cv
458.136 550.607 457.2 549.383 457.056 549.095 cv
454.968 545.423 453.816 540.743 450.144 538.223 cv
449.928 538.079 447.984 536.999 447.768 537.863 cv
447.192 536.639 446.544 535.343 445.824 534.191 cv
448.776 536.999 452.448 539.231 454.536 542.831 cv
454.68 543.119 455.328 544.775 455.472 544.775 cv
453.888 539.951 449.136 537.359 445.68 533.975 cv
445.536 533.687 445.32 533.399 445.176 533.111 cv
448.488 536.423 452.592 538.799 455.544 542.615 cv
453.24 538.727 449.928 532.463 445.104 531.311 cv
445.392 531.311 445.68 531.383 445.968 531.455 cv
450.72 533.111 453.312 538.655 456.408 542.183 cv
456.48 542.327 457.272 543.407 457.416 543.119 cv
453.6 539.519 451.368 533.471 446.184 531.455 cv
445.968 531.383 444.096 530.807 444.096 531.599 cv
443.232 530.447 442.224 529.295 441.216 528.215 cv
444.888 530.591 449.064 532.247 452.016 535.559 cv
452.232 535.847 453.312 537.431 453.384 537.359 cv
451.944 534.911 449.568 533.183 447.192 531.671 cv
444.888 530.231 442.224 529.151 440.28 527.279 cv
444.456 530.015 449.136 531.887 452.88 535.199 cv
449.64 531.599 445.032 526.055 439.704 525.551 cv
439.992 525.479 440.352 525.551 440.64 525.623 cv
445.896 526.559 449.784 531.599 453.672 534.767 cv
453.816 534.839 454.824 535.847 454.896 535.559 cv
451.872 533.471 449.496 530.663 446.616 528.503 cv
444.816 527.135 442.656 525.839 440.424 525.479 cv
440.208 525.479 438.624 525.335 438.84 525.983 cv
431.352 519.791 422.424 516.695 412.992 515.975 cv
415.008 515.687 416.952 515.183 418.896 514.607 cv
425.232 512.807 431.136 510.215 437.184 508.055 cv
439.416 507.551 441.576 507.335 443.88 507.191 cv
454.032 506.687 464.184 509.063 474.264 506.687 cv
474.408 506.687 474.48 506.759 474.624 506.831 cv
476.208 508.055 477.72 509.207 479.16 510.287 cv
482.328 512.447 485.352 515.111 485.856 518.495 cv
486.144 520.439 485.712 522.455 484.344 524.111 cv
482.4 526.487 478.728 527.207 476.424 524.831 cv
475.344 523.679 474.84 521.447 476.352 520.439 cv
476.928 520.079 477.792 520.007 477.792 520.799 cv
477.72 521.807 478.152 522.527 479.232 522.599 cv
480.888 522.599 481.68 520.871 481.392 519.359 cv
480.816 516.983 478.296 515.975 476.064 516.551 cv
472.752 517.631 471.456 521.231 472.536 524.399 cv
474.048 528.359 478.44 529.943 482.4 528.647 cv
487.368 526.703 489.528 521.159 487.584 516.335 cv
487.44 515.975 487.296 515.615 487.152 515.327 cv
489.528 517.847 491.328 520.799 492.336 524.255 cv
494.28 531.455 490.464 540.311 481.824 539.015 cv
479.808 538.727 478.08 537.431 476.064 536.927 cv
478.728 543.911 485.928 544.919 491.616 539.663 cv
496.368 535.271 496.512 527.783 494.136 522.167 cv
492.768 518.999 490.68 516.191 488.232 513.671 cv
488.952 513.887 489.672 514.031 490.392 514.247 cv
494.712 515.399 499.248 516.119 503.784 516.263 cv
506.52 516.335 508.248 516.263 511.2 516.263 cv
512.352 516.263 513.648 516.263 514.872 516.263 cv
518.328 516.263 521.352 515.831 524.736 515.255 cv
532.584 513.959 540.72 514.247 548.208 516.335 cv
552.816 517.559 557.28 519.215 559.944 523.463 cv
562.536 527.927 562.176 533.831 558.144 537.431 cv
556.2 539.087 554.184 539.231 551.664 539.231 cv
551.664 539.303 552.528 539.303 552.672 539.375 cv
556.632 539.591 559.584 538.007 561.528 534.335 cv
563.184 530.663 562.968 526.847 561.384 523.535 cv
557.928 516.191 549.936 514.607 542.592 513.527 cv
536.544 512.807 530.208 512.735 524.088 513.671 cv
521.928 513.959 519.84 514.247 517.68 514.535 cv
520.632 513.671 523.44 512.519 526.176 511.007 cv
525.888 511.655 527.472 511.799 527.688 511.799 cv
529.92 511.943 532.296 511.007 534.312 510.071 cv
537.624 508.487 540.432 506.111 543.816 504.671 cv
543.816 504.455 542.592 505.175 542.448 505.247 cv
537.984 507.623 533.232 511.799 527.904 511.727 cv
527.616 511.727 527.256 511.727 526.968 511.655 cv
532.296 512.159 537.912 507.551 541.8 504.671 cv
537.408 507.263 532.44 508.127 527.832 510.071 cv
530.136 508.559 532.944 507.983 535.464 507.047 cv
538.128 506.039 540.792 504.815 542.664 502.655 cv
542.592 502.583 541.224 503.951 540.936 504.167 cv
537.408 506.831 533.016 507.695 528.984 509.279 cv
530.208 508.415 531.36 507.479 532.44 506.471 cv
532.296 507.263 534.24 507.047 534.456 507.047 cv
540 506.111 543.24 500.567 547.704 497.759 cv
547.632 497.471 546.696 498.335 546.552 498.479 cv
542.808 501.359 539.28 506.327 534.24 506.975 cv
533.952 507.047 533.664 507.047 533.376 507.047 cv
538.344 506.759 542.736 501.287 545.76 497.903 cv
542.16 501.071 537.696 502.583 533.808 505.247 cv
534.024 505.031 534.24 504.743 534.456 504.527 cv
538.488 501.863 543.672 500.207 546.12 495.743 cv
545.976 495.743 545.04 497.255 544.824 497.471 cv
542.088 500.639 538.056 502.151 534.672 504.311 cv
535.608 503.303 536.472 502.223 537.264 501.071 cv
537.264 502.007 539.424 501.287 539.712 501.143 cv
543.744 499.415 545.76 495.023 548.496 491.855 cv
548.712 491.567 549.864 490.559 549.792 490.343 cv
546.048 493.583 544.32 499.415 539.424 501.215 cv
538.992 501.359 538.632 501.431 538.2 501.431 cv
538.416 501.431 538.632 501.359 538.848 501.287 cv
543.312 499.559 545.688 494.663 547.992 490.775 cv
545.184 494.303 541.224 496.391 538.2 499.631 cv
538.344 499.343 538.488 499.055 538.632 498.767 cv
541.8 495.599 546.48 493.223 547.848 488.615 cv
547.704 488.615 547.128 490.199 546.984 490.487 cv
545.04 493.871 541.512 495.887 538.776 498.551 cv
539.424 497.399 540 496.247 540.432 494.951 cv
540.792 496.247 542.376 495.239 543.024 494.735 cv
546.624 491.711 546.336 486.527 548.352 482.711 cv
548.496 482.495 548.784 482.279 548.64 482.063 cv
546.192 485.951 546.768 492.287 542.448 495.023 cv
542.232 495.167 541.944 495.311 541.656 495.383 cv
545.76 493.367 546.264 486.887 546.984 483.071 cv
545.616 486.959 542.736 489.839 540.936 493.511 cv
541.08 493.079 541.224 492.575 541.368 492.143 cv
543.24 488.687 546.408 485.375 545.976 481.199 cv
545.832 481.199 545.904 482.783 545.832 483.071 cv
545.328 486.383 543.024 489.047 541.44 491.855 cv
541.512 491.351 541.656 490.847 541.728 490.343 cv
544.032 489.263 543.816 485.807 543.384 483.719 cv
542.88 481.271 541.512 478.751 541.944 476.231 cv
541.656 476.231 541.8 477.815 541.8 478.103 cv
542.232 481.559 544.968 485.879 542.808 489.335 cv
542.664 489.551 542.448 489.767 542.232 489.983 cv
544.752 486.887 542.232 482.063 541.08 479.039 cv
541.008 478.679 540.864 478.319 540.72 477.959 cv
541.008 479.759 541.08 481.487 540.792 483.287 cv
540.504 485.015 539.784 488.399 540.72 490.055 cv
539.424 488.759 540.216 485.159 540.288 483.503 cv
540.432 481.127 540.144 478.967 539.064 476.807 cv
538.92 476.879 539.64 478.247 539.712 478.535 cv
540.504 480.911 540.216 483.215 540.072 485.591 cv
539.928 486.959 539.568 489.551 541.08 490.343 cv
541.008 490.847 540.864 491.351 540.72 491.855 cv
540.504 488.471 537.48 485.951 536.976 482.567 cv
536.688 482.567 537.264 484.007 537.336 484.223 cv
538.272 486.887 540.576 489.191 540.648 492.143 cv
540.576 492.575 540.432 493.079 540.288 493.511 cv
540.864 489.911 537.912 487.175 536.112 484.295 cv
536.76 485.951 537.048 487.535 537.048 489.191 cv
537.048 490.703 536.904 494.015 538.2 495.167 cv
537.264 494.735 536.976 493.295 536.832 492.287 cv
536.328 489.047 536.544 486.095 534.096 483.503 cv
533.952 483.647 535.032 484.727 535.176 485.015 cv
536.688 487.607 536.256 490.415 536.904 493.223 cv
537.264 494.663 538.416 496.175 539.784 494.951 cv
539.28 496.175 538.776 497.327 538.128 498.479 cv
538.56 495.023 535.176 492.359 534.816 488.975 cv
534.528 488.975 534.96 490.343 535.032 490.559 cv
535.824 493.007 539.28 496.607 537.624 499.271 cv
537.624 499.343 537.552 499.415 537.48 499.487 cv
538.488 496.103 535.464 493.295 533.808 490.631 cv
534.312 492.143 534.456 493.655 534.384 495.239 cv
534.312 496.679 534.024 499.847 535.32 500.927 cv
534.312 500.495 534.024 499.127 533.952 498.191 cv
533.664 495.167 534.168 492.287 531.648 489.911 cv
531.576 489.983 li
534.6 492.863 533.016 496.175 534.096 499.487 cv
534.384 500.495 535.536 501.575 536.616 500.927 cv
535.824 502.079 534.96 503.159 534.024 504.167 cv
535.248 500.999 532.584 497.831 533.16 494.663 cv
533.088 494.663 li
532.512 497.831 535.824 502.295 533.232 504.959 cv
533.16 505.031 li
534.888 502.007 532.728 499.055 531.648 496.175 cv
531.792 497.903 531.432 499.487 530.856 501.143 cv
530.424 502.295 529.632 505.031 530.568 506.111 cv
529.704 505.607 529.704 504.455 529.848 503.591 cv
530.208 500.783 531.792 497.903 529.632 495.311 cv
529.56 495.311 li
532.08 498.335 529.488 501.431 529.632 504.599 cv
529.704 505.751 530.712 506.687 531.792 506.327 cv
530.712 507.263 529.56 508.199 528.336 509.063 cv
530.352 506.327 528.552 502.799 529.92 499.919 cv
529.848 499.919 li
528.408 502.943 530.64 507.623 527.4 509.639 cv
527.328 509.711 527.256 509.711 527.184 509.783 cv
529.488 507.407 528.48 504.887 528.12 502.007 cv
528.048 501.719 528.048 501.431 527.976 501.143 cv
527.688 502.943 526.896 504.383 525.888 505.823 cv
525.24 506.687 523.584 509.207 524.304 510.359 cv
523.44 509.711 523.944 508.487 524.304 507.695 cv
525.312 505.391 527.688 502.727 526.176 500.135 cv
526.032 500.135 li
527.76 503.087 524.736 505.751 523.872 508.415 cv
523.44 509.783 524.16 511.007 525.6 510.719 cv
520.992 513.239 516.168 514.679 511.272 515.399 cv
508.824 515.687 506.304 515.831 503.856 515.687 cv
499.248 515.471 494.64 514.607 490.32 513.023 cv
487.656 512.015 485.208 510.719 482.904 509.207 cv
482.904 509.279 li
481.032 507.983 479.088 506.831 477 505.895 cv
480.024 504.887 482.904 503.591 485.712 501.935 cv
485.424 502.583 487.008 502.655 487.224 502.655 cv
489.456 502.655 491.832 501.719 493.776 500.639 cv
497.016 498.983 499.824 496.463 503.064 494.951 cv
503.064 494.663 501.912 495.455 501.768 495.527 cv
497.448 498.047 492.84 502.439 487.512 502.583 cv
487.152 502.583 486.864 502.583 486.504 502.511 cv
491.832 502.799 497.304 498.047 501.048 494.951 cv
496.8 497.687 491.904 498.767 487.368 500.855 cv
489.6 499.343 492.408 498.623 494.856 497.615 cv
497.448 496.463 500.04 495.095 501.912 492.863 cv
501.768 492.863 500.472 494.231 500.184 494.447 cv
496.8 497.327 492.408 498.335 488.448 500.063 cv
489.6 499.199 490.752 498.191 491.832 497.183 cv
491.688 497.975 493.56 497.687 493.776 497.615 cv
499.32 496.463 502.416 490.775 506.736 487.823 cv
506.664 487.535 505.728 488.471 505.584 488.615 cv
501.984 491.567 498.6 496.679 493.632 497.615 cv
493.344 497.615 493.056 497.687 492.696 497.615 cv
497.736 497.183 501.912 491.567 504.792 488.039 cv
501.336 491.351 496.872 493.079 493.056 495.887 cv
493.272 495.599 493.56 495.383 493.776 495.095 cv
497.664 492.287 502.776 490.487 505.08 485.951 cv
504.936 485.879 504.072 487.463 503.856 487.679 cv
501.192 490.919 497.232 492.575 493.92 494.879 cv
494.784 493.799 495.648 492.719 496.368 491.567 cv
496.44 492.503 498.6 491.639 498.816 491.567 cv
502.848 489.695 504.72 485.159 507.24 481.919 cv
507.456 481.631 508.608 480.551 508.536 480.335 cv
504.936 483.719 503.424 489.623 498.528 491.639 cv
498.168 491.783 497.736 491.855 497.376 491.927 cv
497.592 491.855 497.808 491.783 497.952 491.711 cv
502.416 489.767 504.576 484.871 506.736 480.839 cv
504.072 484.511 500.184 486.743 497.232 490.055 cv
497.448 489.767 497.592 489.479 497.736 489.191 cv
500.76 485.879 505.296 483.359 506.448 478.679 cv
506.376 478.679 505.872 480.263 505.728 480.623 cv
503.928 484.079 500.472 486.239 497.808 488.975 cv
498.456 487.823 498.96 486.599 499.32 485.375 cv
499.752 486.599 501.336 485.519 501.912 485.015 cv
505.44 481.847 504.864 476.663 506.808 472.775 cv
506.88 472.559 507.24 472.343 507.024 472.127 cv
504.72 476.087 505.584 482.423 501.408 485.303 cv
501.12 485.447 500.904 485.591 500.616 485.735 cv
504.576 483.503 504.864 477.023 505.44 473.135 cv
504.216 477.167 501.408 480.119 499.824 483.863 cv
499.896 483.431 500.04 482.927 500.112 482.495 cv
501.912 478.967 504.936 475.511 504.36 471.335 cv
504.216 471.407 504.288 472.919 504.288 473.279 cv
503.856 476.591 501.696 479.255 500.184 482.207 cv
500.328 481.703 500.4 481.199 500.472 480.623 cv
502.704 479.471 502.344 476.015 501.84 473.999 cv
501.264 471.551 499.824 469.103 500.112 466.583 cv
499.824 466.583 500.04 468.167 500.112 468.383 cv
500.688 471.839 503.568 476.087 501.48 479.615 cv
501.336 479.831 501.12 480.047 500.904 480.263 cv
503.352 477.095 500.688 472.343 499.392 469.391 cv
499.248 469.031 499.104 468.671 498.96 468.311 cv
499.32 470.111 499.464 471.839 499.248 473.711 cv
499.032 475.367 498.456 478.751 499.464 480.407 cv
498.024 479.183 498.744 475.583 498.744 473.927 cv
498.816 471.551 498.456 469.319 497.304 467.231 cv
497.16 467.303 497.88 468.671 498.024 468.959 cv
498.816 471.263 498.672 473.567 498.6 475.943 cv
498.528 477.383 498.24 479.975 499.824 480.695 cv
499.752 481.199 499.608 481.703 499.536 482.207 cv
499.176 478.823 496.08 476.447 495.432 473.063 cv
495.144 473.063 495.72 474.503 495.864 474.719 cv
496.872 477.311 499.248 479.543 499.464 482.495 cv
499.392 482.927 499.248 483.431 499.104 483.863 cv
499.536 480.263 496.512 477.671 494.64 474.863 cv
495.288 476.447 495.648 478.031 495.72 479.687 cv
495.792 481.199 495.792 484.511 497.16 485.591 cv
496.152 485.159 495.792 483.791 495.648 482.783 cv
495 479.615 495.144 476.591 492.552 474.143 cv
492.48 474.215 493.488 475.295 493.704 475.583 cv
495.36 478.103 494.928 480.911 495.72 483.719 cv
496.152 485.159 497.376 486.599 498.672 485.303 cv
498.24 486.599 497.736 487.751 497.16 488.903 cv
497.448 485.447 493.92 482.927 493.488 479.543 cv
493.2 479.615 493.704 480.911 493.776 481.127 cv
494.712 483.503 498.24 487.031 496.728 489.767 cv
496.656 489.839 496.656 489.911 496.584 489.983 cv
497.376 486.527 494.28 483.863 492.552 481.271 cv
493.128 482.783 493.344 484.295 493.272 485.879 cv
493.272 487.319 493.128 490.415 494.424 491.495 cv
493.416 491.063 493.128 489.767 492.984 488.831 cv
492.552 485.807 492.984 482.927 490.392 480.623 cv
490.32 480.695 li
493.416 483.431 491.976 486.815 493.2 490.127 cv
493.56 491.063 494.712 492.143 495.72 491.423 cv
495 492.575 494.136 493.727 493.272 494.735 cv
494.424 491.567 491.616 488.543 492.048 485.303 cv
491.976 485.303 li
491.544 488.471 495.072 492.791 492.552 495.599 cv
492.48 495.599 492.48 495.671 492.408 495.671 cv
494.064 492.575 491.76 489.695 490.608 486.815 cv
490.824 488.615 490.536 490.199 489.96 491.927 cv
489.672 493.007 488.88 495.815 489.888 496.823 cv
489.024 496.391 488.952 495.239 489.096 494.375 cv
489.312 491.567 490.824 488.543 488.592 486.023 cv
488.52 486.095 li
491.112 489.047 488.592 492.143 488.952 495.383 cv
489.096 496.535 490.032 497.471 491.184 496.967 cv
490.104 497.975 488.952 498.983 487.8 499.847 cv
489.672 497.111 487.8 493.655 489.024 490.703 cv
488.952 490.703 li
487.656 493.727 490.032 498.335 486.864 500.495 cv
486.792 500.567 486.72 500.567 486.72 500.639 cv
488.88 498.191 487.8 495.743 487.296 492.863 cv
487.224 492.575 487.224 492.287 487.152 491.999 cv
486.936 493.799 486.144 495.239 485.208 496.679 cv
484.632 497.615 483.048 500.207 483.84 501.359 cv
482.976 500.711 483.336 499.487 483.696 498.695 cv
484.632 496.319 486.936 493.583 485.28 491.063 cv
485.208 491.063 li
487.008 493.943 484.056 496.751 483.336 499.415 cv
482.976 500.783 483.696 502.007 485.136 501.647 cv
482.256 503.303 479.304 504.599 476.28 505.535 cv
470.808 503.087 464.76 501.719 459.216 501.719 cv
454.248 501.719 449.424 502.655 444.96 504.383 cv
444.744 504.383 444.6 504.455 444.384 504.527 cv
444.672 504.167 445.032 503.663 445.536 502.871 cv
449.208 497.255 455.976 494.087 462.672 493.079 cv
465.552 492.647 467.568 490.703 468.432 489.911 cv
467.568 490.703 469.944 488.327 469.944 488.183 cv
470.016 488.111 465.912 491.711 462.312 491.711 cv
458.712 491.639 450.36 493.511 446.832 496.175 cv
443.52 498.695 439.704 503.807 436.752 506.183 cv
433.152 508.271 429.264 509.495 424.584 511.223 cv
424.656 511.007 424.728 510.791 424.872 510.647 cv
426.816 507.479 428.328 504.311 428.616 500.495 cv
428.904 496.535 427.608 491.927 424.08 489.623 cv
420.12 486.959 414.432 490.055 412.344 491.639 cv
410.184 493.223 403.128 495.095 403.704 495.023 cv
404.352 494.879 406.944 494.663 410.904 493.223 cv
416.952 491.063 424.008 488.399 427.464 496.175 cv
429.84 503.087 424.944 509.999 418.896 513.095 cv
415.152 514.175 411.48 514.967 407.88 515.111 cv
404.568 515.255 400.824 514.895 397.08 514.175 cv
398.808 514.175 401.184 514.103 403.056 513.959 cv
408.024 513.671 414.792 514.319 419.184 511.295 cv
423.432 508.199 424.728 502.511 421.632 498.191 cv
419.04 494.879 414.504 493.799 411.048 496.319 cv
408.384 498.335 407.52 502.079 409.68 504.743 cv
411.264 506.471 413.928 507.047 415.728 505.319 cv
416.736 504.239 417.024 502.367 415.656 501.503 cv
414.72 500.927 414 501.287 413.496 502.151 cv
413.064 502.871 412.344 502.295 412.056 501.719 cv
411.408 499.991 412.992 498.479 414.576 498.047 cv
417.744 497.327 420.408 499.991 420.768 503.015 cv
421.056 505.175 420.264 507.119 418.968 508.559 cv
415.44 512.375 407.952 511.439 403.344 511.799 cv
393.192 512.519 387.648 511.871 379.296 506.471 cv
376.416 504.671 373.68 502.727 370.872 501.071 cv
383.328 501.431 395.496 498.047 404.784 489.551 cv
404.64 490.271 406.224 489.983 406.368 489.983 cv
408.6 489.551 410.688 488.111 412.416 486.743 cv
415.296 484.439 417.528 481.415 420.408 479.255 cv
420.336 478.967 419.4 479.975 419.256 480.119 cv
415.44 483.431 411.84 488.687 406.656 489.839 cv
406.296 489.911 406.008 489.983 405.648 489.983 cv
410.976 489.191 415.368 483.431 418.464 479.687 cv
414.792 483.215 410.184 485.231 406.152 488.183 cv
408.024 486.239 410.616 485.015 412.92 483.503 cv
415.224 481.919 417.456 480.047 418.824 477.527 cv
418.68 477.455 417.744 479.111 417.528 479.399 cv
414.72 482.855 410.616 484.727 407.088 487.247 cv
408.024 486.095 408.96 484.943 409.824 483.647 cv
409.824 484.511 411.624 483.791 411.84 483.719 cv
417.024 481.487 418.896 475.367 422.568 471.551 cv
422.424 471.335 421.704 472.415 421.56 472.559 cv
418.68 476.231 416.376 481.919 411.696 483.719 cv
411.408 483.863 411.12 483.935 410.76 484.007 cv
415.584 482.567 418.536 476.159 420.696 472.199 cv
417.96 476.087 413.928 478.679 410.76 482.135 cv
410.976 481.847 411.12 481.559 411.264 481.271 cv
414.576 477.743 419.256 474.935 420.552 470.039 cv
420.408 470.039 419.832 471.695 419.688 472.055 cv
417.816 475.727 414.216 478.103 411.408 481.055 cv
412.056 479.831 412.704 478.535 413.136 477.239 cv
413.424 478.175 415.368 476.951 415.584 476.807 cv
419.112 474.143 420.048 469.391 421.92 465.647 cv
422.064 465.359 423 464.063 422.856 463.919 cv
419.976 467.879 419.688 473.927 415.296 476.879 cv
414.936 477.095 414.576 477.311 414.216 477.455 cv
414.36 477.311 414.576 477.239 414.72 477.095 cv
418.752 474.359 419.904 469.103 421.2 464.783 cv
419.328 468.815 415.944 471.839 413.712 475.655 cv
413.856 475.367 413.928 475.007 414 474.719 cv
416.304 470.831 420.336 467.519 420.48 462.695 cv
420.408 462.695 420.192 464.351 420.12 464.711 cv
419.04 468.455 416.088 471.263 414.072 474.503 cv
414.432 473.207 414.648 471.911 414.864 470.615 cv
415.44 471.695 416.808 470.399 417.24 469.751 cv
420.12 466.007 418.536 461.039 419.616 456.791 cv
419.688 456.575 419.976 456.287 419.76 456.143 cv
418.248 460.463 420.336 466.511 416.808 470.183 cv
416.592 470.399 416.376 470.615 416.16 470.759 cv
419.616 467.807 418.608 461.327 418.32 457.439 cv
417.96 461.615 415.8 465.071 415.008 469.103 cv
415.008 468.599 415.008 468.095 415.08 467.663 cv
416.088 463.847 418.32 459.887 416.952 455.927 cv
416.808 455.927 417.24 457.439 417.24 457.799 cv
417.528 461.111 415.944 464.207 415.08 467.303 cv
415.08 466.799 415.008 466.295 415.008 465.791 cv
416.952 464.207 415.944 460.895 415.008 458.951 cv
414 456.719 412.056 454.559 411.912 452.039 cv
411.552 452.111 412.128 453.623 412.2 453.839 cv
413.424 457.079 417.096 460.751 415.8 464.567 cv
415.656 464.783 415.584 465.071 415.368 465.287 cv
417.096 461.687 413.568 457.583 411.696 454.919 cv
411.48 454.631 411.336 454.343 411.12 453.983 cv
411.768 455.711 412.272 457.367 412.416 459.167 cv
412.56 460.895 412.632 464.351 413.928 465.719 cv
412.344 464.783 412.272 461.183 411.984 459.527 cv
411.624 457.151 410.76 455.063 409.248 453.263 cv
409.104 453.335 410.112 454.559 410.256 454.775 cv
411.552 456.935 411.84 459.167 412.2 461.543 cv
412.416 462.983 412.704 465.575 414.36 466.007 cv
414.36 466.511 414.432 467.015 414.36 467.519 cv
413.352 464.279 409.824 462.479 408.528 459.383 cv
408.24 459.455 409.176 460.751 409.32 460.895 cv
410.832 463.271 413.64 464.999 414.36 467.807 cv
414.36 468.239 414.36 468.743 414.36 469.247 cv
414 465.575 410.472 463.631 408.168 461.255 cv
409.104 462.695 409.752 464.135 410.184 465.791 cv
410.544 467.303 411.192 470.471 412.704 471.335 cv
411.624 471.119 411.048 469.751 410.688 468.815 cv
409.464 465.791 408.96 462.911 406.008 460.967 cv
405.864 461.111 407.16 461.975 407.376 462.191 cv
409.464 464.279 409.68 467.159 410.976 469.679 cv
411.624 471.047 413.136 472.199 414.144 470.759 cv
414 472.055 413.712 473.279 413.424 474.575 cv
412.992 471.119 409.032 469.319 407.952 466.079 cv
407.664 466.223 408.456 467.375 408.6 467.591 cv
409.896 469.751 414.072 472.487 413.136 475.439 cv
413.136 475.511 413.064 475.583 413.064 475.727 cv
413.136 472.127 409.608 470.183 407.376 467.951 cv
408.24 469.319 408.744 470.759 409.032 472.343 cv
409.248 473.711 409.752 476.807 411.264 477.599 cv
410.184 477.383 409.608 476.159 409.32 475.223 cv
408.24 472.415 408.096 469.463 405.144 467.807 cv
405.072 467.807 li
408.672 469.895 407.952 473.495 409.752 476.519 cv
410.256 477.383 411.624 478.175 412.488 477.311 cv
411.984 478.607 411.408 479.831 410.76 481.055 cv
411.264 477.671 407.88 475.223 407.664 471.983 cv
407.592 472.055 li
407.808 475.223 412.128 478.823 410.184 481.991 cv
410.184 481.991 410.112 482.063 410.112 482.135 cv
411.12 478.751 408.312 476.375 406.584 473.783 cv
407.16 475.511 407.16 477.095 406.944 478.895 cv
406.872 480.047 406.656 482.927 407.88 483.719 cv
406.944 483.503 406.656 482.351 406.584 481.487 cv
406.224 478.679 407.088 475.439 404.424 473.423 cv
404.352 473.495 li
407.448 475.871 405.648 479.399 406.656 482.495 cv
407.016 483.647 408.096 484.295 409.104 483.647 cv
408.312 484.871 407.376 486.023 406.368 487.103 cv
407.664 484.007 405.144 481.055 405.792 477.887 cv
405.72 477.887 li
405 481.199 408.24 485.159 405.648 487.967 cv
405.576 488.039 405.504 488.039 405.504 488.111 cv
407.16 485.303 405.576 483.071 404.496 480.335 cv
404.424 480.119 404.352 479.831 404.208 479.543 cv
404.352 481.343 403.848 482.927 403.2 484.583 cv
402.84 485.519 401.832 488.399 402.768 489.335 cv
401.832 488.975 401.976 487.607 402.12 486.743 cv
402.624 484.295 404.28 481.199 402.192 478.967 cv
402.12 479.039 li
404.424 481.487 402.12 484.799 401.904 487.607 cv
401.832 488.975 402.84 489.983 404.136 489.407 cv
395.208 497.471 383.976 500.711 372.168 500.567 cv
385.488 497.327 393.048 492.359 398.736 480.911 cv
403.344 471.695 400.968 460.319 390.456 455.279 cv
390.456 455.279 390.888 455.495 393.408 457.439 cv
402.84 465.647 398.16 478.463 393.048 484.583 cv
386.064 492.935 378.288 498.119 367.2 499.055 cv
364.248 497.543 361.08 496.391 357.696 495.887 cv
358.56 495.599 359.712 495.383 361.008 495.311 cv
365.904 495.023 370.584 495.815 374.904 492.719 cv
379.152 489.695 380.448 483.863 377.352 479.543 cv
374.76 476.231 370.224 475.151 366.696 477.671 cv
364.104 479.687 363.24 483.431 365.4 486.167 cv
366.984 487.823 369.648 488.399 371.376 486.743 cv
372.456 485.663 372.744 483.719 371.304 482.855 cv
370.44 482.351 369.648 482.711 369.216 483.503 cv
368.784 484.223 368.064 483.647 367.776 483.071 cv
367.128 481.343 368.712 479.831 370.296 479.399 cv
373.464 478.679 376.128 481.343 376.488 484.367 cv
376.704 486.527 375.984 488.471 374.688 489.911 cv
372.384 492.431 368.352 493.007 364.536 493.151 cv
356.976 493.367 346.176 494.951 338.544 496.679 cv
333.864 497.687 329.112 499.415 324.432 501.791 cv
322.992 502.655 321.624 503.519 320.256 504.455 cv
308.736 508.127 297.576 513.383 288.216 520.799 cv
286.704 523.391 285.336 525.983 284.112 528.791 cv
ef
125.496 341.879 mo
124.56 342.743 li
124.56 342.743 123.768 343.319 122.328 344.471 cv
120.888 345.551 119.52 346.487 117.576 346.487 cv
115.632 346.487 114.192 346.343 112.464 346.055 cv
110.736 345.695 109.728 346.487 108.216 346.487 cv
106.632 346.487 106.2 346.127 106.2 346.127 cv
106.2 346.127 106.848 346.055 107.712 345.839 cv
108.648 345.623 110.808 344.615 112.032 344.327 cv
113.256 343.967 113.976 343.319 114.768 342.959 cv
115.632 342.599 119.376 341.807 120.744 342.311 cv
122.184 342.815 125.496 341.879 125.496 341.879 cv
cp
129.24 337.343 mo
129.24 337.343 127.512 338.783 125.784 339.359 cv
124.056 339.935 121.32 340.511 119.592 340.871 cv
117.792 341.231 114.912 340.583 113.4 340.151 cv
111.96 339.719 106.488 338.711 104.616 338.351 cv
102.816 337.991 101.088 337.847 100.224 337.703 cv
99.3601 337.559 98.5681 337.487 98.5681 337.487 cv
98.5681 337.487 102.528 337.271 103.608 337.415 cv
104.76 337.487 107.712 337.847 109.224 337.703 cv
110.664 337.559 112.464 337.559 115.056 336.983 cv
117.576 336.407 120.744 335.903 124.056 336.191 cv
127.368 336.551 127.8 336.695 128.736 336.767 cv
129.672 336.839 130.536 336.839 130.536 336.839 cv
129.24 337.343 li
cp
63.6479 317.183 mo
63.6479 317.183 62.5679 317.471 61.272 317.831 cv
59.9041 318.119 58.752 319.199 56.0879 320.495 cv
53.4241 321.863 53.4958 321.215 52.1279 321.071 cv
50.76 320.855 49.968 320.711 48.168 321.071 cv
46.3679 321.503 44.28 321.503 44.28 321.503 cv
44.28 321.503 45.792 320.927 48.4561 320.063 cv
51.1199 319.271 52.2 318.911 53.6399 317.903 cv
55.0801 316.967 55.0081 316.535 57.96 316.607 cv
60.9119 316.607 63.6479 317.183 63.6479 317.183 cv
cp
69.9841 320.351 mo
69.9841 320.351 68.616 320.135 67.6799 320.063 cv
66.6721 319.991 65.6638 320.207 64.1519 320.711 cv
62.6399 321.287 60.7681 323.447 59.5439 325.463 cv
58.3918 327.407 53.6399 328.559 51.3359 328.847 cv
49.032 329.063 44.3521 330.719 44.3521 330.719 cv
44.3521 330.719 45.864 329.855 47.0879 329.207 cv
48.24 328.631 49.248 328.055 51.9839 326.615 cv
54.72 325.247 56.0879 323.519 59.1121 320.639 cv
62.064 317.687 63.6479 318.407 65.592 318.551 cv
67.6082 318.767 69.9841 320.351 69.9841 320.351 cv
cp
190.944 305.159 mo
190.944 305.159 194.112 304.655 195.84 304.583 cv
197.496 304.511 198.648 302.783 200.232 301.775 cv
201.816 300.767 203.04 299.687 204.624 299.687 cv
206.208 299.687 207.792 299.615 208.512 298.679 cv
209.304 297.815 209.448 297.239 209.448 297.239 cv
209.448 297.239 209.952 297.959 210.6 299.039 cv
211.176 300.191 212.544 303.863 213.192 306.167 cv
213.84 308.471 213.912 312.431 213.624 313.079 cv
213.408 313.727 213.624 316.391 213.84 317.111 cv
214.056 317.903 213.696 322.151 213.696 322.151 cv
213.696 322.151 213.12 321.071 212.976 319.487 cv
212.76 317.903 212.256 316.319 211.248 314.447 cv
210.312 312.575 209.016 313.151 208.584 309.695 cv
208.08 306.167 208.224 305.303 208.584 303.503 cv
209.016 301.703 209.376 300.119 209.376 300.119 cv
209.376 300.119 209.232 300.119 208.656 301.127 cv
208.08 302.135 207.36 304.367 204.84 305.159 cv
202.32 305.951 200.232 305.951 197.496 305.879 cv
194.832 305.807 195.048 305.231 193.68 305.231 cv
192.312 305.231 191.736 305.231 191.736 305.231 cv
191.736 305.231 190.944 305.231 190.944 305.159 cv
cp
182.592 295.583 mo
182.592 295.583 185.4 295.151 186.768 295.151 cv
188.136 295.151 189.504 293.783 193.104 293.207 cv
196.704 292.631 198.576 292.559 200.376 294.287 cv
202.104 296.015 202.248 295.871 204.264 296.087 cv
206.28 296.303 208.584 296.303 208.584 296.303 cv
208.584 296.303 205.776 296.735 204.192 296.951 cv
202.608 297.095 200.088 297.311 197.712 297.455 cv
195.336 297.671 192.168 296.951 189.216 296.735 cv
186.192 296.519 185.184 295.871 184.608 295.871 cv
183.96 295.871 182.592 295.583 182.592 295.583 cv
cp
193.464 262.319 mo
193.464 262.319 194.184 261.743 194.76 261.815 cv
195.336 261.887 196.848 261.167 199.224 261.023 cv
201.672 260.879 203.184 259.151 206.28 258.287 cv
209.304 257.495 211.248 258.287 213.768 258.935 cv
216.36 259.511 219.744 259.727 220.68 260.015 cv
221.616 260.375 225.216 260.663 225.648 260.519 cv
226.08 260.303 228.168 259.583 228.168 259.583 cv
228.168 259.583 226.728 260.519 225.504 260.951 cv
224.28 261.383 223.2 261.167 222.48 261.239 cv
221.688 261.311 219.528 261.383 217.656 261.599 cv
215.784 261.743 215.496 262.319 211.968 263.399 cv
208.368 264.479 207.504 263.471 204.264 263.687 cv
201.024 263.831 200.88 263.687 200.88 263.687 cv
200.88 263.687 201.456 264.047 203.328 264.263 cv
205.272 264.479 207.288 265.919 208.08 266.279 cv
210.312 267.359 212.76 269.447 215.064 270.887 cv
217.152 272.183 219.024 272.615 221.832 272.975 cv
224.64 273.335 225.432 273.911 226.368 274.271 cv
227.304 274.631 229.176 276.071 229.176 276.071 cv
229.176 276.071 227.376 275.207 226.44 274.775 cv
225.576 274.271 224.496 274.127 220.464 274.199 cv
216.504 274.271 214.776 273.407 212.184 272.975 cv
209.52 272.543 207.792 271.031 205.416 269.807 cv
202.968 268.583 198.144 265.631 196.632 264.191 cv
195.048 262.823 193.464 262.319 193.464 262.319 cv
cp
195.048 265.271 mo
197.496 267.359 199.44 268.871 202.32 270.167 cv
204.048 270.959 206.856 273.407 209.376 273.551 cv
211.824 273.767 212.832 275.639 214.776 277.079 cv
216.792 278.519 220.248 280.031 221.832 280.031 cv
223.416 280.031 225.864 280.535 225.864 280.535 cv
225.864 280.535 223.704 280.607 223.2 280.535 cv
222.696 280.535 220.752 280.535 218.736 280.535 cv
216.792 280.463 213.768 278.807 210.744 278.231 cv
207.72 277.655 204.552 274.343 202.824 273.263 cv
201.168 272.255 195.048 265.271 195.048 265.271 cv
cp
157.824 254.327 mo
157.824 254.327 163.008 257.567 164.52 258.503 cv
166.032 259.439 166.968 260.015 167.184 260.663 cv
167.4 261.239 166.824 261.599 167.832 262.031 cv
168.912 262.463 169.704 262.319 170.352 263.615 cv
171 264.839 174.024 270.887 174.672 271.895 cv
175.392 272.975 175.68 274.631 176.832 275.927 cv
178.056 277.223 178.848 278.519 180 279.167 cv
181.224 279.887 181.656 280.175 181.656 280.175 cv
181.656 280.175 181.296 279.671 180.144 278.015 cv
179.064 276.359 177.192 274.991 177.048 271.751 cv
176.904 268.583 177.552 268.295 177.336 265.271 cv
177.048 262.247 176.472 259.727 175.248 257.279 cv
174.096 254.903 173.808 254.327 173.16 252.383 cv
172.512 250.511 171.936 248.927 171.936 248.927 cv
171.936 248.927 173.592 252.095 174.888 254.543 cv
176.184 256.919 177.12 257.639 178.992 261.023 cv
180.864 264.335 182.016 266.063 181.872 268.367 cv
181.8 270.671 180.648 272.615 181.512 275.855 cv
182.448 279.167 182.592 279.743 182.952 280.463 cv
183.24 281.111 183.96 282.191 183.96 282.191 cv
181.08 280.823 li
181.08 280.823 178.488 278.663 177.768 278.087 cv
177.12 277.439 176.328 275.855 175.104 275.351 cv
173.808 274.847 170.424 272.903 169.344 270.671 cv
168.264 268.439 167.472 265.703 166.608 263.759 cv
165.744 261.815 164.952 261.383 163.8 259.871 cv
162.576 258.431 160.632 257.207 159.768 256.343 cv
158.904 255.479 157.824 254.327 157.824 254.327 cv
cp
208.8 291.911 mo
209.16 292.559 209.448 293.063 209.448 293.063 cv
209.448 293.063 208.368 292.703 206.64 292.055 cv
206.352 291.983 205.992 291.839 205.632 291.695 cv
206.712 291.767 207.72 291.839 208.8 291.911 cv
cp
32.3279 267.647 mo
32.3279 267.647 30.24 268.583 28.4399 268.727 cv
26.6399 268.871 23.9041 268.655 22.032 268.583 cv
20.2319 268.439 17.6399 267.071 16.344 266.279 cv
15.0479 265.487 10.0081 263.111 8.28003 262.247 cv
6.62402 261.455 5.04004 260.879 4.24805 260.519 cv
3.38403 260.159 2.73608 259.799 2.73608 259.799 cv
2.73608 259.799 6.552 260.663 7.56006 261.095 cv
8.63989 261.455 11.448 262.535 12.8879 262.823 cv
14.3279 263.039 16.1279 263.543 18.72 263.687 cv
21.312 263.759 24.48 264.047 27.6479 265.199 cv
30.7439 266.423 31.104 266.639 31.968 266.999 cv
32.832 267.287 33.696 267.575 33.696 267.575 cv
32.3279 267.647 li
cp
44.4958 276.719 mo
44.208 276.647 44.064 276.647 43.7039 276.503 cv
43.488 276.359 42.9839 275.999 42.2639 275.567 cv
42.1199 275.495 41.9761 275.351 41.832 275.279 cv
40.5359 274.415 38.9519 273.263 37.8 272.039 cv
35.928 269.951 35.7839 268.295 34.7759 266.567 cv
33.8398 264.839 33.2639 263.759 33.2639 263.759 cv
33.2639 263.759 36.4319 264.551 38.1599 263.759 cv
39.8159 262.895 41.832 260.591 42.8398 258.647 cv
43.8479 256.703 44.208 254.975 45.4319 254.471 cv
46.656 253.895 48.24 253.247 51.9839 252.095 cv
55.728 251.015 56.0879 250.871 56.0879 250.871 cv
56.0879 250.871 51.1919 251.159 49.3201 251.663 cv
47.448 252.095 43.9919 253.247 42.696 253.967 cv
41.3999 254.687 41.3279 254.543 39.96 254.759 cv
38.592 255.047 38.0879 255.695 36.3599 257.279 cv
34.7039 258.863 34.1279 258.935 33.8398 260.447 cv
33.552 261.959 33.7681 262.247 33.552 262.535 cv
33.2639 262.823 32.9761 262.895 32.9761 262.895 cv
32.9761 262.895 32.9041 262.535 32.4719 261.095 cv
32.04 259.727 31.824 260.087 32.3279 259.511 cv
32.9041 258.935 33.624 256.919 35.136 254.687 cv
36.72 252.527 37.4399 250.727 37.4399 246.551 cv
37.4399 242.303 37.0081 240.503 36.6479 238.703 cv
36.3599 236.975 35.7839 236.615 35.7839 236.615 cv
35.7839 236.615 35.4958 236.759 35.928 238.703 cv
36.3599 240.719 36.3599 242.951 35.4241 244.679 cv
34.416 246.407 31.824 249.935 31.104 250.871 cv
30.4561 251.807 29.592 254.327 29.7361 256.559 cv
29.9519 258.791 32.76 264.911 32.76 264.911 cv
32.76 264.911 32.04 264.551 31.248 263.615 cv
30.384 262.751 28.4399 258.071 26.928 255.407 cv
25.344 252.671 23.5439 248.639 22.248 246.263 cv
20.9519 243.815 19.656 242.951 19.0801 242.519 cv
18.5039 242.015 17.856 241.583 18.5039 242.231 cv
19.2239 242.951 22.176 247.559 22.176 249.359 cv
22.176 251.087 22.752 259.943 25.7039 261.815 cv
28.728 263.759 30.4561 264.479 31.5359 264.695 cv
32.688 264.839 32.9761 265.631 32.9761 265.631 cv
32.9761 265.631 34.1279 268.151 34.8479 269.375 cv
35.208 270.023 35.928 271.463 36.864 272.903 cv
34.7039 272.183 32.2559 271.751 29.6641 271.679 cv
20.0159 271.319 11.8079 279.239 13.3918 289.319 cv
14.2559 295.007 22.3918 299.471 26.4958 294.575 cv
27.2878 293.639 27.3599 292.559 27.2878 291.335 cv
27.2878 291.335 27.144 291.767 27.072 292.199 cv
26.7119 293.567 26.28 294.503 24.9119 295.079 cv
21.5281 296.519 16.1279 292.991 16.1279 288.815 cv
16.0559 281.471 22.4639 277.511 29.1599 277.583 cv
39.5999 277.727 46.9438 284.279 51.3359 292.127 cv
53.856 301.055 59.9041 308.903 67.1038 314.807 cv
65.9519 314.663 64.512 314.519 63.2878 314.375 cv
60.9119 314.015 56.0879 313.439 53.6399 313.079 cv
51.2639 312.719 49.248 312.431 48.96 312.071 cv
48.7439 311.711 47.448 309.407 46.0801 308.687 cv
44.6399 307.967 41.4719 305.807 39.7439 303.647 cv
38.0159 301.559 33.624 300.407 30.384 300.335 cv
27.144 300.263 26.5679 299.687 23.5439 299.543 cv
20.592 299.399 20.0879 299.399 18.936 299.183 cv
17.856 298.895 16.7759 298.679 16.7759 298.679 cv
16.7759 298.679 17.7119 299.111 19.0801 299.759 cv
20.448 300.407 23.5439 301.703 25.0559 303.071 cv
26.6399 304.367 30.0239 306.743 31.896 307.031 cv
33.7681 307.319 37.0801 309.191 38.0159 308.975 cv
38.9519 308.831 39.4561 308.903 41.4719 309.191 cv
43.488 309.479 44.3521 309.911 45.3599 310.487 cv
46.3679 311.063 47.2319 311.423 47.2319 311.423 cv
47.2319 311.423 45.6479 311.279 43.6321 310.847 cv
41.616 310.343 39.384 309.623 37.2239 309.191 cv
35.064 308.759 33.1199 308.327 31.6799 307.823 cv
30.24 307.247 29.0879 307.175 27.936 306.671 cv
26.856 306.239 25.2 305.231 24.408 304.223 cv
23.616 303.215 20.6641 302.279 19.0081 302.135 cv
17.3521 302.063 17.7839 302.639 15.1919 301.847 cv
12.5999 300.983 10.1519 300.263 7.77588 300.335 cv
5.3999 300.479 3.88794 300.119 2.448 299.903 cv
1.08008 299.687 0 299.471 0 299.471 cv
0 299.471 5.04004 300.695 6.552 301.127 cv
8.06396 301.631 9.93604 301.559 12.5281 303.143 cv
15.1919 304.655 16.5601 305.447 20.52 307.031 cv
24.408 308.687 26.208 306.527 27.3599 306.887 cv
28.512 307.247 29.8799 307.823 29.8799 307.823 cv
29.8799 307.823 27.3599 308.183 25.416 308.615 cv
23.4719 309.047 20.6641 310.631 19.4399 313.151 cv
18.2878 315.743 17.856 318.047 17.4958 319.847 cv
17.064 321.647 17.064 321.791 15.9119 324.815 cv
14.832 327.839 14.688 329.999 12.8159 331.655 cv
11.0159 333.383 9.57593 333.887 9.57593 335.687 cv
9.50391 337.487 9.86401 337.847 9.86401 337.847 cv
9.86401 337.847 9.79199 337.847 10.3679 335.975 cv
11.0159 334.031 11.8799 333.743 14.2559 331.799 cv
16.5601 329.927 18.144 327.047 18.936 324.887 cv
19.728 322.799 22.5359 316.823 22.968 315.527 cv
23.3279 314.159 23.3999 314.087 23.3999 314.087 cv
23.3999 314.087 25.6321 313.799 26.856 313.583 cv
28.0081 313.367 31.032 312.359 32.1121 311.855 cv
33.2639 311.351 34.9199 310.415 36.2878 310.703 cv
37.656 310.991 39.6719 311.639 41.9761 311.855 cv
44.3521 312.071 48.96 313.583 48.96 313.583 cv
48.96 313.583 45.864 313.727 42.9839 314.231 cv
40.032 314.663 38.448 314.591 35.7839 315.599 cv
33.1199 316.607 32.4719 317.183 32.1121 317.975 cv
31.824 318.767 30.8879 320.063 31.3201 323.447 cv
31.752 326.831 33.8398 332.231 34.1279 335.183 cv
34.488 338.207 34.5601 339.287 34.5601 339.287 cv
34.5601 339.287 35.208 336.767 34.9199 334.967 cv
34.6321 333.095 33.1919 328.847 34.0559 326.543 cv
34.9199 324.239 35.136 319.991 35.136 319.991 cv
35.136 319.991 39.168 319.415 42.2639 318.047 cv
45.2878 316.751 46.1519 315.959 47.376 315.167 cv
48.5281 314.375 50.04 314.015 50.04 314.015 cv
57.8879 315.095 li
57.8879 315.095 62.7839 316.031 64.8 316.679 cv
66.0242 317.039 69.3362 317.759 72.1438 318.479 cv
72.3601 318.695 72.5759 318.839 72.7917 318.983 cv
92.8801 331.583 118.296 331.367 140.184 324.599 cv
148.104 321.575 li
147.312 322.655 146.16 323.951 145.44 324.527 cv
144 325.751 141.48 327.695 139.608 327.911 cv
137.736 328.127 135.648 329.783 133.92 331.007 cv
132.12 332.159 130.536 334.823 130.536 334.823 cv
130.536 334.823 131.328 334.247 132.624 332.879 cv
133.92 331.511 136.584 330.575 139.104 330.215 cv
141.624 329.855 144.36 328.703 144.36 328.703 cv
144.36 328.703 142.704 330.575 141.84 331.223 cv
140.976 331.799 139.392 333.023 138.888 333.167 cv
138.456 333.311 137.952 334.031 136.296 334.319 cv
134.64 334.535 132.84 337.631 130.32 338.927 cv
127.728 340.223 126.288 341.303 126.288 341.303 cv
126.288 341.303 126.72 340.943 127.656 340.511 cv
128.664 340.079 131.616 338.855 133.344 337.703 cv
135.072 336.479 137.808 335.255 137.808 335.255 cv
137.808 335.255 137.304 336.695 136.368 337.343 cv
135.36 337.991 133.56 338.495 131.328 340.511 cv
129.096 342.455 126.936 343.967 124.92 345.263 cv
122.904 346.559 119.736 349.151 118.152 350.807 cv
116.568 352.391 114.408 354.263 114.408 354.263 cv
114.408 354.263 114.624 354.119 117.36 353.327 cv
120.096 352.463 121.104 351.527 123.264 350.951 cv
125.424 350.447 131.832 348.503 135.072 344.831 cv
138.312 341.087 137.664 338.711 138.168 337.343 cv
138.672 335.903 139.752 333.671 139.752 333.671 cv
139.752 333.671 142.776 331.871 144.216 330.575 cv
145.656 329.279 147.312 327.623 147.312 327.623 cv
147.312 327.623 147.168 328.343 146.952 330.215 cv
146.808 332.159 146.664 333.311 145.368 335.543 cv
144 337.775 143.064 338.351 142.056 343.967 cv
141.048 349.511 142.848 353.615 143.136 355.559 cv
143.496 357.503 143.136 359.591 143.136 359.591 cv
143.136 359.591 143.208 359.231 143.64 358.151 cv
144 357.143 144.36 356.063 144.576 354.551 cv
144.864 353.039 145.872 350.447 147.024 348.575 cv
148.176 346.703 148.176 345.335 148.464 342.887 cv
148.752 340.367 147.456 337.775 147.024 336.335 cv
146.592 334.895 147.096 332.735 147.6 330.503 cv
148.032 328.199 147.6 326.975 148.176 326.111 cv
148.68 325.319 151.56 321.503 152.928 319.775 cv
158.4 317.687 li
158.04 322.871 159.192 328.343 162.288 334.103 cv
165.528 340.151 171.36 345.479 178.56 345.479 cv
179.352 345.407 180.144 345.407 180.936 345.335 cv
180.36 345.191 179.784 345.119 179.208 344.975 cv
172.296 343.175 167.472 339.719 164.448 333.239 cv
156.312 315.527 167.4 300.983 184.104 294.935 cv
189.864 292.847 195.552 291.839 201.24 291.695 cv
202.176 292.199 203.256 292.775 204.552 293.279 cv
208.152 294.863 208.944 295.799 210.672 296.519 cv
212.4 297.311 213.336 299.039 213.336 299.039 cv
213.336 299.039 215.136 302.495 217.44 304.367 cv
219.744 306.239 222.552 309.407 223.848 310.847 cv
225.072 312.287 226.584 313.511 227.88 313.799 cv
229.176 314.087 232.632 315.095 232.632 315.095 cv
232.632 315.095 235.584 316.607 237.096 317.183 cv
238.536 317.759 240.912 319.055 242.136 319.919 cv
243.288 320.783 243.36 320.855 244.224 321.143 cv
245.088 321.503 247.248 321.359 247.248 321.359 cv
247.248 321.359 251.424 324.167 252.504 324.671 cv
253.584 325.175 256.032 326.687 256.032 326.687 cv
256.032 326.687 257.832 327.047 259.92 327.047 cv
262.08 327.047 264.384 325.823 264.384 325.823 cv
264.384 325.823 262.584 324.887 260.28 323.663 cv
257.976 322.439 253.512 320.855 251.856 320.351 cv
250.2 319.775 249.624 319.415 247.968 318.263 cv
246.24 317.183 245.736 317.255 244.728 317.255 cv
243.72 317.255 243.576 317.615 241.848 316.823 cv
240.12 316.031 238.032 315.311 235.728 314.447 cv
233.424 313.583 230.976 312.863 229.896 311.495 cv
228.888 310.127 228.24 310.271 227.592 309.911 cv
226.944 309.551 225.936 308.975 223.632 307.535 cv
221.328 306.095 219.384 302.639 217.872 301.271 cv
216.432 299.903 216 299.471 216.288 299.183 cv
216.504 298.895 216.792 298.967 217.584 299.183 cv
218.376 299.399 221.472 300.983 224.352 302.567 cv
230.04 305.663 235.656 306.815 241.2 310.199 cv
243.648 311.711 246.24 312.431 246.816 313.367 cv
247.392 314.231 247.968 314.375 248.544 314.591 cv
249.12 314.735 250.992 314.591 250.992 314.591 cv
250.992 314.591 252.144 315.023 254.736 316.247 cv
258.408 317.975 265.032 320.783 267.84 323.735 cv
269.064 325.103 268.848 325.175 271.08 326.543 cv
273.24 327.911 275.616 327.047 277.056 326.975 cv
278.496 326.831 280.296 326.183 280.296 326.183 cv
280.296 326.183 279.504 324.527 277.632 323.087 cv
275.76 321.719 272.88 321.647 271.296 321.143 cv
266.112 319.343 261.792 316.391 256.896 314.159 cv
254.592 313.079 251.856 311.999 250.632 310.847 cv
249.408 309.767 248.76 310.127 247.824 310.055 cv
246.96 309.983 244.008 309.119 241.416 307.823 cv
238.896 306.527 232.848 303.575 229.176 302.207 cv
225.504 300.839 222.912 299.615 222.912 299.615 cv
222.912 299.615 218.88 297.383 217.656 296.807 cv
216.504 296.231 215.856 295.223 215.352 294.647 cv
214.848 294.143 212.04 293.783 212.04 293.783 cv
212.04 293.783 211.68 293.207 211.104 292.127 cv
231.12 294.647 250.56 305.735 268.056 314.663 cv
271.728 316.535 275.472 318.407 279.216 320.351 cv
280.8 321.215 282.816 320.639 283.68 319.055 cv
284.544 317.399 283.968 315.455 282.384 314.519 cv
278.208 312.287 274.104 309.983 269.928 307.679 cv
251.496 298.679 229.032 286.655 207.072 285.215 cv
206.64 284.279 205.992 283.127 205.92 282.623 cv
205.776 281.903 205.488 281.327 204.552 280.679 cv
203.688 280.103 202.968 279.455 202.68 278.807 cv
202.32 278.231 199.008 274.055 198.216 272.759 cv
197.496 271.535 197.784 271.679 197.64 270.815 cv
197.496 270.023 196.992 270.023 195.984 268.295 cv
194.904 266.567 192.96 263.111 192.528 262.031 cv
192.024 261.023 191.304 258.575 191.592 257.927 cv
191.88 257.279 194.472 254.327 194.472 251.015 cv
194.544 247.703 191.952 244.679 191.016 242.663 cv
190.152 240.575 187.92 235.895 187.92 235.895 cv
187.92 235.895 188.064 236.687 188.712 238.343 cv
189.36 239.999 189.648 244.247 189.216 246.047 cv
188.784 247.775 188.928 248.063 188.712 251.231 cv
188.568 254.327 190.152 257.207 190.152 257.207 cv
190.152 257.207 190.224 258.503 190.8 259.727 cv
191.304 260.879 192.312 264.119 192.312 264.119 cv
192.312 264.119 194.184 267.431 194.76 269.015 cv
195.336 270.599 194.616 270.311 194.688 270.815 cv
194.76 271.247 196.848 272.975 196.848 272.975 cv
196.848 272.975 198.144 274.991 200.016 277.799 cv
201.888 280.679 201.672 279.815 201.816 281.255 cv
202.032 282.695 202.104 283.127 202.824 283.775 cv
203.544 284.351 204.552 284.711 204.552 284.711 cv
204.552 284.711 204.624 284.855 204.768 285.143 cv
200.88 285.071 197.136 285.287 193.32 285.935 cv
192.816 285.791 192.24 285.647 191.592 285.503 cv
190.224 285.071 189.216 284.495 186.552 283.415 cv
183.888 282.263 178.632 280.679 176.976 279.959 cv
175.32 279.311 174.24 278.951 173.16 278.159 cv
172.08 277.367 172.296 275.999 170.064 274.343 cv
167.832 272.687 163.44 271.895 160.992 271.823 cv
158.616 271.751 156.744 270.671 156.744 270.671 cv
156.744 270.671 156.744 271.031 158.472 272.255 cv
160.128 273.407 160.992 274.127 163.008 276.071 cv
165.024 278.015 168.192 278.879 169.992 279.023 cv
171.864 279.167 172.8 279.239 174.24 279.671 cv
175.608 280.175 175.392 280.175 176.832 280.895 cv
178.272 281.687 180.648 282.767 181.872 283.559 cv
183.024 284.135 187.488 285.935 189.576 286.727 cv
186.984 287.375 184.392 288.239 181.944 289.319 cv
168.552 295.151 163.728 307.823 151.056 313.295 cv
145.152 315.815 138.528 316.391 131.4 313.439 cv
124.56 310.559 119.736 303.719 122.976 296.159 cv
124.848 291.911 131.904 290.687 134.784 293.639 cv
135.864 294.863 135.936 296.015 135.72 297.527 cv
135.648 298.031 135.504 298.535 135.576 298.535 cv
136.152 297.311 136.584 296.231 136.152 294.863 cv
134.064 288.023 123.84 289.031 120.384 294.503 cv
117.936 298.391 117.288 302.639 118.08 306.527 cv
117.504 306.023 117.072 305.447 116.784 305.087 cv
115.704 303.503 113.976 300.839 113.904 298.967 cv
113.76 297.095 112.248 294.935 111.24 293.063 cv
110.232 291.191 107.64 289.391 107.64 289.391 cv
107.64 289.391 108.216 290.255 109.44 291.623 cv
110.736 292.991 111.456 295.799 111.6 298.319 cv
111.744 300.839 112.68 303.647 112.68 303.647 cv
112.68 303.647 110.952 301.847 110.448 300.983 cv
109.872 300.047 108.72 298.319 108.648 297.887 cv
108.576 297.383 107.856 296.807 107.712 295.223 cv
107.64 293.567 104.688 291.479 103.608 288.815 cv
102.456 286.223 101.52 284.711 101.52 284.711 cv
101.52 284.711 101.808 285.143 102.168 286.151 cv
102.6 287.087 103.536 290.183 104.616 291.983 cv
105.624 293.783 106.704 296.663 106.704 296.663 cv
106.704 296.663 105.264 296.015 104.688 295.007 cv
104.184 293.999 103.752 292.127 101.952 289.751 cv
100.152 287.447 98.7839 285.071 97.6321 282.983 cv
96.4797 280.967 94.176 277.583 92.6638 275.855 cv
91.1521 274.199 89.4958 271.895 89.4958 271.895 cv
89.4958 271.895 89.5681 272.111 90.2161 274.847 cv
90.864 277.655 91.7278 278.735 92.0881 280.967 cv
92.5198 283.127 93.8879 289.607 97.344 293.207 cv
100.872 296.735 103.248 296.231 104.616 296.807 cv
105.984 297.455 108.072 298.679 108.072 298.679 cv
108.072 298.679 109.656 301.847 110.88 303.359 cv
112.032 304.943 113.616 306.671 113.616 306.671 cv
113.616 306.671 112.896 306.455 111.024 306.167 cv
109.152 305.807 107.928 305.663 105.84 304.079 cv
103.68 302.567 103.176 301.631 97.7039 300.191 cv
92.2322 298.751 87.9841 300.263 86.0398 300.407 cv
84.0242 300.623 82.0081 300.047 82.0081 300.047 cv
82.0081 300.047 82.3679 300.191 83.3757 300.695 cv
84.384 301.199 85.3918 301.559 86.9041 301.919 cv
88.4158 302.351 90.9358 303.575 92.6638 304.799 cv
94.4641 306.095 95.8318 306.239 98.28 306.671 cv
100.728 307.103 103.392 306.095 104.904 305.735 cv
106.344 305.375 108.504 306.095 110.664 306.743 cv
112.896 307.319 114.192 306.959 115.056 307.679 cv
115.632 308.183 118.44 310.631 120.24 312.215 cv
122.256 315.527 125.424 318.191 129.312 319.775 cv
129.816 319.919 130.32 320.135 130.752 320.279 cv
112.248 324.455 92.9519 323.087 75.8162 313.727 cv
64.2239 307.391 53.064 296.087 52.416 282.119 cv
52.0559 273.119 55.3679 267.575 60.408 260.807 cv
61.272 259.655 62.136 258.503 63 257.351 cv
62.928 257.279 60.3359 260.303 60.0479 260.591 cv
54.72 266.639 50.9761 271.895 50.1838 280.319 cv
50.04 281.471 50.04 282.551 50.04 283.703 cv
48.384 281.183 46.4399 278.879 44.136 277.007 cv
44.28 276.935 44.4241 276.791 44.4958 276.719 cv
ef
442.584 341.879 mo
443.592 342.743 li
443.592 342.743 444.312 343.319 445.824 344.471 cv
447.264 345.551 448.632 346.487 450.576 346.487 cv
452.448 346.487 453.888 346.343 455.688 346.055 cv
457.416 345.695 458.352 346.487 459.936 346.487 cv
461.52 346.487 461.88 346.127 461.88 346.127 cv
461.88 346.127 461.304 346.055 460.368 345.839 cv
459.504 345.623 457.344 344.615 456.12 344.327 cv
454.896 343.967 454.104 343.319 453.312 342.959 cv
452.52 342.599 448.776 341.807 447.336 342.311 cv
445.968 342.815 442.584 341.879 442.584 341.879 cv
cp
438.84 337.343 mo
438.84 337.343 440.64 338.783 442.368 339.359 cv
444.024 339.935 446.76 340.511 448.56 340.871 cv
450.36 341.231 453.24 340.583 454.68 340.151 cv
456.192 339.719 461.592 338.711 463.464 338.351 cv
465.336 337.991 466.992 337.847 467.856 337.703 cv
468.72 337.559 469.512 337.487 469.512 337.487 cv
469.512 337.487 465.624 337.271 464.472 337.415 cv
463.32 337.487 460.368 337.847 458.928 337.703 cv
457.416 337.559 455.616 337.559 453.096 336.983 cv
450.504 336.407 447.336 335.903 444.024 336.191 cv
440.712 336.551 440.352 336.695 439.416 336.767 cv
438.48 336.839 437.616 336.839 437.616 336.839 cv
438.84 337.343 li
cp
504.504 317.183 mo
504.504 317.183 505.512 317.471 506.88 317.831 cv
508.176 318.119 509.4 319.199 511.992 320.495 cv
514.656 321.863 514.584 321.215 516.024 321.071 cv
517.392 320.855 518.184 320.711 519.984 321.071 cv
521.784 321.503 523.872 321.503 523.872 321.503 cv
523.872 321.503 522.288 320.927 519.624 320.063 cv
517.032 319.271 515.88 318.911 514.44 317.903 cv
513.072 316.967 513.144 316.535 510.192 316.607 cv
507.24 316.607 504.504 317.183 504.504 317.183 cv
cp
498.168 320.351 mo
498.168 320.351 499.464 320.135 500.472 320.063 cv
501.408 319.991 502.416 320.207 503.928 320.711 cv
505.44 321.287 507.384 323.447 508.536 325.463 cv
509.688 327.407 514.512 328.559 516.816 328.847 cv
519.12 329.063 523.8 330.719 523.8 330.719 cv
523.8 330.719 522.288 329.855 521.064 329.207 cv
519.84 328.631 518.832 328.055 516.168 326.615 cv
513.432 325.247 512.064 323.519 509.04 320.639 cv
506.016 317.687 504.504 318.407 502.488 318.551 cv
500.544 318.767 498.168 320.351 498.168 320.351 cv
cp
377.208 305.159 mo
377.208 305.159 373.968 304.655 372.312 304.583 cv
370.584 304.511 369.432 302.783 367.848 301.775 cv
366.264 300.767 365.112 299.687 363.528 299.687 cv
361.944 299.687 360.36 299.615 359.568 298.679 cv
358.848 297.815 358.632 297.239 358.632 297.239 cv
358.632 297.239 358.128 297.959 357.552 299.039 cv
356.904 300.191 355.608 303.863 354.888 306.167 cv
354.24 308.471 354.24 312.431 354.456 313.079 cv
354.672 313.727 354.456 316.391 354.24 317.111 cv
354.096 317.903 354.384 322.151 354.384 322.151 cv
354.384 322.151 354.96 321.071 355.176 319.487 cv
355.32 317.903 355.824 316.319 356.832 314.447 cv
357.84 312.575 359.064 313.151 359.568 309.695 cv
360 306.167 359.928 305.303 359.496 303.503 cv
359.064 301.703 358.704 300.119 358.704 300.119 cv
358.704 300.119 358.92 300.119 359.424 301.127 cv
360 302.135 360.792 304.367 363.312 305.159 cv
365.832 305.951 367.92 305.951 370.584 305.879 cv
373.32 305.807 373.104 305.231 374.4 305.231 cv
375.768 305.231 376.344 305.231 376.344 305.231 cv
376.344 305.231 377.208 305.231 377.208 305.159 cv
cp
385.488 295.583 mo
385.488 295.583 382.68 295.151 381.312 295.151 cv
380.016 295.151 378.576 293.783 374.976 293.207 cv
371.376 292.631 369.504 292.559 367.776 294.287 cv
365.976 296.015 365.832 295.871 363.816 296.087 cv
361.8 296.303 359.496 296.303 359.496 296.303 cv
359.496 296.303 362.376 296.735 363.96 296.951 cv
365.544 297.095 368.064 297.311 370.44 297.455 cv
372.816 297.671 375.912 296.951 378.936 296.735 cv
381.888 296.519 382.896 295.871 383.544 295.871 cv
384.12 295.871 385.488 295.583 385.488 295.583 cv
cp
374.688 262.319 mo
374.688 262.319 373.896 261.743 373.32 261.815 cv
372.744 261.887 371.304 261.167 368.856 261.023 cv
366.48 260.879 364.896 259.151 361.872 258.287 cv
358.848 257.495 356.832 258.287 354.312 258.935 cv
351.792 259.511 348.408 259.727 347.472 260.015 cv
346.464 260.375 342.936 260.663 342.504 260.519 cv
342 260.303 339.912 259.583 339.912 259.583 cv
339.912 259.583 341.352 260.519 342.648 260.951 cv
343.872 261.383 344.952 261.167 345.672 261.239 cv
346.392 261.311 348.552 261.383 350.424 261.599 cv
352.296 261.743 352.656 262.319 356.184 263.399 cv
359.712 264.479 360.648 263.471 363.888 263.687 cv
367.128 263.831 367.272 263.687 367.272 263.687 cv
367.272 263.687 366.696 264.047 364.752 264.263 cv
362.88 264.479 360.864 265.919 360.072 266.279 cv
357.768 267.359 355.32 269.447 353.016 270.887 cv
351 272.183 349.128 272.615 346.32 272.975 cv
343.512 273.335 342.72 273.911 341.784 274.271 cv
340.776 274.631 338.904 276.071 338.904 276.071 cv
338.904 276.071 340.776 275.207 341.64 274.775 cv
342.576 274.271 343.584 274.127 347.616 274.199 cv
351.648 274.271 353.304 273.407 355.968 272.975 cv
358.56 272.543 360.288 271.031 362.736 269.807 cv
365.112 268.583 369.936 265.631 371.52 264.191 cv
373.032 262.823 374.688 262.319 374.688 262.319 cv
cp
373.032 265.271 mo
370.584 267.359 368.712 268.871 365.76 270.167 cv
364.032 270.959 361.224 273.407 358.776 273.551 cv
356.328 273.767 355.248 275.639 353.304 277.079 cv
351.36 278.519 347.904 280.031 346.32 280.031 cv
344.736 280.031 342.216 280.535 342.216 280.535 cv
342.216 280.535 344.376 280.607 344.88 280.535 cv
345.384 280.535 347.328 280.535 349.344 280.535 cv
351.36 280.463 354.384 278.807 357.336 278.231 cv
360.36 277.655 363.6 274.343 365.256 273.263 cv
366.984 272.255 373.032 265.271 373.032 265.271 cv
cp
410.328 254.327 mo
410.328 254.327 405.072 257.567 403.632 258.503 cv
402.12 259.439 401.112 260.015 400.896 260.663 cv
400.68 261.239 401.328 261.599 400.248 262.031 cv
399.24 262.463 398.448 262.319 397.8 263.615 cv
397.152 264.839 394.056 270.887 393.408 271.895 cv
392.76 272.975 392.472 274.631 391.248 275.927 cv
390.096 277.223 389.232 278.519 388.08 279.167 cv
386.928 279.887 386.496 280.175 386.496 280.175 cv
386.496 280.175 386.856 279.671 387.936 278.015 cv
389.016 276.359 390.888 274.991 391.032 271.751 cv
391.176 268.583 390.6 268.295 390.816 265.271 cv
391.032 262.247 391.68 259.727 392.832 257.279 cv
394.056 254.903 394.344 254.327 394.92 252.383 cv
395.568 250.511 396.216 248.927 396.216 248.927 cv
396.216 248.927 394.488 252.095 393.192 254.543 cv
391.968 256.919 390.96 257.639 389.16 261.023 cv
387.288 264.335 386.136 266.063 386.208 268.367 cv
386.28 270.671 387.504 272.615 386.568 275.855 cv
385.704 279.167 385.488 279.743 385.2 280.463 cv
384.84 281.111 384.12 282.191 384.12 282.191 cv
387 280.823 li
387 280.823 389.664 278.663 390.312 278.087 cv
390.96 277.439 391.752 275.855 393.048 275.351 cv
394.344 274.847 397.656 272.903 398.808 270.671 cv
399.888 268.439 400.608 265.703 401.544 263.759 cv
402.408 261.815 403.128 261.383 404.352 259.871 cv
405.504 258.431 407.448 257.207 408.312 256.343 cv
409.176 255.479 410.328 254.327 410.328 254.327 cv
cp
359.28 291.911 mo
358.92 292.559 358.704 293.063 358.704 293.063 cv
358.704 293.063 359.712 292.703 361.44 292.055 cv
361.8 291.983 362.16 291.839 362.52 291.695 cv
361.44 291.767 360.36 291.839 359.28 291.911 cv
cp
535.752 267.647 mo
535.752 267.647 537.84 268.583 539.64 268.727 cv
541.44 268.871 544.248 268.655 546.048 268.583 cv
547.848 268.439 550.512 267.071 551.808 266.279 cv
553.104 265.487 558.144 263.111 559.8 262.247 cv
561.528 261.455 563.112 260.879 563.904 260.519 cv
564.696 260.159 565.416 259.799 565.416 259.799 cv
565.416 259.799 561.6 260.663 560.52 261.095 cv
559.44 261.455 556.704 262.535 555.192 262.823 cv
553.752 263.039 552.024 263.543 549.432 263.687 cv
546.768 263.759 543.6 264.047 540.504 265.199 cv
537.408 266.423 537.048 266.639 536.112 266.999 cv
535.248 267.287 534.456 267.575 534.456 267.575 cv
535.752 267.647 li
cp
523.584 276.719 mo
523.872 276.647 524.088 276.647 524.376 276.503 cv
524.592 276.359 525.168 275.999 525.888 275.567 cv
526.032 275.495 526.176 275.351 526.248 275.279 cv
527.544 274.415 529.2 273.263 530.28 272.039 cv
532.224 269.951 532.368 268.295 533.304 266.567 cv
534.312 264.839 534.816 263.759 534.816 263.759 cv
534.816 263.759 531.648 264.551 529.992 263.759 cv
528.264 262.895 526.248 260.591 525.24 258.647 cv
524.232 256.703 523.872 254.975 522.648 254.471 cv
521.496 253.895 519.912 253.247 516.168 252.095 cv
512.424 251.015 511.992 250.871 511.992 250.871 cv
511.992 250.871 516.96 251.159 518.76 251.663 cv
520.632 252.095 524.088 253.247 525.384 253.967 cv
526.752 254.687 526.752 254.543 528.12 254.759 cv
529.488 255.047 529.992 255.695 531.72 257.279 cv
533.448 258.863 534.024 258.935 534.312 260.447 cv
534.6 261.959 534.384 262.247 534.6 262.535 cv
534.816 262.823 535.104 262.895 535.104 262.895 cv
535.104 262.895 535.248 262.535 535.68 261.095 cv
536.112 259.727 536.328 260.087 535.752 259.511 cv
535.248 258.935 534.528 256.919 532.944 254.687 cv
531.36 252.527 530.712 250.727 530.712 246.551 cv
530.712 242.303 531.072 240.503 531.432 238.703 cv
531.792 236.975 532.368 236.615 532.368 236.615 cv
532.368 236.615 532.584 236.759 532.152 238.703 cv
531.72 240.719 531.72 242.951 532.728 244.679 cv
533.664 246.407 536.328 249.935 536.976 250.871 cv
537.696 251.807 538.56 254.327 538.344 256.559 cv
538.128 258.791 535.32 264.911 535.32 264.911 cv
535.32 264.911 536.04 264.551 536.904 263.615 cv
537.696 262.751 539.64 258.071 541.224 255.407 cv
542.736 252.671 544.536 248.639 545.904 246.263 cv
547.2 243.815 548.496 242.951 549.072 242.519 cv
549.648 242.015 550.296 241.583 549.576 242.231 cv
548.928 242.951 545.904 247.559 545.904 249.359 cv
545.904 251.087 545.328 259.943 542.376 261.815 cv
539.424 263.759 537.696 264.479 536.544 264.695 cv
535.392 264.839 535.104 265.631 535.104 265.631 cv
535.104 265.631 533.952 268.151 533.304 269.375 cv
532.944 270.023 532.224 271.463 531.288 272.903 cv
533.448 272.183 535.824 271.751 538.488 271.679 cv
548.136 271.319 556.344 279.239 554.76 289.319 cv
553.824 295.007 545.76 299.471 541.584 294.575 cv
540.792 293.639 540.792 292.559 540.864 291.335 cv
540.864 291.335 540.936 291.767 541.08 292.199 cv
541.368 293.567 541.872 294.503 543.168 295.079 cv
546.552 296.519 551.952 292.991 552.024 288.815 cv
552.024 281.471 545.616 277.511 538.992 277.583 cv
528.552 277.727 521.208 284.279 516.816 292.127 cv
514.224 301.055 508.176 308.903 500.976 314.807 cv
502.128 314.663 503.568 314.519 504.792 314.375 cv
507.24 314.015 512.064 313.439 514.44 313.079 cv
516.816 312.719 518.832 312.431 519.12 312.071 cv
519.408 311.711 520.632 309.407 522.072 308.687 cv
523.44 307.967 526.608 305.807 528.336 303.647 cv
530.064 301.559 534.528 300.407 537.696 300.335 cv
540.936 300.263 541.584 299.687 544.536 299.543 cv
547.488 299.399 547.992 299.399 549.144 299.183 cv
550.296 298.895 551.376 298.679 551.376 298.679 cv
551.376 298.679 550.44 299.111 549.072 299.759 cv
547.704 300.407 544.608 301.703 543.024 303.071 cv
541.44 304.367 538.128 306.743 536.256 307.031 cv
534.384 307.319 531.072 309.191 530.136 308.975 cv
529.128 308.831 528.696 308.903 526.68 309.191 cv
524.592 309.479 523.8 309.911 522.792 310.487 cv
521.712 311.063 520.848 311.423 520.848 311.423 cv
520.848 311.423 522.504 311.279 524.52 310.847 cv
526.536 310.343 528.768 309.623 530.928 309.191 cv
533.016 308.759 534.96 308.327 536.4 307.823 cv
537.84 307.247 539.064 307.175 540.144 306.671 cv
541.296 306.239 542.88 305.231 543.672 304.223 cv
544.536 303.215 547.488 302.279 549.144 302.135 cv
550.728 302.063 550.296 302.639 552.888 301.847 cv
555.48 300.983 558 300.263 560.304 300.335 cv
562.68 300.479 564.264 300.119 565.632 299.903 cv
567 299.687 568.08 299.471 568.08 299.471 cv
568.08 299.471 563.04 300.695 561.528 301.127 cv
560.016 301.631 558.216 301.559 555.552 303.143 cv
552.96 304.655 551.52 305.447 547.632 307.031 cv
543.672 308.687 541.872 306.527 540.72 306.887 cv
539.64 307.247 538.272 307.823 538.272 307.823 cv
538.272 307.823 540.72 308.183 542.736 308.615 cv
544.68 309.047 547.488 310.631 548.64 313.151 cv
549.792 315.743 550.224 318.047 550.656 319.847 cv
551.016 321.647 551.088 321.791 552.168 324.815 cv
553.248 327.839 553.464 329.999 555.264 331.655 cv
557.136 333.383 558.504 333.887 558.576 335.687 cv
558.648 337.487 558.288 337.847 558.288 337.847 cv
558.288 337.847 558.288 337.847 557.712 335.975 cv
557.136 334.031 556.2 333.743 553.896 331.799 cv
551.52 329.927 550.008 327.047 549.216 324.887 cv
548.424 322.799 545.544 316.823 545.184 315.527 cv
544.752 314.159 544.68 314.087 544.68 314.087 cv
544.68 314.087 542.52 313.799 541.296 313.583 cv
540.072 313.367 537.12 312.359 535.968 311.855 cv
534.888 311.351 533.16 310.415 531.792 310.703 cv
530.424 310.991 528.408 311.639 526.104 311.855 cv
523.8 312.071 519.12 313.583 519.12 313.583 cv
519.12 313.583 522.216 313.727 525.168 314.231 cv
528.12 314.663 529.632 314.591 532.368 315.599 cv
535.032 316.607 535.608 317.183 535.968 317.975 cv
536.328 318.767 537.264 320.063 536.832 323.447 cv
536.4 326.831 534.312 332.231 533.952 335.183 cv
533.664 338.207 533.52 339.287 533.52 339.287 cv
533.52 339.287 532.872 336.767 533.16 334.967 cv
533.448 333.095 534.888 328.847 534.024 326.543 cv
533.16 324.239 532.944 319.991 532.944 319.991 cv
532.944 319.991 528.984 319.415 525.888 318.047 cv
522.792 316.751 521.928 315.959 520.776 315.167 cv
519.552 314.375 518.112 314.015 518.112 314.015 cv
510.264 315.095 li
510.264 315.095 505.296 316.031 503.28 316.679 cv
502.128 317.039 498.744 317.759 496.008 318.479 cv
495.72 318.695 495.504 318.839 495.288 318.983 cv
475.272 331.583 449.784 331.367 427.896 324.599 cv
419.976 321.575 li
420.768 322.655 421.92 323.951 422.64 324.527 cv
424.08 325.751 426.6 327.695 428.472 327.911 cv
430.344 328.127 432.432 329.783 434.232 331.007 cv
435.96 332.159 437.544 334.823 437.544 334.823 cv
437.544 334.823 436.752 334.247 435.456 332.879 cv
434.232 331.511 431.496 330.575 429.048 330.215 cv
426.528 329.855 423.792 328.703 423.792 328.703 cv
423.792 328.703 425.448 330.575 426.24 331.223 cv
427.104 331.799 428.76 333.023 429.192 333.167 cv
429.696 333.311 430.2 334.031 431.784 334.319 cv
433.44 334.535 435.312 337.631 437.832 338.927 cv
440.352 340.223 441.792 341.303 441.792 341.303 cv
441.792 341.303 441.36 340.943 440.424 340.511 cv
439.488 340.079 436.464 338.855 434.736 337.703 cv
433.008 336.479 430.272 335.255 430.272 335.255 cv
430.272 335.255 430.776 336.695 431.784 337.343 cv
432.792 337.991 434.592 338.495 436.824 340.511 cv
438.984 342.455 441.216 343.967 443.232 345.263 cv
445.176 346.559 448.344 349.151 449.928 350.807 cv
451.512 352.391 453.672 354.263 453.672 354.263 cv
453.672 354.263 453.528 354.119 450.792 353.327 cv
448.056 352.463 447.048 351.527 444.816 350.951 cv
442.656 350.447 436.32 348.503 433.008 344.831 cv
429.768 341.087 430.488 338.711 429.984 337.343 cv
429.48 335.903 428.328 333.671 428.328 333.671 cv
428.328 333.671 425.376 331.871 423.864 330.575 cv
422.424 329.279 420.768 327.623 420.768 327.623 cv
420.768 327.623 420.984 328.343 421.128 330.215 cv
421.344 332.159 421.416 333.311 422.784 335.543 cv
424.152 337.775 425.016 338.351 426.096 343.967 cv
427.104 349.511 425.304 353.615 424.944 355.559 cv
424.584 357.503 425.016 359.591 425.016 359.591 cv
425.016 359.591 424.944 359.231 424.512 358.151 cv
424.08 357.143 423.792 356.063 423.504 354.551 cv
423.216 353.039 422.208 350.447 421.056 348.575 cv
419.904 346.703 419.904 345.335 419.616 342.887 cv
419.4 340.367 420.624 337.775 421.056 336.335 cv
421.56 334.895 420.984 332.735 420.552 330.503 cv
420.12 328.199 420.552 326.975 419.904 326.111 cv
419.4 325.319 416.592 321.503 415.152 319.775 cv
409.752 317.687 li
410.112 322.871 408.96 328.343 405.864 334.103 cv
402.624 340.151 396.792 345.479 389.592 345.479 cv
388.8 345.407 388.008 345.407 387.216 345.335 cv
387.792 345.191 388.368 345.119 388.944 344.975 cv
395.784 343.175 400.68 339.719 403.632 333.239 cv
411.768 315.527 400.68 300.983 383.976 294.935 cv
378.288 292.847 372.528 291.839 366.912 291.695 cv
365.976 292.199 364.824 292.775 363.528 293.279 cv
359.928 294.863 359.208 295.799 357.48 296.519 cv
355.752 297.311 354.744 299.039 354.744 299.039 cv
354.744 299.039 353.016 302.495 350.64 304.367 cv
348.336 306.239 345.6 309.407 344.304 310.847 cv
343.008 312.287 341.496 313.511 340.272 313.799 cv
338.976 314.087 335.448 315.095 335.448 315.095 cv
335.448 315.095 332.496 316.607 331.056 317.183 cv
329.616 317.759 327.168 319.055 326.016 319.919 cv
324.792 320.783 324.72 320.855 323.856 321.143 cv
322.992 321.503 320.832 321.359 320.832 321.359 cv
320.832 321.359 316.728 324.167 315.648 324.671 cv
314.568 325.175 312.048 326.687 312.048 326.687 cv
312.048 326.687 310.248 327.047 308.16 327.047 cv
306.072 327.047 303.696 325.823 303.696 325.823 cv
303.696 325.823 305.496 324.887 307.872 323.663 cv
310.176 322.439 314.568 320.855 316.296 320.351 cv
317.952 319.775 318.528 319.415 320.184 318.263 cv
321.84 317.183 322.344 317.255 323.352 317.255 cv
324.36 317.255 324.576 317.615 326.304 316.823 cv
328.032 316.031 330.048 315.311 332.352 314.447 cv
334.728 313.583 337.176 312.863 338.184 311.495 cv
339.264 310.127 339.912 310.271 340.488 309.911 cv
341.136 309.551 342.216 308.975 344.448 307.535 cv
346.752 306.095 348.768 302.639 350.208 301.271 cv
351.648 299.903 352.08 299.471 351.864 299.183 cv
351.648 298.895 351.36 298.967 350.568 299.183 cv
349.704 299.399 346.68 300.983 343.728 302.567 cv
338.04 305.663 332.424 306.815 326.88 310.199 cv
324.432 311.711 321.912 312.431 321.336 313.367 cv
320.688 314.231 320.184 314.375 319.608 314.591 cv
318.96 314.735 317.16 314.591 317.16 314.591 cv
317.16 314.591 315.936 315.023 313.344 316.247 cv
309.744 317.975 303.048 320.783 300.312 323.735 cv
299.088 325.103 299.232 325.175 297.072 326.543 cv
294.84 327.911 292.536 327.047 291.024 326.975 cv
289.656 326.831 287.856 326.183 287.856 326.183 cv
287.856 326.183 288.648 324.527 290.448 323.087 cv
292.32 321.719 295.272 321.647 296.856 321.143 cv
301.968 319.343 306.288 316.391 311.184 314.159 cv
313.56 313.079 316.296 311.999 317.52 310.847 cv
318.744 309.767 319.392 310.127 320.256 310.055 cv
321.192 309.983 324.144 309.119 326.664 307.823 cv
329.256 306.527 335.232 303.575 338.904 302.207 cv
342.648 300.839 345.24 299.615 345.24 299.615 cv
345.24 299.615 349.272 297.383 350.424 296.807 cv
351.648 296.231 352.296 295.223 352.8 294.647 cv
353.232 294.143 356.04 293.783 356.04 293.783 cv
356.04 293.783 356.4 293.207 356.976 292.127 cv
336.96 294.647 317.592 305.735 300.096 314.663 cv
296.352 316.535 292.608 318.407 289.008 320.351 cv
287.424 321.215 285.408 320.639 284.472 319.055 cv
283.608 317.399 284.184 315.455 285.768 314.519 cv
289.944 312.287 294.048 309.983 298.152 307.679 cv
316.584 298.679 339.048 286.655 361.008 285.215 cv
361.512 284.279 362.088 283.127 362.16 282.623 cv
362.304 281.903 362.664 281.327 363.528 280.679 cv
364.464 280.103 365.112 279.455 365.472 278.807 cv
365.76 278.231 369.072 274.055 369.864 272.759 cv
370.656 271.535 370.368 271.679 370.44 270.815 cv
370.584 270.023 371.088 270.023 372.168 268.295 cv
373.176 266.567 375.192 263.111 375.624 262.031 cv
376.056 261.023 376.776 258.575 376.488 257.927 cv
376.272 257.279 373.68 254.327 373.608 251.015 cv
373.536 247.703 376.128 244.679 377.064 242.663 cv
378 240.575 380.232 235.895 380.232 235.895 cv
380.232 235.895 380.016 236.687 379.368 238.343 cv
378.72 239.999 378.432 244.247 378.864 246.047 cv
379.368 247.775 379.224 248.063 379.368 251.231 cv
379.584 254.327 378 257.207 378 257.207 cv
378 257.207 377.856 258.503 377.352 259.727 cv
376.776 260.879 375.768 264.119 375.768 264.119 cv
375.768 264.119 373.896 267.431 373.32 269.015 cv
372.744 270.599 373.536 270.311 373.392 270.815 cv
373.32 271.247 371.232 272.975 371.232 272.975 cv
371.232 272.975 369.936 274.991 368.136 277.799 cv
366.264 280.679 366.48 279.815 366.264 281.255 cv
366.12 282.695 365.976 283.127 365.256 283.775 cv
364.536 284.351 363.528 284.711 363.528 284.711 cv
363.528 284.711 363.528 284.855 363.384 285.143 cv
367.2 285.071 371.016 285.287 374.76 285.935 cv
375.336 285.791 375.912 285.647 376.488 285.503 cv
377.856 285.071 378.936 284.495 381.6 283.415 cv
384.192 282.263 389.52 280.679 391.104 279.959 cv
392.76 279.311 393.912 278.951 394.92 278.159 cv
396 277.367 395.784 275.999 398.016 274.343 cv
400.248 272.687 404.712 271.895 407.088 271.823 cv
409.536 271.751 411.408 270.671 411.408 270.671 cv
411.408 270.671 411.336 271.031 409.68 272.255 cv
407.952 273.407 407.16 274.127 405.072 276.071 cv
403.056 278.015 399.888 278.879 398.088 279.023 cv
396.288 279.167 395.352 279.239 393.912 279.671 cv
392.472 280.175 392.76 280.175 391.248 280.895 cv
389.808 281.687 387.504 282.767 386.208 283.559 cv
385.056 284.135 380.592 285.935 378.576 286.727 cv
381.168 287.375 383.688 288.239 386.208 289.319 cv
399.6 295.151 404.352 307.823 417.096 313.295 cv
422.928 315.815 429.552 316.391 436.68 313.439 cv
443.592 310.559 448.416 303.719 445.104 296.159 cv
443.232 291.911 436.176 290.687 433.368 293.639 cv
432.216 294.863 432.144 296.015 432.432 297.527 cv
432.504 298.031 432.576 298.535 432.576 298.535 cv
432 297.311 431.568 296.231 431.928 294.863 cv
434.016 288.023 444.24 289.031 447.696 294.503 cv
450.144 298.391 450.792 302.639 450.072 306.527 cv
450.576 306.023 451.008 305.447 451.296 305.087 cv
452.376 303.503 454.176 300.839 454.248 298.967 cv
454.32 297.095 455.832 294.935 456.84 293.063 cv
457.92 291.191 460.44 289.391 460.44 289.391 cv
460.44 289.391 459.936 290.255 458.64 291.623 cv
457.416 292.991 456.624 295.799 456.48 298.319 cv
456.336 300.839 455.4 303.647 455.4 303.647 cv
455.4 303.647 457.2 301.847 457.704 300.983 cv
458.208 300.047 459.36 298.319 459.432 297.887 cv
459.576 297.383 460.224 296.807 460.368 295.223 cv
460.512 293.567 463.392 291.479 464.544 288.815 cv
465.624 286.223 466.56 284.711 466.56 284.711 cv
466.56 284.711 466.272 285.143 465.912 286.151 cv
465.552 287.087 464.544 290.183 463.536 291.983 cv
462.456 293.783 461.448 296.663 461.448 296.663 cv
461.448 296.663 462.816 296.015 463.392 295.007 cv
463.968 293.999 464.328 292.127 466.2 289.751 cv
468 287.447 469.296 285.071 470.448 282.983 cv
471.6 280.967 473.904 277.583 475.416 275.855 cv
476.928 274.199 478.584 271.895 478.584 271.895 cv
478.584 271.895 478.512 272.111 477.864 274.847 cv
477.288 277.655 476.352 278.735 475.992 280.967 cv
475.632 283.127 474.192 289.607 470.736 293.207 cv
467.28 296.735 464.904 296.231 463.536 296.807 cv
462.168 297.455 460.008 298.679 460.008 298.679 cv
460.008 298.679 458.424 301.847 457.272 303.359 cv
456.048 304.943 454.536 306.671 454.536 306.671 cv
454.536 306.671 455.256 306.455 457.128 306.167 cv
459 305.807 460.152 305.663 462.312 304.079 cv
464.4 302.567 464.904 301.631 470.448 300.191 cv
475.92 298.751 480.168 300.263 482.112 300.407 cv
484.056 300.623 486.072 300.047 486.072 300.047 cv
486.072 300.047 485.712 300.191 484.704 300.695 cv
483.696 301.199 482.688 301.559 481.248 301.919 cv
479.736 302.351 477.216 303.575 475.416 304.799 cv
473.688 306.095 472.248 306.239 469.8 306.671 cv
467.352 307.103 464.688 306.095 463.248 305.735 cv
461.736 305.375 459.648 306.095 457.416 306.743 cv
455.184 307.319 453.96 306.959 453.096 307.679 cv
452.448 308.183 449.64 310.631 447.84 312.215 cv
445.824 315.527 442.728 318.191 438.84 319.775 cv
438.336 319.919 437.832 320.135 437.328 320.279 cv
455.832 324.455 475.2 323.087 492.264 313.727 cv
503.856 307.391 515.088 296.087 515.664 282.119 cv
516.024 273.119 512.712 267.575 507.672 260.807 cv
506.808 259.655 505.944 258.503 505.08 257.351 cv
505.152 257.279 507.816 260.303 508.032 260.591 cv
513.36 266.639 517.176 271.895 517.968 280.319 cv
518.04 281.471 518.112 282.551 518.04 283.703 cv
519.768 281.183 521.712 278.879 523.944 277.007 cv
523.872 276.935 523.728 276.791 523.584 276.719 cv
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 11.0.0
%%For: (pingwin pingwin) (home)
%%Title: (page decorations with branches [Converted].eps)
%%CreationDate: 4/2/2015 8:52 AM
%AI9_DataStream
%Gb!R&lZ+>oE@&-0gT995AntWrG9nq!DOF)p,!ef<R3L>(MaX"'7RNrth&)jnALLN?V5KqFIZAcn#LlK%fi?cD-*k6M?6UUV4T'6t
%`".=dZb&.LTAR<Zp1JT!rQ3`9QKics[s#3`mE7/3n:Ua]o:,'tVjEp?IE,p^Bfl$;D*>(>48KEZHs>3U]7,3Qp#a6dbD3:hn#ig#
%^V74i]t8dmPI$n;?=*T@s8Ak1W.4Z!S(m7Y\@[61q/Fp1(Mh6EZ3u0^qXWD,T:FTLec(Jn=1<+>?[pVp^OH0?(]Eg+m4[4dm)O%J
%+!,b&qAWJJrSj/nr,;1rIr`!MJ(CqJrl]5_^V+pkE.@\&F8,64ItXkPqMWAfrq?3=-3)>af,o_4q]F.5If7OQS(e0kk\OMSs7u/Z
%1Ha[s3W&J"[(NiZR_9(.=lREoT04+j5C^<)s2JVGs+Ps#Z[>gKT!,m)3SomC6!MW,m=.mB@=@\Jh"jD(,_ki5f.UId?9VWK4JlUM
%/,_d1?b`C4Mu@p,cI]Gq?E`OgSCP=CkFS%3521iF*ts)$p?)3)5<8Tof9agemkr-M]mohEc+iq^X@GG.92bA"hV;Gps8M-)K-or_
%^Gn1T^V"oBIHt`nq`ikB@TqqlZ2`Ai^Uq/YpA1IUkhYVF9YaHLp;R(*X#D]'?,!qbT3h*S=4]*TGP=nadD'NET,j11F0tq[?0G5I
%/,$;49f(sn`;R4#T=\N0^?Pdplhd/iDdNF]41>+P+7F->&#n@4g!9W'cCaRSru_7?l=9kRLPP2^''6lXq>B7?"\'=1s+?qdl$_5R
%qtBG^rH8%B^\)fbH)9A$_k2C#f5J0EM4T+j`NT'GrD-eV^?L.Fa8<J-YC?$4S%C>gpu,#@hgKp$p=89BGC>lc^O6%W7qZSscSOG+
%>G'`aou?UHRo_iNoHPH\mpH(j-(fVck4Nq2^Uq+iNT]U/r@)(%B:npGc:d0VpV!7"nc..W0.q0]Dn`p"I.c=?ebbs<T"i=(5&fuR
%]_8g92DFTHj6<2qAP_dipj4[phqYm2$hiqrDf-W!`u!RFGQjXfp=o$g?_J?=rkij>kOcOTc*#s%0t5`KJ,/g7p?pK(BTJJ&rka0!
%]RTTWKCeNMf6=\_Y@!5CR9JV-TC]"qipN`4f['Q3hr'")rUis7[EYc:Du]Nplg-iVcb[@^F[!IM`BO%Vs7Z$O0/)_EfhZpts$[mT
%^]*H`a1o35EIIO>rL2X#FObg\(G0:7`dc7fcQ=denf)N@^#BPe78*Q)LL:(hs6G1,[_J>tZX9=&bJ,ZBcbJgrlhB+cT(hu-FkQY?
%p30kmEVAGL*W3hOhS4:"q59#+X398#-*Q"$YJ,J@\]=TTrTOjmL-^(VLTdkpr8OcLNE=,Ps*_f`X?Z;eLnB,40DQ.(m^hnK'MppW
%s7#a]YfEjfH@n9GS+"ZV+8Xdli(lT2#"S`ChHXK20(7\si=E\Np8bpHo%+EPcf_mPbL(5MqA[.3qr(mhgqN,Vr%7p6AXBM@6+DC5
%VtXQfp@@p:?ZDV7p_WnJ-\$VjpWEO6j.G2c?bX8o0<QBLTD(#6?dXf)5MV1+QhNG*?f/_bI/UbCanMPTs*p*Mhi4\>^:Uq(IXh=E
%YBhbIe"qKU]>+1<blbQS2uMFf]^MVEo(iuf&o6Vo@BTVNhtF#/\Eu(uqnrI"jm,-:]m9QqpYtX*E:r#ZoUdfhr[I<**rFD^hL=U2
%FpWTqrVfE:b27TDV#JDGUQ7d/j^6^)Hue/Z^+iuDrP"<Hr%[XROk[LK5@6YTN":>^p[U]3nXofCrXo1fbJq:eDg_T:e)ueEULAEG
%c!UHkGLP0Q2cp$+D5Hqp^V+u8Is#T/_XI$84mMjT:\Q^*Rm6nsp#YT8Cam$o^ukIWcXQD;qtNm8IK)6SGCB)MGFr:Lf2g0i?H`*6
%g\`;QpORh)H2d<hkBu09^3j;L;;^lWchmS,Tpqe&Y.o6iN:bS+g,6[lmd@f-TD8%?^0b)ghr"EWft%.7DHd)+5%BJ:=OX"Lr95lc
%odiE_(4e\sG5:^`2j`E.T7(kVlHQBMP&5DjFasAdqYomTg$c*DqJc0&cYjjW^V77lH#Vm%C<\VBEL^=k5C@m'H2mg/b48BpfmO^!
%T=jgNqs4%D:L<tl&=8hXg-9t%RelNq9BSKdo&?jF=p.X)HR.(Mi8O\+jm-!7I?Lejof(_i5C7hMDqAL9I/K&3=-p+nn,$I!]XbEe
%U9;V]i[P^FrVFdVX#CQ%^U\ajE.*6-Dp8*<I$8cZT%rt]ldt$BlB^O"(0n/jDYdq2&(gdWYK]`;psjkCg"hIrhS3t@e96!(0>G/K
%Ie2^@oZhrW1rK3d<B6s@*[[*^B=%@*Ga/sPGFnr/J^(+Nq5^"Va'HEl]m9RdmD\2Q5Posi+1bO?cR4e;VnY4gl'mI?(rm2CAQj<$
%ff.=OHb8cchd0YQF:nBGo(MY9eU(p-jISPY[l5tDcQ;oqr6.f@5MY/p3RkqBJZGtlDdIQ07AT1OI?Ao8jR=O7H0+n\md9]G.g16T
%mcbs<Fa*l`qY>L#jQsq%\pO5HrI%5SO,'J,nbr(VfB3P_4YbQ\>^-#7jk[iL,0o,1X8M9i^ODt7T3h?Ujjg93l'l!d(XG<AcKDh>
%qW`I^0AlO%I`:-DkANP,`Tp;`j6H&pg3RiE"QL.sgqE%Un3B#2q!3%d,e^(3hKN\c^5k*I?9W>mrKBm`qYi!@(YO/Si"^t('-bf,
%l>#M0Kp+!8I-l+X)-h[NM74uNi8s"dqU&;k$m.#so^RiG@!TIMdGOE)nE'>P?/`PH]QZNMlK]B?:&iEJo`"^Sp$G7Up<Cd9o@Iop
%If6Ot__obY?ep3Q2jDG]]#<o@FMl.9K_GuS[kI`.ro3MJc`cfOq<"1On`O8/5Ij%OEV[N.X3\QU[[ZAg(d;n]<uoo=TCi%;Y+L(?
%)4-DUJ&]I*4b"pd\CbVgY:o?/.djh9IS,HGlIo=q35'V5c.saSIQr>-qld9.nVb[krSV<Q^]"Fakj0q9?X_^>s5WP5LRX(RVm3"p
%S[;,WS"&/n/n8/^)B%=+?$*[(]^N/,qrd,Qh,k0im<u#B(VRPoHMPr7b)9T^?F`+!hll]th<"%sq:j6/n@Oa<+YLC=s#-JBd>Roo
%n(S%cc)\J.2kLXB>h1;&eTZ63s7V;mmd>#)C&08-^:M!B%nl/&!"2#2Z1"`smN+R#P&TZ]$/[CY>r4cW;;dV@D]W4i^3[)UIcthL
%Pfq[klZ95Bqh3&2KjQ>oqp?pd?ba>Np>m[BrRItGF*"ZO.QP$(]<:+!?[l$tg3%o@bj/$@BHMNTVq"GTC77=o)JaZ&f'4(.!+C2b
%C".Pm:]&1NR!4O4rT*'MfD(;_Vd3dclhU(e^7U?d4mI=li2-%D^"7)bf/tE1k%"7o?hG9h`9W1_?2!R6o8gNufBK-l_@Jl:?\>2%
%qqd:LPDc\"Y4#.2O!!`iD[?)IJml@]*IZ\V]f%fcntuF>Jj4c]rRA#7K>[CHL\j6[gP;(JhKSeb.<TUec-#q8f6H0N7m7lY^Ad`K
%X0,Q3rqVbX&B7,i#iEAr/-"qkf>-.ch`,(+rMmX4lF1E@IdHZt`*mc81\fi-Ermb';6u<R@W^?hhHrIeNafIP2Y03>-Z3DGiQ(u:
%BYr(Z(emj$'cd#)jGA<SU>LDRK#$\)&3IBum,0fMZ%LAZmGJQu$g=[5'^Xr;#WJ:0]X3b(2Y/Ye:Bb^SqE70<!Kd3^JS\_.+pZ^+
%_S$t&CI0%-7Dj`>B4$/a`=Muq:@!DU2>@,hrVuaH5<=/bdM><EqY*G&J,bG!pP&2!`]s,8.>S@njSc)#NW/qa84,a.ro#M;IduP'
%0H"!6bKiOFY(hmOlZlW;s/bVc=NYs`U,Qpph_&\_CPJ6AgXbt$',lo&2>%Q+qrJVu=3>;>gR%TGDREhMc83TrQ@+/2[K#s8Qh,Xm
%J%t9X[.@8jhGj1#G.sl+C\f,f^SZ4_5Gk/d45\c+ilu2H$d,p3HeWOH(-Z9p=13SV?:HkW5$n\H0BXo/p=`QnHO#SfQHo6,In"A/
%Ea,YaWRsQsp1Rh,o4.1fW:g':I5LXTp\o"+=m\AV^6eH"oWdZ,m7l0^IRW/9qCh_`oOLViPl?W+n;Mh8Z>]G5I`l1RNB>_JYGH_b
%g%tkq]Q?/@qD7Dg.rdp.ffl7Am$WL;TaAitrgD?A[b]fOSG2JadusRbb&P/V1`k-'>l*VAlWKk+gs5cbPcZ>3AdhZgI<494G:T/r
%\tnqTcgBKb@\$e@r6]f6H[g+QS(#MQqCph?<%-ZVjlka\[sXC$/no+,+Y8%tG'pPj?gm>rf.=S2&",QfP1T99gE7ce&_\A=I1Y*u
%$+;L:3sK,Gl-RDE?\6RA8"h?DZ_nqB**;4m]f$Q"<R]FoG!N8B'2qToDGo6He$%[4Q`R[K;"mWLn_;H&@PsRXM;=2&'7+)NY,4B"
%47A#\P-RZJ8LGFB<a=(aLi*$<^37EYN0:[;eV69eRS_%HkUj@>d@0QfgYS1^C&R4?>pqa=@E74hVpB?HCr,+@+A2U?\a`Q+)h^HM
%J`!PAI??g9q\\BXkbt4BD]q_uf-p$Glb:P:96bC6C;?o0MU8f8>&EcC)]KP@Jm*!'d/UIld^pE3r#upc>K^\6h:+[BA/YpP:lVmU
%"\JsH<HhA,rO_GqgHra@3[5HtES1+SbGH5=L)Z$CU]4TccR"fK+''?QXYj$F"g@.)2G-<XkK3^8;LH;L@_/tVob$R!&Q76IY$CeT
%D<i5.JrM3EOW&r]9jM$$Du4q[mSf1=(f^Dim<rEP`$P2Gq5M#\*Tg-mo*5$Dd'`kU5)#jCd'-uQp-.68`?"oX[`)RbE[ga*D"G&O
%e<YNZgR[)B@'/?57>nTM1"KXui`PQbRL+!%Mg0dmq'0k)@Zn6<49*m.\6m7Y*8D+:87G]0>ub6Mm7jusKR;GSiU>U3=`\<CK5QhX
%&KR$Pimou-mn2R"DoZ>`jdePub+_,kctdLI>[fok#F.Ce.K5WVWK4`3Z&An2b@0j6>KAg82Dls-X;+uta#45hmp!UHl*kJ."Z?@o
%F/a3-TZr-4Ac=@NZ*?tQn$PTp;kKtA3b5S5=V"l&eWe1eo.>Zs]3jH"W!mk;Yl0%93a\$J&b1:H=a3l=.%)'VRk5jY.$dm5.H0,X
%lf3_Z,LE9;?b8ij8kf)J@)["em.cT7SVT2Y:@\"SV)E$g$rN?DdhZ4&D"b9$J:>VGU@8'/,3b:^XHd#0B"E.;Pd?@,WD?2H%'V6i
%#sa@>$`Lr=;Du4tR]?ldcu8)lRnE,7hM*KP@5E>N[@[d0GjG(J_&i5oV&\b8IHK#4p^p"S\a2)*:*o=f>un>\WU'E`pf5d!$eGNm
%EKgkn[bm:IO)-T[Ja6@":&(!eL:_EVM^JIODbK8oXbN)[58k<*$[ouZnZAsGCf^)n)#+"KHNcUhAm+uh0KlH+lOD6e/GWD5rO6Kn
%=k1JcNV3Jn0TR)dfQu]/OEW9Tk[0-6htBaco\V"\Y3c#Jn(`><9?m1mC5NX9NTp41j!^-47LWS8Yg628Zf^D3+SRJ-C]uZJk#=3a
%=/J@;f'P+p6G9k8"aVi,;=r*i>?=FT*N6Ge9"PfCZ08ssK$!:^O\N)3[gbgSRO25K/S<3BfL#;\XNEc]'l&#9!GnUsp/LZHgIS5$
%g7I2KKJ>$B!d*.t&P`G":i&-ZISBHD%eeG<+\)2#K,[ePj8)kE*uCEifMlY<@&A.ZY[NMtff!`K[:/4on26XH)n'gd#jgH1a*t(k
%`BI^/PDR+3EsanqeRY*!=LWS/\NUXo6fK#l[o(=p)_0(*I\Yk_k.]4/WncC@bfF'n9raX?1AouWZ=1bgd)A6)<qXMM+L\Z[#@]?l
%Oguk30up2%bco.^s"tD.Ib-Z9M:s4EP5c!Nc:b\01NYVMprpEh_kP:J.g$"TL1Q-oAH/eHa*/jGPXMTOF@+0!l`7oS%Eu&UC3orm
%D9aQ28i,`f'h.SD/[ZFQ]SCNJ/'e%V%W.oVD;(R(CF1G$#dKe6Yg+ppIAY95l^'lN]:EHD4hMmt.Xh$`P\+[DEa=@:pDo2#PA?m#
%'K4tr-+h+hs6d"b[GnGh"`*jjEndj\Z7W#(f*^CPZL1n)m7s_H$f$J3GOK$#_b&%bGHQ9/I>E+5*/4j0JW2oM?`%c+k%8+&PH>AJ
%bk>K[`HOn*:XFUaS^T]O51g)][r.nbG;u,FXft+/GhEU]"P0-\LFj*EW9qPQELtbLqP"@Z!#,6CkX2PmC/(1?hb4st6'mmJ?YjLf
%?!rXCM2R$J@I6ge()I3om5m"?KB(OZD7(D:Q5U3;$njHc>/U2B[r$@U)#&]#*T%+NcHJg80riPTXeSi*]rUV/#R7]%IP]K/m@kEL
%C(H14p'(>/_?:R#a$tQcDh`/1e%@Cs!D:gIQ>AJ2h$%Fm>\<AAQ"*a0rlf=ZO9'4,E7`?I)=A"NbIXeoa,Lu?,LSJ"B,MG"=0g#$
%ETO+#I<hCO]6G23c,/h,'N;)"luTmHUOd$%Dnq=l?!T+]<p4;6*3<b"Nq$5`VX<9K>D(\OCT23R8^F)!p4s-7'cX!kVqWK,&WVeZ
%\'0rAO2!UQ`=1%9o0r0I+<%_&X?N89UB5K@-tZ"SA'AWRgD!)Q:UE,UBIVFM:j6]0@=U(`C4uLin^3l`^&gt7U'HoSXbjNO;td4U
%bKS-n<46]@$:)olPY7E.jbgrK@E(dI@h)Pm?'U^#)Yb1fH'ndtDLBGnMae,%[^R)\MG5M1ck+%/Ca(.VZ6U[<0CP*Y]c?T3b;jY8
%?fA"3XW>KlFTE(?=b!=9<c$G9oM*mO?H;pSaXActhH8ifiC;QO?qcrHY'k(E,9Qc$VfEj7`"':r^W2%`l*LLFZesC\Slspt4'oib
%6f53uNW"j,;:r*tj'-]NbQS9/%:>_Ia@8,Y9IXCuR$-n2G'H[)j/f4n&J_k9>rA*c2Yu&Z1#(iJ_aire<AN*P5D%Ltm-H`4gt)E0
%gW7c-H%Dm@fPLe:nNp0XlfP3!.5hH+UFmr/B^3Vs)>KZR/o0e]H>;Gj5/9*6%29nk/,4sm=tF/gPI:(O,J!I(RA7&:>`;ql?\AZ.
%#EqI_<un$BG'>%J&FREtNj%dG**6<^ZS(q,8n!MS0(ju%L?\A]j*JWRQ09ggYmE>sPi=4#"]q2E.s?aW#5S>UhPE':cE[1aUFfVG
%&q!mK!bH;5Y#htE:U)>hHWGW_"Z5ScDW''1S#D`@Ga-0od3A7U>j,l*??*j2ZHu;([P:qqo6d%%o^UumY(Cu$r*E=nA$OCXa6tXk
%19+CC^9),@?X9R/=+1(Y/M*q:>J73dljd:Jc"pn]l4C&LA>ilL1IYphZfsQ_4E9<U*`#Z,J5TS;'2QIOLhiZEGSCp.l8DPn&iVB]
%crBYQg#;8?e9CeLU4CL:YEP<B<^cg7GIKn_Hqg'u^8O_-daC6AQY@D7`@W+K!U+L)8($C4G?nX[XQX6EXosl_U4QE+,URq9."cq4
%Yq;qnQL8$,0SlA89X#P@lr!id"(m\^>IdS0gO4Bq$*Ps-^$9,>ZtjK*:J)&07Yp\oK3.8h,A`t0l^J*?`soq#hfik?_+)L]>Nqto
%Ino=h^)*QsB],QVAJ<J"<UMCR2c_C(CW9/BA(+s;.1-,p6LK=qb)X945StIM1a?7cE?"kU*2sj`EOLeBEG.(d<#"Zo,HkS2FA^h*
%EQ#E(k7N\Wb&\BCFGaCFltl:IA]XT6V:]0[_C%SK3FhXF`_=R5Z#QhuQPtK$$(1d7DBc_jO>S^JC?KJM!N]:M2_FS',K:.drWhZ7
%eD*GDRjU`>68u=VWU1SXUcM!b_V6oCVD`:K-Z)jjGhR<lO7-qgBW&;?NR`Hc[/$`%N+(\1[Zs,K\2_mcG+"RADeLjq\XJS<f@*N1
%ap)+T:T'3'J_b/oc!2>..5>1R$/V0fPku"t)^pBCbXXuTakXtO^Y-&cFp2A=D.[e%.dq7XUlH"0L*f1:cK)j:NetZ*bbdg?HT.Xl
%ELT[E%*HDNYDp[S!U[Lu)=<eWKp3H1a.o,EKj4:ti"Fgcp8O$tQgM%V9;CHZOn)4t0Pm0%S2-Op0NcOlo*ZJcRob!0oMabPMAbjJ
%-OmbGYMo34a<AUg.ba>Ra95q6P0sICnJOeW*hO7mBO;1Fm!8cA8`/BdL-c"0.qC4fNHBP&o-YTP8kk^eo\;V\6+ZD$76bd!Q-nb)
%<C3;$KTgt(r&2sXR/4+".u>*'LF/3<dctdhc-LuHKRS%iJ;g]!-!fO,:(;bXBoQPY@I6=*)`5?p:fgfNahC&.jWk])(-"XDFJUp_
%@/lUsJ<8J[;KcoK4$u7>,A:TAjj?5S<0a!H/;&o^;b`D_m"M;G49K3PHdhI6#FVk1W1Ko@<i#2(e:9O2#)`Xt8UpSA=`WF"AFEf^
%B;a]t0/cUF:!F;BZHZgtRf>f\_0j@1.5tIdGZeK,d[SfFqhHRUN=ZadjZV(_\RLpqg$t?6M&$K;!?sgbH<'<F;0^,J/iu!40P8`\
%b74TPe4s9onpR2abiM!@qaeV/B<#+K'HCaT4c_G2M'R^d`\!hc8&A:i!a`utF&u1mhJS4Z9mo]8H>]X0a!JS5ls)Ld]J!KF#PVZ"
%f+a@?C'JN)MK&2o0+.NXIFk;Rp<4Y6KR1H:81Oh@6;.p$iu/Q5_Z"MaRf,1=&f-=nL@Ob8le4Kl.c")_*!0A!IaDKjrjiLTLQ%RB
%=j/Y;fWU71XkK^t#!F+RbhK[.CfB.<ls7!>V?q$i)prOX;T(;c>qM@`_4.rNX$?Z?Hms`lM?QRGB>B-Y?$g"I+Qe]g9_$-^jsX06
%^3HZ2!O::Q4IF08TWthDn;LdWm>*h=b_65`Q_Pj&\)B1k>M:nmpZh\hGYaXa"gsDB5rNhU9H9jB4hd_"k%I*@5GG%M78V?;V0kD.
%YtKT#Y(;`!>8bl3V9j\,mWL!4gR)&&HmaVnCapD$4ej;+q`pQ*]:PgY$M1.J+XOaIkDI-DgH1*9qt<\E-3jW+=a`DGm:%1#\(Zpe
%8S6C^NteT!Zeb>11b/0i\Sh-1g^Xf!]&k6cgSgBR&Q$fKDuX>ib]UCu<1(?T;V0(^+)^((o>r+<'R[_4@OpR0i.J5tk`=oTYAD?4
%,O")fC^<^VY?^&TCu4Et@N6m'S:e-u$N/JlmUke&H0^bV4D*?8Vus:"'I$eX,m\rUCkIST>L.^<m0n?[C-bCDJKgL])cL.+#7?%_
%'?GVZ--Tah63^U,c9a-7JoKfsX9\'$CQY]Ql-8.]'Y1snG']iOh$A:`Lu'Jk'81pBoot>HT#VYZ?bOR2E4jH(.W6k_Np^$CiV**]
%<^@kf-&[NlU*DM76^r=0G4P]Ch*]M,10J%6R2XmDITSbnliE4u8C#aB40I><LRLAmmD4h>!.XWM:*L$c,#pOM`ZmT/JVa7_WMR0T
%QmrqMr"_[.H+']/M70D"L3d`6WhAbi$ValRn?pM>K-l+:6!kK\`p>B*kHqM;7`(h=Spd!N&++'BKL=XWfJ!1+`#`<@(YW.pRMgXX
%VOfL)V_oLq^UI]Tn7G@(>CG8X%faSIi7IC;I=j)Hbg%(?><rp?+[/E8eo&qD-o>>:F]!lB+H<du:q"s\1j6HBJ7Io>gh+?3dDGj0
%_T1BZCbp*fCij/Vajq3:ZssK6C]tLX@B@k[oq;+:@q@1]HY/'^<epsS3WgpkOW`0*_6QY$BqT$9o3P1:=i<@W]+nkb2je)4@:mt8
%KWATpdmbW@iFWb@Lk2%tJ:-=`!M%Ci^/(u>=aGFfB=h$SK2-cJcN;g#>9<QB4Pfuk,A8S_6lZtGBP8NUfeKikCJ13q['e!<%304:
%EX4$</_UKWFXShF,R\XS/)mSuLLrYcbn>mgb;m1:3M\P>n9KVbc&8Z6@;6C:j.`&?[6?JN1qO6NBE2h1<%_AGG#e*hncZ,G49rAS
%0i0QTC\nk=mK-[`jJk8P2XVIHg1YMKD=TB&^h`*Ka4In5%YX4_&]b`M5mqDN0\`BgoEifdGm(JXAoXH*[^C?b?smh%r681BCKl?#
%Z(5J.gX[Pf9:EMZ,1Aqf>DO)nD1^M/.&_e$Di8E:I8U=*-M]taj>OQ^*hZ_j64#MkeEo@L%_MCF4`IkZb\\7,2'n;m%I@r[/i(e_
%!6(A0iqV9h^ANr*mG^Rd9b:P\=9W.J@]j[R"@.#N/ln55"=,US<hX:bE@S77k%kM]0%u]A()dtuoEbgO^i'6`#9NX#0$*t4UNIA;
%+98j3L<,Sm.YB^(;N"]#ird;<fhiW)b$j]_-q;aGr!_KFf\?gi9!2BKF!5o4!>(So&W3%H]snBIUNQ^a`DnZ`ASpEm$JGo=/mcSc
%Rj3$[+R#AMKU+=LgUoq1\fa`acXG+;!-Q>gh'#9)qA-W4J9<@Bjs:(iph=0:!:*B3"0GdC*K(';?=Ed=-gQ:gZpefZbSf3UOST+6
%2+Pf[N4u*pfH%5$@2*QnEI_3ZL67]5;7ds3e&ngC67Mo6J_W[=+o"Ini\@<#@p(#qT$n!df5@nT,fQQ'<EB=S7GIkP''hgOU+HZV
%c;-r\hit5N&or7Udo4O$T.c<@L3F'I"QID6"Pj[/)r5ZODf&5Di^!$7U^4FFiD.bI"Xli2hV&I#Q4mqiMeLp.p]2H`'T<,cnS+J3
%LbsPm#W<Ja)?d#po2Yp@>6-_=KQ"+S6)%B\PD/7TkY]G_Y1H'V*U`fLbl$[q0`q[SiZ]O*jBiA<S=mRZ_;\!c/Jt2Q,//YO:"+:f
%pgU'sVll`D\B?r^#;+(2%@f(hZgBK%[O=Zli"1>ffee5n6d^qKR`A,>D\sC&9G%8PD;,<J(Q.?g,K_fZ!Wi$a>918pYe1&+4#H/c
%ruK8';e!-IXq6WTBGcP4ZjBnYa=fU!,pUVep2isg9pf:pfk_$!Lu/7M$BQ*ZjokRh2HpTMlTJsU9jAHXJ!]Zd:E#k^BL^k6OG^f5
%`lQV(#oS\qUglPrK/!FdOV(2ngWHf4HnZIpkR!&a7>R'cp+-;(!c<r2:6&/<JAU.)@(t7!3#*/5VWU(j%F9ls_#tQ<Blq-E*$YUf
%J/F#N7enED(iCG?^'QWT7On7"o:gq9JZ7`F8:3]6:Dbr5M;bF2PQW;Pa)MofYf(E%#F7?.o6?`DYS3HbYCRt=^s_3UMPLcP-WgVB
%(ld<8"Xf$J69X?g>o5(^g9qkq4;OD0JqmVcTo)Rqc(5]P)"sQLqMm)OahoqF/.SR'TZ-lI3BI6o%_HjM(Cs.rqMeqs!pkatL<+<]
%S05h=%GMpD@gq=h0e8K.G@:\>-lfa>ok,/hGYEOeTuFh[!AuM!^<D%IXDuqb^a?@qF<g!__A\b8J=]S."jp9OkR_N7G3)I'f!l\,
%;`iVK0@t.sAQ0-Mn-.[Y+q%i-+M`!]DC-qQ@?0kX*9IQL>RlH(*HYNrGm6(i\88l`46j=t4,.X)_i>*kab9?kmW`J&gbFP9"7*JW
%Z3@$`E5uO:KKCf'GMU?V.]kbM5B+XhHeaXiH<KP&$"9=bk+V#GGFXR]HtD/G<'h:q/e\RI<uG]cmMHbf&eKjV(IqUW[\&ZrVV;`f
%j,D'RGoVDVk<@HR9g%iLQ:&W8JN?76G?@?UQZ\-W.9f.C#I-9i>*6b/H>Te.Srsl8"5&BoP_OnP8LZL=U(Q\C=r?+-f?c3:W_?&#
%5RibS*LGhqGE#'`];It"kd]]p#n(i[ZA200^+#mH>/i;;BTqmVZ`(YjTa_X%j)NJ"3A/:uJAN9B(g,RM!cqW315Z?ROeG3g=5n?p
%FmER)*TQ+#jW/JKMC0eVl53FAIL1.%;B8R:FM=R1aQl)J@!okYL\Fp!lB\)^a(UV24E/>SjS)BY@l0bqH>&GkHDh?)SW#!^;,G['
%2Db=<#qK<iB8/iXP@qB,G?e2E.?UHW+:?,dr#B$54OSmE*fZ1A`f7!%&FLB`10kfsA$dqH5G=*1=(Ml!9W461I*3J%@pHo7f0RH%
%*LH'p3_$<[V'R3G<u?rZ`X6-jHNG7Lq%<*50,0pX38Nf\KKDY1l&[pn\?*D)%GW\lB_4=S(bJ^1!BfdE"*4m9_56(WA*=fEI6`f#
%+9p!t3A-5"i$QNbQZ7dIqkktpnT2Y=\7@oGQc7GIJfToM&(iThU's-M\1@Zc$f#_khU0oCj,PpW/d=(Ogi5N85A:+Yo,_*MJ]ITU
%%@O_9I#<+-^`B1G!cK"F\Cf@nm=!W7A=#CG(uN?pi]pc'TiO0#2E5C/3hLB3BFKfjAR\:G'%M!BfFfJ'JNGKbC=jMLN!<I<KH9fJ
%dHjW4j09(6G&5?Uj\b.ji&1V@"*T'4%@>$PjV@d*Ta:qkGUt3I*a>Om((fsPhl8Zh!$5X1=N)kZE8K^17BA$Bm@.,Mj&(nsKG?Em
%/WW)29Gfk^30uIPYu,6Ch-A+<ggYV+gZ3P@I^L<B%Qr%+j+SLuS7)dZ#UA8IhOak1o1l4!pX_$FMUHhQG)54443!Y,lZV''7L5L?
%b.o$1+QC(X'da./,29`c)9W;)n`^.!SDhgt?=FrW<?DNnODA5Y#4<<q8#KA.j'6bAEI%Sp<0[\iNcdSm#s?LhdEl#@n/)U1JB+E^
%^gm#(I]juWZf1KK)0h[Pf2N%(Mecr"4FYb"R;g3t89[ah@^L+N*I*MYeHVu6JiDu#V`,6HI.HWk>Hj]<GsC\_GC9#<C4MF$"r'?.
%,=<jg7P0BLAq*(.F7T[LTZF[d>P53ncC;&H",NJRRi8T[F(ua^+;248!=o,0,3QAZ=Q$iH)P,TF^2%If<8'IBC_G(C2L;<C>Do.L
%1`b:Yh2fbF1&t6289c5/%Lt`n'6b5t+JVBpC]ciYoa5+:">Ul1p)FA!N3r%3!K_B[?FW#m$I!q;e%_7^aN5HT5TnN=)usLlFA0Bn
%#\<kF.U>UKntCYk)1d`Jg:0*D3A:%.JNQD5+HZ3+8h;!6N;6so493HJPoNKuA5'ZL('5VRKo0UH+ErB6<<<3B3NWd%,1(F:0EB1=
%T?LL?OL'4/b61)M`uL,SG5sBd6\mXSY4CRaL<lKKc^JH]*D`S2&cNUVS13EXd1C:C`uj>o).N)[='iS/g[W<%<#g)+^`Vb#`h,=o
%=F(ZV7ca*/U,`e+)0TGW;CHfR"@j2+!D]e++"-igYP^X-kG!ppKKd[A:_,l7@oHC-S+,HC<15b>O#)AUq`_g9)41NT?3253j<jI$
%5"6ctM3oO(a4<'M,"6535T]*i*0@(-6cF<X)bNp5omo4`dr7DBJNOuKOX#npr/N6t]TC0Q:h>OjHORqni;k_NL.=74O%]']X>cF\
%X=EeS&9B%3CdK3g>f/`be-IWm]*]ZcO?OuII)(e9;g!B$O%TrGK^d"cFtnQl"+OQJ5TnMEgo7OuJIFKkOu3mQ\^WBr!Z'HTgnY4"
%"=LPDZ>'RD)/\BUgUrm-KK!Md4s7rK+JUMB8+r@I7S(T#aS*';9jgD:?1S,@jZ?-.R&NT=qR=`%@giSY+E<23/SKulO/F]@n1bu!
%CjqC-7Z`Q'It<[(Q3R?-M,Sp;+Ef,X>]Nj0Ol0_?#Qo\mpp_H#Fi[fFl_IY"COhHXc;<6=_8j'BHITdOATs2-n70BR=YVblNrcPD
%Jf[Rf@B8/tLG9E*?UYV2\ZQMkn/N=Qp*"N/F%[,5T4#`b\rmUu&hZpN`iTohl/><$A9<BGQm7_*)5R>FPquT5G/N#NMujnX_PmWs
%N*'p2]22ZAp\Q:"E]KY"`Y$=(5Q#ZZ64;@8Fd=$DG_]caKhCbPJb$-6-)3uQ"pZim*:@Dh:4iO&3M@.j4.M+;5a1_]N=`A:ej"Vp
%NH<c3:\4cPH,RJR8V"S\BUF@+,<WU>:pr+4KrVPWJj*%B#=KH%:Pj%L1--`+/slaP'nBtA+;)9LRWb(("l6/7[.LJ-/F43=A]uJ7
%AKJ-Gi-cF9R7!6,$ll90`+6_7j%d/k67X:STu%"4)b==4@1C$C5X[YF\LpXJ0gNolKfNlcMhfj+Jh>U)j,=Xh\ZY=)PtK9kJ@3Ss
%*G?6+=KCGt^'B^3C!!Jd"*,qj]R3%!gB-79BkI&SemhR+=hXN6c%KIG6f9T.V#f1X!\I+u"3<S^C=u:A&t4)lA&+M[B"F+jrQn6#
%G$[<e3<>SB;CLdiBV+jd+O-9$=p>Y;GuB^+0>09q;9`%N118@*;NjB..2b/bi]3S26#)BF\,\H8B3oV#F)o4k"E0mdPjOrD3!jYa
%,Fek6((b*]%0]3Jas/[]"6;QWXatLfg!P-IF%5"_qmYF@Y7lGR;!/.04M]7Xl"Z-CTo'VN-4RJ+^j-%ON2P&ET+K=EZ-C3Ls8L1p
%NjBi,kj/i[Cp_&F"4OP8'4-2s6lMhO^^Z,L&@RZu(WBb&L`r58/34oNJ>tkWWsU`B.9;l;AgV#&BYkXq-9emHo$[#5L,1Tr$:,-K
%@\44E(X[7lDAlHmBJaU].WAp6@LB.-*ElrN")k4AE1r7Z"H_cQ>D"MZeYm.??K+]sGZr2J--DPu';NCCW-4XG0a9D3"bjp5ai\XU
%&u?nB@c3-J/Yh(Zg^S7mP>&>7?k$:U<A_V6)!aXgLDF3C7?.U/KNbjOakS(0'O1eZ%Q]i/E*$5]nW9`]0qGc61#Ad*)KHSDc__*s
%>0Mo:RQ)Ujb664/72^EuMHF<h&%?E;MB#)>JoDeLZFh>&:27V$-q5?33=n&7Bj/\0ab?OX#Ml]D4\s&mb,!le@5'Gpb:fsA9Ul=>
%?MB5o%+ctMibsf_%\82O@lKl)Gh.'*[@%<,[RYAGcR.6D=L6r5+,'9n_lK+Rm0MKG`Q[:pH>OIb)lff0os@F:bX91n[ZsZ*rogdP
%]/1Pt[Wu8U8;`ko/6>lRK?-tMKN6[b^U[h1=Tsbp]=<OKbuf;E#2Y@Y.(n9$b(s`N:LiWS?,L)(c@L1)c(]K0=B.iYZ7;)qnKt"A
%836+fIGMId?mK0mah=hHV.`<n63&AA.On-[M`aL7`eT0[Fse:&3#GT7;M/d+Mq=1AC@3Bp\4M2f^ns%(HU:Q;OSE*]:L#XLmE(8\
%>6<M0W[U^W^[3-37\,[LOgBiFN:/OPpm*4i0ErIM;qsRVG=&Y(ae(?:=hBj==<t\Y*3)&T$51^M<Y0A7\HH3OD1^]@%5[k)R^h:<
%Ba:^TD$pNSXfcs`m=i!+L8`PqCM?`H!Pp-64j+Pk.Qs4lPQ61DX1Y]5]YRd)ZE#`.TG\lOn%K3Bm?Zk1)r3Ped6())*lBcgV-qXt
%P%=;>TRWJ@'`H1pCTDrMmmN(jg`i+c2'b[r=qnJ+Y;P%X7O`pg[cJ@%LigAXA3.Ou[bJ*g^'05)``fpo^'-FPef"mC+_F<%QTdFt
%!@9'd>#OQ)\r^.(E0A!`'iVT(1fqIIP^[]j+/4(VEKS\4:rQJ2<J5+9CIHEPq%,O\F'2U#gV-KnT?Q,0M4#eD?r\5B_a]CA.l4/>
%AlT2m6iqoCdh][R)'"(d@Y=502A*WuM@\C7SWp`52OG]&4X_+-2(Xg,7^r\FNOAtU>h[0)NmDnS.V..dUb-nM0?AVul.NV^M-@D$
%<eI=@nao/PdT72L^lp\L%Ok?H#VLmPg'$SVL3'0\d0L(o<D`35S(TmXj-DJc*WlAXi=I18`H>e6]KhLA)j;-pHVe6_/?SYbNJ1AB
%,p)&6!*H:BUQ`\/ccp>qO@@jBdO=WF77b%"JH.=LCc?QrIg'6+jWmi/5tUu-BX`G%Plb(1^nNo!,@k[_)#30.^+iV'b8N``nV-7o
%LgqsDTlWA/G,X:th-0[:Lrp^PTJGJ[D1GQi0Y2o[9$!T#Jg,]b@uT93gILtmAEF(d):,&AZ$h/%$WE;h&QeQJ'Y2Udmc1QmL#$m6
%j8(He>;Y"UA?l/&:RjQh^%?n#co44VaEiN=]C=P]S+?Z8l)Un]Zcf'PZ-4PSVPX/l+tk:bSW>X"*+#"#OH13tlqMW0lVr[.=?_1P
%,"&g`eZQgln)=K7DR(Rt3B"\dZ+8OAD#5>K?a]5Z`XS*`(@[emH,OLY+[Lm^F=1C*o=&K1U,U(NHMTq78e]Hk=D[u%>#@!G8.+Kd
%[5k]E*>&-D6,-rj24BK.h#O9rJuIgKnSW'f[oB>Vf]E_fl-Zr%jWd63Mr6rH[L%/"5tIM>4O\gYO1mt'-baa@P4lI'`_(,P_Yl^f
%S=?;!8ac:#hRo6YBoe.pKih,=YMlsPn*mBXoKIPj,atto,f2uXL+8?.l3p2*(nFIXUB&8s:Z3*j_-Pb<1['P#@Ds3cqR<mU0^V^[
%7ouGt1$Y[_Zmn3,KkVBAA]eC28-A*$T=C%4+c\HOoEDnl)9:"%\BaI13.$6,7e3SD@Mt_Jn"b*UK\r$*7X0Xl![>Vjel`WI184,P
%JO*fT];O"mGUJf<@#,$dLgboN9Z(8"?X4k8#1nl3VR@'nk0+4,LN*XI5b%1]3/-JUnJ6Rjod@h?b65qV]98sdl0UCo]0tjU4<YDT
%)f`8RhNZTUK^ckbRY;$P8\1iZcMZ5Nq=iRW[>CXcD$jL.^@XQ[Vd*?O]XjSV;+g%u0sX==jN7m,/oR*-;T%aOn.hG1ff9Elh1U1J
%99N$7453E1&0FUTKP+FL/VeHSgENVVM;mY2.O-f`%8*===QWR4)?+6<0G(umcV0[\7GN]a"fAaX=L/t)6,JYB.U5.YWkN'so[\\e
%%jS[IJX'L)r+F$N$?HcPH[s6mTr<Qo?4?s[$\;G[gg(Xf7)AaSafEAC?!)bG:,$g8<Up1*D8cP5A/eM(U2EPZXO*\aPJ5aueWFGO
%Ro,?"g_Amg]2EK`QL6jV$,_I&A']%)5UW&\U<uAl"oLhKSB:laX,:!n$aDq*`CWN%#`r8u0/53SE4$q(-0K31E;9f3fQPKliR_]G
%AQ5p))l:Y^iGhRs^Un5a>so1jnN-7jBo?JHN)/X!+o&R!L!*P)`^*JKX6s(nGc'l"Q]V*V'@ss=[tD<HmZS>0GGkMUWPl@g.\48D
%>_I`D-4t.RVFE<!_!P'kmc!l#:ln4ES(R0j64&GXN6>P)W^)!o^9Y\30RZV#C[JLqVmmCN)qnh$Wj!,q&B4]*a?GcIp49!Uk:AHX
%7YBJk5K=lT*t*mo^`^Wp\H9;Up;e_(mdPe.D_g$0GJt!uq6od^U%lSsD@at7BKNk[LGm_Wbh&&<Sn>#V1Z.5!9[iAU9<>b:7j'9L
%^a%r^"346em1.^$3MVQ-dXL`(0]G$"[]WdbJ\rU6X/b&+Aem^$mGO&,)*j-!U@ueh>MIZ-P\P$UQ"<6D;,/$HKCa_hXYgU_U=iYV
%(Xg@$0\"V\L&GNl72<c;!k1P:80\5J\[r:K:uL8lDnJI7gSh8jX4nTcVL3!5a(;')J1=6qY,(XeXH40WRB)H75+UPC+7QRY1*Kt@
%F8s*>Ft0Y<KZe76kE_m5WEGD5SI>n^Rfag,EGKT5[O=$!\sA5'Vg.QKQ6FE_E^(TH_.?,),*o;Y2:H6[-_!GHLL:p^#l5lYq(A,$
%&PB4m/,b/-?FDH:h'NO;"Q/]Idr4Yn3t9-jQ(0SRLD2e7PKDuL#!I4AM1*kQXH'],Rr@TB8;*5pF.["o$uSgI[>@aD[[0^2U7pC$
%EIje!WOY,H\iKb\F^/@87g+(+fWD/cS$g6JgI9E-:,u13@S;TA3mSRfcQ7m-+GSO(Vj4JE:s!O7FmBD.5hX&#H7YC^>6">d_=A=6
%lG[JlQ:>=Ka<(,s[Y`1`]J@&TV<MNK+.FY=@(`U2B0EPM=!XT+Pq4EmoTNJgZ+pA_[f=k>0G,Q1Qo(lilX,U2_La5he8VDnB@-g!
%=$15NIIe:1(hr=c=l=Wk[`*jsLi:U[?W8Pj$UtqNgEJ@qG`!UHZ$<(ndu_P$!b->W"qNabS%dO1+2taa7&):!M%0lfKm'NMr7L!A
%;e2[G;?<5AgA+$65<'ep[j4OO,/F+adN.:mMc''dg^I*mMD0sH(nIqN1!l5$m%:PC:c-1T-;%V8dVR5Y+j$ltjd&%^lik#\B1";&
%]AgghX[cLn9tV4Na\?+GO2\JYh99tO5+&+b-7#XnO?Yaa-dPZ(RuF8>r)2>cG0:lT0U2.j0oih[r)F<s8!p`\P%\")8SQAYs.2L'
%iM=Np*4A:Wc<$\W(qd>eXNAY'oR[!t9^DrR%$l%2P=1=Q;>rRSD73H3MYMVpa*:5i*LEBgM6mU?^'$<2AI1N_Nb,I8?0)9#nQ6iI
%CN?2BZq,!@Y^iht"cAcYm6ur^EmR/Ld0VDY^ks<FOY$'"^rX!3J240MdLU/`)ebrkA]_+79J`NHML[_sa#l8<2fOgXddV"WS3.6D
%ilHtdm''Hk&8Q9";8?1'R':gtZp^c#jZUi1UkpYJATd*`joNu!('\HL26UH[r(u'g3YjRQO"J=X9e^68F$ZiJ]4b\A"7a)E\!9-$
%[SRhqi8W!Jc6?cA9Vc.EiQ)cLk.?!(.4909.JMh7GD3>4QK6C-$;;sTUf9%JSe[dhTF?Dr:"]qk;S-ELi$95b\147WF*P^:8@'MR
%![8\AWC$Mk+4X6\+-p!`F3&CI_$Wfh[73U.c@Uc>lo3m]/:\k&:D:H3$:@dd*Za`+jmYDi=N#Z#)nB37B<6b4"h;FP'lC^04!i,5
%]8gpDh*`>\71]@8YB\5C')!aYiHpXKme8W@#D;>TO+ckN4[<\nWae."=*o$(CN._Yc[K6R)1",sBp5'S/IQF<;`j.,4grV;R6Blh
%c]'B:qFX*N@ZiM:o/&u-BX<4R@DVt]86FOh%50%2*$+.\R8nj5='W'A9"D5\iTebK]kE2U,7CIW2o3)!BYp\`O:5toO(r$8=d?5i
%Y,#%+>PoWi#i[I^ZWEQFkN)VpN6<aT\a0pS_U>$@1$RE##ptr3nBY>4K\G\n_P",T\-$K)/nFVWq<Y)ROJ#a[[q^#SB_`)4Usd`>
%h9Gm=:F8sjIE&ZP?Vh"D4bgOOhM4>H+!HjLh]bcF8i1`PM@0A-lWS<C7Q[qpQjmo]@J-&glZ:HDaNHe:A/iUS/J5(gH"Am85o.WU
%=0sYUe^#+sV3/G^1)^A^.:=Ql1e6u@\QFM^QI@P16uInf)d5B84jR$&G`'i`l5j=#luHPAL(-TQ&_n45):"kI2SST7j,0FWJ%SbB
%]_if\ps7ia0kB9T>BF9/$es<m,'so:"fY:]UVeG9pH;o`<RRSnd378WHDpHI;QQm;#5<B%>:3LHak5$@;qk+UY"0AV^<7.$XKk+G
%6=NOl-f?pLXJasMCm1T;TTZBMk1Ab<7'(?-\<K>l`p1rU^ra9c5o%W2aCdPM*Uklr\.X"*XR7r9T]pD*5Ht=F2>\F\m3@V+ST"KM
%nC7!ngmAUeOiQ@r0+@3b_8se-;_cLFm2dYlHld8>3D^d5ClrFHe`3q:V2(X.AAmoi+tP.s0so$99.kmLfFQ:O1UB#R!ZT8W@e=cr
%."5)j4o-5]7C?^$eWdrZZbH5\dLCMkj:DY\(KZ!>+6?h:naEPE'GLW@0du_dr5N';aN9Wp]8hgcN+ht'Vd`<$Z!kO@jNpL'FGb?;
%`fj3W(C$f@"ToU/(RC;\W:$r*iLa8I7N$lrj1(rhH!(g^o=?aP5^!`Lk!NRCOb\/!_WL#LDd!_lPl]egbiK)'T$FEt]L4$Id$(d`
%hni/g0QkhF;(ofQp99Y5l0t:HmYh<DL_>!@O"6m*iieK\0cOJMK1$_(X59GGTK<!KgW29G;anD8b#jC8dG5'iR9BoQf+u:_-XWS#
%do"Vl"pG;,Cp3I>:9D=P*`UQB7`Xf!+eK"+'HO$0h]c9eATo\(q4;-N`BNc;Y.Z$3I+5C%*+jD>l(b&o3-`c@I#OpUq#XE.KZGPk
%X^/)YaIaJhXk_&I?ZK4gpM*;o>pR$=[*#Ok!i=$0.2lnREpThB<uhq58>;YH0"o,PC/7#ZZfg8>KAcVCQ=6Vf%2rnV:_hm,ZpjeQ
%m(S8"qW/:R0jBkW1P*\qT=jN,@0%5/RnD6DD>5n1.u3K:UH"m1SL]bVq[r'lSD8uDIfmFo5^`js!'c%NnU`,tRLWGE.DYfhnq+d`
%!?iTPBdPGY1g?KEfFTGVi10dd>=;$T:OG,XBnuBo'KK9WV&h+([KBfc>/]G'^n8R]@mLt8/X*3a&:q)BAp-]+VO0N:0gh'oWln[H
%F,2Tp1=mdB!mF)#KO=4r>"-EK,CsS5V+t.[qK2'\VAoKbH>&k`i6e*smT<Fa'IO=/i7L>c`?T7u^NPjC"m,HR)iJbLmjV!g9Z!5t
%9,(n"!ueo%*l95o!lXi,q\Y193k#JK1Ap7Si$]],n%kX)XZGuBTEYNQXGRfG0jq*YnC*%odTL&Q7OF#n"QnCX=dAIkp)g0,Z6ZIl
%,GQ0Tjjld(j)0dp\G3V7Ns8m2YmP[6c5u+W's"G?)=;7d25$+icf0Ikqg'!F>g7eD5a`,%i\eYV%61*;\e;MigA\Md=6K?3>/lJe
%bqULEd6A>8CqJ-C_p1$W_kV8/J92V)@bmLq<FpH,H8$7n^(O>Ylk,Fa;-@M.e#Ff&KS8/[+p+/7L:`#^nqr[>3\Xi^20"p^\BIag
%g!u"\nH4_^Ki#oYkp379.O,pYR'k$5oh3Yi;B44SlAjCi7jIG]"\i.IcIQ6Q6CN$d]h\E/&'s]Ts5ZU?XgV"34opGtk1_UdN41!r
%"S9Lq,7^`NLl(n0=coG_'=0jP)[CGL78",E0Q7Wa5]3W^iYcA9PRB!pgT'n[Q]Omp=W6"lK.Yh;4$LFIYm>:sW.J`q:@Ej%CbSaV
%RrEI"6[%2a7J_"m#\29#9gU7QGS!B\l>8O8.;<M65DRjM@p(D./b73[aFY<PE@1QK4rXa^g.C_EJE"#F@MW>lD6,DMaf:7#I1D^`
%;6*ie,<q;Hq)7+5@YtgbOYW\3Sjg5)WDlk(+?jUU?dIhDBXq"9corId2i\Xa(la\D&->aa49tsK7;6JOcjgR"NKV(dV[lH9JTutn
%InC'"+c[jpUEU86IXIE5g-E]t\:cLXA#*>,'m2t!8;f]W6!uDWga,BY'YRHH@T3Ki1H9\e&SO:h((0Vq^]IeW\n3Du"Grl6_WVj.
%5/R&k3(qhJlR*PW-"X'V_,Vn#Y(FHpe<='$A(e/L[FYJ3Gg:nVMMq4qbI3d1!Pu(]BJZ?mi[>3\[hBJ$Fb!Dcl2[@_0EQWhLa^Jd
%V<\h6doB7J;4K8#:nFWj&57STh=Di+dGbF]&BZ`/2O+:]^Z.4P!MWLlM]Qhc.`!m#X2k'<"inirBqCR<I"<G8H-p0g3WhFIR+\l.
%IK\/<>YdcnG^t50&U(oY7G/:IQ$q^4aE^]"0.Q!^:@)`L6[K/rEJP$28PJUpff!GWi38(KfJIRnk2CQ/-#^WE`+4!'1F^V-V/l7i
%m0/Q9Abb,?`m>?0A2o-]=-WcW*!a6aiX@uU9`h5L&s2,+/"@r4GZr0Q%B"`^.TYF;ji)bJ%hVQGY%\qHS?]aV4_/&^,JND"qg>2N
%pBYHV>$<g!oP&'hg>!Cjm,L3>;b8Sd=$3rqBI03KJj*((XTX<q;9:_X.`Sg4_KS_)BonS7?gsStI@JJld[BUY]p(;(O\k6WNJaMW
%(0]cPP_eA[7]#l_6&We<VW&>/31$+<EUl9>/`lJ'DQ3+k-l7f%GYOdl>\2>hnUPNN$>3=Ug1AP(a(6%6Nl/a(_AL\NO\q]%:It[l
%m^1US9aW7@%E$DtM1dF!)jgqg,44Z[71Eu+"/T@E5V8>,)j"Qf>a]iS-dt`i%>u#CXU6g8$9:AskR=S(%)=bR@p@uM't!1(NBf/4
%N3M)!CAI'H*?1&$6q^Ln*=c^bFWM<W$/7o)21Zo:8PaJnh]L!BWM4,jWi(E6r^558poBCGh;MCCT)fn"[)g6^`=#spQa#g&cF+N8
%5P$cs!PTD3RJ0mqPU#:@7T7u"I+?BU%NTBEM@!@g_V&3M]<-CY.\62(cs\Nrj_3W#L.Ug3`fQTWFW1e\'ipolL.BE9>R"s,&@E&r
%%H25Q^SG())%7+t*r9!8ChZbt[j@k1a7L`"^k<J<^'QcO7]M_!:2%"fZYC@4[)f-c3BkNS[L>oX>)SaHY@_QDk&4;E(]po;C-gFE
%Gu^k6,6eC`e*g3*gS2Ij)+:V3-[\G(LSj_c)*ghQ?0F!2PmA9i9"rk*-,/,jd420T_%QHEjCED[*r$+V&;uYWLXC-Tgk$5^2)Qdm
%$=to&+`kRXN&V1#k`eDt+9k2o;GeLR;%,N9hEj29/:I78OnhC#Rc3:9q8;*&dcMr!8tlZp`uaLNi?`C!MbFdP!P!4eiP1B5_=lNX
%pjRoT.c#g#Kba-!]&b-7K57_B!.m\[7csTX<-O$jn8ogVcj*>?Z78o&jO!@#0]6@n1%LE]q0.ZY8*%^6U(Q6c`,-.tk3SUJS"a&n
%F(`9VKq2hmJSW2Z+WKp&;%OHcpk8JMa<M%t\GdF.nL2,L,tC.dF="ai:_2Y"KXh_%BK,gqB81JdbA<q;"F:r311%Zu5s.2&_ZFIM
%1b3ZS,YsHqM%cZ/9W.&ca,!r!?Bn5]3SXg=N!4]uZeYh:%aKRe[Mr5XS%,`J^pY/X@I"6tGX2g:mUptdW#Pu1dA(`UX#%FB,<I)k
%^(k^kI`AJ`)f0WFGEo%'i;!..59WK%k;dJdSd)J#Cr>XF_[ZGm11p<?e4!&a0lIk=I$;gTq0b`t/DVg*!*PWg:D=K7K(Ch@;UF9S
%`1d&JEL09/pCY@u#qss0R*_1UQ[4T*!5^f8%qD;`K[6A[^7%Z;\=g%8n;O5e);O)RH@mBrf/L?6\l_<+$kLfe"_c+3'J<sKhmCp=
%kNFf;!%B7=9;T8WP+S6[Z"l<Q\^T&N/I9CYBXgW:)G@coi4)B2=`A91\oo?O8^jK)j+r@biF$iipUZLmO.pHJYn^Z,,0m?jFE!(T
%.Rlk:X.7u>*]V5g^@+l9a[q[Lm:"p"<GXMc\XX?MpF:QTa4"JZAsnucdMD^/88T+/etri/=kX4s0n]I-8?LOYiE`J1UPSSb)`;8t
%dm&a)^hne\G/Xu*:4TQq(RBjCf.<#UNKT712I-jH/od/G2e]GoHSU3"-KA(6&g"t&QePHc2B7e"liQ!(Ts6Aunud&uh0oH_\U$*6
%4E0\C"u'Nu/b6\F1(9G3p(O26D#u7]/*)*t*gtP"m`d1&L(TpLE"?XIi[Pm>2ho^fH&:3b`beE=\n-j:D4e,J0`]]g_`Yt1;'K:M
%juoeEg%dOFZqcB<J?R@L[Ib1U.Zj'$=PUH2%[Dj&@q_:AB7emJ1V**45%F/'^c0T;].4"%O;BNn#m*U!@Q7?n\St'&lNJV`=_RBO
%_#@*lG4OT7nT5`2ko!j4o@Bi?e@B`LT+Ug#=BUY1=QC>^E8M<0*hqaC(H#7pA_iJ;2g*ubHsKRC;o",XS==:IGFT8JU98P")Xh`@
%]Y!+sA3F3bNYZ2ZBSiHLqs&.r/NC.R(Y.GhGYC1B)C/]8_LP*[G.uK2aaD#Vn7Xgi,G^H;*]=rTEHIj>"@k_-bR!VN6bt>#Z;@>#
%\!^:e=No6u*lEEcOdnGHd):?"3Ij*HD5R:&")=TA**4j.+sI>T-rQiFq,bqg#5]4(6+K=B?j>GW-mAr4^m.Opdg<h4c6B:Hs2+S:
%e1=NAk'4I=W7=<_$!t(E&k@iP_uUXtOcb$Z>(Qtf?T8D!%F77*mNM]7Tr8%Z]?V"0Os=stJU1>,TW-]dR7(7:iW94WZoh8OAS2Bo
%Ye^KtLP^5:&9&1Q>;UaP""Tl(Do;f;/fI\s?sXQhQa$JIE"+S,@*G1o^bEL.!H]OAU;KZp^'-DB'<MokQuR(kEKAL2XBl,e;1daV
%Q:H`DCeW^($&06EVV7Po1Fnb8<\W]gSQWeEX_X[U<\X%,/nMtF+hQIOL+bAdeNjQY4KgOo(lg#?@N9MBMo%`q%#,FNI//[>/Cac"
%Y]35qQR_487`3.UQKg^EP9e@$5%g085Q6#VK_YrG-WFMg+3876Ff4B1f4)Fj'MO0g<T,sh$3QV[UXT%Ur;?AY1+^`5%aHaJMb%D<
%ObTQl*/@9.k3%F/g+XKmarnFiL>aCZ`_r<d/C'QPR)A:'=2n[<T/D&lL*lIFSBFHqC#TZ@6&]'e;7dHhT,>N+]Z*eO;R/(j%1Y+_
%-V^Gr,\!N;JU3ij/'fel`;C0Sk7PVb]dA4p,Z_BCOSqHj<hX8u\$GS[ACY0;SZM1]Rb5PtmO2Ys=^u1^,UWl:Z:DlG7^3["Q_Y>e
%_rXZr`F'[kb0YpcBk:p`Z'lX[/mbet-^H3p`3T$_'&6r0PN/qfJ#pbP#d.t_gR5WrE\Yp(WshA'/<@9b&$_&OJ5C^N`%Qjt?HodL
%B+p'nc3.X#lM.Nn%][+?FARW1E9]4%<!LBFSFPqsA$rirmlY*"m.3n.L?#"BEUPqhQDQ<`9\;h&)TE4UX>&f(gl_?[N)dLPV[:[k
%@p%\RfDp?Lbc2S:!+<<'SNDmUcMdju)+&O@S7CS/\TN-2,?kiK(dq>`SdL`:p`dlao,,1b2CmtBJI9bkC'Uf_Bk"2Fk9h8aACDGD
%#8p!.>FZ(D:!Ogt/7`q8]K'.j6\a3^%i0T1$.'=C5t$HkJd#K-;60b1g3l^c(;iA!Ol:7_PBW1Pi?snA0E*=3I.75$15I/$@PEtu
%dI!geSFQg*`6P=f;DOb\DPK4SP/WjP@8'"cQn!/\1-8r-SZn9:[tuiT:NmoA.<%(FKJJ[a2bth]1DqgO5nPp+P>@D4g`l*P`to+l
%&1ejqI?m9AI^3_O>@;%iL,,8rc9S]qb-9gg'oSr*BRkr<%(Foi'Cc'oc2C7.ARd+n<>dhHq"2]2m8q:$Jt_8qVs0-<FS_E1%'L'j
%QThs>13[Kql:!4U[L@"^U_&o5I,U_0Ej'ZuR#M,h"uGnDG.6p/c/%R!@>7@<8Ze)ch6uWb81!ohqt/]I&V^r?Z^e]C,cJqkIV;[`
%SQT8=%js]MjKu0*UD]Z"m?C`SfJGph46aJO:-Z(RTofi1`+t*9A/L!dB$`=XWt;t4*@'tQF)d(&Wu3,/gJ#jhE19U0hhR$1j?QNa
%Mj24JIWg\G+f[Z_C:YHIRlSceKF&n=adK+No,O=_%#RYV$A7JWfGEO-K8%;4pf2RJW$'eR_Hr">#$4qZRm4uBf=FEaXiC(Sm6cP>
%d,+?dr%Xnk-dK%io#5oUCJYuVWGLm3e+\/_B!%Zm*R&/`>R!-Wapd)M`KmIK0I9CgZKilFb?Mh=SbUMbFQ@$a^@Q[7<ob!/i5AAs
%l.@#H"jM40$\&R/1pg,%SI#b/e&MnIZnR-&$4X9T"<(lbg<R=/=&Bi9(Qimn_=H7%8E%gcaiWN(45BNG,8qI%ct6$PN=*\AM)IM#
%]gdJW`QRZWE.DET$K62(1b<I*HFldBS!W#-ZtOpFqVXdMk=ig-WG(=^W6p^^Z!Gbfd?7#JK,i-FS9%uA4kOIWW32>JZ)C%p%NFHQ
%'0R6P\[+7[)@U?J:o`KQ8HjJT7iDg$d"orKFK-]CV8[-['3/5+bqL](,eb"s+$g"\dEIrCZ>22Po><j(cEnF>R5?KU;1?lh-1MAf
%]P6lZ2qJEq/KQmBWRI#*bT>PRUW(@(7a#18Mh_Ia>&((SF8E6TK0c/bJZo4??r3=^e1&o6J.5Gh'8N$e69lYQLKXtJZ`*-4NtW9d
%4%0#!-Q9DR4SlmhL:Ds!_e(7'UgUG`W?oT;3gU`r<JQO2crEXbK+0lLj:q2oY(.miI&n!V>$cTgE_<_j:6`SoQ9AP;PH&17Kc7U=
%=N.YiSQH=Q[Ui.NC1@p$C:06@ej\Yq!M.<^:j$Y2)sh=mBc2M0m>2!545:U&LD-4fD$WO3<k`f*NjU#U%R*'jdD,qi_o/mI"R?f+
%>&nYQB^khcW7J7LWt<f"G&s?s`3qS4o8.?:2Cca\gI=X.`unV+DI_N!"Wl>-d^AFS!6hN[8K!1I]+umK,;H'J/CHABfAQIGK5p<:
%4)Do`,R3"']B`j3Z[`m\f7nI.h:H:PE3IeK#HcGn"Un/>p2o:Y7(rj7/=eZ^f;bO^V7.YG6(<./?pg^Ng"iE,UY=AfgSMGI)Dl76
%eMDt/*9!2+\B4rGLtM&204$B#fHR7I,.<U@E/uB,)k0CA&7V!\(GU>nJ%/S@J`DTI%;0%iHqZS7bFr6;aG/`\[%09)gGJq(L5]P^
%=uHekCbRWN`Sk&82]Ie?P&XoAK6?k"[+r%"Gi!gqW?!t+bj:tFk)PoF-DlEaC(R`q+O/\m1UJ<k9b@g&@VN_)L]b<f?n/'g)tA+A
%Zlr*r-7UBXo/"@;W"#Lmp#`#6`baXLRj?G,^XXbEj>9&cjGP-sMkeO/`jV)NNEHFQ\KYn.85Pr`CE)g_WhjYAjh6D^SF#<+od`b)
%(Pbo#Tnegn\M>QrATKKI6/@9C%2iGP*mH&b5:9AsKBP)qF^*N=?gD]Y,aF`uF7(q;3/*t0GoKf,.=59)Jiu\DN)LTAr\b%_!)OkY
%ZR"Lu7WfC`'^ckJDGqc/gb9gin4T8Wa2#JYi\k19ic2lA(]$NnDO;YT1=8/A1r!<%=g"H+nhi23\s0Oha:/ME24no=:/Fihh;\@N
%'-:ZI(JjnIZ'7Q<L6aeQ`bS==:=L`K+H^blSC7q"c':8n\j>*"M[N]IX"%6"`9W_@RUdUc$[^:#h82GNb*0("]YSGI[1PeA\Z)6K
%F),ZfHcplR;@pQrZP/:9@?+-ZDr^F53u5gTH/D*TFs;C9`QooPl8OBegBmTn4CgJc'Dl"9bQA(H)gjf+POlO`/\qEGg7/6TYlp2o
%<)4>k`TY5A2r&3=^]?quVCjU>TfUt\ne2hp#]s9=4f<9RR;'QDcGdOG3k4.U4!P`"NTh5)%Lt:1P[%W:KcUs:*#r*];,8cK\e?gR
%QiL_LLSHLb#TC5A%rsXF,A34eVc2AX6$"ile(G$h>Sa2FACr6!./li&GG^+9A(uoWn04!$qK-9RFq$SiL,#ua\N7)pRO&2DAC/8g
%e#E`.4?Pq^&k$_Q&>E]3`RQM#[@iDp+"]f:nm?i>SWh#m"(s7Pa=kOFMNM(H*iW0d^Z_D=j2cHW0n<Pr'^UH0DJT<5$!C<LdY]sn
%$CPp!&][1UqtA%9Ef]@k\5%ecK5T\/.u1H5N;LaHHQ7,jF!lT(XtJ##*mp&1:j,2/Ecsbt?'@PtB?.KMSaU!Oe]W$)hp"q4SQY%C
%E/'WGa+hi\Ts$eu`#sXQ!)+)CQu=E'3?4A9U--*shqFULc&[oLiZK+oJ,$"PmKgYk<X<CNb$dj%k)di"fS?2c1CK6(YsBiuXF)sr
%I,"A@Iqih+^!?hn(!,TXm5J//+Gd&DW#j[^@Sks^4?#>6b<\/m4fHX4l%]t9>Afgt'=hAUH:t&=S6ZUV<#A@`#;InMS*8sgH/e$F
%4,MPQ/fA(,nX5K16\Lt'$nXk-CQ"WB3_8CfalG!o_[6kg*e:>KBb#d7($RTQBOPdD42`hF-b?kYGS/5TC$27OIKlR%=!UP3(ZcW?
%,-PgcbRg704(g12Zc$mDc7O.j_sNo6kJdnClJ.Tmc9<&B1=,T6BOlOo)_u2OK89YPA#:RW\i>7#+Am-#E6uskPqs$"ToiKH+eR.+
%._;T*:Ger/J0LRF>h5"/5atJaFE'd]e'X00"R@*<K8shqQh]e(i9)5Y_m$A*.#$tk*U`#>G4f<a#B)_1l5(*ah34).B@(6c\d73s
%.ihe]QXdCEA"Od[F;BqDBangglqG^@9a@o%AbThX3Zt\/4j<-SP46qQT.ULmGsY?jH+flLoCi]S\gO,JCgur;6YE,SO7YJ1?1K3'
%@&cjh9QEI!Q^i+:9Qb%k:eCo&4k2NSeL>_Z>]gXjFgATSMR&YP0$KBLWs`RXq<FQ!PWj85npj#/(PamRq:,bF3GBN%@siZ5XY]?o
%[)#p)e>:XF5tWB_lLo'C+u.]/S][qtm'q-bC5_/!"FFTGTe4N<EsB6(hl"f/#jM_Kh8i<I_eu9ZSBf=+GtId56"ULIVeGGdP6j\j
%fgSYN,-lin_PEC:\Bl10IODH@\]'EM%bXL[k\Zn/XaV[Ycd\^#e)tn>^sN)=ZQ"]7-aX!.NU[6"HJg?RUB.G])^F[LBAMRo#-ln@
%3JpI(0TMm]H7--g5#JR61><[AOQhIl[N!,b*)a2MHgfD9P7Q.:7eh;h[i9c`7+D?%j!8iqA[GJbR_,9?[VAktMIB2&_tBCqm\Vol
%h_F&DA@o1Lqo!ShBHWj87cb=\7&RVCqFs/_?Hb@Uh-l\HCo"6gDWF1F`\DFLKC^_X.&<h%frrl]NIFU7G;\i`Yk*S.:aT7u"'%#e
%hdK>4DXP_m+^:bVHhq=Q`J`<si4^-OZ'4(u_\i2%B9CF[oQS2_G5f,;:S][Sa9N+0!'_lgl6nZ*_8B!iT@QSe*$$1H4M4=7_2ZNd
%8)NBR8p-PS$ub&f`.g3IENp`(faST:?E>F8_a=Mjc7&4UW&1cqM&/]DCgW<WG>^Pr*GF4:<kO";F_3a@763dS"-:4\8rPoQcMX?T
%"%A6-@sBS-D!45H2dTXEa.W\r?<Q&&o?o[am1B@YOlN/-NU[H*rrV!e5L%=?9(<>K7#k?+LJ^I"LN5n&F!Sdnd@L\_8$r]hp'P5t
%-40J72;T13Jk@"qNco"s'EiGWS/Dj54]Kk0c$;?l)UbHE@E.V]FOi^Fb>p\r./%&g"!J2MCsIupJju<n-?>(/a2Ep<:]P%6f$94e
%KbE%!7#ZmOjK&c!4>[8)1P`Xqm[D5k6@iX"d%)#W1l($N0chs*nKRR%of[XG`ktml8FOcI.*(DS:cU#8Nsp"j1#l[VChB1T%m3-*
%b]lnf?$"D@K:f+4:jspi?IX4r9sO,lOgQ]!nY.X(P^(8jE&E^i%j`B.lkl7;n3Cgc3@UPrj&cZ#\A,&tR@+jEgr3A8OVO=qnPHf*
%hs9'BkS2K<@`Lj>WLYAZ]WtNJ(Ft%G6")uh1*\pq-.5Xlg]XNsE]abH&2!H=:PS^<Ur?Y@#UUO=faH49l#u[`dc&u7?:9teZ,siR
%P$1Q"iLZ?c8uQnJ&K0!0BMc&``@7pE<t]AGf$16#S,-)g2tH703ICJl+PHnC_0X1f#XE4K!d3Vc8*+T`l-1ZUd@)/pltbKOG4>"?
%8VjCh#T'D7/2C,n[96K#%f3t#0fkO&BZ'>fPQGC5=Qc7a\?#K#ckJgQ.q_pQ`HZR-VjS#CTdC1e&/Bf'XQcfh*YIRaB(2l:L>`A5
%@577f>(``W!'mt"s!H]G7.J2o#beXH<'5krC^-10;'DsR\Gpi5D:HUQ0!:GY399!H/1$;H0f,\"p<8Ke']S_p+9k[dkhq-U@u4D]
%M@TI74rnLc67r>2%@0>",cISE/;7L.b'nL]b:j%!0mF%&4inH%4G>0n<MYcIkhOUsNX^sm9fL*gHb]nU[=X-hBa/.n1qX&l@6Tno
%G#UY_GZBVZW!ZDhb:'p"$;lf+D*YV_ggo^\W^>4=&jIeA6@9Y`e!UP[!-i6e0GTW->XuV<E+q3)n3.n2f1F0DLDi3F*(Egt],-fh
%9%ohMBMqD`h*+n2TX3&9-&YM$QJ".[UYU2gV2nMqn;ch0eGN:1To[Pi'St8$?*q['Q9G@ONZ]Cm7gVU6gG.rfZtZlpFd+dQ_*T6?
%h/.ek8%We6-OOR3+Sno*%[nIHl1&G.(4Q;F(WY2>IrtC>J,]"s2thaR1hf(REcPM@FD0F0dJ$eSf'9=JCEB`_b:Tds;^tjAYe]P.
%1P`lac4[X$V[UH_o3sXK4JLK!))]A?NOY$`p\sUqb`$nsTB.2'$Y>b)-EB8Q0,3)d\f<f/9&0ZoLE1sgQ3`3c67.$R:4bnKDC&ue
%:#=%@GO;#Q>?H<cVulH,TS?j!"K)8/(5kt_Ka4EjGr#Lh-R,e`nroo@56-?d[_>3YpEh*Y@i4"b%(r7+FU/AsBH<9+[>:"af9i(B
%+;[5"D?0_`S;G4qn9N!e#'J$?:_H6`UlN&PfV-p:lZ[p6m)HomCu;O%m<#^K(IF&T+_7c]Yl\%&-Sbf\#d%;TjU-6)0IU1#8/UY/
%RJpdDjGa[)7jA_TL6=A/Rj_c#"m"ALY6IO2aKp?dEJM_4Os>P!).X.]@[T!'%A\8G[im;XLi#NSMeVfnT3DFXN>o&,%Pe+d_EqIT
%dFkupOqB#p[Z2d#NZ/KDRNqK<*#sb-HQ[Ag,Dk'idD@l!E^k"bLb!WI+[4uWKuYs'k$S4Ood\Y8ciE[p,/1lg-@/:kRHs'A(=P\b
%j7/LH(^Ys7Gk&=,+>(V(0KI-k;lTI1Z2Gagg;.'ZVM!7)Hq5/qRmjg5ih_NW)ilC3SGW$,M0*6`qXpXc3QdGg0`bbF#S7TfjBra-
%l0-J;)AZiXfL;?jNfoXER7f5,,[/hZl6687n/V%%Z,B0ZZb$CLMrm1(O@_<S;ddjF>"C-JX8M46CDEX)LEFKq?kFd3KamQ\6V`1l
%7h`A4oE&?qNE9d2">o+\@_,isVul;A\9V.?&8r/%e!aNoMWY*o&9945PB5X=d(n*1=0Vt&`LPt2N@92<FnEK9!;&jq[[(pB+Yb?k
%;%?hU8V\"bSAas[m>JcYBJD5))3ZmfcIOrHR8%,HGP<C"V_TI!Y%dcc4G^A%`NZ"oiN\8"I<sdL/@Puk$-5#G/;"uO*]P&h5%9W^
%G[&3LBRuX^o"G7C%3^EJ*jF('_&:(R]/%W6`>7u%+II^S%;(2\Q#uLMi`g;++OieXA]apgMOMDJT['ZsR7!0@^[4Md-"n!tP\TI1
%_Ki?-J2gQ['q(q8l!RCW;7/JG<Y2/hrUDX8+Yd"[#1GTG8lIGr=t#\r<\!MFNS['%N(t5]6W7hX`mZn/S<tlM/\m,/j?ZNTDc=(_
%X-!3iAb#g1dEAOL69]c_(<)TD<b\BE&jrB\eh[S)&HE;HkOp`9r-O>3nplBT[LTBDSCPQakMXg/Z'E;-_?HH\kNJ=Mm%7N&0tUGY
%`DVB\b?7@=(oRpWb*a]&;]%U+RY`2CfU6jDX@.)No)a+r8Xe!Zce(^kbG*G<S=+64R\l(,Mbgp!)ps:K<A1S3\`VIXTj<jl"<dJF
%cCnk?#%;[U>/9B!r!:O"MGhM@FbP"XkRKOZJDf1bBTB4hKiPeM;#S)P-0&f2?)E%qL-6Pph&cR$eSQ?'`><dPUUFfoph79[$d383
%TH$LY[($9sFm'6&MeZWC4/OIR;:2F#plcNIG-g0u,;&[*=89f&SEG/0M^X<DhR*\c%F/rsokF#q/F$bhp7Gn1n=Yp,pW>bD=Xe&l
%LM/@B$>"(`AQL\[d@DgNB[+P6H]&m<8L&*"\]*(hg]7"bEm%CGS.=o=8X#"'RV3oemeUQ.k(dY.[:jUQG\osV$,KZ?TrRt7,'"*.
%ImH4urH)7.GJH*O$TtKhDV/+8)HK(=.";-R:5O.qn:dCb&dJ7\lkb%9PF>4E<tJWa9Q?!I8?%d*8D6nDaRu^\9[\cXF.6?e:![ZT
%0RS_E2kEVfk0aQaV<qQa:[k6ui"OY5Z`"=9fTLRdcLodoO8CdM\l$j/)U1\QQT^VGC95(;BJ9U26'=JGNZF1.kE&fQBHsLM[*_E/
%)UiT?X%fQ![.$k.G9^2/VnK=GTS`Uge8"X'g_N?eSL-Tcr)gI0WNG!o7M$\),U4&Yp0emFP8fOl?`D4ngE&CQarOq8J`Rb&HCL<T
%IV]2I?5E.Q79g!b3#m<;E;l-f10>C?#\Gkd,ek"g#)l0U'3UtF"ORLG!"D8'oFK=48&FPKr-aOU-Cmm>juW,09?nT(9<qW"+YYMm
%qM>WRXV?;&c$]Y0##To,oARg6DIGkGkP1>p_1hD-I9GAm:dLh0W.h#u=^6O1`cV9<1,#J[Kb'+%E,*\Xr.co0O`QF?5Y97G.`04V
%Sg%X(Q]W0>(?+_uPN[+l]A$0Q0eSh)jlYW4*KS>f'Z(OFEmQ#mEW1,aa(3T#/]I\fKDi\H1HsgTh$$`OMT6!_AiVJJgo\+#kb^a0
%#(ji&Kci"[=7FAP:P+,#$4lU!,m(@oH-eg1L%U)V*.:<NE@rRPRN2fGB4Ct.C957Qo5uTG<_ST(jZ6-[0jIY#!t_.k@bq6rpL@a:
%#`G@bk>kg36DKUgA!RGD@nEgM>f%VZbmN<^+,C\,s6<KfZ`"8fE5I6@OBMgZcl?fB"7S=B?I".("/!C<\jL7Bfj,1\6O*mQ0;C8k
%6Y"n+%BRgeRuDo?[l<SH7S?TQ9,tg#)j(Uc8'O9$,VFIacp[t'aSs_VK87MrTaBU"ScoQSP7]GY)JiKeQr$"LDShJ0S=i3U#R<_.
%Rq)]eI?Z?CK(4(I/TFcq)%gZ-011>>1_Z:k9D7Wh5m*ge$B]q!RNNDq%-fkLZ=%7OB0._#ZpXmKEQsm>d"j^ENi$l<"JeXT/.!U]
%'5c</1bsLG<ShCDL-.2AT%mqM@,2N'#e+CF)?DJNRXr_>)Ke9B."Ibrch\Slr+HD4Y3QVB!Dt#c!"c%W7B(X(_K7XM<C+s3p0;iE
%>Xeq1XK&TD">(aJ=p0#-ifaC!aJ.,m\\"59kbfFi4j'!tf\ILHUWP$B?p1rt1%f;oq2J#GdGXr[_)`DD$\eke,;\;KUV[uY0fB)Z
%#pBf3#IPZ2VJ<cAH'Si8LpLb7@R2,*S;G&#XP#\?)fj\u6m>"@bpKQ4"KsHg]TfHcH0)=E)%k=:E2+rCO_!Qg8C80#o;:^WjYqWq
%0TEcg[C+tD<#%TNH>%b"KS'/A0(XlN"b?ET3$69Q:%L[3a>^g<H61t<M>'q`1J?8VOm!6)-mldu&u6B)AdG,9r>PplSVC2'U5Scj
%$;9)o>!2/8W+TG8d8j$X+6.I2dVkfYVR4l%mQqj=[tmOpC(]Vn>09#1/@phH?)1lU6>]t\a*Tc>ar?uC?>a[Ngr:\\7S[0d1ctu;
%7]q]e'!YZL;3;RU"J/g?EGlq)`ONtD@\277Ss`$4i/P2nN<X7@/+%M40Pr'>5T>>f:,@CJ@\0*]Dt7("KCb%=-F6-Ok16D^7*oW(
%N>e44.l*jKBTc`4(T<2MKlY*gDIrnF;54Vm43$p2Q&cioTWmZ%A>;C8K;YVmj/m2X,<1l?"q;@:b#2\eGu4j]%;BoP9B4jMP=3uJ
%HdXu%\>QKtPOWf;!QT03f\&mCU',ddnkgt,eaqff3g_Fm_-)63gM%SN#dq_M.1<<Xk/heI6F'"O,jX6UO=!3h:X>qjnm`X^X`Qh6
%(d.HmhQ!.9A3%.=KGLO!'btCFa9,?Yn5trIPuI,m?"SH*/_;Z+8.ru9cj$Z-hsrP/iKA.nej*/"b5NEbOqFT]>N^V8V(Ktl_1aWK
%W:R,C%i`J5;2kd.9IeK'AK,]#8`^LsTmquAm5?&O66jm;))T\MoQ)G<nL=`#P;'5MCa;%udk&ed%g>`1`S(^,USEsfK-^B"DlW8N
%Pso%Yk+`q:Rlg\<jRbjap+;>]d%8;CQ>G=2Y\r=f)Wm'C!fXV,Z3bUk!D0PZGf*_iO_(cM<eoQFNFe9>kosb?66eDi7?_e!4A^>,
%XYLe$acPJ3E$tU/28%s<$?I4Tj1l)[oJi^JZd/6&QF@99l>0;ME=osEQ?Tu8+;9#K[o3\mNpf5km$p3s),haf]mYfPB5RFEN`UMH
%M\HiUYhSaq8RZJ/Kb8P5%c6b+!_l-;Wr$l&loSNs\A^>^:d"lt<,Jf+pWYA<=m.)8OdekSkE_l;+cQlk3&Wdcb"QX3g_iR8ZB0';
%C#a_u/F,M=T<XM_kI=T97U[\)C!)$B/F7)N>8S"rP;*1bqK\#2Dr08!Q;C]hFJ$\<4'om++t:6;)bjL90IkRhdP&`c1rYVcbUi5N
%&'8a<2at[&/%hFIh'8SWG@,Jr^j:\s-edN>+7<T1A*=BoIq5#)5.ZrX,p0;Fe(B_e3Og<\Pm)dk8[SlnF:gG4/WEsm9'9u,TS5*[
%pVZKP#i`If717oUG9cbfh(,*sYL(;)PaS)&\tuY4kQUN_-.#QupQKg6MCQZ;dbBsi,lr!N%e_G/XJ:WDJU8$YD9&%*nXUR7]mu`D
%p",BCW,hn>7%giC-`;m@%=%FFDnMW*$d*ZuOiG+7PQM4BB=]WM7'#k@]VC4UGqR.83/`AWNE#ER-+3\KRk-i_dd5&NS\KU&`h^`3
%@VbZ(UWXKE%<9\JfJ;6iF*C5scXl1AhruolkZV(FSHO;J"_eH;5/sJbM5i7sD]^hlYq``+VX9fV'**R$o\1ROHG4,@6kQ3W;nj*e
%?*denU<qHF=Y1Feppi^B$80#ed\L2%Wb8kje4AaW.p<X9b$/1A45Ou8@p^[BV7[b::XM`Gg5d(N-ji5"lo%C.g?q$DXeU]sqn?0I
%XP0b5q/FEHELSi+gqCR;gtF?7>SQs1RotZURi)E!;>g,*9b55ZMpBsPURYZ0,+m9>OmB$q&iES$k1c(d+p'a&8Q3'WI6a+Rn?kDf
%>f:8"qbL.fMC5_9=$GItr];$^guA95=dX<lgr2bkPLO09/Bk'@dK<pWno1u]MOB3Ylg]U?Ch2>Yd2gPH1L'biG;%?3ZcZt<24(:U
%/e=C_\$N(%NFpSE!^W&7DeBShKJu<+*i33*D4#XNCXf_Z]4"o<e^<[";lM6gHl@gO&.s4253o0-#FXO:6sL^)J1M>6I[]H[HAgfA
%cq)ZN85@MsKWRVFC(nH6)a76/6qq?SaOm45d^@IHd&UJt_&J6t;\fZK8n5kh`Bg.%8&=UD"&):lNTU&Xq*opTO$TSjGab2t!DN)O
%oa3d<(+$bV&Ng8gn@AgKZPrl75^e/Z:gE`nO-5-QF\d&)i\>[1N0/')no0`E!E2Y,:6#qI#I')2_W^^j>'P9Rhlkf$BY7X+M<+/e
%1XY]]-l*')fM.sVpO6>if#EIs"3!8abb=8bN5=m&\4O%]oBn3?Z&7NN]eVd9B^jCRJTiW)ac-,8Jfd8&i3&-E6-D4kcD0$7F&:'>
%e74s\qte+>q-"Y$;)E<-`(]uX!Mei&6(gVp>d20(-!l"7^+Q/!cV!hTZ.INW+sBAkb"3$`Y,D.O+TXpD@(EFj^uHV[G%8hF5lAVY
%kK^M"F_Y[=n34SK.VKWqV[&G>\kOrM^g,T!UQ+LI'X84O)7Lp49W7'1`R?"&lBF9Gj7.;c7iM/q/(-5PM*qMrQ;3BD*%2FTU"`&s
%3g&"4<GtB!p!a"4jEMKf6?PGb9&mjXBT.".`iqF2`Q?_V>rNZ4Se>F=2Sk-,J<(PLFjT[n0io878oa$X7__qgKBSMkm!5[0a5Y)%
%nZ6-n%tKQYRBj7$[U6:GSUu@TE&k:%q&c[/"\^MCn!i@8K]P7/dJEtW45]78K^nt0fJ\:qELOa92k+;CKP(d$$\@W'BOTAW#[\8+
%$e)/RX2k]K*5HZ:S'Yd;ZDg7qLQtMKl=(?sd6BtuiIFCkKaTF@55CAT84&-uT_19Y$&"2^[SD^=YLfIYna,0AM(W-E<fuW&OrrL1
%r*:nrf2ik9i_KA)NQCCc-Z7EWQD5]L%c7RDT+c2%,#M^'F>6sDht5^jq'\b`(s<(5*V*SmFYnY85*nCJ5bdB-i6[jonfqe.kqn0/
%)3<Z[o4LkVDdI6foFQ<>NSsH3&6lhc!pJ9@:0Qd9-L=q=SN'oP@htWA0gKB_:F.?:35aOgN\Wb@H<^%OU3KF\C(WS)3YHI4PFOIe
%B7.9fM>Fd%H&f3QN]Y!1Q'26ODM=(](X[Z&4Ig2eMLTC=%Y@ZiPMF4VU1bs>Xgbs#-D!TX:KiS-R2Z!*eX?S)<h8c\pmS@G/1SB2
%gQR!&CgVQUlQ11?LjKm4=Nei?0k9FC+di.L[dD36UW)F47RQd2GGGJD+-j>F$_.DC.O>CTgk,kr[:)h"g3?(46eLXYF+=RL=rl7l
%oI(i<_'OBTB["#T6%N_E,HpYr*L-/oiK#@m\N-pUKB5@\Z:Vh[EBCq^jcWeOaO+Bg714MN#@2UdK^Rm#ne5qt/W*_nBt59!4tThN
%)D-CbA1[>i:D@WN'p"4"ePT`bdu5MbU0;$!U:c(G$Anba2bks!>b;tZ,*6sgaE6;%OKKm)Oc]$lQ@QZ2lR.dE[pKWV>bLKkZh)Ee
%Wb]tu#gcK/0GNE4U2jtZ.LZ16a&4rcM!ed>_i$!Re+NQjC:#6QPD:uPVTIOc)!@sDfWu>d:j@oB#D7/FFbXr==\Z^^qi*j.'kPL9
%'Co0l'L@A+(7enkh</@VEAj^Z/.?6Cp*pM^'q/q@UIjbj9oLf+0*tO%?l[?+/Mcu2OW#$mS&edkb?".B7s3@$8##8/,-IlT`Bi;I
%8PN8dKq-3\gV>1+=CO,,6!oY!`TQe38MZf(K=dcrn*)=H8[Ria'iW!Rmj!k=P?H@_dB\*f9H,+cb-N).N.^N5bBQ"3?5nk;@]P8M
%jO?\0S-9]D3:D)0;/P/,Z%sQkIMs3ef5\&IH)Y"Z;?6GG^U@*RF6l)[;DgSNO*XqVZ,WMq1Br9`.2Kjt'p/!eJk/9Rbq2ed)(4Eg
%-u5a`%sOGiYYD3EXm2X5!#/crc='ZU)EE,E:))XOBAAi/ajQ]JfIP2Xd%`G-,"$b]5;3P8FbKf#)S0c\@jI?fM[ZlmE)boKVGh62
%i6RA&[X3:M'Ag-pKiP$f[M>J7i_ZbOq'Kr[!?$Ao4M&_kc?@Q!pQJIC2KQ&hdS28tn@FnL/doBM`J/29oH;QDp%#ieqMDjuTK:em
%Z$iCF(V5UW!Sa3N9brmAI-jZI?TMn?>MRkH;41gO1^9D9h<4ZO:Y6GldFuAIDi:*!m;.*)>@V_I5^Kn^fWc-optY,JYl9%))FH47
%-7_u:c-uP:@t&g0qZ,@p"3I*jD/o/c3jpVdPpM]j=7-ud5,G344)(Kh2^VX^b+(:^pLuhI)]daD>[t?`"?P8qNiar18Ac.7BaRUp
%-rgQF*bPd$*\OQ7i!V/Eo4smV_Eut5`"g^pbM^KuF1b"*erNJDd5[fOc9"V-rqPRk;`L'jcaK)p[BG$SEUl0b22GLC?_Oi";<H-@
%Y";K\-clX&IQ]:M;#M1D]oa$AXFe7q_qZ5[mQ"='b$GXnX*Ongr&nO71&Ju#BK*5I_/hmE@k2fT`PbH+4qK.&<AD"G\>\QOodu2q
%5A@4`oHJ1&.3Kie;@.mcO$]#/AIIF.coM?gqY'!8jOTmY+H5mGP;`V0CML-?+2>Yknb<OpDG;_V&A9:E98I8Mi%`NB"W,F,I@m=i
%PLo@ZV3;)s\@7O%&lrgpQm7Z^%EgJ'\,VYs\*)9ef9ld?!W#$f4iTo_.4HRT`[l<MGjPU7<NeCdoY9:=A42N)Wct\e`N@%,1/jeZ
%`K,ha-rS4_G@kGe),b$B,0_r[]Gl,dRJNarN_INs''>LnKZJ@'_OtJk\CKQ1Qs;).^%N'_^L_!XYO2AInLN\a0o_/A.a$8W(Q^A4
%6oP&Ho<gV8hO'MJKV%)kX#R\QhT$U)jT,8n5P",jKQo_E%N3l1ihE@LZq(rd@GJOW6K/bi]hl9aW(Q3VGGNmi$sDBG3YL^#7-\;a
%"hUdRoT'R_Xm29\;,=*1R.('jA&%&:I\UF2!je)*;N_>`r,RQ^_["&mY7:4IHMXN':OKt&6`+s?Zj7]A:I%lOjqcjX&4TA5Z_#=d
%hb#+O+d.R>W%BN9aQ:])TR8295l"<F["]!\Nbf"$!7N68_R2K^Tp=rRk-HQ1dtD]Uan:]`L+a[uC]N+A\T!_a(E*kYp$Ajn7b-N1
%fDl;$r5%:\)^I'=kob*Op&eW^jLKNccR>rT>6phu0%99N,s.?>?UX!G:u15EW_5XM>c:Ss4BuF@RaTUVrTP^Y_lWhE=^9rHYmrFk
%TC\Z>7SMY9fqcJ%9(mN:I<5F?Ya<K\'4<RO8'augf),>W=F?4g$P6dDHcIm')H[FqME50^-HHt-3U3p`C5;a2<+`'S^Z/t2A!D+_
%V^bh#ZBU4hRL'?T[5.sm;?Y_#J>=l%DYk(h$Vag=Y4meULLmC3AF5+`K8.Q-pI&_2<TW0Mn&IZ_9"ol02Du>t]q+CGY;]+Fk7=$p
%GiB+!3Qd4W!>UrpDTl6_/ZNj<Poi]%p<WV9If0.j9cWh0^'dOB+2F\YZF^-$\0fhASi'5t?:(\[L&LrC4qHYc(*K`7fAk4]5@`ru
%JS?H'O)bAhqFO39LJ%;aj6:4436Z&j0QnZ,\=[mg_IT]O=9`/C>le`rIYTN^o:nH_onHVq]"<I+rJZFhWJ=Sk7qG\;?/c[A,*qa.
%_*>+F+W'NI<Kd"s84H*mg@%kLYQC5u-8eJtrh$3[j"g*S6ni'0INXQ;RM`4u!]eeP%O`V&I/B=Y)h5ic'"*NGF7Q(C&VAp1,?8bn
%i&>R598Ur.AofGN'tAeDorK[*"@o=J6U*U_Xdgkh.R2'SO!aKX+`:dlLd14!c]nbZ8m,esEj-b-:6@(:$=H3Y,!+1D_.K9aEkR-S
%a:<f.R:uo"jF7q,Lk\s"=eCP>&P-;DL&93L:M=Lj1sB_cD+[E./-7r6r!]e2ZP[aPW:O)fE^"iVk'6"hS0q>t@Sq)BHVoIl$/4rt
%@9S\pJYKE9F2?$%VsJQNGg1rB;`*5Y6pXEnDG"?NkVbZ9'4r/AoiJ\mJ;KPW#]F!r'H`\c$DW?b2(i[W?:&E1h@>Mh)bDnB;`/#2
%KNaPX[8JAtUYj['r!_1WW?p=%R8mOX`#h>'?c<D)WDV&`n^_(Yh?7@=10GtnK)8'#&=kL.pe7(B.Q5`&M(1D)iEric"^ZaH.N6XM
%8!J]+q6+7;Rg0bqkDm1n=*jL?8`D&EW%li+Pch0U;"FIKKPD-`o!@#YMXIflJ4*1sJ5r<`\NekaR"C[kB6`?j>U_JS>]BS7#D^94
%`.4Y+8@i;:BrtgiB#u/((bdD^Ou<=fD'YS8o40:[$qQZIK(qGbMh\7=Ld<SaL<H1'Kbo9s^p`r2#na8pRA^'@'9aV@h*^Bs3kTqA
%Pr&^0hKg%9Thk'Jp_d+Ke3r4&0g@4dGR0kal?`KGi:WJLNR5kD8$1B-Y?u.s#8e(:Wk*@WM9j8;=rEaHX=)TH9?+8C(Ug8)7W"9G
%!c-$&HYe>Hk[G9M94RuFf!*[[cm?".F?+VJ+ETcgb+E#aMcG0=8o50UR1%k@CB4IZKQ3;/J.kjhUU:pR20=fa(X-?Eod3kOTpkik
%YUW8pQ]/lh/qkWlD[9_D:])\QW:ooq+@0'qPD%IqaX%lB`&5+*+Z*<J^o[UHKn!L'%aU;Z:r2-NR6Ed,PVtgP([dEsgeuZcYaXrE
%1@=rH2ep=t#7u`idTJhGf,+Da!;4c19bRJN]tXjE!uKRA\o87*WcVYj^fGE14N^n5nt5Z;r;F(2-8QOl&dfR]@bl&BaKi/khSM%M
%F0UH.Fo4Rce[+,na_EH2Ru[[klul,!:](Pgom#!$0X/GkpGP,[+\U\ioh6;:hT$o2d:XEO3;aH)'"ia2(rC@TaYADTg;*n%hTn"q
%X''VB%E&_ipta`_T/+u%Wm&FSrDX&t@_gmk$_2,e94QaM@0g3%"0d!UG/o9=Y()-Z8e>2d7Tkd_)Tkb^Im:9!DAGKtLBW92HGTdK
%6U1.n0089!juE_#F&[oI@'_[n=J_i"dm*B/2r:<ZJYZ%u70+TcZ)Z^O,JXAcfWRmQ>i5l2IZWJb]K]jR/G0t'>ib.#pIb^<]"p10
%V5UD*e$"4S&4f;BRjQq3l^4b?P_9Lu&3O9W^jg*2aoJVX*e(3!"N"/V3^R#[%<c7[[Q*T&L0`r2W1PoM@!i$\LSuUVZ@>9[,EBd2
%b8BlVdaG<3f2,iES6W>(h/`jZo/"F/j@N=)mkR5@p3sc*`S4Bf)Qn0a'[^jShgW7M@9H0P#Ck>IdA&W-3#)HYI/TY%2pboM=klr.
%mRGJ_lkodGnoeh2Ms(Vaf<Ao)+eR[(^*t-lXAo4U$?61OYj2l@\.[R%pN<tWTN:!qK.@CG-1FUes/2<Z([^s("n#MGO!,c5\5`G6
%jT^KR7N_pk%gD?2Kmu8uo^2PdA\*+F!Vgn4&";6Ns+G"(PnphDk]FAT!:<Ki20uTXa3WZOUJl!cl'(Zsr)4+B37r\69O=[%,(r#&
%X5r_/])\$[n"5V'hO/BO$"3,Gj-FQb(S]hTf5R8<5h?kDg]QJ?Y)-L/o4(*>#?&Go*:Q%="K4ca8VL_N:G/^Vpd=&_?[ieuFBuo-
%@])_Gs-7,=l._ITKSpl;,<-i9"rXL+&%=\bM&Ct6q0/3?#VO#U]fKg!:<ao^O,q/2$kFMRA/6Isn?=$lIIVMbU@@Zi3`X1QS+XN_
%(tT?[#M)SM\U=4+6Z0DJNQE5UA?836(0p]cKb45?HJ<#E^P;a0q$o4#1>/7",e+s.g=+X[DC+j-C#Q1XhC1qQT'Ml,#"%^a]Shq$
%-60f4&O+JN,KKutB1F4XR"@gCk&t;Db[->G64sSXE8^a')7!RFlhrN^OmZK04(B1j-1MBncU<f`+!#lu\-_dXKMo-b([5D`JC&q<
%o1a/-\+*T`m%LY'EQ0m6;N\Qh&omRQT&dR+a%'D6))nS4`<]C@^%k;<kL&m3>f`8_ms(P#k@$N@Rj1%F7/2$u1.-oO"!Z1?c`11q
%XPQ1S00_^5g]/S50i:\WI'M`H$n%bfB+9OE3j@Dgf@#_p'')rUYs/=+&uF!s&TrQ&B,:I\@<RNUk=7W?Jtj8";8e0qT1+?=-Rp%n
%^F`0]G9U%BpL&/h'Z@jF4\=Z_0\?<Z+D1>b65U2ml'rlKB47!(Y[<NNASLh"Xg^2%oDpU]e6%jM3X0!AY:SZZKs9d>XDB#Zqaj$t
%kZ\uiV&Zi:AL%/u@;UX[A>2W[qm?@t\%2M6D[^1f^oNZgm'.KGr2$P:T.@U1TG^M^XI.*\FTGpY-m5@e;7pH%L%@^iUa94nm`%S<
%LpIOgZ42_l&<etEh";:sU8tcCJpB,8[8*+__G&N!dY#M4f%MA_(=;JRA'm?jadSo\4tC'CgVon%BVJ:(8F7XJZ?D?uKJRrbdOUHa
%BZ[rm/!?Cg,V$Dbl_)ajXZMG#e]CHr!:fHHUa<?>*%s]-/"$iK^lT@5Z??O5*N>GRM7LFli]gjd-]#nB>m;<>?8<2,q%iZ%_VB99
%(!Pae6_o*mP$q9&[7[3J6c%K.,Z_-j2.Lq%FQ:5-AlB:aY@JlaT1.ku'5r^9f"smg'B*)kUb8kk@jgC?(YN4+C@0B-AHJ6QF*"nn
%A8YD'!Mkf6AB3)l[FS+ue,TXgQn+>MCenN=j+Q/ME=H0"m?,N6/?@9!bSK)k_uu4+IQDQ*PC(NpC86:l-$CXb%t&cTV8><;HGVOe
%qK?iP^n:M:9>%B@U;)PBiqs*<V@RZ>ZG-$_E`)YcLQJ]:'mrX(0)3GHl@$KPE`DIbh!ich3M/a,LIJhR6JR>158Y!-6FaapL2IdF
%TcA4hVj0]%VT@@JP-I`k(6XUs5cj1.eCJgs`8UMY16&VcE$,D@p0gcC->Gs%^^ur&QlD4H-qT#q,:igKN#e2G@mM,FU[YLO\?lb1
%V8+]Q<?Y%YrtN<%R2p4'&s5T#W_A!P##O)LE`S/[R0<6n*)S>FU]hlTRKQb98M;F(/:+SL!2gX><X,.8Tbip$AAs^S%]+QOb0dIn
%L;[Ug-H>=X;c$?\9T5Il^onC;@Wk9CV?A':ekq)NHEl$sedm:;XS%@&lDWn8kLqA8&U#XukVAhS>'n&$&Gs]^e(FAe(Mdlmat)_q
%XI6$>6FC%`U6fph=_eSY&<^D%opm(.kT*gMa=l+*a>XL?=>P0RL&)`il^]#]A/DT@URXsC@O@"++j2n53Rg<F?-IcXQ]j`gAcq/H
%#Za3uhH0a`DR%d7NDrN<=p&LN$][o2C0<W%m@dV/%_`Yn+7$26NIZ1<mC\E)?ttj/XI8O'a4cD&E2/4^e7.ed/>PsW0b^:q$f#2<
%M>N>0S%hO4Z"BiHqoT&W2Mja)C9_B)/_>G+MmWXT*ANKF)o6%tMtOpQfAm\46\u'LT&%Y>[o)#H/#Eh<EXT4@$TG(uR@%hXe6RZ0
%X:KWl=X.UCR.I*h1R_aKMYY<iU5P(P<ML6t4MNS/m6Lgl'OtadYG^H0)94F/m#kgoQTE3\(u&Rb,/r28$)oE5qJLSg"io9p#5n)m
%Rq$8u\XhjOp2]*AJ7D7ub*?J<5DYDX@Vd9>#_k)2>;VAiroB2"#E?D?;@2=QlZP.X8@R&lf),a8CZNjAd_14o`oQAPC_%0\3$rI7
%4te*o`+Chl?tL[t=<E<W<<7<,![7[/YsL*EAU[CD!5M6)Q2)%8RDmai+F_Bbp(ENsb]XD.Uju'9IKi0^,Zkf'0P1jT7"XOPX_^*(
%$OgNn>bm9NL9]SOdtSERC54/h.E:'O9hQ_FD;K8g6IS]i"Wga6IU-L`9n'A(!.c>GZ//&"81VC25io-OA,RH?3pB;Wg'sB,#f_08
%pJ^%(knh#p>b.b$E5I69XC%N12&XF1<FF]n2)LUtZ668.Wq4(]ArRAEQf#5tPE*]><=Q&MA+m@H2N$PKL.]KVCqRd"DkS!u66+1^
%O\hJ\A+jZq+!nmn2%.D]NpbaW5`_RF]bPUA$tK!9f]]sppPZ,,TGY#OPEUh;A'M/dEE,;?Ca)^+$T6g97E:Q+a-_TWq7$=BKSsBB
%h`&g4,T5qBK2P+5^%<@'ih@:]Ym^:m;N/#ik[\^eJ[UEt"H"p<r2A@FMQpbp$KeYic[3D_0uO=5[i[cd/EH3-\4n17[bnr*8%)lN
%#g`Koi>Am="k4pt=O$;=T&ftIV7%ELMj%_R9e$=PN7m0NHpG2+gJ-,S_D9^1SOKiuB%qQTb2@U'AhYPYa&lPD`@-CVX32u8:!hJd
%&$B%\(c)ch;;mq2PK`&0(i*X@<g<MkD7#h40Zri9Ud@:kXKsnFP$ZB!dK&GW]pO(s^p/[lfnS<]fu7bFfhil0Z-NaR[s5k1Oi%O0
%)!4\<oSr.'Ugc8,:PD]*+qfca@Xri8L,AmooQ/?=qj7RFOk\)U&D&'',ASA$Rd^p^1t)l'C[\ogNPQlKdYNn)$qg60XKC>OB&Z."
%PUOJi_q\@]M4aAo&m%@A2J@g\rigdR7=#g(A2V@?*mUPkZRh5fAb+l#2Ntdn%Zm!@'10S_Y&#nVG:S:5=TjF4bcmk;-0WL:ama<7
%0a`(,6HBt?pTbERb[bCET\!Z$EmfZp69i0%Z"MXb6uZT6?!5%a5kQ5Hi;rS5,[j/T&]>eYI$pC1(PUr24:6fsQIlt%0H5:U"mNjX
%RMk$brBEGtqdo:R*Rn&4UeCo!K(q/0]9i1%Bp/RCfJAT:Oa^-(<-cD9`o7)!]p%*hYT#&2)#`&3".ND\iW<'HEhNOJ!sY1/-C1Zf
%^kO@q(C_5&77_h^aS<V?9.]<o!2`2YqDH$TB4P`s-N"YQ0-`iAgk:4Gqs<Oldd7$cbY3F>IuSB'qOCO5I\@[_P('ZbLQl03>6K#I
%j<PVXekH&p?c#T?XcY.*Dios6E1+j=F^MG&[A!GGV!m$BKG9kWBl0Ba+p$M$S!Ss-lu$LW+uEQ+r&0<;P;j.t$L-"&K4km_$&,]p
%.XsYH^?fK&.HN/,1K=I0#A6e0*[]j4$!$*JUM.op)Ck>efi=SJ*CQj5hB9iA_,]eS.VcZ&`Pt:K$?UO$_'0sH&D9l(D[Q^KAT3k&
%ld(EEE)a<AhDK'lr-AZt6P^!@^YLY7X\[(5AYQ\61K1MKORm+J=MKR[lQls\FZ$$_-0(=L!a/LEpgq=pET6^J&b>Oo.$R*8@Q.^<
%N/R5L6i_pr-i#&SRb^UPIYcOB*0uOjh=.85ocj<+R6qDZT,3m-8GMijqFm>'dRjl*QO*]%Sr@#'_uZ9j?[X(BY:tEn%.O,8pgldB
%^Ph[+AB=(0FtXM\8t_&,N-3;00Hos4AAVOor3B[!DJ\llQ)CAmK:a`;?REWYGfGQ>)+jR608^J-AG[i07pJ-&0=J(N4;3Eig^;e;
%l&jW42!@WQ2*m=h-/4d.O@p+q0;$$N\PKf?o!@ESZ<r>JQ[E.D>_VXiA>,X:pQ_egn9sDnanPK)U"bq]$#HQWpLQZ2IUML24\6>'
%ni+727_UNi&^l*h`\2F@Y"#/T(0E7;5u'qIc+]bqhcF/$agdN'bC5:i&eTTcH.!%.6A7T$SaagO#R^lOU*_%B!n5*bgkh*M0">':
%9Nh='6EnTZ5(X),F,J]>5/gltKO6&oSg@"*9EM9s&Up,V3R)c\I$)/X("ai604cnfR9pK+O\p/Tk=#;c;LY#BB2<,^RbLjS-L_VQ
%I%YG-ouZRr3:6'NUu*H\QO.*8-#/;DJO0A2mS))_YUh-=jX7-bFA!tBQi.2=Vo4"g+/61P2Ml\e_&/`Y13-dFI&#H$14GW"[@kY:
%,ql-Y\P.VI.kuL@%.HfM\7G`hL,*blKQ,Be+d[K'Oe;r3_^$EL,pelaKrfrNOIReOGO/D0nZ?.p`?9g\&OCShJK1\OR/h\L8O0&9
%N*dn-0GlL*/I'cYHS!Zo@JhlhW6)pOA^;PH;pWa5m\N&O-[$,OR1KOe*<1U''FQ-)RZq/+KN0*8chr5II[O#K^pH6/Bks(o-b"+B
%rK?nXUgGHGEAMS@9_`cKr<csIY!Q_%iV/H*bCh?i[M@U'0II4hQi0I;(Ete_93;9:b%2iqO,g$P@Ul:UR0;e;nTFc1U!AkobCkK,
%L]__R=]NQ6Z1P(qfpX1(%u'YV4I`-R-H+jSlbjiU2'PW,9X]37%7fLk7Z])O8i)Y&lh*X3*?b`OoZKZD7_J3Fo%5CtX:HT@QZk:o
%F\id9SPR\;QRmOG.7r*or'FijdYO:abo\4qf4PN@cA=cKlH;\g[=(`ac&"#O?Wq]roTcJO0R_Wc6W'PE^0WQZpg4Z"A\-6*'f(4!
%nkZ,9P=6We&q.=7:Fm-,jfaj19/.OZI/+iUK<Ocl.9oht^2j,BQ`m%GW0Ru_?`A#Pe!CC$nlhEp;Qk]:lQm\(QODhKJa6R@_F!s]
%._1Xh]nCBF*3?=qA7$BbFt9.p?[84WZEHB6$Jh$T+&IKA*Nt!7Z@2Nt[S_V9+eh(3PO?V)i07!JY<8rqhj5GYiH@r40/FW_'7Qc<
%;$aql3b`!]@PY=7R)8T/[Z7MrjSNsraa)%o_^OS>\h=`UI[G4a1?3K*<WKVuI@9TLpLOt2:_J5Rj]Df'9\:kl[g>lh[YoRE8:6Ek
%RA#M$\0Uum)]*WYKF@'dZOA8X^.]BX\Kq)nMn>#dhj9ho%@)bqr(:1a6F5l#9-X2Gnq)tkN=0f#^+Y[<p3GWoZJ.jm2Yk)XVF&##
%5Q*9XW-q^pBRa*p0.U7_&BaURQ/9_Op1:u*pjI12=jhqd7Z\W@"\aPprmN))aMcY!VBgmjs%S"hdNnX'OgCILS._<.)u5c@m:EO5
%&kBLLC7E?+q9ZWedliZa;*qU:\9VP#-=sW\A3B^>c,rXE08*?f<@E>0::psO'i"#>QW5)HSQ'm=$r)Uq<X<"1.@=X-TTd*>kPR(9
%RBgcFY_6`=U7"0mP@t82p<OtKrQ8%C+u<+/md_=_J6:&O'`0V"CJnZWRDk0@7([&oAW/=drDmK]Vf`j)Db4:RG(k3+0X+pqQ*j+C
%108'U4JD=hopGj'n:qbD3:"eI5Yb%gZoBfiZXWFUJ&'Uq%:'Qu."#=_c=_#d1hCZ\;t+2.(:Gi:V`pBIWWU?Z0CFY!=/mloD62pM
%hhX0?-?O#lCHbZ2j7_jf[S@)ZXOeGT?U`.5"OS\@f.H?!i[`cEo9l(ebt5ls?b'VjH)*kk:[^/je32^E<HlVT)edY/9LcsMcG(5F
%12#4m.B7l%UV?\>H_O$/24NV$38'J,-T)R$0[2m")1TTO^4UN_*K;&X=)[M3V:OkV[7C%c<\H4[[>E3.H\`:bE0c:"DY<bmp^'?5
%$'m^.<!4W,0UA/0idC-P!0U5Gm`BP\0h>;AUe4E=hu=I=e\0g6?P,P9W`/^T5/DWof-<5DMH=hZ6lO[jOQrC=H6S_(lDH*c7J.p9
%)KJS(F(G"@Pq%Ta"6T7*LXo_6cU8h#-P$[X\?]gL13-"I2o4WVjhbl"N*Bnumms)O+3PaU.o@N<e+-7!RMA#SMjp_ZV=Fd1:0A<b
%/+CD&8m8@ER![?Ia5Ifl6_1#N9)9X#ltA=`OVDoK'4[(KU"6`A^r5sc*Q#rM&p"Pq$*V>k`E]=s*J*+jVIf`:bZXjUEd8g`C.oHN
%p!&[nmO$O8.DV$bCqLGArQO7Fj-Ng1=CqUZ?(r*]8;)rco!eJt(Y2e7kM+f8nF_o<bi$6>jt%bGB-NeG/@4nkp`T0H"q$8:I$`0/
%AmkomIj/[ZDGe5/PTR_.k7DO&'j7qQZ82k#=8jU=#+2qu\[(SiZ$-+Wa,uQB=a"rWmDuBq.WE#4r(W3QPYIHPIUg!q>Dc5%_XF`7
%Tb:)h@ap:$8/C'KrJcir,sV[7a[2!JQh;SISETE,nN&cP8W5P,;mLr:q@@Ci11I@B5=LAcZ*%aP+K\+iL^(h=^U^Sg%\>KG?N'[I
%H3(jCqF#SthLGN+SHVi!EH]0R2'-cD-6H8@4VfG.kTAK^Cq6-2jc=%`Q[fF$M+]='(^m?,RBW(H6lmoHDm3W;)gL<^AAM0X',([8
%W@`2fc.<T9.7o%I-Aldcb27kuepgK`/+_=Q<sg%[=XaC2.s#sBi4*6rf'RVb-0A0R9&c9A"erNdAt;'k]l$:ci"S`a/=[i_XN@)b
%rQ5ro=6,!c6j-#HErM'*CP&</Y'c?>;eWB&Qq+DfQ(Qt9W;k0@-_BJ#)7Zr:85f["WmG&-6^1\MH9./W7BW]^#YQsl("-Lg1lOpQ
%bf6B4A@\_G=FsW0f>JIoMn-,uRGf1BJ]s)G'*T/#aZEpS<0"#.a?'T/rDD?JMa0kPRfg\Q4fC'cVcP4onSXpRUn2aqjcbt0Y<U[A
%\i>`FRu&$@haA/,e5l:4N7aNDh,cK6ee?/>ePW%i=^4$KA\?,c5-)3^8n)4`@%(T)#O]#5`"dU2\?1!5ca"8e6mT+(KfDlho7uqL
%Jas3p<h8/oL"31cj(bqEJQ=kP&9ZeZS!6s5ZsH<#Cn'K\.Ib9a_Id@3)_tYeg"_4=1ZDJ>3SGKXR=GO.Zl3aZaHa2UW2M7['cA)c
%)CknHI[+kHc6?4bo0S&D.ts6sO"SdX7?,3<l6Cp]Rjo1PdFY$`"+?HRoH"d=R0hYN$)<BK.d<Oa`l3J>1#eiOEKugGYH2Ut:78>@
%_-:J.n8>pt[As5E0B5e!f^Tou!Y#5r8ZUR),C6\t&"Xk@<`p1j:KK5N[2qiBkc,&:og*l.DuA0T-P_nV>tgR.E,QcKr5BjM>"XpK
%Vp?\_Q$k"'VtIM?LJ?i0Q%)kaWn,XB7-Pl,QI!Vl_nhKFc\HC?f;K+Rj[`$II=lOad2=JTUe-c7<7qm\;IrL?_8u$lYuHuWqVEg\
%A^=E<<5'F4h(5QLB`lA7?;Kd:DbK0`<e'Y[hfQLZ!>6n[-,sU6l).^h[MS?\9-j2>&0=)3=)q+0/gLQT:XOXtg*m,O5!Te^lW!]o
%*GO#t`.Bda+5R0r00,r/N^Pm]%55St5J5roP#$gPPAdHq!FGr)a<X<I76[__C*Jieq5-9ToH8F2HrD@[f!jDnp9tU94a^oUTO9/+
%Pc'+ZJit65<$XbKkVgD/P^HC_iJ`Fii$H;1InA_^Sd!k/-9ifu2c\_+HrK-\;3CG_&;1#U530YF?Rb6:?6:<Ge4UW>Z[RII;m.hW
%.**rU:nX:m;bU1_2t[g[p8A&hfh+>f\aoS7ZX-=]qK8LF]k"PpMBERb9SdM"d)ie.,P?k_;f*ut-?G5S66l^N$'Uib_Dq5N6c>\Z
%S9!TaQ9FmRi`'J(6?5hh$s@$^og.D1AXkLfP.$QoWX'Q)HA5aiEQVh-.?=$U'>Uf9PZ&o^LFOaN>e#ouk(gfa[SpV)1*JF8JoU'3
%,D8]b`[MS<]p0Q`-4J%kA=PCm@%!3uapP%CNgu&,7@:G\-3PGJKI-^A=40jSnB(M7q\u&"R20:!0ftM@b(P;A7N-tR80UFN1_Ya]
%-5;Voe(s3iGc+5)E[p)!<E\86/B5(*l]_^pIc]8IX"d<q=f4rLPg#qo18-IHU43(\j-3Q?+YO)r:*r9\:o74#eItcL.?u5J#3fNg
%Zni";.Atld#bE01D%WST0M\$4gdG\C18.eZ>dGC-*c")5+CN(%;NF5I[Zo^;PZ'4YLn;6\n"B8/oVtU"A"%"M:/tHm):CUilPSV7
%Zr(ZPD7)L,I*q#F1*J>?h[`56;K>O#CkDa=WWWdfDdeHCXrhBjrTm*r/uG/OK]Jm^+lIXN]M'NH0;aPn&/qJE$p#UnVm8Xqn4#8[
%^,uS=ot(XCo-OQ]l20H0I<W@np,@#GPAnZta;*:g4fLj=i(<#qN/MhA3m'CX0su&J;kUf4Hig!5&8pL<hL&8*f91'pKE6d&%E?WU
%8/Nj/::_kf8nGTuoTG;\WkOC*+0Qb1mDEI4[SlB`l.AQi<IU>rN3?U"S(f6<HVO@91)\/g2@5BLd8.I47K0:<UN%g+8!AG&X9$oM
%0''@'1sb_J+Xh(_-2H'VAL*njeQKtk9Se@2O\bf$m`9Mtq320d2OWo1[T`gC1<HG7>8?]XhkU92.e5$P`GqO2;rr51#IW_&qc)hg
%g6/F9$N$(d%%*P9"-GcVfp<CU[<i_+WbEJ,&U9+Yb%)\s,5XbX9A/BAM9Cb*;^N0,W!clK':"p6;lQHZ4_:?[9l#7E@R03-'9ZBH
%r!GOu$Lq*o&UC;@KFq!\AE^+W'O!op2^&OgGdCSP%SY`Y4KStZPR/StR8c(]OisEe:72YnIJVWfr')aMnXkrs-VlrH\c3a,1/HTV
%&'Wp6:9YofcFt52&,:?Z9E80Saeqgg&ql\H8s&PeEeG/Fk`4F`,2j2OTgf0S=UrQ>A5P<3>7sPjZmdT769SnG?taIa@$_3=P'Y9(
%,/M^R"P]F^*Ne#3$^EVkhN<jI\o\A,6Q3/lkl`o^Ws_k6&F]?\/)bVbo[csgog%!!CIR3QH3lG@\u'/<FhK6:;nO(6:=&je_E(\G
%UNJDMQGaN)f<.G$Q1m)m$((^M->BAa6I8JqXCH2OX)k:3,?^pL=BXJ&oeK+:MD.W"b$>g1\m1)MI[Gg0S"ru"MG">`P.hS)CSGQE
%KMs<$hinGO5J];OOq=iMDtr7[ZJL8cQXco>PLILb7)/pZ<S+Yi5Sh3o-qU+_P#+hLg,3?'P0^.K:0FE87#^aobLW8_0NUj:qP&XX
%fFUIe)a@@IN3eFP$NM.^j:oX8a3FOOEt.a1P5PeRSC%-?l]a^5`U*cZkl_BiOa,\bdnJ=A@J/`Ap6o]'q\5Mf7)D@?1ndP,@`0lg
%+6k`RRNa(jWK;bU?78c#WJh-l@OCo8$"7J1I*+icqBkr9ZS33B&,]Bb!D$CX;o=8:s1gfQ$&V`GHHL^QQYTGoPomlFdjhMR^RR\a
%ADRlpDP<UN^Im4ZFqGD$cq^!*[@K'+YJV<[BW"OY3esN%15+O5*%8a(XVI-N0M`:JYnBj#$l-BG4Cs>*TskF"<-(hq^bWtnA\tt!
%Oa3t7JRbN1:RMb+G?j_KW&U)3Tq6"Y;!<UZb(R#NaSKEANH*Q"e5I[sH-T+qjX"ptSJZs-/0mXg(`AN-Th/RL8cF:cU)"#/&p%3C
%RnSXlP[nYee3q\E"^48<%XMQ$18,P[U*9J%I<53N^KA!N^<eO!C_%XE2DJ0nHn%E(q,*?;'J&':Ek^0&R=M.UFCoXF*d$PQBor0c
%#,l()8f5`<5@l7*U]lsVkY.L=p*mjm<q<5SQ"fUnP6eKqLn^/\b(NW!`+<F?3;/`,Vb@:=SRe<IT[,=H=bgQBVV$_s5%R(.8qf]J
%q!h2p0CgQUWS1XtN:#G`43@I3rLM_B-Gp=H"l8TAij9u'1*NM<fr#6c';HLSS)A0Wp*iMiFH7g&VbA;3.FM!0\gAl*a?GkcSY2T1
%!K,ToI]?O^=p*FlO?+bIerkL)K\3"j5\6ThW/Ni,n64>Ea["t?=7..5*/t8TgQ;V<-B'_*jI\1m0GI[MLF,;MW<fG-p-cTB"<m5h
%>k(rfDaMf9MLWcV\md%NJEeFHdB^q*c5&[3D&iSUMKHe?NJ!0)`K"4n;Q9^Us%)(C/8&N/#1@CS`$'JG)ApR]eZ;I7J/Tr`_*P6f
%5YuJ0R\4Ii"tC9q)(,TQ4W+J?3N10U,,/"(Ae0a.P(Lj1F\3NcBd]X,0*rMp>e&`1O):M!<ICK#Wl[O!'#oZ$M&<0tZLI9d"X@/&
%a>9$IF+o52,n.EaIQ0A[6M1tGO"XR@Z;?fdS2=1u@AKmXKIJEF<!=PNEI4k,'He&hfng#=:sa@D>I.TTL!.S+AMR41_amOf:me1F
%_K;bC]*&ELJ;eA3[3Z2\_>ppRhm=2eE0>pTh)@?m1G3qtohTg"G:+hUZ;?r#GNafDLUhheL$Bs0$WXel3QV=Gn1J*`,b\s3;^<*T
%mcQfaOAP$^P9a*SUI,C.`+Hu<E_r0c,gBb'F_6mS$7\7SHb&1f1UdolI:RUDa8%<Y+Zf,ir.B>gd,+#2kT`*G\>MACQ16UQ>o2e*
%.Kf:,M;VCqKhSpJTg)-_LDU6$NfnY07.<PhnWX?Pq<^If&X.I^KXgC[A,onb&l6X//%eem(LlCnUo_VR%HU^J!Q"8L>+s&"AMQ:K
%83<(`X?6XQ&_L7#R=)mNC1<GDg8UF#Zr8<ip;8;J,c89aHXhZ&r!"E$WN9$D@48K]G5VCD7p0nmZqb)$d`n[Bhq$8aX?1**.\TD2
%MC;W*m!8i=W*#rk(?;$_;g)ROLauW+nci30Vu-b/Y=sq[b@BJ6,jU\%1+rWfGcnumYlbZP`+6s:8_,?*MGg9?%`J#SkSCBtjis,q
%oiap@7FnHNJ1'TG?dp=#Sfs<1cR6Jlq[EhPQGSnA,M"ulKQ6Wh1S[5]SMD>g'QIrWQNJ*8LfKj!"PFV`3gGX3q6QXtF;VW>3+!ji
%atR][LeblKeQFRt;Q.E(geDb,Y0p<*:9c-3Cf<T09X:WZb)"#H`NKuM.;Xh$R8PI9Br3d*)3SOQIFVEg$/'eaDgUsfJPsP[,i8Gs
%4*#P/?4+Ub@[A:EBdK*$!!Q$3,INb%6<K?]M5BW7!:;%t)HW/+O@a-@U__r1I$%>O8YrL$5"^,e.L"$p;+e+$Pu6iD7/eA)Y<Nl$
%^9LBMke+*o]-4HY^I)\fI?!IgJ,BbbM^4UqD-;g(F4bHdkm'mIGCtHH,d:AK5m\(k2@^%h3dd:fE_e[]!MkYB7J^i@=d(H$M]).X
%'>42h1Io/o-i2Eqksp0KpY>)rJMpi(&35g)8est4H4lBbLEU3:])'jl``.R/'#;n60/p8c[&p9u1bpaUOAm[^>sSDON11d(1e//h
%F;T'`@LY`=DuP\1nG+P+?6>D.c+8E-SLl53r2Y<K'NB#W=G3kT+s"R:0N4o)^AtX5o5_[(?KVe9V.GB7YV>/g:lhk^n/u&@3-Fqm
%5&-Xf0?:,"9o/?O20?`OR[m$l^\1eL$P(Xkq;>>&n'T4XII6BgjaWO$mQ?3]SGDtdkg3(NrQ(6mJR?mQl_"a/:NAiBWc5%l?8Um_
%PNXc9honi;llK&LPgL^""dc;TLuJODIteNLe?cASmM:-#S)?_'m84d>cBqd]M#1!R&-F"#<3L9p,Gh[:_r2p3oBAF+4V;)o1>oh.
%_JQ6mb/N1+;Rk4VK4-+<L=pdeJjL<&2d87l;8f=0XO1g^7^3bT?!"WGkK68B/_b.P#S$og+*Y6%guDIf]kR&4fYUtU`Sh8kE$bik
%M$E[GG;Ea]F5f&5qZ5eL>HF=$%L5*g6h.(a=usI=NBAQ5q@6nUIr5D5Kpc:[kP^?`"Wpl2b2K_^Mdm1_0L*5WXfL\PCfXaYCKmA*
%hV0'<&fN">/SLVOk>?j($VcS<H!.mN!`ef?&52?kIUFdL9O4eo(!0DeFL)a)p^dA)/oh>4h<2JmYIM1@kIb'\6K(SGo@gAW)QMjZ
%*:SU'5)i5g9G@V<%`6$A.,3NGJ<kQ'aEW;BUoaV[o`n?V5T(>(Y[KDR>*[(J:&FC]cjhMRW"-?k1\Kq?I`M@kA.L*kk[:0.Pl8gN
%knbj`RlU*qZPPW9Zq0cTC=ZFnJ[I\'9ld2_m3'I7S#%EJOIO_.T\IMt_&'&u/oUn1,EfSSZp\4-k!G&*lKg$k1jS@m6ffKbX!mt[
%:dh,8FA8_EHu;BWn9'gtE%tKOK5\UTeu1bQetWBr$eIm"Ra.[_qLjX'EA>RWelf\)R=MH9Iho.27Bb7n8-ZK;@oSr5!R>jdj'3+3
%.f_G4&U)#N79M2ImkpVdjJ@K`P1L"IIhq`T9!k56b\58dK3Fo-q_<B4kOr6%/J/!U14Xk=:HHE`;'8#G?nQ8NHqF!NL%haO3e.RM
%["l13b]oED0X"!MWhUVWS34l!We1gsea^oGqm*2s2_MBG^&$[j9fX`mmQtiFZ`oIYoXr20'i@DEd=G9H#!@T.D=HY%PaFa8BkW%I
%j%8?(V/^?l@[9HBE@>#N:4j,T\0Z2s%Np:oW&=DP>a!Z`2e!s[qSUK[&EQ`(oL#d\r#Da*hJ/h5UmKec+'34;)WcY8MD:`e]f#IP
%.Nn#9l\Mu7H3:abWf>g$=F'^[Wf8M8IEE,%U!amQ?^'3B4_Bg!8+/=,(i&7D8ZLWlr@G1T;M%X0'%h/*ZfQOnpf:VMK*9$q:1:Y7
%Ib%TFDgKPOTrb4O\s:9!h_'W]4>c",D[<;Mf>=itj2:E<*(YW/WWW.*/;9c9c(%,AhTA3HCA$iaV%j:B!<(l9jb6SQdL?tuoBnOC
%%;./(NhC=R3m(X].3(rDQNHCV(&h)Rjm?g6;A$N?8/Z/a]:VI`$Om`+VloHnIi##-EEcg@F,<lp@Em<(*K.6scXFL7h0IBiE;$(/
%EApek=:hc<mGT;J7j>?r2)6j5Tfm4h80u@m@ss9SR`^7E=1Y0R&P@74p/2qo8$VX-],)!KVjL*q?F:Hh_tjuWU<jsb%SM(h*^F9j
%F[L`NJE3gpb0Q_C,gg5lj_D[:gV9;(3DidSXu7H`K`!CXe:/:ol(@ONQ7m?OR;,07qsE4hn-YHkrS'R/`Z,r-6-ISD3`bda=Q+BT
%;WVo8%f%n<WVMT1pZJ4`MG&VKV-%5_elQ"(kKl[I$dcE9_@FQ54`HOMf>H-FpAi`CC#\4)iFY+VbIr32h`81-60@*@BK'O!]DG"K
%0)sZ+eNo3P#<5`*!Vr\d9oe[6oc$tr<*ZC26b+4J0rFfjq(>j6$`Q87,pn&@PmXqsj0a8I'"6kIV4-j]*PUBjn(%"2A#_oXN\':4
%n7^b&q8A]EA*e^m>:1F-`TrUJ#lVJ4aTHG.o'E0GUXp$crp*/SC?i9:IPNU/rDi`"L'IOSN1S6%%C4d,P3q<_T]2VQUGp<giM77d
%Lh^G_3JD&\$.a:-a4*?P9T*&GMtXjn5kZumm%P4]6]ufeAT(I`Ufj.$K9g;Q%0<LDX`4t%5.(Tsj]irb[p)+)<l:D*<uS-i7h_J?
%j5"Q$%W,OONh!83l-m=4RR=Opli:<f1reVm"4`NXSK).rLSQuRXXR=403?XE\pl/@<\A+AbB];0<EAO6N%/*>T:7T@*NS<N2b`S!
%qJptchGb`NQIf8Ua)^:l\<WP'c5l?!;B0\ketT)ZF/b.F1JbE0-T.-9Zg3R:?_B=JgYdg5JNNDX<=K3R'kPJIb0\5l.50Y)"_l8^
%rY)t<4r-n)Fi5F#R-km#ZUc9Nq==H^HhnU:7en*,F*a9Q@;)-G2:H+_NDU[";AaG(8RZ-XjCDdPj&tPL%-jZDjHn'/d;tY.`i-#$
%_Us,O_P37^OhrLf74J`A*N:\ue$V2cR[d1kl/^@*V]Sl*>eHn2(iZHhK]R?Q^*p-eX`=2UV(L+]XXPopi7u.h(ittaVl\F[?L^Sm
%iM:p<%(`aP5K_aN^$68d`fT5NRk`[COfLZj9jYikTJGTQcZN(d!N@nJ,X=sh6%g4U"ra-n?>]JDW>]@Q2KDIA5&4gG-7P][?\l_S
%=3#+7&XOrH"-WLn7u@G45YAZoZ^``n[O:*)D"]Bl`,por6?POO=%OZF]H1$%7@DWW<"+a,6GqFM)/h>=YiVr:Nk7oj:aXS!@#b9$
%o9=Kle.9HK5H8$ur:"@3."$aEls`qZOiXja<k-2Z%B3q@\#]3*_5H!oe2<NINc_<A-RRZ^:-tWLB>bRDPqcRV4*Y(0%K5jHPl]l\
%jca!rL$sfh@1^d9**k@Vi(_Zm.?SIYb=Ll-X_J)VH$>D"(?)C<1Hg#55;+g7cS]%Gqc#d?.iM)=**W6):,!M"5gk2f/lPh2iAIMV
%Io^S.[&!<HJbT:F-?@Cs<rjUM`u!M%cXa5J`.;>HM&mKljYpjhCRF7TCDK@5s80#"nNW.nV?jh!oAAL;K!-+"+J,seOB*&FDQg]A
%OiF'(^i92(KD.<2CQ,0_=^"!AmXT%/_s-f<*j2LJ?[dat2/\W1pR[tj#l!QVVt$_'*I/[^4)SK&G6?*7_UT*UM+pe''-$d^Lc8!N
%'_^]ZliIp+rL)n$%KlMOOjfn9U]"=5)@<=_1P7G[DU"4b[e`HGY!4jaLG^=7oC2hI6e[=g*H=Mmmk>l7Unq_lo:-e/EGMdZG@]=u
%i2F-DroQJMUs=lY%>KQ5&M.P]&:Mu[JZ&@4kg69#cGgLL;/fbYhF1aZZf5TH#.A&$30"GL/%C?N84K"HiQm(g8^mQAkuj&no][E=
%4)fLq`4-oqL0KebGjO2n>SLSR260NP5bN2HD.>EVR(U]#j@5pqc<Ams*hU.UqPK/`TU,P*0KM^c[5SsS5I,7X$kWGQPY'Q*T3*=V
%!3kO10h,;QL!TT+4s(1,-3HUoN8P@0/ABF,iLLT/@^iobcgA7qd;8OXgmT45EG/.s/gPB#bLY(em%Et9e>Kp_C&pM6c%Z7R,"$8s
%Bb>StoQF/a;f^!bnKcr=;8toWE8+Np-Y!e5<AI%#l.H:pUe0`+>VIp3.5frgT?LJ^U"`or@JD)dHjLmG/!5:;_IgcdlQ6Q0gp;PK
%Hk<"(JJm/O*VPgBW(e&Z&7!5V[pH`khi@FUVJ6ofUqo`Y'-8[,9KSf\pkCg`?:fOu;9PisaN31VqVL9L6[cMiVt]RKX;B(qC)LlO
%j%)A<9mb'"?,ELC4-^uO6[0Uu!V2&ZT[.aVr*eV@H1M2-DVI]+2iBB4c1fFASM(q/d+"*AoR6M@LB/&:BmUSHhN(2AR`1u[Ld\Jf
%,dD5L4l'iS%X7kAi\1&'Fr7P^!C'pE]Abk]&qi/5%$Po!+R=^Y&)O[^J+m]+X:Y:)KZ'4`GPbf,9UmU+U5],!l0H@#oG09V%biBp
%/X1Q(OD^X+qa,S(7?$#Qq&EZu9c/=aShDG\0p.c;*jgjgW)BakDTeKJ&>6CW7KBUoXMMn@/;u%Hk$.'B^(skXS(.^,726)dfXcs,
%8"nb!NWhh.`Budnp<a,XE0P6&8kuauo9'u`GcsuN@?#?27FD(s;i'oPfg@*F"2o;3f+M8,_2.OV\aE0#j5<gM=a:nB0%2$K&U#jI
%h`Wre3*!2i9EMg/AK's/*l\_YnA2bJK':Iq)51"-ojP[F%WaCt6[+bRCh*DH)kL78<t#ggl,qor\))SrOjVKr;6t1Vg@bBM\J_ng
%4tY^/;L1Ldf_Ll2]5@F(%DNu>UTkb%^[]Tj*BsIP=ud,CcB#9"Z9A3mJZrZA_>,CG!MB&g]%Xu40QYd6maHbW[k)jKq;d`OZ+;*4
%q(/.bP]3['#CA>[V:L@&\-m4eM3>;H/qL5oo'Zh7gF\/@U+SL(qd?P<Fm^*Q#J7K-(>t>#Q]U`Ee#kAU@G0E4_p-;SaeQ]+%[&nh
%>207nN6-Q=`VH2$2L$p!%?R0=1kM/7:G&c[8\!pS?lMhkYF$hZ59+LQg@2m@49:](*RsOoC7D`,kuX?4`W?H[lFp%%BSU<02LtAZ
%hbf`3J+HF_2D-Kf>bsHD$Z)cm6sm]`ici:,M6)I"i1n#QGXJ.'Dj!)9%8[Sq=Q_eC)7`c`BNG*0pA<$S-$$`U4Ein'oE`kdTB?8:
%R>SkS"f5nUW&`(b+8/bA!]PDFnSIZ6;su5;=57N:o&_"fc_!/,0:C@"aE8d"4NtcHSO[4$ft3p;Dr9N.D79b:G??0rQ0U>ZL3<QT
%nUrNu_p:-'Xj2P>GMhQImMI(K/$7Nq>,iEp3:uIUM;-Y/bs*!nLkB'ZNhpodS3kq0S0;n0FR21mq_TQ68<&%9femG;eruB=&#/1W
%#&@=qqfNAc80NRPWT+H-f^6<RfW-3I!F[gjF>[1dEA,"=V`u0K^go;gk`Z<H<rX;&FmF1cA_Hd^/!ken\clWQf=doP^A)]p`61!3
%3dS<5ga_9mTl[IKDSX%.gqh*fX,Y7;I\DJ(FXA5SZ`E!q[Ug=GW7?lZERTSLX-2E9ZX)K.RXjUA8J'7-UmjLq)>:PMFeo,2_"17M
%0EL?@<=2iZMt64"e+*?#b[lflIb"R5pV<`5(PRl00Wmuhr"])]DK-QuHFu3EmbXFWo'U,9#f^tR9#^nQ>:9^_;rFu;GrkE(nkHp&
%V?O;0g=!N">.O"<c`hFs'(VdYV.'L&[>[%hW*NP3d6BB7Qei:;ld12?!?>(i$BW2U`9%AKaO0PjGDFd_(]nI&r)92D31$!kFBb+t
%S'Bu=*Zf]?BS`,$l]?4LmQ"1YHBBA*,Mf.DaU8:/[co\NJXb59qQV\5a0F!0BQEIPfh!NDX+X&lgXDUM[g*O^*^=2G/t23_q`+6l
%oU6(1Wb&cF`Sou0h#pE:a?cLTTYTJ1*T^+A(sXeK(5gX&-@G#pgg%t"SYcT%$!MoJl#fO$>d`@@q[it>OR=W8Vlri4?=aO)/\+/l
%8B`F\GTL0*QA#g5WRl(Hh8k4XY&"p),]50;_>>.F8Wi6VN^K7113h4KJ\a]8-&r)SbPS-UG=%a=*2^W@E/I]O12\/LS[L(unBmRH
%A^U^CW]^emD1(.A8.Y_FAg"OVOW9<]P@t)4jp[@LBtENd12m9E7-!uG]\F#YQs9DREd2#^2>>2bC'<Ip@&h#$*.P'-WFWaNoCW1B
%<t6lN"L,eYijhTXrQ&qj`!sL7*s"^+0mJ"Q9%V6IWRZ@P^u2Jk$iW`cH#"5_.QF["rGaYQ3*uAp*&k)#jjr`OO68lKP9f7c1p;l6
%lr3r39l>42HnJ/_c9m#?:%rAS\0?W=iCt%]_fCkA)Z,<Uo9n:ff[TP@U43GH?p^rc@;O,G7n[CVGr(@4Yf;V&aVj2R8Xl3j9qe_#
%!IM@I:@]aJnU3I2,ALf[lq#qq&+0]l!!O[j<ktrPrFRQ5QqWOT^],q0@Yg?*K]-.q-+?#B6)g99LK/Otb+Fkfce:k8_`c\HVm5)M
%e+MW,2KOFmA^3j@=OiJQTtc?A2_SUl6M?E5jlSjfk9H(BA0#QkleMZF=.BAP(\JdR'rIKQVldjM>St.cmS;I:>_erl"56IbFT]h+
%<cg_np/!At`q&`lfK`6r@LmC*/s4gmH7L[!$m(.ST"hl7&"*/?JaII^YlAbK(s'"s7niO/l9YN*>fCnV1N\SLC`dY"4;dpO:,MiW
%*3TmCK@[%nn"ZIa;o>en/Sks?22l#OKDQAOf:>po30eDonOF9<[4a?2lX2IVo"_l4BM*Um7U95%@Lj0flhae>%t($2Q(GtifHj-q
%HTsVPmaNZn':*+lDA2E9n*0=ga6gf&O8H3UUmg77I71'Tisju049-74f87\NFI6OY\jRTp=d;26$N#)#X%1;FTe"@b7]c3Tj+2nX
%a:)"'_?,'JFbhLi"F)^>0JY"5G,l'E`87XV.PM1M!C=NEL)d`T#G?07fW%K@[q:dk5m^#T3QPV`T?dW$!3Y,NKX2qbT*NDCC3gMu
%\A"]<D_2m+(W[+'n5ep1*?oh96\IB";F8G:n/G*k8XJ9'1kb+5Jr5/SKR?5<`,[%W,$9(OS9WB!n5X)>>AoUMECf`+Zh=Zf0U).a
%X2>W`B8j%In#,68E6/3Pn\LGS7,cjeXBga+.D\Of8AZDm,cHkq%$)(l#tETcL&hT,@I:^gZ:E^;Hjbn1-"c=CGo5ITd1sT+DGo)(
%h#E)[l'aeD=+tEf'TWhRZ]IAPhe[IhB!Z,$3;aB7kuXQkD?3SPFqZL/#CGBA!#BBcmFq&4s(6fJ8+[9YEcE?j]?>F16#?LM"Keu&
%1Sq3k@U2f5)$Hkp!JsbG,9C>8[*)d-5T;#s/cpn/YoA.fqXX-i0cY<lRTkh2U3T@eksW-#%3dK=REipQjJ-g9TaqfH_up(0@#4FB
%%0$)`L8X#f?s(]E.\a]:l8/N.V7lAI:?Do!1)!WcSQgOb[&ugRf5mjM-4[<?%R9tc/EMgf!Q7sGOYDt6)>'8\VF;'6o2H8uFL8j\
%7cei;=V!7NQsF=fe%i9FL,!0bV\o^qm,NS427.Nr%r\=n0Or2N8$T%uVO7Cn&M!Oq)T09S):m]JAq<a8/;qF-b*=BE9(Q8jG?Pju
%reu$?=f,j/iI,>@VHV=cNFs+0]6!1loUQb6O.$8bQ/Jp'r[8`H7]%S`AK?fD-sCCnBV`\a(f:sf\"Y,XL`MNKXW5krYB9Q7b7X8J
%38>O^2U'!n4r\7G].onF`4@nV>bB"6cFd_r?K:V@+R);"7h9dAhMu!4iJUK6gWX4X4_-g=fXfXOBPpR$U)s)7/1XnR"E_uX&^XRX
%4?b\m(j^hEn%#j,jC44s:urS("UR%62/]5C'q9n4Vr&\#";J:K4I36a$@W/#&<SjfXMj*m-\_6'+W8W3"!,<C"$)"P_q2,^+P%)+
%Lj1O)hn$_d>*!I/Yj0nOn)'tOVH+);M!tW2hP3=8X/]cWII<5XE'I)qiQt#MEC%7"+VcC9VA`>7X]$(C&$M678\+lbgh,h['@;:a
%QgM>f)(s]#F#ksV+8e;l74qH9DJft4_Kg*,`QDk>Ike&>Ft'WUL;Y-[Rh=8dk\j#D@[0A?6=5"0%j+'%OF3oY]%SKYM<ZkV=Cjs+
%I,q?r5J"RHON+39<sl_g.)AJ,98>hd=@E5k0WeG7)G7K")e%iHCg%0<?s"@niSp$T5902WlQ5FKl7g6#%C=EpC2>kp]HT@6J-PF6
%GDbNX+Yd]V8WjB3N!XM;9R9s?-gjakHOe)3G_obJO!#_e)=*Q=f[?+C!1YsY;=&Fs:/E/B4DX-774)EDnIn[Z=&kc2>,kS]XV#4$
%_Eg:M2k?S"&9ZLX-sDe/4dDc,/W[F&VOG4T'FiV&<,m>tlg*$72]*a-@3KdEKB3.V]L>S-:5ch3_n!dN&2>ob!QQIkM8/?H;PZ#D
%_MD&j6>\Bf>[od8Q\WsM+#;PG(hjYmhQO\W(.C:%>)k-8ZY#3pi2kq3p9,3>`.h4]3*ScK>?Q.jL#6I8F<'4t_&=!O*L#R,hj]ug
%5BLu+'R]5J]VWP2LD!WVk-M8@U"RYs"8^6#Lep/^_#[pVUk@SR7JF.t@\n/`54Z/bhHaDQ1SNKq0FYJiKX3a2dlIjrCW;Aq,H#o2
%1fG?#FMffJ@H4,>jC;bO&;OT7fRDhoNVW&Rcn>T3+!);=l^/r&q&T:h2-?GuA!Vb=6W/dp\+%tb@treA]2`.)ku\BqU59gbb</:s
%H1SYtP>:8D/=1,/E8D<&kq%V8$-/,]d"RSj-&ZUnd\Y1^+l'dW5@2YZ\Hl^KBfPSfAP!*.YXg$nBjL'\qZ$H1>dA+:;I=E?)U/YY
%JaG-)@[>i&C3mFeD)oL!T#GST$7?5,b+QqfVri>t1`TsCdb:mc7>rU,o>uuJ/B]D^S9rG4aG<n:Er:W%Xa#r?>gR6Z4YdUOVu8Bu
%2Qkq"g.69-!s"OVG$jSOltOF2qIKRJnl`^oX+\K;*q!d2a#hOcga)18D_$3flf"O=S3_tD<9?>"#8lplGndY.,kY&k%=Nl0$ur(J
%WjGg'#U"@@0\u'd3l"Ei=Y_XS`:Y^Qg:6?9>jOVRQksH2/$KVINlu3cB;pmm("pfoIbG)_nfXhi-Uho+<lW^`O'4Eh<^UN`@FB#.
%11P%()g>]j6dj_`"5uOXL?REoTh:bhE2TRs\.RkV*XJ*S`$eQj"@b[`6jLD*W3Jrb_Q0Bn%gQeFL:8\M0W"Za<ti/l,:Q5I@.IRg
%%S!+#N9F36^sY3saSR4XMCnD+U30ETSgGB&9h!l@/[a'Zf5DFsYm@&,F<>4T'qZ;%C<M7^`@H[JYB3UlWX4j[.'AjTJ`Vkd%C:8)
%?X[rI)usJ!!ZuJ/a3FNW,^(C%LrrDq>j`d^5[;s&Ue6iWrB9*eO&nP?eH-Xb9V7*;NG2l'Mp@-KO=U968eoM-f.s.:h^H\t>4#/e
%8!b52X6AQh;UfdqEt$uD'q.,ek".PSn1YY$HaCSkSRWpW6_%(c;H4U.fVJaUiIR>RJM[of3a_Ce6*)drms:fRdb*[s5p;rV=:9YA
%"N+4"?P\f'`WA`;XG.,3$u`RGU48/9-[tU'oL6=aKs<O&)V50o()<0oX.cihLjd'L5apeUL,?6/!b0n://&8u!Me@7QBdnfT#?-K
%D/iB!=/1[$6D,)uFHplccIu++(>UA.`Q1PbnWjZ0+LC)e_Xad25E1J"W:>cV+l!LI_P8"di6S$ZCJ0HD`I*(LcC-#o*.W3oNsT+Y
%0LqI`bX[Ap-m(Z'C`[WiV$q/j#<D5]KQ?uiibf9d2h\uWrrWZd^BtsFD@gh6Sj<'(OHC%D#e@gu8Vf=E\&ipUolKP4]pL>iYQRF\
%'Aus:-hJoi;T7$H:BlF+ol[u[!8,LNr6E[I?AX-h=2\Brb.'r[\9ZSX]nMF,k.ogRH+cU3R.!J_mUdR['=)Q)8Mk]-G%45gN`/$e
%_AG^!iF2E`_\kAjW19M$E`Ddd;bSG8Cm?1ck&)r*@38[;QeQi`c6?0_Qp"RRfcY1f>(!2K38P)T9s''*SObb+f\%Le_4M%h&%?Dr
%JS?tUHRC5nSjZ,#D7CrYN5-BJ?b$;@CZG=D(.X">ltP+i7g[RD*_mh$S*K\-1]A=dFBt8Y4`gpU;Z>m$c#`W1";e($b#;'\SrtPj
%O;"X%=tTDlQU-ZOPWureZ_1Q&SMhfR"t*>PWkDoS!god#IL$,/`l`=bKuT04R*?/:0YsVs[WSCh4i+r+WZ*/c/i&]<@mhb\YjU]b
%rqp3tj$hs"`Y;%K!lJo3Qq$5(L6\LK#;c.?/2Qc.7!ef:qWu$q9``tr)b,Mq9,Fp/@nJn'(C@s0e+N,3;M.")H,N6<:H`QM`OOXD
%;ZHPi:K,Hj(;W^=\sUheg#?gO`p(M8&rkZ$Do=C1]OQ-E#Eu%[,^'tefH6Nb('<BQ%G5SY6&$Pe[$(PqC)4$t$.uJUhZatf5'AZ2
%adG>4_n@Q_Vq_0$OV6_84tX:MS>>![<Wn!OdM$RL/;]i)!gg@g*C2K4*fWo>-bBI+Eo\Qq3TCn5i#s%D<WN.h*`A^7%_HKZ$sauG
%4\0RE;<.cAX47^5-9DC"C>>=$E&S^[c>#@W5CBC1<CkR$Xs>H/ZFk^b[?^T756S!ATe/t=!%/`-$d`SRN^]?<on\SGdD&.LDLf!o
%26#lp,7qP_EL?.P!*F,ZnXbp0rW/kR!$'Z=[l?l(U!,CH*4\O`1j")K?GGD*gh,qm*.l]Jld?V34Uikhg^#ZGHABRSS$p,QZ5c/U
%j0pjFr')t3NPmjhDurLGJbndIQRTC2ih?mC-,&"CPsKt`?f1&D`6.QR58>l?Gg-u?h'8T5gTR`9P&rqT&]WM^6gcn#(0a:2%/$9!
%A.8u:l=a!uX_TTXTt>l.9[HQnGn.-qpkAt8:/@!t5l(tD"l'PPL;sVrMB2q/?N@*Oe2T0)`oRFm78Y:R?\?DW4sFDB/?64gBT-E,
%hH/Yj\sJN9!i=^kc%uSt<>:b/bqL)"cm:`gj8(>5M\Ro06&2I]Uk;OQ$hA!]YjLu)KGCgQm+D,2]::aO@^3;_EioHnN(`fZ3C2^7
%9D9(B&1Ub%54_9jMCUjRR"k$)`n<OAeHYY`nt?YR$A=MlC&%0KjLg+.0;aN)#DmCtBFRYZFY>SI.,FA_$ZtiDfZHjThDYoqRh;%B
%jB_(.Jtl!;Olq`SJYEWMX\B.CC.$*GOJ"u6E#kDmistI%]pK6dG)na83H[<1W4s6ks*/'t5gn:@K.(^:%?>c3Oh8j**dcSW3Y)43
%W79VBN-4!2o7KNf\,R.Xp80@W5]-ET2]_&[n"fB04`4#'&$5l:fG8o%)]m_c'ORi5LjsW(o?I7E-'+hU"eE/o>ZREKa6:R@f-Vi`
%]$Dr;pPAdf9cb@.*Gi;JiX3AcGn>0RIYEshCQj!YT$n;,Ls1[hiTV)6@Y^HG^+WsW_$I=42?=.O>>Sp!(hQMj=BGo@<lOaN`qtc"
%LGA/V:AqOq.OY'+$aBdY.S"]9_(3F".%Ru4@<7Ph$q#9\LkbNQdO%`MFl)(nZjt'0iMUO*/krZ`[W6QrJ7(pT=UdtQI]pL("Z(q;
%Rs1/"(fi,Iq?'bVr846b0/Kme)/@eY'4)rea%>1D%5;b'Y5Bo<5*sBhCMn0@q+/P@1<nmaH/,GZ/rm6\b]]L]DKojSLe%*fH5Hub
%&,"G`OZ?h8.tEU+G%hIfB0B`J#Is<"D<qi)024.`hV^bEGHQE#/lCmUCQn!u4[AH[*,E#06=3R"nElXfB4?.1WR(JPDC5m2<ok!G
%P6D5'n#^)/=u:Us.p\:U6ZGu_`]!j70/Lg,X=IJ$S]dV_:>-O'[+mb\B2asgHF.sF5i#R\[:sbf;hIPh-n:$dC=ia]cY_s%VJt?#
%b;bjC#bQ\@-uS_ZL/jKKRmt(*5f0M0308(7-M&EN)g<,lf5XN;G`=X719Autmp.h22og.(h[?#_$"g]oDA]a(2TBL.n\G;-k1<O,
%XaI(&mqgI]\oS\?IA(>g6ZioOn6nVYG-n!%U&0s3'fZ7:[^b>VGC_6446rr-^lGJIJb;?9ljYgHS)UJj#=_Nn0;p_c<iAOc+seUd
%"30RpV`YFG7n"7MJoJ<$rL[NhkoU`6p/:fR[QJ+>"`BZ8(N-;fL;WE]_q\Kf0Tb>K!t_rSB.RUcapB2cXU$n2U/bc672hmJ)J43M
%B5&se!n4'K6c1=Bi.(D?P+CrYF6FFEPN#JpCCY:gFUpeZ_(YroS;$Tok!P?foRqaQ;?snr_1p<BO6^'ZPDa_Agu-hPE<SNgVJMIq
%oP9HDF=]l&/mP0,#DigXn)[rs`rU"sk$A+o%E6/#;u1_`[p7jG[R>_T)6(@8ACD<C%9<k_"TX,rGmd)-WO6Bc",_OC[jI`qb%hS)
%Q&>n:`F&V5\FYHNr#+,>pb)T*[\?!rmL>tplSbFciS__?_"bolH]0qt38S0'*%n_=0h%2iXXDZ3)E6^GU=1;k-F*)NWq7YY@q4LJ
%d7'ZP-VGCe49!p_M-J5i[q%CNZ5EO"3oU)UleA7tmia7S=#TgD]]Cm-Nm$p_>!ht>I<iUG:\P@eH0uM*>Bi7=!\Rb9`aibCI[5c3
%"HtbkM,bo8h)&1&s45'm5-3>oc()b$\G\rADI`GK6]t3]pua7TH5Oli!`CGKFdl.9*eFEkC1],Y-[<rL::3;^JQjaVo@P/?'PdU/
%mQfT\r4>K=0uriRLD8mhE)J"g/DPh5XGZL2-&"d6PF)7Bjfl*Oa$,!jbmK.G?\'^-)<J9.EOm3]:8B?MGBB?4Pl5uRd]NurrU:P&
%)Zsc+Cb'+.[SR!H;1DmQV@+J[le[/UjQ^_-bX3HsQq\FS@Ecfe3t$q.Tm'/_>6kI[Rk7t/.Y,;/4N1]lakVmZUPs'X4\<X?R\u/9
%$Ze2;&RnlG'BB_]r6so[?@m0r1;BggoN3VQn6tOO7D9&[1e4s]d.fgf?7:&C?atD<'b96ZJkEM-/nm><LqTcXi,WE<P^e0o$oEHT
%e")=)iC3N)?%4buS&>b5BkX/i%1WtkN'.0LWKpQ,E6LF8?FM#e9!sW&#;-6NE1TeJ?\AtK0EnP'*qnJ_0@0]2:qFbg&EcCd%ZpX-
%RH=;m,mj4rZ['FHbKgG9@-Q+ZjgZJ"OY;:_Ma?RfoPbYm[)FpGL[6OoWV/c8P:^G"6PsAEmu.Yg2`PZ>4?'DS>tK\[M?P8PO<kCP
%rs.a_p8=fBI(fF;s09#X%O-N\O4fm]&JXsc:W"5Y%'E]R4`-JP0lAR(JdoN'*(_co/XWeUOeiqjE0KW3I%"*1&pMGFPj[^%-4?jb
%(F@7@%?hL88HZ($f?BFcMUH9dL`J>qmF0l*Xl':#cnppQW'eo!+M@]BeH[5tN/K"p?bL[tIT.6^!'3g*jTic]\oDW;29=nTUU6$k
%f\Q/9ilBS=WjW[B1_2qYqq+O#E2E2H\)co[YE*kF`=%->Jh4SqI(qc*N/H<29^]Cj4?urVUufr"[I8@>[S$">Rk!?F2DEBln]#0(
%aG$o"[Jb_\&0/q:Ser'.U>LD5`O&eU]r<m,P*l'\QYWZ-QYJ`k/cXA';>P#9?dmnG?Et5We&IZnr,+F4$Z<Ek?4j4pZEK^0+A1oN
%Q/el>49MN(EM[i<n?&6g4uMhPhJpn_.D]`hT[^dVk&')Yn<8<bO73m(i:MRP!7DSVkH+7[mSnD5CV-"X#,Q3<XDm+/nDR.pZU7CH
%m&!]T3aU]A>?C$\kFoe7+kuf1kn3H>G(lYJ2m@"^FeCMS#Q3P[,[k%WB%c\4esaYeTlr-1%PfDKaYrpOI#C-bEb&O#PK!)4ga?%'
%pCD!cUl-9.WOU-d`H(P]'"ucf&.f]L2r*g[YkG%?MIXRcmL.B#E%\"$6YP`RTB0]EX!e0TaAO"F?sCO_Q7Ua*-^%o!\Lfm\_DgPm
%5Agg#BAOaSpbYsaFs<\F!&ZU$Y=<$hnACA``+PsNaAi[5Fc*fP3Y_#:BQnQBA/UU`\aYBKh9VaLGp95D`l['-FIWWbgLnaQf9'ff
%A_SudU_iH"fr0WIY#gVV!8tO*VV'N2D/Qe"?n1u1:b>^/)uet@k2L0i@0t+.19^aoOuCjgBf%rE^a='/@g=G!.H;=-rOK5O,4gH2
%HsV79nj'Ts[cPL-%Q*FNS3R1oXO4GW"7m1?i5SXQjTD_NaY_dr]CK)T!^Dk->O]XB":Tn'2`[1tApWRdXXu>K(!n_+1?/oMRUQ=R
%jJIaJD&?76e%R?B?,mR@K^=hP^&7pichd.YfFJ2)]7epf5(b'(#>d,-7p]*uNLmXBQt+0Z,;i-4F7d*c-iboF*es;&/;k7J*:l5e
%kV%7lRo!sIr+TL5SUgu:F,u=-dGt8r^MV:]%l?rOT'+3tF:a^5pqWq5]p`*u&bs)J_=&`5agFS-?u]:e?'jX/SjK?<)D,b)XKj]!
%No73i3-46LF`i*L!!6;[@5hGrEFnnH7TH`!8@g^\Y.IO*C?*V/S.)hFH<2W6EZN`3F](:`.]Ag.#aLaF?Si`&/@E]5rg:0==GOO[
%^`(7+2@u/'CRJ0<rUV=aGS7*j=L6a#Dt[C95V*W7rNO6b#DAsRIE'$`TC.;[ZN:L."`V@p$E,I6i/VX]kcJjKXXdGas'"Qg3U/j'
%6lP^Q*aa%8&GFn0^Jp.CH_%Fn5C4\D/5Q5#Wa6m-d@/X)BUM#t_.2i54qP7n\de4<Q%@-_U(1X,`>p)<_&>A'r9Ou5>_k2U+N+oO
%=Y-n#@l8(/VPYh4W[nk<L'*l^op;??[fqS@#UW\i7;i/I.'=S=MRs@bLb:`ESE7`Q&.O&_/D'aVC/$?i,\]3)ha8?%G8e@D7_1bt
%pO(cjCmn0XTV]_C]p48]^I-I,;g7h,Q7%Osm:Z5Wp\REkWJ;sapG8"C0R(+fZ,rM0#%t;nq[g?&<dD6&7<+2j[!#\b0n,I*[LHUR
%?Cc2Mn%ii%Y^`i6Dd\N_n@?bh3U!*Nc!7m:mW><=Zj(c9r@4;K]5R5;[g%:.p43\ZhW&d`HXZDmpnu"lTatO,U_G',BMSiqDB5,8
%HS?5UKQt+SgS@LuBPt@*p0s6n8QL3.eqJXAIaOYQ"a_s?(ZS-n$ci##Fm0V/,nbY<L5c4gf*JY8^%-pH,L%:V/b&FNYqOZk8H=V&
%^^[qSOZ(0."sju^47"=7LAN.Ej:i^)T#b/)hQMCGk[BLr'OJ#4%+3DjghmO/XBEgi]i]:[cE&?B1*>PII&-NVOf0_!3DK:$$41e\
%BpJ>hd/b%j$-k-)9mA/P@jum@@pncdUl;#^n:PE!S;YV#7o#>uMF5XSoKga#&joHi,BYEgOA=qP&&@pp\Cs6J]XoX*DE&G[@E<H7
%`Zc1k;D.7.E)R9ZJLgpDpJ1G+W!dA2TR@Tp5n0n^emGhi#e-?o-Q@Y!k9<^k@*L])c'X`A(<PbO8iqe7!1,J=Xj1W*Q.9kabUNS_
%OgcYuk?I)!b3nk6IE=hu`PASO<9375.>!cqkX5bA$4*T-!Y\!oiF%p/M\f+/6Xj[)MSen>CbYn@Wf_;:1j$7*Z4i6h]6M3KJc'bX
%NS#e)ra,Ql)G^>+Mb3*nK::s2=JU[C`QIBPLk4t!ooeV+cr'XRfIbnrD-BKp(bD6(Paik9+hinEb$S#r*%I1g>:>6OD'%fcRpi4Y
%(j#lE-=SrN@u2Th5b_im+n,XdPTNa-)G5ml0p@:i+FUmo_EA("EGOcGEY9&[gH`1b1U!n]E3?*b1EeXaoXMR`Q3,AhCM<?oSk"-H
%cA6d7P*a"LC0%*%H/1<_dR!+oWT!Thp]qX8/nT`)9rBe_6QXs0nF[.5<)Fl---`52%Hj&O&ll'?;5(r'=FWVjS[el?KF+Z<r>G/S
%V*K'*WT!6$#dl:L&u)tG/UATne3Y,:.V`rV<M*I`,'fa`A;5K4:hHAc&8PB$[gtZ\DrVY+_&?`-M<4f5E65#/Sq&4`ZA'S5TE3ii
%i8io]!D)3KhGG5D4Fg\*N0bCj/<1P/f@ZQ,P_uGU8<1TuAYXo'#c@ipfU6I5<Qn+P/u6/dR9#"QrYuqA/6K1GTlLNTCS1--509'3
%S4JjN%21-JP9*M_NV\9$+^nsYU(`b?3qgCoQC3VKQ/Yd3_CB!e\5[A6(hBC$e8MB5fB=@&?N@L"2a,+G`=Ognl2>sRGT_go-=RM]
%VTD5%'!D(`82+VOQT^*IhS9>`8@2B&'F%#1DZP*qkkhn7:YXH4oXL-l&Ql^h8cpQ_,V`1tYoG(P-P=c:!";]aA^mh+(DksXig<kP
%i^@(SjE6Od5_E\LbD7XM"C-32.N>sI*LLK52VM&nBo5d)"$Y)+^gC-DJg]2KFCgdR%1f)C9qGIRE.8>44W.($pt8`3"DF7fQ>R?G
%?+J'tS'rhcRQ0.SX^)2N,Dk9#UFtkA06;rFEj?'O]+.NsdK+)+'t4Efm.1Y=`7O1iqs[3'!i[a5,3RWgQcJk:Nia\TASF=tBnU*#
%i(8!ALb&EC<OF'G=6<mgWA+4flL8J5bse8bL4qOR5JJo8q51"JpiXu@eD4rG^-tSG\Zdsm0Rn8OZIIaM@CfJdd0?E-P&%E4E,!]1
%:X>QUpu.qTX(*m*OaaDp?C;=rRXfj$_p+"TN?2UP(Z\pJ,%?$Hn,)71k"3F?'[@=54"j/ZD&bGp-frnB5P-7-7Xj39s#UdcemPaQ
%9.3B2HDHGQ`5-G>!(K!S.ol!?E1-3O1)Q.O!MbS7HZu4XBbrI6B+dT\:em-c>B+gXf3=.$HKq(CfHR1!i;K1&-8"U\Th-F>pR.:#
%FshkfejHq3?3eT#\/#sbU/s/\+3X!u</HVk`aEV\S\*Ak["Wakm2&%s)MkHkOY"O6lmf#k%?r;oY&mm:`=?!%LcE68lUIpZ)@Y4S
%-f_Lec31nPQkkkhACX)-cTN5l8GMID6@RWK=lg<g=q`#^e7]akQZ)CJ$8I9$-9!Bja,OJW=9,-e0_91CjfcgJ:i9/V4)rH>PX]0_
%2"ON[[^O(r33Qj:R0s0LiN9OOi`7dD<7W8.AW85!UDNcu)F4S\5b-=LiR24("?S<GpV8eW-e]\\kCeW_Sp.K%kVT*^+#K0j')WQT
%QeC4Bl6(l;N1q[hUjW*daq.;grdb3\ZigU7=`m8pRFl"1??;U0)J;IBf)?02s6p:o\S_jc`_%1u-;(ldPs]L^iN_%No73;sMf]"J
%kOfeaL_s$g]-o!+%5k*Ed+7*U7A"iUT1l=a?Og?9*.frSU>27ufPL]L;I0/)C\<Ntf1^Eal.S/gh-o8:dZS<gEG8nii\EA&8UO+:
%#pItn*^:19Ym=g<AkeqEktITp\`5PJ']pC15=JBK^7CQA-97$=_j[lsMb_Nm)uV)$*D7#!@oe/*OpP-b\**JkT<.3&m[ddj'qcX?
%asC?.LtYGt@227aKcT)<>/5BC/8OR+-<dNRR^c0gihB1]4DQ?E;d<%0':QG6IFMtVCt.PZQM\=XT;]IDjtF4qXT?7_]U4\`0'7P,
%pKTd3_U%NN?Y!5m0sY!:__egRjfaZRas:W+mKdk?qS@hn/`f+RBU-`h*0$.CQ>AHj89bH3#Rc`5`kKL[gRPcF7R@tM$TrHAH:Gok
%l:S!/+j-^5h7B!3OUHkdr(<bgNT;@D-^PK:To;tA0BQAfo1bu(WZEY[Jg+N30SV%/]HO)dQ.sJSR0:*e<BY9Wb9N9\(;T:U0^g:(
%r*n.s96i7ncah#F`/-WKMMu*dmO:$_;=/"]_)S(f2cCMTaBZhK"jc=6k`$c12b>U3T%kI"Iql!+%*N'8#r'%b;NMA?]q6e![uI;d
%:&8rmmgDae9'^uBT9PA43(NS?#6P1^E[9?Y??CF'Rf3+@Fr%71Kb]foGst8Q'&%dhb!0f*_\TO;l5K1lQVA5F?3A2Fbi[H^\89;_
%k1(\.`-SS`?$4UH9+.l.!F3'6Mai"5H'E=tQ#B(iAN=f97L,tSS7mP^W(ZqQ42!m;"CnKCfP/#?(^WB'V;6-pbRRt_ddpLc(l)gK
%0+$,`Hc!r5\sK1).*IN?0f3H^m`)"IB&BYO'<+9*WY,M!(Cq1t0^HgJl=CXuWhS$lmt=Wi`aFZ;=,Lmfq9gdeKr%LcO4Ml%^sRXr
%SlBgL_jEK=5GQoZ\]HX]R9WiMV(X3a72Jl4eT)]HH%3GoLp@[uQflR5WR0`:WTt`KB!5EMNh/JS2I<ooYpAd#@[Td2IIT,5%ectF
%eV+_sVW)+&^%(DG=#W:J7=rERH)0mjs,=GaU/qu^iD-)1c&,JG$!Wn//6_^;UXJgT"3Y,<o3u?)1K4VnEgV$5"$lSe5)7(`E/%r!
%%!H'rqh`Mj8GmV*$Ak7Tg`Auo]\rZU5)h-@P))9F(uYi!)(e*[e"NPLA=NB@UUEaf/Ib)B\T0&?$RcP>l3Yob>l7^G6#s,_FRJR;
%UYmVs%nX-U>-.E?0&r"-0M5[pr)pKR;s.KS&mleS)kQ++HS/_N`3&Od":3L?M5.bKLkkT1,h[lWX:Q*R'G.\[3#[$A1.nGbq_[<$
%.-%E,C61H`V8G0V,3]t^315-F*gV%*mCbYTiB].n568]YIuhQMbelArnt^jsoS0EKqV<5?C2pr:L<$CZ3P*l54mZo*nXjs"kU(_B
%q?/]V-9e+lpqH<_cu/Ldmds"09rfsE?Q$9_C[&3"hrr[OD1E$1O+CPhCLV,$!O;Y?;F,Y]U-Vq5R#ea,aH?#.).C#53$:duDT4dp
%fu4A;6;X(*W<B]hru9GS(4IfCkAh#[&gXKJ?<f&n;SIMCQ/<2a#\?.?l#b!I!UM=p[H*tZpP,oMp"pWA)F6u_OO`+'/=.o\11=G"
%"C]h-e*2rEAZnE/"GPX'QM-6(6UW0*:ql6lA;PGe%l9_-?hRWY1Eg8Q86V]+l.eIlMfeJ-AFG,ffj-9)Z-^_tQhc(B)(JD/Y8@oQ
%42O#,)kiK5RHa*:aU>;Hp8UZ/7"pPI9o@(jF:B8cI#E$uZ:+]g"_]ZD'g=-D,C9q"r[uF'CI/p12"JtH6G5U5/1P)ek*R]MDNNGr
%YD5#FS-/]kmT>$`nns.5!3MOTJ[3I-bt*k;,1<oF$D,.g>A?B89Z8".`)f0m8J&sj[@_GD!t<Rr[O3hF\L252OnWm+Nin.?R)he)
%R72j#=#de#K'<mb?C`3NXDI:u6SsZo.-mW_6Oku5IF+N7m(J7FB"N3/'8_ilSrDl(O9$KsREAs3f:-;*K]s1@LugD1N[)5fi0s$f
%@RbR&pRXY@%M39g^'bM-T`+*fqc!:;kPrk@K)YaVJ,Ko*4=ZKO^]-pc-3ARPW[-'%^h@,-A.r\$6NJBfnN%e2Xb0NF/\\3^Z`at-
%OM]QQo,E5"@HgU=C[J.eD=(g15;6<1+Y-5%QWqXMore6[LTjj67_]!]:W+@W2>D5pIe]</ci<>&^]48as0un3rZ'Sj2BeBi@/bQa
%"4A-a"bqaO@+U\O#f!\hFT^4#"4Wht)$_U*@PkNS0P/9jJHL7<'"=M"6H#*)BS9l',Kn]M7e$&s0[-B"2mLLf!4N?+[ZX%[4,;H/
%TNuuM8]X1g.!0eg^_OdX9?[A`V$R!9;P@3MYMJ7;.1udr+'KKnh2/b9P9:GaE=M1DDR!sR]Rn45,;Xp^/LM-d)JLZb*=HqH\J[`S
%=/-GD\r:e[D)g03^s6>;K32Y7O/rTl1RT"]3-*9<eNL`@R7JQC=OU-?;I0J7TS*Zh+'`:2Nl`U'$/$Gc'dX(N+#,6oL0`Ng!!3n^
%Zk@@1.>E9c<Dlr.U'?=S3FZ[C)(CYnCF4I**+Crr`B3+HH#R0?]5"h5TTLIYNWPLjPh+qh^ThApaQ"PI&%n$6S\jR9&u2\?n-K7d
%XXg$T:sS/aWd*g1<6bCek\oK&L7'1/QuZmmA2ISJ50>6LNfu==-K2'/R*K>US)'B*Eqb`HG!?@*gQ/@>m`k@t!oE>Tp2d4FgX+6:
%ouor0:bm8[4In;2:SbX\s66tT;5Z;tk.5]=$H"cJ8B,&JJUZX/J._f4V=rdC+s/8d-uNOAl/4dHMe,[\5?n9,cd'mHZ9B8(B#P5W
%U#AnST,57/3&8CupG9^mq_"*Q#3$@?1$gW@LD'6Fh@!oCWQ%GBF?a6>i!Ml&EOs7"IToJ/"l>lRU!Vp%?@PEi=G'&^-422I>uAFb
%Do)k_RclrVhK;F!?^-<[?W>#<i$#]OXcrXDKi%XALcXf59uh[4F"U?;P6>k+)0tXkO]q`^=[WV%rI;i17f4g1HB1%3J@9B5!0?u>
%`HWK1@Bs=F`lIp8,!AP9,l:^Ub2YHAj>>BNG"?:;%O-92V!K5pp4e/9.P.aOaU/Kk)?1[9,9PbP%iHRfg^XU%6sfL#bll^FK=g''
%"4acXhfB=tjfRch0>E3YLK-p!-*'Fhr#mRN=jX7ri91/2\Fg%/B91369914n)<7Q+@sK,Yb(4QK5"N+4=[\%@WoSC`8MCsDYcTbS
%8moG%mT$rkUkBAB,LB&mU)ko<XVE\(qEL_J)DDJ@&3D-n]M&/`Du8""Mk;`O5n\!*d-_f:,/",]MG5Rf;@`;AXB?&.9k"eM3-E1e
%gJJtNVO?)?!d'jC=S?c:O5q8'Q#.h14<h(.i5dEiWeMaFgM#L&2m\hS2'd1:N_$"E.k/`cZPC*$$.5^OUP'm953m(fk4^\e+L87a
%#"K`F3W4kN4/1S#a5iGs]a_c#WX2HFU1P'j--$-shIpV:d1pi>gfuk2U7IN:r/nJ$j>IUdFna6)Fi9B`6EpEE5FRp,PDT4kQ1`I"
%[7NOGO[:kHK#PHD7uD6W<o(-`d3+E:<^`rbCVDm11k%AS/FBDZ603o;R71jVfcGsrJ&Pq%6MFs^=D`4$Yo?qD`Y5Bt<diBAN`a/$
%bpIjAaD,)!0Y=>1Z4V+g[t8T,6ocuGQSu(Tmf:t!?@oB-'d-go[D[eQ8$(l#$/4[dg<\Bpa/rITK66b:UgT3-"6beZ-ceZ;%-*5l
%XZQ*bVsYsdiqMCH#%XsPj+ATpbZ?^%i2M/.W+);%4Y&!.2b>5c2/@r9>?=9FbTn+5nA;J5oICm,Ps_9!pg1!$TJ*b+>s#2!HXR"^
%:L)1'0u4E(VEniGS,Vj4du41o>%g#@Efrl5b6#sV^>Us1'!Pu!f,SU4[H.D$7<P28c<k5-U<Q4jA's7Pb%$L.qu'C:"Z">l"E.pM
%%M+A<.n6/RIhD!__`:sIe2^Sk+O"]^5kO-E^7CqF`tLb2%13JQq'MEF]u=j33iaKCC5*C4g9"T+7;:4c4F&,j;5MCNTgK'i(`6(0
%,aVfX3m)loQ@@AM:-t!.7ssg71h0gQk1h%u^,bd1L3(=+_h\74ELQfpi=[**YVdeLloEd`#u&hYUl0_:Q&44Ue>+Y*.a'.D6b`]4
%`$S@RA/'0)o!aN>gR@1C^?YX5@UnT')t9TYafr%f>9O?!?P1R@a:ZdaN^JK6L&.@a?oh/hirnq%,LaK:>-YGm;"l)'=@4<sBO+2d
%U)V-`RYb="r44^&ESp9O>6e<r>?3_%oiqMkcnj-/?JQe\o-<shh`s/%p:9[C9W#'836A9oLre7A%S-;)ELO?2,VVpcYDH+F=#_WM
%Mq_&Mj6FKKJ)(DRSf7/D*],6r\7++(ljF^M?Hn<X\J$gjo!rE%]"i4SehmI@V9_r3Yb[Go!Ou0P+lOFO)-p=j-5OcIo;@J+OV6S+
%:#Z`K?Gl$hp!I'"P8Q%ZKssf]he'8YGXT@<^k"a)%GlRcj30ZN&rcGh*:bB<-ub2fJ+,Wc>>k1YjJ),iM.Fg[U"b3t`+2os3N4$=
%NS-FhPjIThd@-C6T[gqa%?2F].^4RITK!rOZ\i$Yp\-_C?I1Y8C?\$3^e_'1H>%1N!p0VZk25D"gA(6&bfiA[pY57EKH\GaaT<SB
%qBZs_%`h">!=bJ4oYnM9GMT/3(CA*DckH`4N,njFZTTBS:QCA2j9mTecO\I^nKA_c@Ks'X^Z$u0KE=TY-"(5DPZMsuFPljq]VpJ9
%9jdq5-4nV/.rSiqQe%tB'3OPCK;F9s3)UI_C7I,aY&V@=$R!lH11+^;cu54+dY(A/8[W3gNuOl06h7cI%lj`:%P70&7m'nR+5eth
%90>?TfebAS$KU&$oJq(3%^75u1](\=;[:4TJ>OkBIU!I1PBl=#9ppKC>`@LSJ2T^K-tt:5LhV[4(,$;3r_WN]c)bfS+q0s9#b[V3
%fh1GOag$5YBW$LNG>Df(r[2OKbhjEWj0H>^RNrTS+fB>Vd-d)on=4Y_ge88&\EAt9!2pgWg_^k&%W(9Ze*ae]8sZZurYu:/\Bk\R
%KbBIk_9m"\#l7Zs2bYHg"(r_;p!28&[h&<@XHg<!DdeWNdt=.Ud)\Lh/t?*V$;Ob)>_a7.HWQUeS=-lCM=l61Wk:t]le"LSDGBEI
%1*p3?Ld_RkGEH,b*c^bB7**[lkhm_r(r%m97VB`N(ukJ%\70L-J'>(OH)cVRAcp`H8)<7uWS%O8/HbmY2%!cj0#*k^_omcDCsTYW
%]8$lk(<"Vb"Zm,N1Ef:m*W4@:ShQ!b`Z_N.3GsY1fZ2fgA9;BfPFeTtqoaYA^keY/=C`NU4?/<oJl(-cGl&:"CZ*gL^VenPBs+iL
%Y43hCDO[#4K\rr>;sS7OUe&fZS[QWO+[tH0-_CDRd>C8F`08\?ZM+js+D+j[.tU'[$k"'jqj>bOZ'C4R')P6]<L=43R3lQT&fQ]6
%OrTGD[c:@EX9#VQHWr03IZHS#@bHiuD0'[6*Z&9Mi"!1E0ZIY\Wao-P/MO1^/u'T'bl+@S-q"*IUpF\jUio>O)m$r.Q\*Msd2%^>
%jGT$6TQG@?I_PYS1^OX5>Q[G'KJ20[In'kjp`Y!Z!F`lAbof5VFL*In4$#,tD;b_P%nbk6f^3J!3ZQa2k"th<!?Fj=nABk45p.f%
%A/<0VoqX3=B\btS^]?Yi""F]CZ0d0l1KO\XX`5Rqg")m9i\@E3%fKC;OLuS?,f<OO4mITkRgHl!cZHAL-*8Q%Z-C9*MqLNiVR6(%
%"XOZ\I*<rb@PILT*#9:knW&UFnF$?'aLE*o.>hcRF/MK=X+OJXh:bBUL&.9811N!B(u]!=*!CZ+[8;SdlIm/9,TKI]q)^[SGhJ/A
%)91^r-naYa>U8*UQ0CeK"0L$sR(<<02)]S.PgpTNY4EY=\#K`HTSCf>mL7XcX:eM2NHs&5_sV&+b+;H)8OqKZkW4LgB*cm57"rW?
%%!QG92a`gjYg_rOIU;D4(Dmfe'SSVC'(Mh"Eb]qJc2gDsm+%eN%(=NNHo<V?`dE?LW\lQE*ONlR9aGupLY]rM6.2jQFQ"hqLS)tM
%\7dZpA`!p^"87g8U90@_qQ!6+r*A1Q$R%s:J5W.7O7a4(Nhsc4\Z'"q>OOPbfuUCS9b8qFg1hHh$6\&aK/%MfLlH]CG)k*0EM@YQ
%23-GMR%<J>&ABDu?-f*^@\#u0i*M0I%pt\ZXYf#0RchH$h`mm`Z#]Kh]TI^X#EaEP_;!!$Cu/,N*6*gK8r@D/#oh(s3f<;jgprN[
%@;h3"2L]3^'Wt&3CpDs7kDd9Gr@6gBN0<rkm3?IdCq>_Ec&W?)(>qO4F@n)Gr5L:AQhZt@VDOunC`dW]=OZ<SagUBZU%kC)kJ:29
%E)0m'Qls[1?9@[3oFLs='+m-<2mdf(:)N8@XX"g8@nt_hlJ/3#7=L:^3-d)Y<$53#S(uerY+?*k)8X$qpNM\\0NdTrl5&4iPEpW"
%:RTW(/Uh7OKL]s#-#0HGO?7L\D#P>V)M`tc'm!7n9pNIr96&Fj_eq&Ca2j_qHu9?<@VdlSTN9NV&*1ge&Er^ebQY)P-Pm2CSo=jJ
%?.5AE<V<`3514RqN2QNGGOe7,TT#_Cc<,umE]7gIUS,9Ai6Sp3V#KT7jOLhuJ&D$OKe;N>K="oZ.Ft"-J8pG8qEg<[mZ@\&?(G<&
%jZUV2oE1kDQ+!p1@8*$g4pSV59a:V3Pdj;,9b00JQ%0(hA8npWKf2$:#Zd?iPjs.O4\5>!Ca=@_ZT%R#bS"oB:,0V)gM+XT5P/\=
%>rXI4lc0I?._sW#,\+a&T,2a_;Dj+XhYt5uFY[EDCW!gjCq0irElp@:DMC1#WM8'U81aGP"?8]MN!['J9RGPMkN$[Bab!od#r[1A
%\;04(AJA0n5o!77op(g6AOm#J"I7.sH$0+@e+m#:VnAAI./-'FlT%'l0u?4=7L,KW,8CTt(?(GIQDqOICcWT3@ie(4K2-DMoM5KK
%g:nFO]#i`<R[_-(/b.)Ad:>:\^)N2>qg;N#)Lmaf?m/kp&B"lJ<tI+/8Xd>/F07f`+`m0K'J*kbjq1"_[2hQ.`j>.'aRgF/4bh$d
%4\ps^,Jln/eRA/1_JbJJo'C-_gu(e-n>A!5B7fWm9N:"U/$%%iMmY;Q2Aq"Nho+2=M1'?N][Yus;hq2?e^@n>'H+:(_[,0D`TMlH
%q[jOL085%;#[]1Wh7eg1IDpV)4[CSCL]`ns/:)BqnI9)5]sqVBA7+Pl+38/R[nPH#4DT<iR?c"WO5Z0KcUi9G^M2>dYgV.J0I9Nu
%lpp"ARAf7*8XQIp0$g+4`?B_aKG82I4ESAj`pQ.9eX)&_ShPRe!2jL/k$p%?VhZa.]S50e(*LH#)EHTgMZ'UlTdS-nHHS;"HRr[a
%gF2mBK%W=7E:$*1%m8BS-5ZJ/7KOP=#?[2@``05t-tQ]=Sk$(1K)fsJZ)ekCS+j3*PLX>QckJ=TSB`7KG#"]Mau+#d)79c,%0n2%
%MQ8Ui>k\,RN5I%1##%<;prcSJjfu5V2g@ek[,7HFWR&J'a,q;YoWbGQ",T*`9qGJi.=*<J)^oA&`Z"=Xi`%]7U.$U$14$@2:TMlX
%B=('AOGU,IThX0[lt.-U43_bM*9tL]0`4u>L[^9Z%`-mu\S%5u`QN6<74j=2(P_;UhmVCDeZpMn&pl:1s,\lC1P.&Vgt(Ra8rZ)t
%+?`7Qdnc\t.^]Cbh4hLDM"C)Cc/$T+G%SVcO=.cUDK5490K1pl0aolc?IguX2,E>5_S\G5kAIbV^mAsg6E=DT*L9epnWdEU%=u!Y
%FPH&jDrmQRhfWm&&"WG/Vm)`G=K&[E(Ti>16bo%Za?AOhH3'(MdILe#1AMLNC+2rLrdmG&o+3jC;`Y\!FQG2J%W)X!#pRB7B5unm
%dH$g$hgMgYZJTd1^%7&\I&d;[hVN=#H%&NB+/^m\%:q%-Z3P'/>OeL00l1,D'D"HASV`0*nueB@1")c51hD]aZ+80:+!,8Bma#+g
%q%-eM(YZ?i@YN90^++&PLliHT_-brD"t$p0>ZdNu.^r*/%A?rlYtdf@BUIlF#_StG_:4"7dmQt;r8FX18Et7u[5FW34.6G*$7FAb
%k2]C[@/It`!qk'O)E=H5Il=,j*#1oKR8Z_9GD@*$?Jq+T65Td%!cfW&K*Ft$h-$Il%"7XsaN*--8U9;+Jnr[ua<R7ei!jb0IQ8.A
%3/B=//:XH]1ID1"3fh4ffcT%@r4CXCm-pps=RSj),\;">8Tc)um@!o(&U8?Jk)cP35oM^h5aqCd8&PV5ibbiM&9HoREK"$Gq7,Z%
%M8t&"Pe!M1;cVr\p>hdd_k2-o+`p::UFhZUFVtO*Kk0nnm!sA*,p+p#+Kcr9d-j,9(3`RYmWkGIG-/:6]To@AOIA;(Y$)2Y_9YX1
%<b2Bn_Ik8:Q8ru!E2mi.2\2<"9)I*/1'[Ue/@qA`F6c7bbqO(!2`$hc8;i4m:Ce``E1LVTos*XRHEL/8UK]AM-inm6R0E>ip[Bmt
%;f33)*>6%]R`B&#6#5?<@&\!4i]u?_,PAMY3hFg2CiNUT=!u6.O(3j2o,_8*7U(G_\F*2?OQgu\&rSOi`o$7nVNs+H113j'"JQG:
%*lh@j;mEc^Ej0pTPIm<9L(>edi*cp04tH`1QmFE/S,6E]WDr5:BBEj,cMQQWqsF)Nn!t!TN-MGd6R`XqT)aXh1i3q*F7E/TQhUhM
%0^\(<RK%O_]u'ck/[D9u4HIC&4,L3hZ,mId#oQf:@H'G8JLW3s*J==4UoQq"*5.&ea<^7ISR2WF_+,Dm31(6,=u(>`rjRaE[MjE,
%&(>N.5C>)KjCgZl7rfDq'-9G%N+HF,9O;#4N`2@r9Fk7-0gYLfF*b5CQ&2"4X0&raI^N?oXM/&=jD+^p1ECXS@8?.CKmdZ1ph+g,
%.R%VW6IU9BopUY.Nhdh)o;9W?-`j__Xa)h.o;JK(g[.&@_H6I)_?iFu!7(.BQPQ<Y?e>*QTIO=?>WT`$'&%pim%$<sk/06L@T%3C
%=Gn4(s*bFQHP<%V]JTdC>72+_::!mh.6Qndb_o8*]T":5]Ja8Jc(0H.WcW=H>bHd7/sE!\.8E*pg"56(Oe&,nGHFO9R,#+$;VibA
%Lf@\d;q+;(j(hoRrg69_#!k+!KU=0K9@LguGNjs0]K8^BOt&_(G"Jn!NReY@>>1PE,[@0l7C[.B8iJG6GE(Z/X3/I$Wc5JurP3VR
%b(?/I2'//XhL&$4-TdX))J_rT9&^V%\mbqj?Y_M6$>[!XDbXYBWl%j%ABflZ!(WH3.4XRJMDZ0uCB@c0+.0#PU-us*Z?i1tcn-dm
%['c"q1`[Ii\q/u[Y<[OOSMIi+bEMc!k+k)X'M7)8UR0)TnWn%\c0mY$kn[/n"CIMnC!(WN8217p?Rc!3ZWC8`Kp8dF.+b>KKC5T,
%_PiNr4t#;&f3'^R:82E1<dq+:@/ISn+B):rUhI&g=O+tO1Xid;\DaQ`RXV9-[Ik4O`UC^;%\:hF<'R$!o1:k1K/Jp@>a+\cFf?Xb
%_:0g8X^03[MoJLd[WmS8P`F(Q88'tpQ2UO"mUQbMb0$e7*=.Msm&qFV;nQYi7_*q?N`NR#`poSZQZ5e]-G&F2#-m!_qU&K'GMkVa
%X*2`Xl;)MN@MRelD'Ff7Xk!//?hCbt?7"gocVYFU)MP:!*c=ce'iI)tra#LO-I.LAiKYT!$H/U"2(R@i<gUN8lf+TaFfK<adI;jk
%b!`]MYMa_)EN$oMZ3$4$T[uu,dNskjZofd+&ebRM57UIn)5Cpc16nb*TJR.Bf_&ogQ%#MDXE'?+*&LobVSbf4WLojuPm+BF2)$DU
%YV[K,NJ,te@bSP"'V<@Y1X/:0+RsiFh:(uQ?Mor#P'Sn\XQJf@1e8IVqlU,4HIh`ZYI<bEVp'Nc5B.Q<_s>h88.@igkKkm09iJhQ
%VEl8E?bbR@D8IZ/C?mb'[!VZg6F"Tf0(WVM8E':!V`F*ToHc_X[radQS1BEi`TO4TX_^W[n?ES&KSAu!g(l8S4AdQ4e!>:EpQf^Z
%lQ&S1&T>dkR?pdGD*79/V/6b_($98GQIK/EkP`:_HY@q/i=t=:ej*f%j!BO3U%T^W,]h'QUkb#W6iIquoC\;lCs;;t2$ILE=A.@E
%dduR*c4mqCSTCE,Zc)UJjQJg-.DlnIhNP,_jo@!7HV/u_Zt-<'_i^<iQIP(b_o37Ig%ugFkn`iq/6SKs)Tt7DE*)G0.YZ!iGEM!+
%bA/T.7P.fLVWKQogfp6TKgl$JZ?a[3ZDUStj]f%'p!iUQoUmK!Zi-b3))3:;oD$G1g8;ffI>_o1)6d@,Z#\km<S]h&Y0TV,M7`.I
%;!W8Yh#6V)WfT.\9bkpQ5D;R!fb13@B;am5%=K^IE`&`8Cp_\1+'CSiX[+\XRT-:%KoS`#Ou:P.1S?QWhi7<kcLN3$_Qn^f2I0Un
%%JNWj-;V=$4r6aa+R.g5jK(uC;KA.<ETsD=D]_B"g[3,(b?3e:]DIi905H,bE&-HPg5r?%(44t>>,6V9b*KaZXFBGS4TAQ43EfC2
%NW=*&Z&ob7dD3n"PR#411ET!DmsJF_Hrq(tbtI3].K`81e#UcTolUu1h;4>D0j:N>F]`NG$ue;O-;6lW[V=[]^F]Er6`h#]?7dJr
%kI/mCdXOt]G#%F&ZCFj>0!)KNO+q6GZHY"^,du_=OHmnUURp+"1Z,Sek=lEPW%Wrk1REEs>Q0VAS$sX^5RmNbG1(gMa$=:DfCO9D
%P`-!(V"o"Ec*naeB>i#LXlUh2^,8dR%P;BA;3<kOpi<Y5fNraa:qL922uJ>Pk'b+VC?t^e:R&lLVGuc3$4MYRIa;q:Xi*7n:eqmF
%Y10W7PWMm=>KcSI+)X\Yj6:hMmRs.F5IPLjX`'D1<_hPI!RRRu]aGj=l;r.8DB4s`VUZ!2(M<*@r*t59`3Re-S`+\K#*#^Abso':
%FaV="U[%Pn+;2@!7gl<j^:edbPMhLFR[Es&BV.$iMe@0E/je*.Im55B\[g3uh_R^!1<`%2YejtYVWn`d\h6:A.D\/mD]ek1Oqca_
%GY;)7l\I6S3c>h?Re:j_8b9!.k[MJQW%I1j4QQ(d`Zt@W"j55[p*"Xr*urXs/lJ8hNBl!`;RQA-Ht`7A^%mbmns&g@Lst)pX$loJ
%6.5[V*>H%7\I7-"pdsh3Rl)BN$3%B6Y`h20CDD7nN&XV;C5f>[p<2`dEc)-gCPN$Wlde,$ZgRr=XOAZpb]Vq80PkmBd:b];QkKI<
%=FQZDN0]^#g5if)dNO:I3\DGOKHgoi4:.o/>"!$Ne+0sPTnYq_$&pt*D^\Oo!9eX1Y#g_BcO4SrU@Ca&G&G>eI`A@0We5/::NJq,
%?8gntnVN3>0Z7.5[7NK!5;RD[\!"lcYX91r5O1is0#^V?22r<+BO/EP5[FR_T!#-HJ_B`AZ-kTiZn<n3U0gAqLX`2s\f"lA_Wg6D
%YN?pc5qck6=$K=;)%WTIUbVsSL^FU_c-Vh>YnVo$((\M"E\tte0_AXX-?U`YK,9!^3+P.5MHi#Z/fN%Y2d0)kGF=Js+nfRH^dp*0
%MCp&_W[CBQ4>DcmSV^8U=-PBX(lbRt'8J<9^J%J\@SrYWWXg:-p>bP2Qe"o1pg/N%_<_92W)aAE'f4kmM%4W.pH_It2j^C&N"##@
%n;UFB7As<?Q%^`?esaa@+&:U65]@^%6a*8#MIli9,)`^G+[>j9>W4CpOLYk@c6F39IE?jH"V4@do=Qs#+TBI/q'oZe6t.&.+XS6E
%!+F3Y0"ttoQQ!;fJtfie9UH\,1$L>tq"->9nYHLskE/#kIY>2b%e>*[(m]uZImuQ%edo\7df!@WS<<iC46i6=LZ@BSo>JRNm8+\e
%c*s`Cq1PtB%frQ7g-G?FX#VZ>G"dX;-l\,4F,%fj+OaiNf7.=Y5@aG7QfO!r>53qTKTEih#KS`2DEiQ!papE6q_e]kA>"_>(?/(L
%GjK!]'dTXRSTKIQlK64HHlcHnrZ=g@m[JDDL$fQHpMgK>A@D<b[G;PFX`rkG5pZ>$A2J47Uf@!mhEEO%LtauqeHf-RGah]J,Q!g=
%5/hT0\Fb*:CNnl[Js29Sm@l[kE3cud[jcT,@Lh^qhPe#=n;iZ=O8oQkYlm\CaXPP7kIWVT1?i'!<%;1Xlpl4FEEGQpf^<WH.FP64
%hC)?&f,Y!ZfnK]c+8gPB68&.k0?%k^>MBGT%9aRTIlW,uZ^!eVY^hB+W$?Dt65@mNa.WUI:i)2GnBW!Z9fp'<]2YppMDF8=p^qaN
%!ZB<r+1`"Z@UjAD""!1jc&+(OX$N"Gn:_!mF/?m6%Dms!K7gs(hNQ)Y5pa(iMrm>J3ad'_^-O#e)Z;ol=J-rMehuft+([S!3-EH8
%8n:=#&FO1fTGXcGdf`t8(sm1/k^V[S9`$qaT'<I.Ae8^]9RO4c+b^ZHhE"Pb-_>8CN+V2$\T_q7I:^hD^5e-o9fjOhkZh0()0H-E
%Gil)7/Y,A?)s+'&:TY]k:I1F$@0r9FWs&n"OXZJO-Upb0]brEQ/_VPe"s:uuqK_b^'Y`3`p*>&-P=pF&:.Z1f+.]>3G"UOkfP/"Z
%?pqq`C)a1_[R<*<SJfV@>^TgBJFKX\C!o2og2%eA@2R&5Tq7PZUIu$UdGgF>']L2N?:'VL1RSUcF"9&QUI)(a\VEQT=r1ZGE-'(h
%AKA(ZKHmiMlE5.<T(XYXM2",DZO/*.F=rl\CgRqqZ(_'?9j-up$1N[XL_IXurBUgd(PH)AP&Zj::E4ac:;hPFp1_V\X08.\FGHP7
%aEnT<n2mldT=lLM"lg/uF="&5mH#h0(Ge19b2H=]D-Va'HeGG&-/L("'NL4'hK)S11g2LA<#Euq6.Or:p&Y99^3`fult!of9+beH
%]#\R/Zell503W85?LlakBs+9tD_VdEj-1egYh0tsT19]>eO=1?k)MjUa(3VoHX2p!X#gpB@0U]LMJY3Z_!5u'I2uHoHlNM/ZdLfo
%MKLj<>7]Ga.+r2s^^H-Eb-pQGb1#En>qXZeIUSc=QE.L.6EVI_p.H-?=j3[:7[#9`BON(H8F7q.0s<o-CcEc*LXEtbc2-M4[@OQ>
%JqGdT)^r_XHj=Ik7r9G&lUh\CL=p^%\!CXJjk=ZhaRqYq"L]*gH7%>Vo'iZ"f!pUWM;=jA!k,^iI9,(lK>AEVQ?Ph1bbS1d7,+id
%n#g/?^L)#'AK@(*e]L/G.to%[[[QC\m#19GQ@EXB(lHR$ZA+neh<]h1*HVYE\;nCOjGb2knT9_I_l7f/<?.mu"=kO2K>(PEc."Ll
%^<Qp[e+>$"BtoE*0u'tg@NG9\NUdfiYsESa4?gQ4\K^gN.^&Q//g!HJ*Wrn(#LR)1`^4#e&#&^ep'[Y][o_eE10b(E-oMo".V4!g
%/D&^:@EjR$-o>P'nR,`RC*s*i`KB67<tlb>!k>V!SSj6-R-p:mK)V7cRp1#'Go\FOICM>$B7Beoe]I/<\)-Ia;:FU@eRgG3^8?oS
%\'!F-,JufO=/lYnj)g/eJ=(c%a=a"`^\"Y-15h*agaG!+AO.l-Xaq"P3_WT4riP(0%&7V>:O.r/fF%J^`WDQMZ?`rj6utH-4VI\M
%g2>T`UI[ilKK>Q^$ZfOP7ieOB)7Bq;;]e%8T?`YJX.,1/+)0Yjlb>F["k1R9rn(REecE+K1"16R4Q<#-Bf(6YorDkU*?!<?n'g9.
%[1N(rAC,:8C:ngopG(>BjPGB[?c#bM9^pE)GZ=*G>8QrYCAa3R%..ATBC]$WAOP1e7j\,d(9$c*jd652jI^g8icG%Oq)ge<E;'Eg
%PIh>e4'qer..gEs%"ShNehE=NNXTj\Q1CUc.e#u0I*6`O:GNu6)mR5?#a5lcWb`;:0]P*9Nfq[KBO`Sm@oDcd@rgisp_59,Wff%<
%lTarmdgoFUICk`Ml0Y&&/,HXl5q[QBgA%XekO>*Dr/Bqa[m*/fF`YF'!8n.10f]&Yn)&:=CJI)mn@(GWb_>M4G)dJjC]M!m^>E35
%T^gR?A`TgU*%BFcE;]]RCGjZo\<K4rO5gYO>V3dZI+C@km]@cm4:M[.*_N9hR=^uu'"CE]L?=.e1ghi=MoKsg%tHfq:#moOiK-V'
%XCUDT:]tOP20fa0U_MFJ:p0<6p+YLKgO",fg5K=jbV;/?YHGker9!&KEML?;%7A.`gL!T?jn7UAT5O*Y["pf%kYCG(gf1X<FZL-M
%T3bAlUp,tFEB)8JM1]?-k<8"InsPA19W7.sF,Td@A=>"nlh]9q.mfC4IlU'W2H:3OQVsU?^Dp:_d+6KO[tp:Or(Pmh3C:n/\/sYM
%VK61c3qE9\R5KH`;+Ath4kE5O5>ke[;NZ"%=1"&8<EtC<rTk07Pp""LMo>rSklGuLJFN\mSmUsafW\u^D^9Gi<2`or-sF^`-MGcF
%nDfS+BBOR/FS@2t*'(3$'e59BJd,-W#ZP8TNg"b49S,[(28c^.]m\5flO<VEI#/'Y(1n;?3E3<T=O&oI.ak'0PW>$Z.l1T60@3gp
%daiB9E/j8b:mi0fMfU]Uj(DrgGP^E1#0u(?Ho&1!lGPcQ$i+*1UNC"I7;TUX>/[5,RgM:t8`W4]/KjDq*HZhh.:;:6B=uF9i+m"<
%nna5e@sR0FO$G=b2Nl72F9TTc%;nh0mj5^!]7ulu_m9Y`3EUV99#o/-5:Y^*F\ta@$1Ha]2Q&<l'Y]!64Rf!mX9Tg#YRadd6Pm*"
%E>*#9QcNGjoC_V4A9Tlanp]jfR2d9sj\WB*"2cuZ'sWEM!I"]eWFe@F'H!UsRu!ZihjPaVg.V4(1i1spRgSnIfd(iYVt@o=[hT"n
%LZsJrQ&RW4J8UVms2_afE)u!7gSas1k4[iPXD9sN#13_[MguO<bG5=0L(J"=]E+l#`,uDMbPZ\&OEcGnSH\)FU_1F[9OXghK8GA.
%T7De6*0+Y`m37FSp?Unrgl0.NfPt/?lOE&Hi4A8Z<_1'Z1(Wn)9pFKbqi_*AMR=F,Q=r1J$b*cD$iP#7mAtbiQ8AU9WSG(_MKRfD
%7*`kf*2.VlYu&G_X3>K.6:Gn!`dF@?\>e8<4)[$2jN\AsBnC@d57.JTFR/K#NJ7kj/_=oTNlmoU4;UQR9rp>VFk:a'NpgKs3C]4J
%*Q&a99qgG$dm=_m,oD]:,0!?)%k[#L.3@t:GWsG3J_J8sJGFTq(#f=N>[[!hQEf>ZV$N8a2h@`dr^@s:G^OV(TAGo"]!E)9Cp1ca
%YH;BSK#"_V=C8Hfg[$A8'n^JL$73Z;&r&cFEXY6D&0Z-&]#116-AC4tYg;B_ou)7)QCaPs+]9=i`+po"$W"j<N9lE"(%[rJGgs\W
%YL4HK5)gM\Yk-J#ktsCu\_W9bWrPuMmm[T,J7&id#.9_5<*i"1Lr.fL?0%k0'KeF1g,03;`J0KTi6ZRX]Zq\2O1d=ogBEm&!@eOM
%F6KP#C+Y-Bc/sfd"%oTHi*:hXa"<YpLViJ@p-T.Ic>el3T[]/$;NGI\`B0-4Y4]/!g6c1IMHk%;8M5hnZjgiXV$CN']_:FqG&;V3
%^Cuc9V;En0Tsbi!&=*qWqi+)%d@9Xe\;-l<M3R1jL>Ch-9:gmLH^64EG;2OOYegZini:B?"57Oa=M_>%+7T+ApE!HA;Y.>*@ZCl[
%#t&1o>Oa`<>:B,s$'o@SQ*tMlaJ(9J?G_e3,@=0j,A/o<a@XA,F7eT`kJk3ej:U$rhnhKCSLFjWN1&4810h*W0C;7l:@Zg0=^=P,
%7J>aoBu&#M-!i(9Xtu'[6-._8QAc;mYoi<MYt)NW(&1jCVP>AQGb[B+c(d,L]0`h^#$MA$RrPa=T;8+h='c*MVC%50Ypi].cKROD
%W)>jKeS:!E9)'#llInG-XS2(Ic:d;fMpd_E]OM#4N&:(R*2?+o"_^DBCK$\B?1Ia$9'4G=CFqC7&QTrB\u5kl(;CruVPKVsMq4sE
%*#lg?_k#E@/6l`+f0k>^>c/5P`b7LMZ0Cli`hI'Y%DX2!IsYt'a?02_odMZCl2n=H]K%QMi-1ek=RP/^XXRV"&TqHWIqq]hB&,U)
%\](=f$(u!eEtHuK&a.hO]Fsh32/hY;eDs_pMQQUs_nD)"lRC@/GF'42b5@k-HW/A%A$@3\m$5%`br`\<+oAr-cW9^i.IH]WTZZ?M
%]DM;NTS1I9iF8e-O'E2PP:D)qPCH1F[ttuCDO!Ti>g@/KpR>!p8Vem#@$/`8DPm/^-0aB[0f$Bg/JKR!ZYI8#D),t9FmQF\G*d?]
%(ta:M.d2^[Z']&uDT@$Y,ZeXX;e7#=W"g[+n7mkG>IhW1_Oa9Q328J!<c'.R%b>?6P8UWgle)N"n_VO]an.c.BQ_sLO4<c'$-:Yf
%n2q;Tb<9+3qIu;YAGQf6c86\W2b+"1))=1NO5*-/WCatd<Oe7RTK,N.ZuYPlWXh3^QKt#X*Q?`ip,JA\@X/o`Ro]RG85j/*J*V@;
%hf(fSYEGg4,rp7]eSD+&Q.Qjf';f],i%A#MB];R%/iPLjelGF!e.J;M]KC[1""[3C9.JroR[;KYh\t`/\E/qc\[D3K;+l9e.i-lV
%f)umaF)?%C4m(Ud<PBuB9IOQMfHsh@0?a]s$sP9LfZrXmW1u(!,$@W8Uq[*r@9b7*e2h["TAdn^jIo'k*hAg%s7n(TW\EsZU7Kq+
%2phboMFfW.dao$Mk3)-<--eF?<WP0#$0GC,Sc.l!kbR+;1C+2B<1//m[A-07IWO0JCR.tkXf>S;>,ojnLPhaEJNB!HrLD?Y[@WF%
%?;mJ6Tg?O^k3ZFF=>KWTo<\7!6RPQUmU>5"^$4I^82jjsP%rC\jnjL41-4spoK)'^eA0>PHuLakl2n<,f\u6D'&P\,k+^B=d%R;]
%G'Bo&(RdX1<kY2fTJd;O-n0)LTaoO'3<sfjnE67n<1@H4$K.uT8%plqA;hgN"5[&9csQBD2.%<nH?k,M3m>!%`0e.^XhEbRoEsnL
%WO&AGche$TqCf!+BC;])a=0,aY8,SkMrI5bd^/VCnju5QgI>d#FK2j*kcihF\!F7?J'L"7\c,9<7&17)a-@f#%^MgO#d[P$/9d"J
%Nt-u)F5&-U;7q`u'"BaD`P!SMKFd.gngIY-OY^>4.JS\lO>**]%O"hWZ7[sO1Iq]H*8T#LqN:6.jJk`>\9VcpQ0g6dJ6#Se(a1M-
%J+AY8:YINW&&Y)RD=j_SL13FBY+pZJQ(XmU>FM.iR9k(tO!P^*XmJW]5SEDhXEc+MbI4+B=4QhVKB_NgQFN&G1k*mtZ21oV"1cA\
%F3N)XDG>.Ab:9n@59\$(GdU!i0X5WS[U2`h^a-d5;c13;<`sK<BltX"cU0]r$K/<Z).]WcJbfsQ03ZTAb5/bH75-66F;4M<e&ACI
%%1B<H:IM]RTBCnKSc7ZOY6:!=cOSJW<_=E?lf5H-mp7]00$`(ZQ$Vm6\kegnZm'W$e9MH5NC9+hJ93)m.kYq"/g?,Z=!'=\Oo5ul
%#9t)kklP?dcOsEuZ0S$;)>d8Y)!n5#7ELRB\4n#us1Ak&_)W<,`d5b$`HoXCVMo/D.OJ%F<1;hh9m!4I>#J),a1+gf8<)QZlr4>*
%`o4;_?mVS-F&VhS3HIf=7g(?tM?+9cki5)bkuBIPNSkL>(<CuXBX^=]K!IlPPEY!k-OFH/Nt'kcpXCBKFVYlSq'cW>&*VJ#Z>F['
%^SDU4gZM(M$#QK2VMenh$He<#`Q7r:ZRB][Whm!M:m534/'^N6/]1bm%TAS='HLfS6\,k=MP29nF9b7oZE#a0Egu[\`d%H%QGaAf
%[:i4H2S$bmb$K-N5QdF`V&^?CVNKi/]B(>.M6(%Um*0bo,<>OX8"*G'TRd1Cqje;1]Ju;a8\5g2EZbK<TEp8J2HTY/'g>l/R-7.7
%VeG,$,[r,r,K>aSaR4$>3&dBM@bf,]=&Q:6,<P#2J?kA-*S`DGbFt_fAFko'31]k@k$CPm\MOO_dV9!%bt4*WX_9Cr1/R8-Re;t2
%IpIeYZV3g6<K2L(-9=dO=FhQj1^&a8gA%u?s48@mTX$If&H(pV<G,&f[]8AnOgcBCWOK!G%u%-<;A?O]:@#B4WqN&4n'ha04/JE\
%%bmt/m)T\FIhFNd.@T"^4q5e@#62%%^q?grAPCeK:#lD0Y;A4/;WM(ab-D\qoZ$XhV#Tk4s5P2-s#o9=_ghUX?iS=H^]3'SJ,_Ig
%%S8%"i8NRfm0q*l<71eHYkn>H"f3=,WCa1+YS\W>]SjOu!'Kqt%de\nZ:3K)i#kj(-@K,a9h-^:@pGj`BPAF1;c8%^\gFDMU#e^#
%].),HPp&bV!3*$8l]l4]!)$"QlRAOCGu0a1V+(3;]-c-5o!FVXUjn&$mhZssDcT*p7nGNSdB7k[.i>?7!Cg*Dd!u,UN4^:<]MXg9
%.^ka[KZW$/ifmjO"rJHVE(J:5R?-WCOa2oV<cD>@L($.%)T$1$4qfVgb.b3._W%g:%C',b`mZ0+?8l4?*oMf0I3!6=cPZlR.mJVS
%7/5nWZ:AL\`8dm?<M1J6)Jq#WWu'n:5u]DUi3q5nC!Rn3as]+'1B&W#WA.M_8;##.ktXp]e.5S3,6)S<r-=$9EFRM=I+HYo`G[NH
%_A]g2Xs-Tl:\[e:>,dN2Z.#cS&M!g"3?O56GJK:<[e2p<'%kf1^4\rNQ,>GB6%ooo66W#jhD(rH?.Rn;*=k'A*2k]<A.5XlbE.6c
%J4Y8H<X0Xk%ECm@CFq[`/-D@3'uQ4^kYgdb/m$llF2*d3=5;.;N+UB7eMbA6:QLA6AF,h7H-.oHMlPBNNue/[$cP!_1gQPkNVJkd
%GuVO$Y=^UX\4aZ<bnM'*hr&8l=ijgA:FJgUSadRVat07:'B%+f8(G+g5*HB<nd]ndQCPeg#.kRV^D0.]pl)Oo;1Q%e07,RB),&GP
%Y!cYUoT$(_9F2u;=@3nTE'QpLM^Ia\D*Q*F&tR!+lFs>FJJno!pq[D>A>\'-ea<Cd;g=kr5cs,kr#!Pk@Duc#4bQk[Q4akp`+%&F
%<.;P!GV3(?gjd<@#s0;EcH0AJ9%9IfHc%a?bgBWhW^b9:6A%m7ZT4JUmY4Fk(%+s_*(7NT8N<GGaLAU^,!o9YM,372c725_T;GS>
%^^rHmLHI?V,`.PSEX&OQ&ftU:%b*3V(<3c5LN#BS_U(LIQOmPZ\jM(o<),s=(<QHGnY7XrP->Nu[<c>K'sg;J/0h:15Ea#/]%KT6
%8.`Y0X8[9!TsG4<`4B&mkVXmEZUq/o#0fJGiK?d4m#pr$CQ5^!Pdja^&G's@JcPKe1ffDiS^PJWHLs([jF8$2`TkMg3oj"B>Q3SM
%g(50%m,W9ZD#7q-VHV*pPR(RZ!/km&LLa%Q=oi3(Xu#fQ-#DQZ93slF0t25#2C!Bc;B*\KYe@@%PM^UtVC$qFPD!%P-_QePhqq,.
%i]bm\DNag2L:fXTROACh\?VW"kCbasq:+6h&kC(78aJ83rVHF+SN4rfO?m[#Da><Jhkfl0p_CQckHJDUH_i=kHi9\EO?Q5(2O-/>
%l.NN*/PTpC.0R80;[L6J+B8LFqT>ol*>/Y[+@q_aPVc-X[;r1oHfEgj-74>)@44!C22%:#Q".!CHZ1X4#/m4reP=k<CteKW$U]X4
%5@)KnKkLB"^BdWo+O7ZhS71EkT5d,09Y"eEjAHaaG(N+;rOO*SX^5`'8-4pd6Z1]jo?K#4oaR3Z3>D!F[Cd3a>b!=b,CF+c9I[Y&
%C4Pe=SN3UMP`?!l"?"UdJ2KqI-7^dL,ZA3W!qUE;WuFDE4mU'ikleO,C!8"XK8WjU;&Up?K#EadnK>]3Ze>cqr:djYm+Blo&M*5"
%j!c"4jE8SHM9com1')Ud.UR2EFESRJ1bC2MKTsYq._it>G@+Sm=KCi;R\Xre8*M3h*ONPK6kI_:+rOR9;HWc#j^5As1aF@YOF+Fd
%9!lE+JKqgbD,.a@ccLGHoB%PM!O&cR)P'UE0jqm\[%:AdMrQF\+iotij=;@Odku8g0's:7/+Y*.clXTXk$2%>-2h4dr?kC>S[hmc
%_8gDuk;a4hK3@ZCLHcJ!rEAnY%^+/)PW3&lksHXX/WZu1%MIU[^IrqdZ1\GB+E7q0gJlDc@^S<lQIf/W<srP?_7RE`M!oD71i'o.
%)\-nf.Sn4=EF$TNQC&XlVf:a(!]e9e9Pt!YD+n<;B4eJ<'NMp>\V7Xdgnkbl#Ep#TAbt>j@X^<!b`J66'TSK4HRYi9P#-dM^eg%B
%M%,^s3aC]6-Vk%db^cJ&=Vtl`\J;.TAh7U@>qE5M,R'MPH@fYl3G&-Q2;!iFl_e;A!p"0BiXSID!XX^b?4P=eoJO,`k_+1sWU$qO
%cC'/;+8*)Bb[fkZHQ>n.V.Y'XQS;ne2g;p4E&do%ZV"R3'u5cc^jW_]R+s#o$85@>,_W%)_P)EaccOE6JkKEjFE!jkS+6uMT7/S]
%%3M+?TViXkA6Z<8B5Vm4T?#V_8U4BS`NRq`:Fr;s3&"2hS!)+eib34MlQ<ZETViI-_q+D'Ee*C%VHK4K\h9FtH)RnoT=MR9%cX*f
%ShD>8&*%jM"43>ip^HWD_N4fT^&$-q+Ce'ZaE0_#K\h9j8$As+kKUfm6^Ii$N/OtA9F#<flD*8/^07Fs5YJ2k2AO&V8u]?Q"^W9C
%JH%mpXFcmL0&%!NiF-T1L(etG4jR`@d2'Cu%.(%pgSE#J=ic"i)@EFaa=ouN96Fq^KPrY/Wa7P\gMBK`Sea\2K;bj:K=2qC;Nu(]
%hM0$<.rRm2gQZ:Q/)7ugmn\b'<LY`b2tP&CA@N^5.M:4nURSBi/Suq"j<ir?QWT,)f?HiMZrh4Y"ZL-7r\ilphW^E$+Vt+64c@^?
%\K#OZ4404-54:4).CaTnRCZ+hf&&$nLq_!_\p3RTK/t<_!tr(VK6b5Q\rO7<K8+XqE-J8L':;-kS<%YqjM1o@G%B28(:unCX9X]#
%K[m>:d%ur*Sp2X:I(Xdb(p=[<T&.s4EH=dj)pB#9_QPp&#<1^*f?@ma.u+OQ[iW4/K7:'*F%mmmqFA8G0YT.T@)`F!*W@6BgkOf;
%.*kK3WXXQM#cYbO[n\%U_3t'N/E*C"SC7cnXj_ng-@J:R>#0VZJY0H#poD(8SB$S*iIKgf8seSEH`f<_$i!K_b/73"#k&X#(A1^"
%dDcD;h;BQogkM%cc7EbFND5\%`pfd,\Io<<"3:@t5CubjEJ[>Qh$C';3=#_MN6OF^NOcFQMc!sf]$>CK[d_Y3I<AK0]$/r(C%ng<
%IJFe[dsT.Q@qm<0d=:<)37VPcQ;@Q7_8V?pe;-?XG6<-PaVsW>FI_YhG6__'2ohtn$SVr[FHcCu/n@Y9E%>+$b<-:;\S+Y1H=_LE
%s(J[?)uD;Aa=E/([7(K.!QQ%rci)*)#n:J.(2GDZK4Cf?Ro+@9V2'H(86oG/I<kZ?Z!kr$\/fai%#UR6)cb(HjmCHW-f_8^hee:l
%2D!>4p_M=/X4-aSb9_njQJCMiY&F4FMrQ.d"cpj%3X_3gs30:Mm^W4M+bG%+qf.3O?8<gPBEm1"P+i(hg6mP)P+MZ5_oH4;7f#J:
%Z8!5oWZg7pWZTe#L4I7^%8`n5g*ILl8./jEY$4AWI#3$=14k9SIA/H1D&6XXG-g&TeoJq@*l:nH/)Pg;<T-:'cS/3TeO%V,caR1P
%F*Wab/:hsjR2ln_5QfbVSY1`l:+G_\c65&#SnW.Daoi&EG\@rs:;.@4C_+j5J7Jb9kXPb"!0lW^o#P;1!/m*pednJP6AKo_4,j'p
%ja,*:`kD"6H_Yl,$Ui&-Fp^KD<blWRZeL?KgY8K!+e%,sC.:#m`dmLMDCsPCPMTr`Ce!Q;n9"c$_LHmYAdU-W6_:R@XMCZHi,O(#
%Om^-Xd*t>F6fj#D5`?(NdRg:dk>?h\iEbL"kKpc!-/9jaUJ=C*om,gJX$ZDV=cC[p<kQbVc4QI?e!JKc+):_HKe@QVfD!f0kc[l:
%I8LAR9=/4/8@^4i706CfSs8l%qKc+J+el&_o<[]Qa?AkP83=]@%dnGE9(I/<^Z;-G54\?0l#ua+Mtp)WS"/Dc*VIK!Wk@ahAYeb8
%2]eFekE?/&IdZ%_0R)_`Bu6WLXpc&m:uQ?XZ14@8;6VlF8>MCaQOPEkEBqo:FXWFQd,F%`gb'_1Ta?L[Iar[*U.,lP4Ej6q*.aYc
%Fm'>$fRoV7ZS'kV<#*]R8crIA;ELFuEZ_b]!-B+U+<5156r*>91+$EHCE\73]&e>O1c+hF<s_0YXCNE9Ql#>LLXG5<dJD_=2E8c3
%mp,p7!N[9JeY_YToe+sRn5-K&"]sZTBXngqE."@[IYK'U?1hhKWN:>RRY8-X<F/>GMk4R(g1>XRe^90I/*Pt,b\a0J@C-[;8P23J
%I\>8T[,k8\VW%HMq<"%V<c:H["AQi];d..kms++9*pDqfWVAbaB'!TY(gmR1>sA\>n5M7H]PBaDAj"bb>_#]VbjiFDT*U1KZ+<I6
%K/lfnfm^3?,?B$$$!OhGA7D]GL>o2Rd_Q8C4H9(sbI3]kGo]Y:ePt)eIZr#bFK+/a%[WE^_A@jc-Hd4;0J6n,Qe\,#`HN@e>cn2_
%`DRi^J3gY8)9pDG?V9sTS/s5T'f2&<G>9_a_O(qVmojuF1"rd=E[4o&m[lg**9@=[H._QNA0h^<ns.>>Xtmd17J5NE!19%)6jY2J
%mSZ"9g'lQ3=!t'[>Eo#(@tJsmV2`@5gmP],=]D%)Q1n9uL%#ROT<BuM"q*5fD")R2hc>"6IdqXU<+ef2]Sp*u]dYXm[X?P!d0-s1
%\UZaT;81J>M>1(`ju^3r\mu\Er\H`n.2'3VL;pWDEiiV?qW0iGa7OV`Gu0F#hu-?6g^Ls[4sfD__['?325,leOUfk_qR$#88LVi0
%RN?)-Tn?HS=>^)H6Ic/U!&9]]^ZJcs/-nk]bE'6rQYOBB(U\.],Y3.tpE%WI,E%M4@h=cu-H6,FrJ-DJ;f#JsJ0),SUHV`&i'oJd
%lWf.Y3@IE,7?Q4I=r0Vj$V^OOFu?sC,GO6cB(1\a:BiUSd1T@X),*FXi(^gY*Tl.NE2#rOp1((J?T4CU+&cDL(A,PkOr-dQ#o`C+
%Ta/ET;-fKPQQH!KgRi"KMd@:QFO^dpMIf!^eRn4XVB60>WEOM9/tT(_*`1^WKJjC9&efX`YXOJD2OLgQWaZ!P37MS\\GZ*.fG<<u
%pSj@<)/`rY<;\C35/ZZZ[s7]SPfJq[5ile@kG5U/F8sUSr5jjLCO6=]JE^ZRm3,%5G72lWqZjQff17aliBd[J9-Rkc[k"FbEFs\q
%ElBY_%=[(m8^Tk'QMa_&eAj+hl;rFCL>!HkWeZMh/B)jTNQhmq&`&dDb/FMk'8AkJ`.M"n)Z:_(_W5/!1WP(^JQX!./ZPM5hWN:e
%qQ?`nDFH<DVC!0b/?KenYZ-pP754T^HBj@`IcdZQ$B@c;JQ,1*4H*Vm4_C"l*@d:f%PXI6n$#Qq(g52q(55ob=SOoL<+XD,+W[7G
%E"]#sc4s`NB1^8kpBqi;K.nDd@gqo'=j2qq$<UhQ.Ji(6EG3SBkfgf%OmDg&ll`^W^r@UZj#Ng2eZ=Fi<<0g1#5sYand$lk\H$Mn
%&/&m?C@:8.F7dgG]u5)<RCJG_iSF9hPeq,.+^Wc3f*,PQC3cl2W8S>0e(]"F;-)_U(XJ6sq:`!(@"=+d[kh;jr(SOA:m+Ep,Fn@/
%Bo*R89jauuC75PeS1?,6O.8Uf`fD_eD.\?.5:aq,iapQV,GIOH;1mnu,sPP]'OS\>WFrBUlcS&LPdDh7,6=<#70dpF/oGY:pV'B0
%9RF=CWL^5%RP@-K&?(noWg"g$cu*mnd?slYh_]9@_d\GiLZ^:gYmQkP=5LGV!`d&&aurag)07Q2'`.2jF8UnQ-COgm.7gK"V=/bU
%MVQ::m5bo23X#.6*I$ai[cOeY>rs(RgC-AE9HAXGL!o3q7p%&&Dfk*g,=6@*8+dqZ!;;Y]h4W7Q>Y@l^@F(&9?A')'YJjp*H?eRn
%9]un4>_.30BkUpl2AXb-93+-c.q#>A,Q&rZam;2u$A].'MHgp77U,:2K&@V"Uo.J4cl7CDN%rpr:XGmHQ!Wh\D:)5F-'Ce;0qY:\
%\J4WIB2tjVr.[!,O!Onu1DY;[`+(X"="&Ytl]XH4$k1)7`(FWA.R]X`<'4'O,tCC:rOB#8L`NhC>C2Un6--/cTr5!*K$,'"DLb];
%$TE?FSH<T21JKK/kD?jZP6NSFU(Y2WrH"Ea;Mu;k?R)G*[j%m>Wo_VL;$-]QFA5@%r5uXL#:5BKhHcronQhd_3J:N@r8ULmiph;-
%n>p]d!f++'ep.[rS7aDoaO$)&:G7QZXh0aQgmVK)5/i%f1iGf6D?mKn@;[iLHRM*+[qYb7;Dr`1[)@M#f/PJ67++FX4/.%\Bc.bf
%3:t0/&O[FD!T6`J!'1\"2Dse;$Afhm8_ieZY)ae64C1<[==8!EQE2CKP9aHtLTX8XXW?sA+]]OtiLnM2+5ft!'<<7rAV3GH<9:[,
%$&iB(.+k2&AFVV>[j9c8*0>E6C8HR+F-@t)Y8S0@CXs0SJ6Sa/jY>dZj%eCh=?-6;;:egEER))>?EZnW#`#mq9Ba"[guR4PNinH'
%ERCo1Hnu&ZPdNqAVm1(bRY\f)9r_'*&<i?%Vs)0'.1%tY29FrY6+YBIR4IZ'&dUP_Vb(9U@/!Mp#p4AlO:d,ET=MaX"N9QE>K*!s
%W$5P1c#IN2T49LM+W+HkLJSe,4Y]ZOl7R+$_rYG%b1CaQ#qA#i`78K+cs0=o6,9/`8$SemO!g!SQK7_DG>9PM$!;XcWT9n)`bc"Z
%ZHhAQ=%60=B?GJ2&gtKlJ=ol]n[Z'h&8\@,X\tWC5FA6Ug_n9[h'Bt'co[X6@EL=%'qGl046TWFYI[T[+^6o:B3&'4,Sl+XX;rps
%@lfYGjr\M?KEQ?i,F1@4liL!1>h)Xf7Vmd8!tp1)5+C;e=KgA^Ke*UFBq5DN.fO,07$\PgEJ,=4V1TG;2MRYS0ZC\M=PFhP(+Z@8
%Vic:t"jWPE!.[Hmh\'RM3Of4(8S!33mV64$;ZZ5IaC/[`^P<M2B[0H"H#Z!`PE3..3=\%K`\]\S3>8<&R=gj0Iq<q8=K@X0kM[A_
%5CiWR)hbh*b=cfpH"F;(+qATZod>n,QQc-f<NP=M2saTE/Zn=_q[F%KG("H1P[.2sK83qqFI/%k.Xa0&D7<"*Sp;egNQ9Q'>&]D2
%+46C')rjQN<rD'WbiS<.a_&h/ET^">IJDnYr2jZ4i4Z".>JAKINFt4&@krErjMFW/3^!qSmL^T,T9r_#Tg5Acgr_Yoj*W>Th).$E
%$.<P*KT%ck"6H,/?`XCVan[I$]tfu3gqr/,GWV-o80k2Ub%+c1\\\9f`7@?Z^W<V9;H2V6A\+raI]#u>XO`sW#,f<B`1aP<P$4*\
%'m3Cuk:gN.lDBRd6FS96!O0b^WR-t\,bP7UAq*(R5ptuR$C"6Qe.dZB8"cibnPF5P+R^?(Q37Uc?G&Q'n^e*>j4C/XNgU)<6Cs`j
%*;`quSo4pWBSddo=9"QPL+j$t`]Sk#XpN`0OnG-h18>*=)@DN`h4i!kmsL$OjTdS)YIA''CtJX`k21[_3Otg:agd=<_nY0C/4]i9
%+Dgok/V"8]B6%Z08NQf>E(k:?ee2FX;-hM`3/WWOZ?Va,94gW=oSO$[g#:tL?kF<0Y'40:5+9)%Oq+3NQ%U+.h2LPI3tqrk\f*gQ
%,M1mdJKNW>_,T$miJdh0_AAZ*,2H(XVZ?$e!L^bO!uB($rST2YrKAll8q%K4#uS4/pI^+p0[(>_Q'bW\)Q"So./HW';BE6Bidb+T
%*FD&\>2lEt\)Ij/=iL$pn%cL;s5O?@jfZKuoX^0D)EK@V5m#3mb&j,^9`>k5AAXnU1!u(Q/d'a\!RK^[CTk`KqG&6m7K$en*CmSd
%jdhh%9aLp75Zfb`&UYqj`Q=NEGP'6J\Ud-`mU-/I?GRf-e&TVk"%J*g]V5EFn:FmJ,O9$=P/YR0'2CHB]tJm"T9jL_(_m-ucQUqa
%V.5:H4Of?iQR8r&i#Y<DJWFAYB#J0?"<rfIQ2&ZcBc5C2\64@E[lA(>XKF/o.5?NO9ZtOZ7n4pn0'*V(F:PCtEEK4)!@X9Qb<*2^
%,rbX'9O##C?_6$u188heXkMOP8(sco2jdMR_o6HkWC3XbnI?uO^u,CqYc%X+N&FD6@OJs2ZU5KQ;Vr-4c4tDX2>FL<rVDM1jT]dJ
%/K>8^hqg\?S8/B2'!.u%;F/11Cd&DTi-M!BES)ZP64r^G/Kdh_Z^[`D)heuf!>F2o[etg%&!:M9@\@r,F.;\DWs1If0(VB-](\]!
%EnQU#,+ln-s(htVKI:^nZnj7.Z]YJNOu_MDIHJ4`LK>]+2<i@d$WW5Bo)A?nH?sLumu571+J3^(6a7`DYK'Bgn3O<"72m3XP(_(M
%`c;\O;H2T+JcGT&CsX`,Ar?>n^[7`(76nl_1/@a3mu]Q9"maDfZpeF3-5XRN[W3*&UB?CWimYuoLM&qDp.>GbOWHsr%=,`X&(9n;
%=4PKW2u-"97>=C1K2T?UD'9bIfR)^b`-"a(#4j,(8V=<RFuV1^da2mG1E+^Dl:_@F=q8q@Sc/gW>+X2cD6Z_L'*:@=T!Bk[@6@EC
%adr7"p3H<(!Tr@P,dL_`S'R^/.<:F#>Ck7KjL[f]1dS@Al&'WJVqEA]O9Wo25GjY0es^/gm'n,=P85Ap'q3Xu^@GnCW62$YSDboJ
%>L7!e5;QcU^I=_#OjNgoE+X01p4H?i6`Z/T59+C_>[\Vd1@d@SrNf;YNeEp1%-[V/k:IW!5E@oN*r"*(LnTm).OpP`=_ocL*iW'^
%'TPkrZ%lF,-,oR;Z"Sk&Edu)jM,1\Uc^^i:-0bDrB\XKRF2E;rb90dW@j`l(3a;(,#9F':[ngncf0[g%0b22U9VeDP_0cR44]a@=
%b\N?i=@%5sYJBRF2f6J=2fm$'jfaF,lZ^o5X^_)nS_DRQ[QM3&"o98]CYeQLm#Ae/l;seH)3;gJ8]E5B35-S[,TQ.@],8!G@IR[]
%1[\ecB\IueI'a_\c7N=;O73gN7ql'D9C0I0<g\k<AjoN/8r\1oYM\b';h0/2>uH2&QkJ#]1[,F(=9MoZm(5dr;+hH+dT5Z$72F5h
%KI]+U&gZpUFE5ssUX?r&@a"LV'r9#V5Po`-^OA*B1bimE&MUadgLXo!>AN0L^i&7LQg`HQlAbmWYc;JN-t!;Y7<1Rc*bePCnj<sI
%C&5gG:^`%<$#oRD<BT9J:P$o#)mbL8CeM"[pd8Q9U9@hFN7D5+"`K+nQm32AiYIh%GWKYU;HFd#RsI;P':1O)p@.F[it=kn8_?N1
%im'+0?-+E+24h-^=T>B\X1Gd@E:\Y&_H"kU\1j/m*`djib1i-A:90Eko(hMOIcet>EN>Qd_U\/l%hh`ZH1#Knmm.2dUXAZIB'F>o
%Zp9]$l;Y0dW>![B:00N+=kOQmXkQKfVYkY[H$jTqjFh%g>2"?;kbr]e.LA#iFLm\IK,MfXE>2d47u`-Y9kj].MjDWXW$YTM";M57
%GM36c[8jFX1U;+i_'Y=J2W8T&-K=KDr+U<",d4nbp<VWaJ2@_%.WpR<qQ^N2LAr6&!:B6f93^?97UI^VkA:'S`]c#l!*r<ep+&H;
%Wg9:jhN/@Uk9a#E`c;Q43`#1A"M]LA^m%@s$KUi<kbMmWAHY1@I6Z.l"A)M?!@cR(SS]8T9$`5bR`TN=>b;&]MZuu0,k5J'Unt!G
%A0g@M=(B=f28^_O'p[!OmSB*Z'QY*-4VT\\$K'A8pbaStikF^;p?559]TW310>mSXS"\r"li'Saq-+8&-r-HfN)p3s_AZe^?3;hM
%Y6\/tR-+l4M2/6DI;2c34s`Ppn18W1pJb,Woq^`'N719fH_i%2$mQaTEgj(JCJjM.q_^1=R=M\Mg-,J]_<uT\6jQjd6?t>9V?1Gb
%8-qgaPlG/[cLXfn0unU21s05U:DF3O^&3i1XqTAM9']/F57b`bYG8uEI&+!!1SNd[N>:.9ad!]qWKUu6abR<\Mjc`Kk%<JaYen]]
%N=9V*5Fq[gjR(h:#gN+XQF%ncVVkEN11jFYeqoc2=?sg;!9Z4h,ZQ,MS'J=[fd_%-XHmphM#!A%In8ks@W3,8R0G;jShEu=18U7(
%*A_'^B?qb6+E;uGnI_t%hP-RUGmd',lRfn$aol7_.#Ns!0h2"K)123N(mll7jK/%n]SEBe#RO$\-k&Bi/jsH+PmdlkFK;Z#Ls2+Z
%RqTQ*1">cT^R8RrIab1YaO<"7%^<MBD.E>a/N:u55B7*CiMik.b5OpfJV9Oi*M@]fG)9/H&tOt\mi2p^R2Yd$r:VXeq.RlDB+N)Z
%3&eaN0M>2oH'68m^6SJ)Dbk3@k9n,N^%4;['jpb]MdsdPCHA$1p`TGZ,u$#_V;em(p.Zah8Thl,JWZ,*OIhm%,XfZ,3k8>$Mdbtt
%\k'2C?/dp^V-pcH3*]5Z,F0f6PkG#eoY2rs*K&U(WN:$$gEM)NAQp_;]ch@a?$CWD1!@Ggd%Wn+d-P@pp^tLol##GV<o1jRkF;*%
%>1/hp['rcV[eR:E`'uA1HKOa=;r=`ZRHFL3PJ[r/`0V=>AHJVM'8PM)7-kiI\5Quj8lV.ml`S&U*k@Q'lgr\'FL>D.)]0TI?7!MV
%6*_'r?p1qW-#TuK98blH]uGa=`)]EQQfC!_dV1/+N4m>QGGW>_O1R3IDV*q:$:S'ZgCq`u!9N/&fhIaDL`Op$IV['T,A&=jb1pUW
%=diOs+_>Q9gHD,UkfV''7\u(:DA/_^\M4okBM*\jr/086`Y76Y+p<Cb6UH2hbLpI<%<;2IiEJAQ_N[Cic:+:t=>q/(ml%TAmI'tn
%/eF?u1g5(7@Q3XBG*4\o/ST"Nm]E=-];tIBZ5SWk9"MW:24Ji7N*,!F;Xa=rh;l0gnZdPPEQ_Y(gVYZJmqNEJCO<E[G[k.Q-mK2i
%l=?l=45FQ$nW(heHPc5Wm$euAL",U]#U""WhN>en$V"%NN]6B8h?JbYn49!nQh.Ah83LnOSQ>A@(M24j2Aq=NhM0:WlYU<V(\Ull
%7`+">1#9kW`pDF9:8YA-\!-&-mk)FZo%plVb-_'&IO,R5X/,s5[mjsWfdoeW)uDngFf"XLbcJf<3Y?3&D6&nign?X"mhidsAF)Aa
%f6h:\)u@"sGO8#!p0A&ifoFhLQAXQg=PG+9D<F#sk$ZCd=V"H)oM+qhN//h38c"hFEa[&MR9SB;9^^JimOdjbeHq-'[u#Pq*R@;$
%>77\D#?!J9DptT-/4*"H7[rs-)O&s@P^C&1DP^%\^ej*H\B0514pP$_&SoFWoNllcmMA=AY;YiS.s(@+&C+g#C^T*r`fpIJB>rP%
%!:S?#-k1.ekH+f'lENdC/L.mnJ=CuQ'Pt\2c?9\&01K?u"'=K8eJ=\bUi[dc,i06Oq^118\A]o(9qpS%U(!MBGZPB)k#IQ!HWJ93
%<GaX*n8[Xq-k.6>?3/affeZuLP6Z<kSpAqq0oGX0MnT=QCCZ4Q?;k)GH!/Kl#nP0qX?$](6u;VSr]D'^g=/+)1ePaiRs%u9NN/&3
%AKOGp]M.c@([`tsIGf-n@u<H?MW:iWNc4(YRi!*u\4#A3E?V6k[#iI0'!]'=JJ?NJH"WHR%o5E.IO`U'7B('oO%FJ2bD5tB@f>d>
%,)lcEa.Z)=.>W0`J1_:NAad=SM"aDEG0.OUFhB5]44V\]i_HD\R!922g7.fH!j.b%Y@EUb`1?b8$W0<LEdq<g;q*jbMIVjD[#$41
%i<[B?;B>fBT%P->c8=%Z.W+]m@X%>q4fp.d^.m\:(H:Bk!or%bAr^-k,U!=t''%VdEdGh?SP/f<>(.#THMZA7]p'L+O`C.E)8'J_
%,!;%6ocY#h?*gn\nhVph,t`$%>t8I]Uqo#r3l1n,]N,2+'"(c'S1P3kY"`sWS\X0X/9DV=@T),bc=pKt*\SDOg@gbP(q]-s1IDS(
%EY<-hl/]K+OOp>WqQ\Y^8W\j<D%Z?-*m2MWJS!FV2lk1ij=reqj6P-qP3KSOOdl4p/Xg?D'egHJH<?`GoZ2HV[NN+VQ^/o;bR8.0
%9p8gWUc$7KUa_u^<H:'k5Kf4b/ISNcde%6_(FK0id4E^OS\/8q61gA>Qdj-*jOiS94cQO=*h9,.ae^<uB>igXKlZeX/Puuga(d*"
%8h4qrM3OL<@sO]8*`a^K>LG!CRqX@Go(%tj#8Na>q%#$'1Sj85.cP!Z=KWWup2gb#LWiT`$$@.$s&5BJdUB@l\as_4a4641r*m8u
%Rr17WNt/2VnL,t;c-#.%I+W-8Ft?4/,"Xm@Du/R8i91YdQq$-bLAP\O0_[lb;(St/*Lqt]5q(T,1?RGXX>OPtKi7%slg/*C5&"6G
%4;^XE5;tUo.aKIJh;bt;Rd7n%8TP?QA!)Ll2Kc.5PuQ"Vi7`=uI/pQ^Sl!]kC%Gcdn'juthJPa1W,8[gei._m+R??rDIgL[DnjfH
%`K8a6c*:bTEpF<oj\W=d'[H+?>N4GPO[U.Y(Uo<mLR3H8"bHO9?!:[>N++Mcl^XaMZTah"cKCpZW+=1$o"2asD)18fg'B(N\7Elt
%-cO+]kHg@OA=<$L*6Bh$o/Tu'WBjEsbS#>8h7grchF5^;Eqr26`q^U=-aC\e`4V,q"e3O-S5^9/d.!P.Y'5ls3N$DM'craU,f-I"
%rq;#Pqr=!*)qBBaq">U&/rfJt_KJrk*F4c5ERQn>UN;^q?5.\?'[C\KC8c4B^_7q67tL7l/7;ZhkNKY@]1?6G/_ZK\k@&#\p!)[\
%iQ_5]kSL6q;r8Q8RV$3]2kT])at<S.3M.luHDo`'R7i*P>aV.k.@e_0.Psb,+NB\?_j!.$HT@JV\e^K48Cfc@=*"P0`]6LC'sJDk
%FC/i.kI;BoJDo*?]AgX6Ls=.3g,71GnnF^AEfR?KD-Tr;#r"(aDj8?=`25*mk;:1/+\HO?X/>8:EBYV72P_b(Eho2;3W>SA.=(O3
%[uPC]jN[5%N2fe5I'+n9D<dVN'f.,K$(U$c_@`"t2$PQUl-qZL`hi=P0f4j,d=K.UYCJV3?n[h[3Mq*<85LQKQ@m-`Ui29)Q'"/m
%S'TK>dis53fbn_5^j-g-:#I"Nq&Y]S7S=Zi:#I"NBs(ui3YVG#"iqT!V/MA19>)07D<'I$IhiOp2B`h,\)OBq$'I6fFXdlkcGcGs
%nh+j@`Y>hW]QlYXdl4I';r;u^ZSlOh1?XfY0C's!F*qb@:RedQ)AtB/GD\+G$#<>-IVTFZ[e]:Lf1=Z/=t#btL?)-p[.siL,p#Nn
%G(?f#.r"U$>Y1FFV%.c-3O``5:rj/!+o>tbF1_L2CJ`d@^JXN"^[n==?LK:Vo@]tA:7BJp()=-`q.u5ehmCYU8-0Mp->,EJ)f"q%
%e%86,HoBOL&7K,k;moK0i#d#K9&"_UV`5HIC94RAl"lbCIb$EtYC-54=!`-E,jOo59lA\Io+6n:]YJgJX;.g8?W.i9:#(-)7rT!b
%6Foo/`crc]ZY>niHW;B9J3Qk,5+O@'c([$Xb>qZTmC5W>H,IZkc1aWfF2K)$du?uWI%1V#9)r[rB48GU0FCiF_3^<D+/bil,%V8f
%##^thjNY^o5YLt9A)0@L*fL/"6=sN\DGf-9YjVRSm-3DNZ.H7Fs!qO'0bjt\_"j@aE/YDh7p12uj*:hLZa1oVl'i2CJ'![[%B,tC
%]*Y!g5oUqJHAj;OJ^U<'%,hj83$4p]Ud32_BK:r^2b'!mG7!Pp&[7d+l0,SdA#4',qNS!0#tq%W$=)lY"#6-]V^4Jg!:$IX=o.9U
%?,B-g%ZIi<oI>:\dE$7_IO=@OVJhKPo^#F!$b.-+YEus`*h"\fp!'t4A`%Tpak9)-7oqPgR]Oo=K>o_%kUs&<.d*Qk7HS2f]d*kf
%^Du($[V\r'`rJu!hEU>p1?TMMfHE2=o.cP+k2?n^![U)^Q#fX39G$*+h3an#@j-LZJ:1t\LFVHhG^LS%9'%%64\q(eJ;aXt(-MI%
%/V`G1'Z*HT,bLp.Vr7u7oN77eM\_3<0U;cJ3d$H/i*-c]=I3htM4BVQ>)fag[(O;ZBM":uMiMTi1-,IU6d@ZFcd7h/lJ%$8b\-DK
%n,?pm="CeL,bZsE:FbO9-5rWu^kQ4s=Aki7c7rH7M1d%gN-e2c^d=n%/>7,A-5@fb+O=@]"__>+X+\bQm27^Qd.ul4Bl$]1=@6&i
%cTK"j=heZL3lb,T;NQOfBJ7MI*LB`G9'gpJW,^5!`0QIM4FPlA*)fnUE6L;Q$?#C:j%q<qbFLjkp3VubIkFb3P1o^Vs(b[tJ'P?Q
%WS%0r.GMed+8P_143(ReJW:!l?N!scHp!#1W7qcnkgGo.W(4I8%$eL[]!+>O:Mo$kFq3j3*bOD.ZS2[Hc::s?9Zt+"+M%lN@qIH(
%-;!ltSdZ*+n/Sd%&kuTlg2ZCiY%-1Nej0`pfGc>B.45Qd2&@^<qo0iYD::S%WQ;bVqKc8=\[XQ6o52GO<t0XlB1[+SIKr;0/9m15
%8f7+I0htRj2SjGk1-(E9'KAA>>,C4=Ci?I24s5UCQ>ftX\g&r*?1<4]3ZO$>*j[qZ=\52LVkCOonf3Q>iHIqdGLdnh'[NDX]T-)-
%X\`@2Sf=A!EURP]:Yc0"Yrdu[qc/EWp,-7g'unpk\6rqd"(t^SP9I,nk4sP-Cs'hbk4q!/,!Cn6b'5@eLBbofQJabA_]P-"q7*Nh
%8%nNbGW3T_1d4Ok:W%9OouJ<1E@#[@'0M&"SQqYW(lh7OFm5HX93$g,^%67"jIT39*5>)a.S2R4aImin9&hDl@?U/5L?oL2.(QSc
%cZ)c(V)Bd),G;W#E>a/^\0^@K.Ft.HKj[I5)Sd@hL5'_?hb4s@(!k8u&f0/cj!Iu/OXE!Hp9][J7q31TLnWd&$.t/iLKC-fH&8-Q
%Cm9KRM4Tc43F83=3>s?6:-WpW-Rj_FH&f>/!]&2Z]9A8rEuBFi,J$I<qd,LLa5;gi?7PQH?V'`-DoC;:4%>jJ8Y2\3K3AsB68).`
%W$K]ud7MjjoH(CI9(O$n9Y(3Y2bXa>EKoZI)D)^F1S[E0WonA1L3.0bf$1)W<SndR:%fQj4'`8oq2C47ZVC*49.Lu]X\puP]ecF#
%onsGG+&Q307KKR&Nkhq>TF"AnK/3`JD<)Ot=hRspoS`#'<'DCj8:6ot3=b">`hNrVXO.`(Vt)k!?W,uXp`+/8k=PFg_jA([Q-X6N
%Q1B2p%6s8mI*Barj-F6DVL8r9JSNsK;$<\8Y]I._+'%q]nah$&[m8[1o2+kV`6[Vo`U#2HF.agYN2$*Xn.W,DkHQMfB8lMF-B#7W
%BBpbe.4,@)`C2X.GpIp43+%<h3*SH&V1'I;.I9iY!*k]h=XAP]gCb<$?uqO\9HAc=<).9D5R308)(cnEn0oeFT2IuF]t'\:!?I_o
%0TUmNd$qSs*GF5T4S_#_GS/i7ZW3d="q2e\e"qPS&SK%FUa2UC,XaHf1`k%`2uW?7(T20rOal/qZIq790b8cb5KBrU5thItVBH\*
%$*`"`2^0]^N\\S<492h0UG0AX+I21l=TBHRYG/,W&qr;Eq:pdm,iQPukAs4A9B,,j6Vq'Rio^S/=:`4]I+aFR4<<Dk/1a?^Es*Q&
%4B5!&@Qi5\<ZSfG;H&`_E3sUd5EA9JS`fX9a1Kpu5N].?>#I]IG]`"p&l=)7OhQkb2<If4e2b)dV8!c$>N.i4dQ(]\^,VD'*SBlo
%hpD>)FH3!4Mc8gZIoAF1`F5*8+/O&hGb<[M"N\khg:g]W&(r4\q?2g[+;H6s-n._I?=h%i!@:@MQe"16!bp:blPr3AFO<"KF#9&5
%XMT7\-r$2^\O0u+%nBU"[1-N_CCsr+X`H=^XQkjGr^_m:j(>P(M(FF+-`1=WF0lNsEOAj/^,3kiP^0L4S`:[HeBZH,lET>B-iM^m
%m!Q*D<*#*Ho,sTFi93b"0D`'IhlLmZkT&8.)'6BMChaK(52<;^4tdZQ:$cVAQ3sj&eigLd3T<,"=m%O/o``jF.$\k/(2CD2\!>/t
%*g$"=dBq<<PcWh!e1kW;3Ht8Pr")B/^#:Jd[&KQc+Shm&?:K/S<B&/bJk*q3[VB/;qV/R0@3k0Cadg*a^H(0W0diQ19&i#^&@m]2
%??>Vb\QP[,Ca/%UEX#ban!0)'Q1JJ+D6c&0hHR_5ad"W$*o'KQg_l_"Mi":"AuE`!=<n"f]Tf;/L_;bhZEuY\;@-)YPh%lcP>MrV
%Ef/%F>3B"/3U1(PcVk]B!Z1$6XbdZPNu=4KJCUs+,A(p!EX#2'49d"2>,n-[C4[k@NY(W)kDg]fnD%1o]Ae)YonV$[HH@](U?BPO
%XEk@)0`?Uc_VF]i9(s=/8q@FOV&&mHW)Lt4:&3RlP+k3u6Kq$>YU]'"j`;g+>PT6Zr:>o.\rf6RV]]4?g]?NJco])kII>ap)=hB;
%8GX;Lp%3S<Do("l!'KMUfQKie,ohUJSBUJ#5+db45`SRA6Qr394pRR1+V>*SK7O[tK;)I:acS%Z*%fSD9DH/%+qd'uLPV%mfl<ML
%H0#l6pcNB/7>E44Z'6N@CS*-T=W(9Pd`I-[>nI8K#KfeL#,[_<%J5Y'ISn7^99??!d%)=g(hCgjO<]mG@[BEj)n)S4.@fF76b*tN
%Ep26".b2Uf5msF=D`1&V/n%RLU-%I&U?Klag1AY^:L%UG3c\7.k:[/(hg^u8:*o(As'mfRR2T[goZCVs)nl5J,3bAJ,,%jV+$;]d
%2TH`$p#(3J#r"uP2%_[qr)bGFZ75X$&am:pPI@G/-eRpQ"khDR.iCU0j[^4r<Xrni>hZ8<d79uj1;hJHqdeA<an3+A9l3F5R,6!A
%g%'hmMNQCmS?q:Te"iNR9^%-B-'oFGgF7$7D`_*Edp]?@3+Xj?>$&.OIU>up/0T.e9,:Dq"%Vi0k9N-.do*BnAnPXG+Eggbs(/e?
%pe=sBBn-5HI`A7_N^fTHBQVTfQ+[f0+$i'MkqKBe;j2?&<!RSP)WsB7NGo]U6]Cf2jK[SncgC5:kIn2hIX1n\^\am5MEjLqfNbHA
%Kl\Zo63NWL<IJ=@9,[$E<M.<;WTaOPDIS]sY.@aiOr-UiF4tjm.P,7#WTS8!/V,IhA%;S)DOAJm.P+TmGt;%9M7>fN=<)tiRfH<'
%(;ger@UMX29?<"o1H1u',h2q&`"jpnp$kTE9\RDB*)Y7t'\*6)KKlUB7=ZUV#Ui,ar/)>!i'BYT8d)@4eaZ&%O:7E79dRfA&8\Qj
%KU9[<mol+#/9iGXa7)FNjS2;C>rRqs6Q\ns2H_)V'UguZKc0ptWhUm,TbCIc/8fe!JBV+S<9Z(:dBY$3M5oTJ'STpk@3-$d/6-i*
%.[=XFr;b`liiom!2b:*Q'Sh<@G1!mp;Zk#(R9Q3>^L=6=<ZR/n11*%^K&;fXJX65D3i1db$;5H?!08?[9Q>3^88FY$D.jifQ]b4<
%V\N+$ip&8YDE8@B=3's05=KR7ZnQ"<ip,&m'N[e3;TUuW*?@nu?/k,jA=XgI?8FFh2%>dP@;U-SWSF[c/#]:>lNf<-oQs$_d$Ru>
%RE?&!QMLrAHO<g/`78;j\1]9A%6Bp;X=+NS@Od"p\2sDF\UGg,ri93#qOObMIM3#Bhfa#4/HElaGJkGk7\5lR'Th+WeIfAph)RRL
%/gqE!9H3kZ20Qs#NJMeRmKn*&?<TJ%)GUVQCs)$3Za"XW9CN$0e%t'SVJ[i`,P5oNoDG#e7@USDkVihG;-=pk0pf>Ee^;J%$l_Lm
%U#qA>jPR,"W8tG6[51Qh.4abC^jfg4<`ZF&<ffh)Msb?gB2mMt;ccK%LtP3*3rD,.?b]>>9b8=/2eDXhn4@!!@WEcs?L^0MX%/\?
%'pI+F5b9U'Nb.AnJ5_Esl?XB/hXFY<<3RgP@sV"]SVb)E6>ci%)7l5/W2.t[i(*iNU,>4Ch=X/iWr1V6j>H".d]j<LB]!)*bUbC3
%EjF*6n1.:J7>fiaeNnbmQ/Dc]NFc$ha#mp79X.X,C(Aq?CXeJF*8t!>QS+5!lUjU%\rl20S$I@f>s.cB62bq$&1hOAm8d7@hc/;U
%YRgXMk%J3ZX,N3HqM95O(9iVH711@?-*<1s9;<a9oMXi7-ERcmQEol3>7at37L*7agko_h.]^jM:#ahVTH-M(fZ'Dh3nAS:[=hB'
%aik:Fp1l1d$&u]SeJX#WpT.W>aZJY&ZLt&oNp/mj.PK1KW(g<@q\``W2rc@=ZKc\oS#eY_)>Adm7q.0/(3ORV.PmiIR1+:V!QpJZ
%^\*gd&OiTO"r96l'7K*F]SWX)FiLSZ6iI_0!EXs[;i.O/cLJ^GX+gHIS_9buZkp)@WfMqGrX'Vh#+9(8;cGDb8Gu6@91&Z'.`l!#
%4i:r2/q)rY/B+d`i5K5i>uJ?a#mqTD,n6SZ_dgqOYgB;h9mN+gJiZAWRbss@Nh8$_7S"LXUMrJ4WoKK]b[r+/02't3dJ(mQg,.>7
%:40Ij.OhNPmTq`'9iE'+KTpG#FQu_77t:0+o(/?HH9&"uZ_,;7lZX"-qkPP)8l?],A57=t.:>=X;HIIUH!HM3NtKZn(a[_[Bt:j@
%Uq2sC;H0h7+n^ZNPAH-A(cd2%qO'JS&L,Uh+L5P.CQ#$lHJf@6@8Xo,Ya0"_Qo9nXd$Q4ap"5]Tifu#'"'&`tE^>pJ?`NCrIJ8]@
%kEb'2;415=0:N^gDFIh<@_D\C;.FmL>uMb\&L*C^YJ%;K;B9u-&;G:_dD?TLP#V19Z/%!_E(d3t^Tpf,cOE6;in8UC!##5R%Ful*
%*n`E.n>%/!HlFN7DsQ,7l?.=8nJ'W_.B412V8g#J@iU:3,kVW[@_mfBBK\(nfQJd6S!7_^,lr->J:(b4B\AWGHMO6ACPB;p,"6%G
%?qiD*FdO@#&t=>J2.TW`rG?]',fdU%p<VWaJ2@_t54=s*(>3^*!gB(;>,eN[e8Hph$J%dL4f!(LI^1_j5^QpFoa9YN1;U#?P?'W5
%_qOC6$(uPlQ^ZKpZFY-(8mGZU'6!1$@d@-&*>sZq0Y6SN,?7RiHa8#iGc5#D:s<3T*HjEKjJB/"`lo2'AE(S2ZYkN-'+0YF,<E3l
%CV/61K4(NSn]M2frGL7J*U5)M\GgfBDcU)_OCd_:-FdC[#q<#Ib"3pXWa63'd@9:0\Id1o2_V*tf+k]>'2n:_@f$dEmn;>,X-clT
%QS>1>ip2KXm-<o.$l35@)Jdp5fG)t0I^&nMlP8(tV`ZKW,rQ5+@W"bjh<K=K]GHd2FP+Q6Z!b[,6hL&`EQdmRE9/FdNr8XI5Y."X
%iW,D9=c2QR4Cp.%'\VZ<<#uk$\5(.ZQe!N.Xk"3%YKqj,gsfi+B6TfC"HMV95eD&,,E?h!qtuWTd&+kOgu8qLi"Mpt</JW,.)D2H
%ArE8D"%n@)S/^duK2qtF\#HS:`T:LJVXOTm5P=Y)2*'P8Xr)@Gr>]EmYi-]B`Y.Y%dd.Z^Y[]*VmE3MLiK=EBS9N("V$]N16:bg!
%T(PD_@7U6aH2Wt47uQ5%)XP5aXWP;nj@!7kb;L)Y;[mpcp)r(c^]g\VMTP<2luQ$O7j@<FQoEJZS@Vu=?*o.Yd@&%$9<cHU>gueU
%[`C@AP3>,eNc'(#na>di:6;ZOq*ES>#H93'!r,;^V+lM(G\B)BW5(UCKV0m3*fDF<)(!+:7>VYhYj-mgpcPS&`H+3H,^VPQ;\Ud?
%phmFB,hOhV8c,7cq_(<D''uh%So=Yf5CWL5s5f;kq!gTHnIPZhhuD$gs7jq?npgZ6bL^,$rh'2=X5P0"f>%74?iRUMs5j:VkJ.#p
%O+6r&J,@FP?bcR$?iK.os8=VNrn%2EotS6>e)13%Du]g?J,eiDJ,@"\p&@Ae0(K2Gn.5QpJ,,`9pkSkk1`Ft?~>
%AI9_PrivateDataEnd
