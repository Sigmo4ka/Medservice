%!PS-Adobe-3.1 EPSF-3.0
%%Title: Page rules I [Converted].eps
%%Creator: Adobe Illustrator(R) 11
%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: pingwin pingwin
%%CreationDate: 4/2/2015
%%BoundingBox: 0 0 579 792
%%HiResBoundingBox: 0 0 578.8802 791.8563
%%CropBox: 0 0 578.8802 791.8563
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)
%%+ procset Adobe_CoolType_Core (2.23 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 68 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/agm_sethalftone
{ 
	dup
	begin
		/_Data load
		/Thresholds xdf
	end
	level3 
	{ sethalftone }{
		dup /HalftoneType get 3 eq {
			sethalftone
		} {pop} ifelse
	}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ imageDict begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height { 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 
	dup type /dicttype eq
		{
			AGMCORE_tmp
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			AGMCORE_tmp exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	AGMCORE_tmp 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		/CSD known
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 216 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_gradientcache 32 dict def
/AGMCORE_in_pattern false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/add_grad
{
	AGMCORE_gradientcache 3 1 roll put
}bdf
/exec_grad
{
	AGMCORE_gradientcache exch get exec
}bdf
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&usrshfill /shfill load def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not currentpagedevice/OverrideSeparations known and
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		/AGMCORE_IsSeparationAProcessColor
			{
			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				gsave
				false setoverprint
				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
				currentgray 0 eq 
				grestore
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				clonedict
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					currentdict end
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 xpt
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 xpt
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/currentpagedevice currentpagedevice def
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
ColorSpaceFamily /Separation eq
	{
	sep
	}
	{
	ColorSpaceFamily /DeviceN eq
		{
		devn
		}
		{
		setcolor
		}ifelse
	}ifelse
} bind def
/sssetbackground { aload pop setcolor } bind def
/RadialShade {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bind def
/GenStrips {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bind def
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		6 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get 0 get null eq {
					dup /Names get names_index get /name xdf
					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
					or or or not {
						/AliasedColorants false def
						exit
					} if
				} if
			} for
			AliasedColorants {
				dup begin
				/Names new_names def
				/AliasedColorants true def
				/LookupTables new_LookupTables def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				currentdict /NComponents known not {
					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			Names {
				AvoidAliasedColorants {
					/currentspotalias current_spot_alias def
					false set_spot_alias
				} if
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				AvoidAliasedColorants {
					currentspotalias set_spot_alias
				} if
				/names_index names_index 1 add def
			} forall
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				/setcolor ldf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSD known {
			CSD get_csd /Names known {
				CSD get_csd begin
				currentdict devncs
				AGMCORE_host_sep{
					4 dict begin
					/devnCompCnt Names length def
					/NewLookup HiVal 1 add string def
					0 1 HiVal {
						/tableIndex xdf
						Lookup dup type /stringtype eq {
							devnCompCnt tableIndex map_index
						}{
							exec
						} ifelse
						setdevicencolor
						currentgray
						tableIndex exch
						HiVal mul cvi 
						NewLookup 3 1 roll put
					} for
					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
					end
				}{
					level3
					{
					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
					[/Indexed MappedCSA HiVal
						[
						Lookup dup type /stringtype eq
							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
						]cvx
					]setcolorspace_opt
					}ifelse
				} ifelse
				end
			}{
			} ifelse
			set_crd
		}
		{
			/MappedCSA CSA map_csa def
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {
			begin
			CSD get_csd begin
			map_indexed_devn
			devn
			end
			end
		}{
			AGMCORE_gget/Lookup get 4 3 -1 roll map_index
			pop setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {
			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		1 dict begin
		/name xdf
		AGMCORE_CSA_cache
		{
			0 get name eq {
				exit
			}{
				pop
			} ifelse
		}forall
		end
		end
	}{
		pop
	} ifelse
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
		dup wrap_paintproc
	}if
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	  begin
		/OldPaintProc /PaintProc load def
		/PaintProc
		{
		  mark exch
		  dup /OldPaintProc get stopped
		  {closefile restore end} if
		  cleartomark
		}  def
	  end
  } {pop} ifelse
} def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		dup /customcolor_tint exch AGMCORE_gput
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.23 0
%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.23 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.23 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel
		2 copy known not
			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 2 sub 1 index lt
				{ pop count 1 sub }
			if
			dup /argCount exch def
			dup 0 gt
				{
				exch 1 index 2 add 1 roll
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count 1 sub /restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup begin
		mark
			{
				(*) { pop stop } 128 string /Category
			resourceforall
			}
		stopped
		cleartomark
		currentdict eq dup
			{ end }
		if
		not
		}
		{ false }
	ifelse
	def
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
	userdict /Adobe_CoolType_Data 10 dict dup
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end put
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	currentcolorspace 0 get dup /DeviceCMYK eq {
		pop 4
	}
	{
		/DeviceRGB eq {
			pop 3
		}{
			1
		} ifelse
	} ifelse
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/srcDataStrs xdf
	/dstDataStr xdf
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/samplesNeedDecoding
		0 0 1 origDecode length 1 sub {
			origDecode exch get add
		} for
		origDecode length 2 div div
		dup 1 eq {
			/decodeDivisor 2 origBitsPerComponent exp 1 sub def
		} if
		2 origBitsPerComponent exp 1 sub ne
	def
	[
		0 1 dsCnt 1 sub [
			currentdict /origMultipleDataSources get {
				dup currentdict /origDataSource get exch get dup type
			}{
				currentdict /origDataSource get dup type
			} ifelse
			dup /filetype eq {
				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx
			}{
				/stringtype ne {
					/exec cvx
				} if
				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx
			} ifelse
		] cvx /for cvx
		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [
			0 1 Width 1 sub [
				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx
				currentdict /origMultipleDataSources get {
					0 1 dsCnt 1 sub [
						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx
						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs
								BitsPerComponent /decode_image_sample load /exec cvx
							} ifelse
						} if
					] cvx /for cvx
				}{
					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx
					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx		
					currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 
					[
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx
								BitsPerComponent /decode_image_sample load /exec cvx
								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx
							} ifelse
						} if
					] cvx /forall cvx
				} ifelse
				currentdict /convProc get /exec cvx
				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [
					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx
					currentdict /convProc get /filter_indexed_devn load ne {
						255 /mul cvx /cvi cvx 
					} if
					/put cvx 
				] cvx /for cvx
			] cvx /for cvx
			currentdict /dstDataStr get
		] cvx /if cvx
	] cvx bind
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	2 dict begin
	dup dup
	/dstDataStr exch /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						dstDataStr srcDataStrs devn_alt_datasource /exec cvx
						] cvx 0 () /SubFileDecode filter def
					/MultipleDataSources false def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA map_csa 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							[
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							dstDataStr srcDataStrs devn_alt_datasource /exec cvx
							] cvx
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource [
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								dstDataStr srcDataStrs devn_alt_datasource /exec cvx
								] cvx 0 () /SubFileDecode filter def
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get map_csa
				}{
					/CSD get get_csd /Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
					CSD get_csd begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page rules I [Converted].eps) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2015-04-02T02:54:51Z</xap:CreateDate>
  <xap:ModifyDate>2015-04-02T02:54:51Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>188</xapGImg:width>
     <xapGImg:height>256</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAC8AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqlutapL&#xA;pccd86BtNiJ/SLAEvFGRtOKdUQj4xT7J5V+GhVSi21q20C4hs72VRoF8y/oTVAQYEMu62krg8UG/&#xA;+jtsrKQn2gOaqHvNU1Swvo7Z0kuNS08ySW0Vd9R01yvqiKtFNzBRSV6sVH2Vk2VZPpeqafqunw6h&#xA;p063NncLzimToR4EHcEHYg7g7HfFUVirsVdirsVdirsVYnrnmewe7MKz8dM0yeNtUu4qsXukcNBY&#xA;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&#xA;xkNDULLxKVOxJ8cVZhir/9k=</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -791.856 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 791.856 li
578.88 791.856 li
578.88 0 li
clp
[1 0 0 1 0 0 ] concat
345.96 55.8721 mo
348.048 55.728 351.144 55.584 354.816 55.3679 cv
361.584 55.0081 370.296 54.6482 377.64 54.72 cv
399.312 54.864 420.984 54 442.728 53.5681 cv
442.368 53.4241 li
440.856 53.4241 439.2 53.3521 437.544 53.3521 cv
430.776 53.208 424.656 53.3521 419.256 53.3521 cv
400.824 53.5681 383.184 51.7681 364.68 53.5681 cv
354.96 54.4321 345.744 55.584 336.024 55.8721 cv
347.184 54.5759 378.576 50.1841 403.272 40.6799 cv
433.872 28.8721 441.648 9.36011 441.648 9.36011 cv
426.096 33.624 403.056 37.9441 377.28 45.4321 cv
360.648 50.1841 343.584 54.864 326.376 56.52 cv
334.872 54.792 368.568 47.3762 394.056 34.7041 cv
423.36 20.0881 429.336 0 429.336 0 cv
416.016 25.5601 393.48 32.04 368.496 41.832 cv
350.568 48.8879 333.216 54.936 314.28 58.104 cv
328.752 54.5759 350.928 48.24 369 39.24 cv
398.376 24.624 404.352 4.53613 404.352 4.53613 cv
391.032 30.0959 368.496 36.5759 343.512 46.3679 cv
333.36 50.3281 322.488 54.936 313.704 56.9521 cv
313.2 57.0242 312.696 57.1682 312.12 57.312 cv
326.016 52.9202 344.088 46.2961 359.136 37.8721 cv
387.72 21.8879 392.76 1.51196 392.76 1.51196 cv
380.664 27.72 358.488 35.208 334.008 46.2241 cv
322.128 51.552 308.952 56.6641 300.24 59.9041 cv
296.712 60.696 293.112 61.5601 289.44 62.6401 cv
289.44 64.584 li
293.904 63.072 298.512 61.7761 303.264 60.696 cv
304.632 60.3362 306.36 59.9761 308.376 59.5442 cv
320.904 56.9521 334.08 55.8 347.184 56.448 cv
364.536 57.6721 378.936 62.208 384.48 70.2 cv
386.352 72.936 387.144 77.832 386.712 81.144 cv
386.064 86.3281 384.336 91.2961 380.664 95.1121 cv
377.784 97.9919 374.76 99.2881 370.8 99.792 cv
370.8 99.792 369.864 99.936 370.152 99.936 cv
370.584 99.864 371.016 99.792 371.376 99.792 cv
380.592 98.928 387.576 89.28 388.368 80.5681 cv
388.44 79.2 388.224 77.9761 388.368 76.6799 cv
388.44 76.7522 388.44 76.824 388.44 76.896 cv
390.384 81.72 391.32 86.832 389.952 92.0161 cv
388.8 95.9041 386.712 98.4961 383.544 100.872 cv
383.544 100.872 382.752 101.448 383.04 101.304 cv
383.4 101.016 383.688 100.8 384.048 100.584 cv
391.68 95.4001 393.12 83.592 389.592 75.5281 cv
389.088 74.376 388.368 73.2961 387.648 72.2881 cv
387.288 71.5681 386.928 70.8481 386.496 70.1282 cv
392.616 74.9521 397.656 80.928 399.816 88.6321 cv
401.256 94.5361 400.536 99.5042 398.16 104.976 cv
398.16 104.976 397.656 106.344 397.872 105.912 cv
398.088 105.336 398.304 104.76 398.592 104.184 cv
404.64 91.728 397.512 75.24 386.856 67.4641 cv
382.608 64.4402 376.128 61.8481 371.16 60.1201 cv
372.24 60.408 373.752 60.8401 375.408 61.2722 cv
379.152 62.3521 383.904 63.864 387.864 65.448 cv
392.76 67.3921 397.008 69.552 400.536 71.4961 cv
407.016 75.0959 419.472 78.624 435.024 85.7522 cv
435.024 85.7522 429.408 82.8721 420.336 79.1282 cv
411.336 75.384 404.64 71.0642 400.032 68.04 cv
395.424 65.0161 387.648 62.928 381.024 61.5601 cv
373.248 59.9761 365.112 58.104 357.336 56.9521 cv
358.416 57.0242 359.712 57.0959 361.08 57.1682 cv
366.264 57.5281 372.888 58.176 378.504 59.1841 cv
385.416 60.408 391.536 62.0642 396.648 63.6482 cv
406.08 66.6001 423.36 67.824 445.536 72.936 cv
445.536 72.936 437.4 70.7041 424.656 68.2561 cv
411.84 65.8081 401.976 61.9919 395.136 59.2561 cv
388.296 56.592 377.496 55.9441 368.424 55.9441 cv
362.592 55.9441 356.76 56.6641 350.928 56.1602 cv
349.272 56.0161 347.616 55.9441 345.96 55.8721 cv
false sop
/0 
[/DeviceCMYK] add_csa
0 0 0 1 cmyk
ef
318.096 51.624 mo
313.488 50.1841 308.88 52.488 306.072 55.728 cv
304.632 57.384 303.84 59.1121 303.84 59.1121 cv
303.84 59.1121 301.464 59.688 299.952 60.408 cv
297.792 61.344 291.024 65.8801 296.712 69.1921 cv
298.152 70.0562 301.176 69.2639 301.176 69.2639 cv
301.176 69.2639 299.232 70.9919 298.368 72.144 cv
297.72 73.0801 293.04 78.552 296.136 79.2 cv
297.72 79.488 299.88 78.8401 300.816 78.1201 cv
301.68 77.4719 303.696 75.8162 303.696 75.8162 cv
305.28 75.6721 li
305.28 75.6721 303.48 77.832 302.544 78.9841 cv
301.608 80.136 300.6 82.0801 300.096 83.2322 cv
299.592 84.4561 298.8 86.1121 300.384 86.76 cv
302.976 87.9121 304.92 84.9602 306.648 83.592 cv
306.648 83.592 305.712 85.104 305.208 86.1121 cv
304.488 87.3362 302.112 92.9521 306.36 93.384 cv
307.656 93.5281 309.672 91.512 309.672 91.512 cv
309.024 93.4561 308.664 95.2561 309.096 97.2722 cv
309.312 98.208 309.672 98.8562 310.464 98.3521 cv
311.688 97.416 314.64 93.6001 314.64 93.6001 cv
314.64 93.6001 314.496 94.824 314.064 95.832 cv
313.632 96.8401 312.696 99.4321 312.84 100.512 cv
313.272 104.472 316.872 103.104 318.168 100.872 cv
318.456 100.44 319.104 99.5042 319.104 99.5042 cv
319.104 99.5042 318.888 100.152 319.464 100.368 cv
319.968 100.584 320.4 100.368 320.4 100.368 cv
320.4 100.368 320.76 103.248 320.832 103.752 cv
320.976 104.328 321.408 106.488 321.84 107.064 cv
322.344 107.712 323.352 107.424 323.784 106.992 cv
324.216 106.488 324.36 106.344 324.36 106.344 cv
324.36 106.344 325.152 106.488 325.728 106.056 cv
326.232 105.552 326.88 104.544 326.88 104.544 cv
326.88 104.544 327.744 107.136 328.104 108.144 cv
328.752 110.016 331.632 110.448 332.136 107.784 cv
332.28 107.064 332.568 104.616 332.568 104.616 cv
332.568 104.616 333.936 107.352 334.656 108.072 cv
335.304 108.864 336.888 109.512 337.32 109.008 cv
337.752 108.576 337.752 108.288 337.752 108.288 cv
337.752 108.288 338.472 108.648 338.904 107.928 cv
339.264 107.136 339.336 106.488 339.336 106.488 cv
339.336 106.488 339.408 106.632 339.912 106.56 cv
340.416 106.488 340.776 106.128 340.92 105.552 cv
340.992 105.048 340.92 104.616 340.92 104.616 cv
340.92 104.616 341.352 106.272 342.072 106.416 cv
342.864 106.488 344.016 105.552 344.376 104.832 cv
344.736 104.112 344.52 104.112 344.52 104.112 cv
344.52 104.112 345.24 104.4 345.24 103.608 cv
345.312 102.888 344.88 101.736 344.88 101.736 cv
344.88 101.736 346.392 102.744 346.608 102.24 cv
346.896 101.664 346.968 100.872 346.896 100.008 cv
346.752 99.2161 346.392 98.0642 346.392 98.0642 cv
346.392 98.0642 348.12 98.4961 348.624 97.9919 cv
349.128 97.488 349.416 96.8401 348.984 96.1921 cv
348.552 95.5442 348.264 95.1841 348.264 95.1841 cv
348.264 95.1841 349.272 95.2561 348.336 94.176 cv
347.472 93.1682 346.176 92.592 346.176 92.592 cv
346.176 92.592 348.624 93.312 348.768 92.592 cv
348.984 91.9441 348.624 90.936 348.048 90.2161 cv
347.4 89.4241 347.04 88.9919 347.04 88.9919 cv
347.04 88.9919 348.336 88.7761 348.768 87.8401 cv
349.2 86.9041 349.128 86.2561 348.84 85.7522 cv
348.552 85.248 348.264 84.8879 348.264 84.8879 cv
348.264 84.8879 348.696 84.24 348.552 83.592 cv
348.408 82.9441 348.192 81.936 346.896 81.072 cv
345.672 80.208 344.448 79.9202 344.448 79.9202 cv
344.448 79.9202 345.384 79.2 345.312 78.552 cv
345.24 77.9041 345.24 77.76 344.88 77.4001 cv
344.52 77.04 344.16 76.968 344.16 76.968 cv
344.16 76.968 344.808 76.032 345.096 75.312 cv
345.384 74.592 345.744 73.2961 344.376 72.5042 cv
343.008 71.7122 340.56 71.7122 340.56 71.7122 cv
340.56 71.7122 341.568 71.208 341.496 70.488 cv
341.424 69.624 339.768 69.8401 340.128 69.1921 cv
340.416 68.76 342 66.4561 339.48 65.52 cv
338.04 64.9441 335.808 64.9441 334.224 65.0161 cv
334.224 65.0161 334.512 64.2961 334.512 63.72 cv
334.584 62.7122 334.44 61.488 333.288 61.2 cv
333.288 61.2 333.648 60.48 333.792 59.688 cv
333.864 58.896 333.36 57.312 332.352 56.8081 cv
331.344 56.304 329.76 57.312 328.392 57.5281 cv
327.024 57.8162 323.496 58.176 323.496 58.176 cv
324.72 56.52 327.312 52.5601 325.008 50.76 cv
321.048 47.8081 318.816 51.9121 318.096 51.624 cv
ef
317.952 58.824 mo
317.952 58.824 316.872 58.104 314.928 58.6799 cv
310.68 60.0481 308.592 61.416 306.288 65.304 cv
305.208 67.104 304.416 67.968 304.776 68.4001 cv
305.136 68.832 305.568 67.3921 306.432 66.6721 cv
307.296 65.9521 310.464 63.072 312.048 61.9919 cv
314.28 60.552 315.576 59.688 317.952 58.824 cv
0 0 0 0 cmyk
ef
312.624 59.5442 mo
312.624 59.5442 314.856 56.2322 315.432 55.4402 cv
316.8 53.5681 319.824 49.824 322.56 50.2561 cv
323.568 50.4719 324.144 50.76 324.144 50.76 cv
320.472 50.4719 317.88 54.2881 315.576 56.592 cv
314.424 57.8162 313.848 59.1121 313.848 59.1121 cv
312.624 59.5442 li
ef
316.368 51.624 mo
317.736 51.9121 318.024 51.7681 317.88 51.9841 cv
317.16 52.8481 li
317.16 52.8481 317.088 52.7041 316.656 52.488 cv
313.416 51.0481 306.432 55.8721 305.496 58.896 cv
304.704 61.416 304.488 59.616 304.992 58.032 cv
306.216 54.2881 312.84 50.9761 316.368 51.624 cv
ef
302.544 68.5442 mo
300.384 70.7761 296.568 73.8721 295.848 76.968 cv
295.488 78.3362 295.56 78.7681 296.28 78.8401 cv
297.072 78.9841 297.792 78.696 297.792 78.696 cv
297.792 78.696 296.928 77.688 297.432 76.7522 cv
298.944 74.0161 301.68 72.4321 303.984 70.344 cv
306.72 68.04 302.976 68.1121 302.544 68.5442 cv
ef
315.792 65.448 mo
315.792 65.448 313.344 63.864 311.688 64.9441 cv
308.736 66.8162 305.496 68.688 303.408 71.4961 cv
301.752 73.8 301.464 74.8081 302.472 75.24 cv
303.48 75.6721 306.432 75.384 306 75.312 cv
305.496 75.24 303.408 75.0959 303.12 74.7361 cv
301.608 72.3601 311.904 64.3679 314.208 64.9441 cv
314.928 65.1602 315.792 65.448 315.792 65.448 cv
ef
307.224 74.304 mo
307.224 74.304 303.48 77.9761 302.544 79.488 cv
302.04 80.208 298.584 85.7522 300.6 86.4001 cv
301.32 86.616 301.464 86.5442 301.464 86.5442 cv
301.464 86.5442 300.672 86.5442 300.672 85.6082 cv
300.816 82.0081 305.28 77.5442 307.224 74.304 cv
ef
311.616 73.584 mo
311.616 73.584 310.032 71.928 309.816 72.2161 cv
309.672 72.4321 307.728 75.0242 307.728 75.0242 cv
306.936 76.104 301.176 83.0881 301.464 84.0959 cv
301.752 85.032 302.112 84.7441 303.336 83.9521 cv
304.488 83.1602 305.064 82.8 304.776 82.8721 cv
304.56 83.0161 303.264 83.6641 303.12 83.304 cv
302.904 82.8721 303.912 81.3601 304.776 80.4241 cv
307.152 77.9041 308.016 76.7522 310.68 74.448 cv
311.616 73.584 li
ef
324.504 63.792 mo
324.504 63.792 323.064 62.4961 321.12 63.2161 cv
319.176 63.864 317.304 64.512 315.144 66.5281 cv
313.056 68.616 311.472 69.48 311.184 70.7761 cv
310.968 72 311.472 72.5759 311.472 72.5759 cv
311.472 72.5759 311.328 71.28 312.336 70.2722 cv
313.416 69.3362 315.432 67.6799 317.16 66.6721 cv
318.888 65.6641 321.192 64.584 322.272 64.3679 cv
323.352 64.0801 324.504 63.792 324.504 63.792 cv
ef
316.224 64.728 mo
316.44 64.512 313.632 64.4402 313.128 63.936 cv
313.128 63.936 313.848 63 316.08 61.8481 cv
318.24 60.696 320.328 59.688 322.056 59.1841 cv
324.216 58.5361 325.872 58.7522 328.32 58.104 cv
329.76 57.7441 331.344 56.448 332.64 57.8162 cv
333.864 59.1841 333.216 60.408 333.216 60.408 cv
333.216 60.408 333.504 59.9761 332.424 58.968 cv
331.488 57.9602 330.48 58.248 328.536 59.1841 cv
326.592 60.0481 324.36 60.3362 322.2 61.488 cv
319.824 62.8562 316.224 64.728 316.224 64.728 cv
ef
333.72 62.928 mo
333.72 62.928 334.008 61.488 332.64 61.344 cv
329.472 60.9841 326.16 62.928 323.712 64.8 cv
322.848 65.52 321.984 65.304 321.408 66.6001 cv
320.832 67.896 320.832 69.2639 320.832 69.2639 cv
320.832 69.2639 321.408 68.04 321.984 67.3921 cv
324.288 64.8721 329.832 60.9121 332.712 62.4241 cv
333.144 62.5681 333.72 62.928 333.72 62.928 cv
ef
320.472 70.6321 mo
319.968 71.0642 313.344 73.728 311.832 76.032 cv
310.68 77.688 310.608 79.7041 310.392 79.8481 cv
309.96 80.28 li
309.456 80.7122 310.104 76.104 311.04 74.9521 cv
312.192 73.584 313.704 70.7761 315.792 70.488 cv
317.88 70.2722 319.248 70.488 320.184 69.8401 cv
321.192 69.1201 321.624 69.624 321.624 69.624 cv
320.472 70.6321 li
ef
311.4 80.6401 mo
311.4 80.6401 311.256 81 310.968 81.5759 cv
309.6 84.5281 306.792 87.1921 306.288 90.4321 cv
306.144 91.2241 305.784 92.448 307.008 91.8721 cv
308.232 91.2241 310.104 89.7839 309.744 90.144 cv
309.312 90.5759 309.528 90.936 309.528 90.936 cv
309.528 90.936 309.024 91.512 308.16 92.1602 cv
307.368 92.8081 306.144 93.4561 305.208 92.376 cv
302.832 89.7122 306.576 85.104 308.16 82.512 cv
309.024 80.928 309.384 80.4961 309.384 80.4961 cv
311.4 80.6401 li
ef
320.256 76.176 mo
320.256 76.176 318.384 78.48 316.872 80.28 cv
315.36 82.0801 313.848 83.592 312.696 84.8879 cv
311.544 86.2561 309.744 88.344 309.744 88.344 cv
309.744 88.344 308.736 88.1282 309.888 85.3921 cv
311.832 81.072 313.488 78.1921 318.168 76.5361 cv
319.32 76.104 320.256 76.176 320.256 76.176 cv
ef
338.976 69.0481 mo
338.976 69.1201 340.848 67.968 340.416 66.8879 cv
339.984 65.8801 339.264 65.7361 337.464 65.7361 cv
335.736 65.7361 332.784 66.0242 331.416 66.24 cv
326.016 67.032 323.208 69.3362 319.176 72.792 cv
317.016 74.592 316.368 75.384 318.744 74.52 cv
321.048 73.656 324.072 71.8562 327.096 70.1282 cv
328.464 69.3362 337.248 65.304 338.976 67.032 cv
339.768 67.7522 339.408 68.2561 339.192 68.4719 cv
338.976 68.688 338.976 69.0481 338.976 69.0481 cv
ef
340.416 70.9202 mo
340.416 70.9202 341.28 70.2722 339.624 69.696 cv
337.968 69.1921 337.248 67.968 335.16 68.832 cv
333.072 69.7681 331.344 70.2 329.976 70.8481 cv
328.608 71.4961 324.936 73.0801 326.952 73.0801 cv
328.968 73.1521 330.552 73.0801 333.432 71.8562 cv
336.888 70.416 340.2 69.9121 339.984 70.6321 cv
339.84 71.0642 338.976 72.2881 338.832 72.3601 cv
339.624 72.144 li
340.416 70.9202 li
ef
329.256 73.728 mo
329.256 73.728 327.672 73.9441 325.728 74.304 cv
323.856 74.7361 321.264 75.6001 321.264 75.6001 cv
321.264 75.6001 319.68 77.832 318.672 79.2 cv
317.664 80.4961 315.72 83.52 316.728 83.6641 cv
317.664 83.8081 318.024 82.584 320.112 81.936 cv
322.2 81.2161 324 79.7761 325.296 78.2639 cv
326.664 76.6799 328.176 75.4561 328.176 75.4561 cv
330.12 73.584 li
329.256 73.728 li
ef
325.368 79.488 mo
325.368 79.416 328.248 78.9121 329.544 78.408 cv
331.056 77.832 336.528 74.376 337.752 75.1682 cv
338.4 75.6001 338.184 75.8879 338.184 75.8879 cv
338.688 75.7441 li
339.12 75.6721 338.904 75.1682 338.4 74.7361 cv
336.888 73.4402 334.728 73.2241 332.856 73.656 cv
329.472 74.52 328.536 76.032 326.16 78.552 cv
326.16 78.552 325.368 79.5601 325.368 79.488 cv
ef
318.6 83.8801 mo
318.6 83.8801 315.504 85.3201 314.784 86.04 cv
314.064 86.76 312.912 90.072 312.624 91.656 cv
312.264 93.24 312.192 95.76 312.696 95.04 cv
313.2 94.3201 313.92 92.448 314.424 91.8 cv
315.36 90.792 317.592 88.0562 317.88 86.832 cv
318.024 85.824 318.816 84.6001 318.816 84.6001 cv
318.6 83.8801 li
ef
313.56 86.1841 mo
311.76 86.9761 li
311.76 86.9761 309.96 91.2241 309.816 92.52 cv
309.744 93.0959 308.736 97.8481 309.888 97.8481 cv
310.464 97.8481 310.896 97.488 310.896 97.488 cv
310.896 96.9841 li
310.824 96.696 309.528 98.3521 310.392 96.1201 cv
311.184 93.9602 312.048 92.0881 312.552 89.8562 cv
313.56 86.1841 li
ef
326.952 79.9202 mo
327.456 83.2322 325.944 84.312 323.568 86.5442 cv
322.344 87.7681 321.192 88.8481 320.04 89.4961 cv
318.816 90.2161 317.808 91.0081 317.52 90.2161 cv
317.304 89.3521 317.592 88.416 318.024 87.408 cv
318.384 86.4001 318.672 85.824 319.032 84.8162 cv
319.392 83.8081 320.328 82.2241 321.696 81.792 cv
323.064 81.4321 325.08 80.4241 325.512 80.28 cv
325.944 80.136 326.952 79.9202 326.952 79.9202 cv
ef
319.608 90.72 mo
319.68 90 317.232 91.728 316.656 93.5281 cv
316.656 93.5281 315.72 95.76 315.72 96.9841 cv
315.648 98.136 315.504 99.864 315.72 100.728 cv
315.864 101.592 315.648 102.24 316.224 102.312 cv
316.8 102.384 317.016 102.024 317.016 102.024 cv
317.016 102.024 316.44 102.24 316.44 101.592 cv
316.44 98.5681 318.456 95.1121 319.464 92.304 cv
319.608 90.72 li
ef
315.936 91.8721 mo
315.72 92.8081 314.64 95.04 313.92 97.0562 cv
313.344 98.7122 312.336 101.52 314.352 102.528 cv
315.216 102.96 315.504 102.6 315.504 102.6 cv
315.504 102.096 li
315.504 102.096 315 102.168 314.784 101.808 cv
313.632 100.08 315.288 95.1841 316.224 93.384 cv
317.016 91.8721 li
315.936 91.8721 li
ef
326.88 86.5442 mo
326.88 86.5442 323.712 87.9841 322.704 88.6321 cv
319.896 90.2881 318.6 94.6082 319.248 97.7761 cv
319.464 99.072 319.536 100.152 320.184 99.72 cv
320.832 99.2881 321.768 97.7761 322.56 96.624 cv
324.792 93.4561 325.872 90.864 326.808 87.1201 cv
326.88 86.5442 li
ef
331.992 79.5601 mo
330.552 79.488 328.752 78.9121 327.888 80.8562 cv
326.952 82.728 327.312 83.304 326.52 84.1682 cv
325.728 85.032 324.72 86.1841 324.72 86.1841 cv
324.72 86.1841 324.936 86.9041 325.224 86.76 cv
327.456 85.5361 330.048 83.6641 332.352 82.728 cv
337.824 80.4241 337.104 79.7041 331.992 79.5601 cv
ef
332.712 85.3201 mo
334.08 85.5361 334.944 85.7522 334.512 87.1201 cv
334.152 88.416 332.856 90.864 330.768 92.376 cv
328.608 93.8162 328.032 93.8879 327.096 94.032 cv
326.16 94.176 324.792 94.4641 325.08 93.6721 cv
325.8 91.728 326.304 89.7839 327.024 87.9121 cv
328.104 85.6082 329.904 84.8162 332.712 85.3201 cv
ef
333.072 78.624 mo
332.136 78.48 336.24 74.9521 341.568 76.5361 cv
343.584 77.1121 344.592 77.4001 344.664 78.1201 cv
344.808 78.8401 344.16 79.6321 344.16 79.6321 cv
343.584 79.488 li
343.584 79.488 344.592 79.488 344.088 78.7681 cv
343.152 77.2561 337.248 78.696 335.664 78.7681 cv
334.728 78.8401 333.936 78.8401 333.072 78.624 cv
ef
337.68 73.512 mo
337.968 73.584 344.736 72.2881 344.016 74.7361 cv
343.728 75.8162 342.792 76.6799 342.792 76.6799 cv
343.512 76.6799 li
343.512 76.6799 344.448 75.8879 344.664 75.312 cv
344.808 74.6641 345.384 73.656 344.232 73.0801 cv
341.352 71.5681 339.192 72.4321 336.096 73.0801 cv
337.68 73.512 li
ef
343.224 81.792 mo
343.944 82.4402 344.088 82.728 343.08 82.728 cv
340.632 82.728 337.32 83.6641 335.016 84.4561 cv
335.016 84.4561 331.56 85.6082 331.848 84.7441 cv
331.92 84.5281 332.928 83.6641 334.008 82.728 cv
336.456 80.7122 340.416 78.9121 343.224 81.792 cv
ef
347.544 83.448 mo
347.544 84.312 347.184 84.8879 347.184 84.8879 cv
347.616 85.104 li
347.616 85.104 348.264 83.9521 347.904 82.8721 cv
347.472 81.864 346.896 81.4321 345.456 81 cv
344.088 80.5681 341.784 80.4241 341.784 80.4241 cv
341.784 80.4241 342.216 80.4961 342.648 80.6401 cv
343.944 81.072 347.544 82.0801 347.544 83.448 cv
ef
339.192 84.8162 mo
339.696 84.8879 341.28 85.3921 342.72 85.104 cv
344.088 84.7441 344.88 84.24 346.104 84.8879 cv
347.256 85.6082 348.408 86.688 347.976 87.1921 cv
347.544 87.696 346.896 88.1282 346.896 88.1282 cv
347.256 88.2722 li
347.256 88.2722 348.552 87.624 348.48 86.688 cv
348.336 85.7522 347.976 84.6721 346.536 84.24 cv
345.096 83.8081 344.448 83.2322 342.792 83.448 cv
341.208 83.7361 338.112 84.384 338.112 84.384 cv
339.192 84.8162 li
ef
335.232 86.04 mo
335.232 86.04 337.968 85.896 339.12 86.4719 cv
340.2 87.0481 343.152 87.1921 342.216 88.2722 cv
341.28 89.28 340.056 90 337.248 90.6482 cv
334.44 91.2961 332.424 91.656 332.424 91.656 cv
332.424 91.656 333.432 90.144 333.864 89.4961 cv
334.296 88.9202 334.584 88.416 334.872 87.552 cv
335.16 86.688 335.232 86.04 335.232 86.04 cv
ef
328.464 94.248 mo
328.464 94.248 329.688 93.8162 330.48 93.312 cv
331.2 92.8081 331.2 92.2322 332.496 92.2322 cv
333.72 92.1602 334.584 92.304 334.584 93.8162 cv
334.584 95.3281 333.792 97.2 332.496 98.6401 cv
331.272 100.008 330.12 102.528 329.04 101.448 cv
328.032 100.296 327.816 98.4241 327.96 97.2 cv
328.104 95.9761 328.464 94.248 328.464 94.248 cv
ef
327.312 95.1121 mo
327.312 95.616 326.952 96.7681 326.88 98.136 cv
326.808 99.5042 325.224 101.16 325.08 102.744 cv
325.008 104.4 324.216 105.552 324.936 105.264 cv
325.584 104.976 326.736 103.464 326.736 103.464 cv
327.024 103.968 li
327.024 103.968 326.52 104.616 325.872 105.192 cv
325.224 105.768 324.648 106.848 324 105.408 cv
323.352 103.968 322.992 102.384 322.992 100.944 cv
322.992 99.4321 323.352 96.552 323.352 96.552 cv
324.504 94.5361 li
324.504 94.5361 325.224 94.3921 325.944 94.6082 cv
326.592 94.824 327.312 95.1121 327.312 95.1121 cv
ef
322.704 97.6321 mo
322.704 97.6321 322.56 99.864 322.416 101.232 cv
322.272 102.6 322.344 103.392 322.272 104.472 cv
322.2 105.48 321.84 106.416 322.416 106.704 cv
322.92 106.992 323.568 105.912 323.568 105.912 cv
324 106.2 li
324 106.2 323.856 106.704 323.352 106.92 cv
322.92 107.208 322.272 107.568 321.912 106.488 cv
321.552 105.408 321.192 103.68 321.12 103.032 cv
321.12 102.312 320.616 100.008 320.616 100.008 cv
321.624 98.7122 li
322.704 97.6321 li
ef
327.528 100.512 mo
327.528 100.512 327.528 100.728 327.6 101.088 cv
327.672 103.32 328.32 105.336 328.968 107.496 cv
329.184 108.216 329.472 109.008 330.264 108.864 cv
331.056 108.72 331.2 108.216 331.2 108.216 cv
331.488 108.576 li
331.488 108.576 331.344 109.368 330.192 109.368 cv
329.112 109.44 328.608 108.504 328.248 107.28 cv
327.816 106.128 327.168 103.608 327.168 103.608 cv
326.88 101.088 li
327.528 100.512 li
ef
336.024 92.0161 mo
336.024 92.0161 339.408 92.448 340.344 92.8081 cv
341.28 93.1682 341.712 92.9521 341.64 94.6082 cv
341.496 97.416 339.696 99.3601 336.456 99.072 cv
335.736 99 333.72 99.4321 334.152 98.208 cv
334.584 97.0562 334.944 95.688 335.16 94.968 cv
335.376 94.176 335.376 92.8801 335.376 92.8801 cv
336.024 92.0161 li
ef
342.792 88.7041 mo
343.08 88.6321 344.952 88.2722 346.248 89.28 cv
347.616 90.3601 348.336 91.8721 348.336 91.8721 cv
346.32 91.2241 344.232 90.792 342.144 91.1521 cv
339.12 91.728 337.104 92.448 339.984 90.5759 cv
340.992 89.928 341.928 89.4961 342.792 88.7041 cv
ef
333.216 98.8562 mo
332.424 99.72 li
331.632 100.656 333.072 104.4 334.008 105.12 cv
334.944 105.768 335.016 106.272 335.664 104.976 cv
336.312 103.752 336.96 101.952 337.032 101.16 cv
337.104 100.44 336.816 99.6482 336.816 99.6482 cv
335.736 99.6482 334.656 99.72 333.72 99.144 cv
333.72 99.144 333.144 98.928 333.216 98.8562 cv
ef
333 104.976 mo
333 104.976 335.16 107.784 335.808 108.288 cv
336.384 108.792 336.744 108.576 337.032 108.36 cv
337.392 108.216 337.536 108.072 337.536 108.072 cv
337.104 107.712 li
337.104 107.712 336.672 108.432 336.24 108 cv
335.808 107.568 334.584 106.272 334.584 106.272 cv
333.864 105.336 li
333 104.976 li
ef
337.68 102.312 mo
337.752 102.312 338.976 103.896 339.84 103.752 cv
340.704 103.608 342.504 102.744 342.432 101.52 cv
342.288 100.296 341.136 98.7839 341.136 98.7839 cv
341.136 98.7839 340.632 98.7122 339.696 99.2161 cv
338.688 99.6482 337.464 99.72 337.464 99.72 cv
337.464 99.72 337.536 102.312 337.68 102.312 cv
ef
337.464 103.752 mo
337.464 103.752 338.976 105.696 339.48 105.984 cv
340.056 106.272 340.416 105.624 340.488 105.192 cv
340.56 104.832 340.416 104.4 340.416 104.4 cv
340.416 104.4 339.696 104.112 339.12 103.824 cv
338.544 103.536 337.824 102.888 337.824 102.888 cv
337.464 103.752 li
ef
336.456 105.12 mo
336.456 105.12 337.176 106.344 337.608 106.704 cv
338.04 107.136 338.616 106.704 338.688 106.2 cv
338.688 105.696 338.688 105.696 338.688 105.696 cv
339.048 105.984 li
339.048 105.984 339.12 106.416 338.76 106.992 cv
338.472 107.568 337.752 108.144 337.32 107.568 cv
336.816 106.992 335.808 106.056 335.808 106.056 cv
336.456 105.12 li
ef
341.136 104.328 mo
341.136 104.328 342 106.488 342.504 105.984 cv
343.008 105.48 344.376 104.688 343.872 104.616 cv
343.44 104.544 342.216 104.616 341.856 104.184 cv
341.496 103.752 340.992 103.896 340.992 103.896 cv
341.136 104.328 li
ef
343.296 104.04 mo
344.16 104.04 345.024 103.968 344.736 102.816 cv
344.52 101.664 344.016 101.088 343.656 100.944 cv
343.296 100.8 342.36 99.792 342.576 100.152 cv
342.72 100.584 343.224 101.16 342.792 101.808 cv
342.432 102.456 342.216 102.888 342.216 102.888 cv
342 103.68 342.36 104.04 343.296 104.04 cv
ef
344.592 100.944 mo
345.384 101.376 346.536 102.168 346.392 101.16 cv
346.248 100.08 346.824 98.4961 345.6 99.072 cv
344.376 99.5759 343.44 99.144 343.44 99.144 cv
341.856 99.6482 343.296 100.296 344.592 100.944 cv
ef
343.584 98.6401 mo
344.448 98.6401 346.824 98.7839 345.888 97.5601 cv
344.952 96.2639 344.376 95.3281 344.016 95.2561 cv
343.584 95.1841 342.288 94.6082 342.288 94.6082 cv
342.288 94.6082 342.504 95.832 342 96.624 cv
341.496 97.416 341.136 97.7041 341.208 97.9919 cv
341.568 98.8562 342.576 98.7122 343.584 98.6401 cv
ef
346.608 97.7041 mo
347.328 98.136 349.2 97.7761 348.696 96.7681 cv
348.12 95.76 347.904 95.1121 346.968 95.4719 cv
345.816 95.832 344.592 96.552 346.608 97.7041 cv
ef
342.936 93.6001 mo
342.936 93.6001 345.024 94.3201 345.888 94.5361 cv
346.824 94.7522 348.336 95.5442 347.904 94.6799 cv
347.472 93.8879 346.824 92.9521 345.312 92.9521 cv
343.8 92.8801 342.936 93.6001 342.936 93.6001 cv
ef
308.016 61.416 mo
309.672 61.9919 301.032 61.7041 297.936 65.1602 cv
296.496 66.6721 295.848 68.4001 298.728 68.5442 cv
299.736 68.5442 301.248 68.616 301.248 68.616 cv
300.672 69.0481 li
300.672 69.0481 300.384 69.0481 300.024 69.0481 cv
298.368 69.1921 295.056 68.76 295.128 66.384 cv
295.2 64.8721 296.568 62.8562 298.44 61.8481 cv
300.384 60.8401 303.768 59.688 303.768 59.688 cv
305.064 61.1282 306.36 60.9121 308.016 61.416 cv
ef
368.28 53.8562 mo
394.56 44.208 422.208 41.4001 447.192 56.448 cv
457.128 62.4961 466.056 70.7761 476.064 76.896 cv
497.952 90.2881 520.344 86.3281 531.36 76.248 cv
544.392 64.2961 537.696 45.4321 525.168 36.864 cv
512.064 27.864 490.752 32.9761 489.672 50.4001 cv
489.312 55.8 491.4 61.7761 496.296 62.7122 cv
503.352 64.0801 508.176 59.3281 506.376 54.936 cv
505.872 53.7122 504.864 52.416 503.208 51.1921 cv
503.208 51.1921 505.08 51.552 506.232 53.0642 cv
511.776 60.3362 502.632 66.1682 496.008 64.4402 cv
489.456 62.7122 486.864 56.304 487.296 50.4001 cv
488.52 31.824 512.64 24.48 527.184 33.552 cv
541.944 42.696 549.864 64.728 533.88 79.5601 cv
521.064 91.512 496.152 96.408 472.392 80.0642 cv
446.184 62.0642 426.384 44.208 391.968 51.2639 cv
388.584 51.9121 385.2 52.8481 381.888 53.8562 cv
368.28 53.8562 li
0 0 0 1 cmyk
ef
384.84 52.9202 mo
575.208 52.9202 li
578.88 53.7839 li
575.064 54.5042 li
384.84 54.5042 li
384.84 52.9202 li
ef
569.448 51.624 mo
570.6 51.624 571.536 52.5601 571.536 53.7122 cv
571.536 54.864 570.6 55.8 569.448 55.8 cv
568.296 55.8 567.36 54.864 567.36 53.7122 cv
567.36 52.5601 568.296 51.624 569.448 51.624 cv
ef
560.88 51.0481 mo
562.32 51.0481 563.472 52.2722 563.472 53.7122 cv
563.472 55.1521 562.32 56.3762 560.88 56.3762 cv
559.368 56.3762 558.216 55.1521 558.216 53.7122 cv
558.216 52.2722 559.368 51.0481 560.88 51.0481 cv
ef
551.664 50.04 mo
553.68 50.04 555.336 51.696 555.336 53.7122 cv
555.336 55.728 553.68 57.384 551.664 57.384 cv
549.648 57.384 547.992 55.728 547.992 53.7122 cv
547.992 51.696 549.648 50.04 551.664 50.04 cv
ef
232.92 55.8721 mo
230.832 55.728 227.736 55.584 224.136 55.3679 cv
217.296 55.0081 208.656 54.6482 201.312 54.72 cv
179.568 54.864 157.896 54 136.224 53.5681 cv
136.512 53.4241 li
138.096 53.4241 139.68 53.3521 141.336 53.3521 cv
148.104 53.208 154.224 53.3521 159.696 53.3521 cv
178.128 53.5681 195.696 51.7681 214.272 53.5681 cv
223.992 54.4321 233.208 55.584 242.856 55.8721 cv
231.696 54.5759 200.304 50.1841 175.608 40.6799 cv
145.08 28.8721 137.232 9.36011 137.232 9.36011 cv
152.856 33.624 175.896 37.9441 201.672 45.4321 cv
218.232 50.1841 235.296 54.864 252.504 56.52 cv
244.008 54.792 210.312 47.3762 184.896 34.7041 cv
155.52 20.0881 149.616 0 149.616 0 cv
162.864 25.5601 185.4 32.04 210.384 41.832 cv
228.384 48.8879 245.736 54.936 264.6 58.104 cv
250.2 54.5759 227.952 48.24 209.88 39.24 cv
180.576 24.624 174.6 4.53613 174.6 4.53613 cv
187.848 30.0959 210.384 36.5759 235.368 46.3679 cv
245.592 50.3281 256.464 54.936 265.176 56.9521 cv
265.752 57.0242 266.256 57.1682 266.76 57.312 cv
252.936 52.9202 234.792 46.2961 219.816 37.8721 cv
191.16 21.8879 186.192 1.51196 186.192 1.51196 cv
198.216 27.72 220.464 35.208 244.944 46.2241 cv
256.752 51.552 270 56.6641 278.64 59.9041 cv
282.168 60.696 285.84 61.5601 289.44 62.6401 cv
289.44 64.584 li
284.976 63.072 280.368 61.7761 275.688 60.696 cv
274.248 60.3362 272.592 59.9761 270.576 59.5442 cv
257.976 56.9521 244.8 55.8 231.696 56.448 cv
214.416 57.6721 199.944 62.208 194.4 70.2 cv
192.528 72.936 191.808 77.832 192.168 81.144 cv
192.888 86.3281 194.544 91.2961 198.216 95.1121 cv
201.096 97.9919 204.12 99.2881 208.08 99.792 cv
208.08 99.792 209.088 99.936 208.728 99.936 cv
208.296 99.864 207.936 99.792 207.504 99.792 cv
198.36 98.928 191.304 89.28 190.584 80.5681 cv
190.44 79.2 190.656 77.9761 190.512 76.6799 cv
190.512 76.7522 190.512 76.824 190.44 76.896 cv
188.496 81.72 187.632 86.832 189 92.0161 cv
190.152 95.9041 192.168 98.4961 195.336 100.872 cv
195.408 100.872 196.128 101.448 195.912 101.304 cv
195.552 101.016 195.192 100.8 194.832 100.584 cv
187.2 95.4001 185.76 83.592 189.288 75.5281 cv
189.864 74.376 190.512 73.2961 191.304 72.2881 cv
191.592 71.5681 191.952 70.8481 192.456 70.1282 cv
186.264 74.9521 181.224 80.928 179.136 88.6321 cv
177.696 94.5361 178.344 99.5042 180.72 104.976 cv
180.72 104.976 181.296 106.344 181.08 105.912 cv
180.864 105.336 180.576 104.76 180.288 104.184 cv
174.312 91.728 181.368 75.24 192.024 67.4641 cv
196.344 64.4402 202.752 61.8481 207.72 60.1201 cv
206.64 60.408 205.2 60.8401 203.544 61.2722 cv
199.8 62.3521 195.048 63.864 191.016 65.448 cv
186.12 67.3921 181.872 69.552 178.344 71.4961 cv
171.936 75.0959 159.408 78.624 143.928 85.7522 cv
143.928 85.7522 149.544 82.8721 158.544 79.1282 cv
167.544 75.384 174.24 71.0642 178.848 68.04 cv
183.456 65.0161 191.304 62.928 197.928 61.5601 cv
205.704 59.9761 213.768 58.104 221.616 56.9521 cv
220.464 57.0242 219.24 57.0959 217.872 57.1682 cv
212.688 57.5281 206.064 58.176 200.376 59.1841 cv
193.464 60.408 187.344 62.0642 182.232 63.6482 cv
172.8 66.6001 155.592 67.824 133.344 72.936 cv
133.344 72.936 141.48 70.7041 154.296 68.2561 cv
167.04 65.8081 176.976 61.9919 183.816 59.2561 cv
190.656 56.592 201.456 55.9441 210.456 55.9441 cv
216.36 55.9441 222.192 56.6641 227.952 56.1602 cv
229.68 56.0161 231.336 55.9441 232.92 55.8721 cv
ef
260.784 51.624 mo
265.464 50.1841 270.072 52.488 272.808 55.728 cv
274.248 57.384 275.04 59.1121 275.04 59.1121 cv
275.04 59.1121 277.416 59.688 279 60.408 cv
281.16 61.344 287.856 65.8801 282.168 69.1921 cv
280.728 70.0562 277.704 69.2639 277.704 69.2639 cv
277.704 69.2639 279.648 70.9919 280.512 72.144 cv
281.232 73.0801 285.84 78.552 282.744 79.2 cv
281.232 79.488 279.072 78.8401 278.136 78.1201 cv
277.2 77.4719 275.256 75.8162 275.256 75.8162 cv
273.672 75.6721 li
273.672 75.6721 275.4 77.832 276.336 78.9841 cv
277.272 80.136 278.28 82.0801 278.784 83.2322 cv
279.288 84.4561 280.08 86.1121 278.496 86.76 cv
275.904 87.9121 273.96 84.9602 272.304 83.592 cv
272.304 83.592 273.168 85.104 273.744 86.1121 cv
274.392 87.3362 276.768 92.9521 272.592 93.384 cv
271.224 93.5281 269.208 91.512 269.208 91.512 cv
269.856 93.4561 270.288 95.2561 269.784 97.2722 cv
269.568 98.208 269.208 98.8562 268.416 98.3521 cv
267.192 97.416 264.24 93.6001 264.24 93.6001 cv
264.24 93.6001 264.384 94.824 264.816 95.832 cv
265.248 96.8401 266.184 99.4321 266.112 100.512 cv
265.608 104.472 262.008 103.104 260.712 100.872 cv
260.496 100.44 259.776 99.5042 259.776 99.5042 cv
259.776 99.5042 259.992 100.152 259.488 100.368 cv
258.984 100.584 258.552 100.368 258.552 100.368 cv
258.552 100.368 258.192 103.248 258.048 103.752 cv
257.904 104.328 257.544 106.488 257.04 107.064 cv
256.608 107.712 255.528 107.424 255.096 106.992 cv
254.736 106.488 254.592 106.344 254.592 106.344 cv
254.592 106.344 253.728 106.488 253.224 106.056 cv
252.648 105.552 252 104.544 252 104.544 cv
252 104.544 251.208 107.136 250.776 108.144 cv
250.128 110.016 247.32 110.448 246.816 107.784 cv
246.672 107.064 246.312 104.616 246.312 104.616 cv
246.312 104.616 244.944 107.352 244.296 108.072 cv
243.576 108.864 241.992 109.512 241.56 109.008 cv
241.2 108.576 241.128 108.288 241.128 108.288 cv
241.128 108.288 240.408 108.648 240.048 107.928 cv
239.616 107.136 239.616 106.488 239.616 106.488 cv
239.616 106.488 239.472 106.632 238.968 106.56 cv
238.464 106.488 238.104 106.128 238.032 105.552 cv
237.888 105.048 237.96 104.616 237.96 104.616 cv
237.96 104.616 237.6 106.272 236.808 106.416 cv
236.088 106.488 234.864 105.552 234.576 104.832 cv
234.216 104.112 234.36 104.112 234.36 104.112 cv
234.36 104.112 233.712 104.4 233.64 103.608 cv
233.64 102.888 234.072 101.736 234.072 101.736 cv
234.072 101.736 232.488 102.744 232.272 102.24 cv
231.984 101.664 231.912 100.872 232.056 100.008 cv
232.128 99.2161 232.488 98.0642 232.488 98.0642 cv
232.488 98.0642 230.76 98.4961 230.256 97.9919 cv
229.752 97.488 229.464 96.8401 229.896 96.1921 cv
230.328 95.5442 230.616 95.1841 230.616 95.1841 cv
230.616 95.1841 229.608 95.2561 230.544 94.176 cv
231.48 93.1682 232.704 92.592 232.704 92.592 cv
232.704 92.592 230.256 93.312 230.112 92.592 cv
229.968 91.9441 230.256 90.936 230.904 90.2161 cv
231.48 89.4241 231.912 88.9919 231.912 88.9919 cv
231.912 88.9919 230.544 88.7761 230.112 87.8401 cv
229.68 86.9041 229.752 86.2561 230.04 85.7522 cv
230.4 85.248 230.616 84.8879 230.616 84.8879 cv
230.616 84.8879 230.256 84.24 230.4 83.592 cv
230.544 82.9441 230.76 81.936 231.984 81.072 cv
233.208 80.208 234.432 79.9202 234.432 79.9202 cv
234.432 79.9202 233.496 79.2 233.568 78.552 cv
233.64 77.9041 233.712 77.76 234 77.4001 cv
234.432 77.04 234.72 76.968 234.72 76.968 cv
234.72 76.968 234.072 76.032 233.784 75.312 cv
233.496 74.592 233.136 73.2961 234.504 72.5042 cv
235.944 71.7122 238.32 71.7122 238.32 71.7122 cv
238.32 71.7122 237.312 71.208 237.384 70.488 cv
237.528 69.624 239.184 69.8401 238.752 69.1921 cv
238.536 68.76 236.952 66.4561 239.4 65.52 cv
240.84 64.9441 243.144 64.9441 244.728 65.0161 cv
244.728 65.0161 244.44 64.2961 244.368 63.72 cv
244.296 62.7122 244.44 61.488 245.664 61.2 cv
245.664 61.2 245.232 60.48 245.16 59.688 cv
245.088 58.896 245.52 57.312 246.528 56.8081 cv
247.608 56.304 249.192 57.312 250.56 57.5281 cv
251.856 57.8162 255.384 58.176 255.384 58.176 cv
254.16 56.52 251.568 52.5601 253.944 50.76 cv
257.832 47.8081 260.064 51.9121 260.784 51.624 cv
ef
260.928 58.824 mo
260.928 58.824 262.08 58.104 263.952 58.6799 cv
268.2 60.0481 270.288 61.416 272.664 65.304 cv
273.744 67.104 274.464 67.968 274.104 68.4001 cv
273.744 68.832 273.312 67.3921 272.448 66.6721 cv
271.584 65.9521 268.488 63.072 266.832 61.9919 cv
264.672 60.552 263.376 59.688 260.928 58.824 cv
0 0 0 0 cmyk
ef
266.256 59.5442 mo
266.256 59.5442 264.096 56.2322 263.52 55.4402 cv
262.152 53.5681 259.056 49.824 256.32 50.2561 cv
255.312 50.4719 254.808 50.76 254.808 50.76 cv
258.48 50.4719 261 54.2881 263.304 56.592 cv
264.456 57.8162 265.104 59.1121 265.104 59.1121 cv
266.256 59.5442 li
ef
262.512 51.624 mo
261.144 51.9121 260.856 51.7681 261 51.9841 cv
261.792 52.8481 li
261.792 52.8481 261.864 52.7041 262.296 52.488 cv
265.464 51.0481 272.448 55.8721 273.456 58.896 cv
274.248 61.416 274.392 59.616 273.888 58.032 cv
272.736 54.2881 266.04 50.9761 262.512 51.624 cv
ef
276.336 68.5442 mo
278.568 70.7761 282.312 73.8721 283.032 76.968 cv
283.392 78.3362 283.392 78.7681 282.6 78.8401 cv
281.808 78.9841 281.088 78.696 281.088 78.696 cv
281.088 78.696 282.024 77.688 281.52 76.7522 cv
280.008 74.0161 277.2 72.4321 274.896 70.344 cv
272.232 68.04 275.976 68.1121 276.336 68.5442 cv
ef
263.16 65.448 mo
263.16 65.448 265.608 63.864 267.264 64.9441 cv
270.216 66.8162 273.384 68.688 275.472 71.4961 cv
277.2 73.8 277.416 74.8081 276.408 75.24 cv
275.4 75.6721 272.448 75.384 272.952 75.312 cv
273.456 75.24 275.472 75.0959 275.76 74.7361 cv
277.344 72.3601 266.976 64.3679 264.744 64.9441 cv
263.952 65.1602 263.16 65.448 263.16 65.448 cv
ef
271.728 74.304 mo
271.728 74.304 275.4 77.9761 276.408 79.488 cv
276.912 80.208 280.296 85.7522 278.352 86.4001 cv
277.632 86.616 277.416 86.5442 277.416 86.5442 cv
277.416 86.5442 278.28 86.5442 278.208 85.6082 cv
278.136 82.0081 273.6 77.5442 271.728 74.304 cv
ef
267.336 73.584 mo
267.336 73.584 268.92 71.928 269.064 72.2161 cv
269.28 72.4321 271.152 75.0242 271.152 75.0242 cv
271.944 76.104 277.704 83.0881 277.416 84.0959 cv
277.128 85.032 276.84 84.7441 275.616 83.9521 cv
274.392 83.1602 273.888 82.8 274.104 82.8721 cv
274.392 83.0161 275.616 83.6641 275.832 83.304 cv
275.976 82.8721 274.968 81.3601 274.104 80.4241 cv
271.728 77.9041 270.864 76.7522 268.2 74.448 cv
267.336 73.584 li
ef
254.376 63.792 mo
254.376 63.792 255.888 62.4961 257.832 63.2161 cv
259.704 63.864 261.648 64.512 263.736 66.5281 cv
265.824 68.616 267.408 69.48 267.696 70.7761 cv
267.984 72 267.408 72.5759 267.408 72.5759 cv
267.408 72.5759 267.624 71.28 266.544 70.2722 cv
265.536 69.3362 263.448 67.6799 261.72 66.6721 cv
259.992 65.6641 257.688 64.584 256.608 64.3679 cv
255.528 64.0801 254.376 63.792 254.376 63.792 cv
ef
262.656 64.728 mo
262.512 64.512 265.248 64.4402 265.752 63.936 cv
265.752 63.936 265.032 63 262.872 61.8481 cv
260.712 60.696 258.624 59.688 256.824 59.1841 cv
254.664 58.5361 253.08 58.7522 250.56 58.104 cv
249.12 57.7441 247.536 56.448 246.312 57.8162 cv
245.016 59.1841 245.736 60.408 245.736 60.408 cv
245.736 60.408 245.448 59.9761 246.456 58.968 cv
247.464 57.9602 248.4 58.248 250.344 59.1841 cv
252.36 60.0481 254.592 60.3362 256.752 61.488 cv
259.128 62.8562 262.656 64.728 262.656 64.728 cv
ef
245.16 62.928 mo
245.16 62.928 244.944 61.488 246.24 61.344 cv
249.48 60.9841 252.792 62.928 255.168 64.8 cv
256.104 65.52 256.968 65.304 257.544 66.6001 cv
258.12 67.896 258.048 69.2639 258.048 69.2639 cv
258.048 69.2639 257.472 68.04 256.968 67.3921 cv
254.592 64.8721 249.048 60.9121 246.168 62.4241 cv
245.808 62.5681 245.16 62.928 245.16 62.928 cv
ef
258.408 70.6321 mo
258.984 71.0642 265.536 73.728 267.12 76.032 cv
268.2 77.688 268.344 79.7041 268.488 79.8481 cv
268.992 80.28 li
269.496 80.7122 268.848 76.104 267.84 74.9521 cv
266.688 73.584 265.248 70.7761 263.16 70.488 cv
261 70.2722 259.632 70.488 258.696 69.8401 cv
257.76 69.1201 257.256 69.624 257.256 69.624 cv
258.408 70.6321 li
ef
267.552 80.6401 mo
267.552 80.6401 267.696 81 267.984 81.5759 cv
269.28 84.5281 272.16 87.1921 272.664 90.4321 cv
272.808 91.2241 273.096 92.448 271.872 91.8721 cv
270.648 91.2241 268.776 89.7839 269.208 90.144 cv
269.64 90.5759 269.352 90.936 269.352 90.936 cv
269.352 90.936 269.928 91.512 270.72 92.1602 cv
271.584 92.8081 272.736 93.4561 273.744 92.376 cv
276.12 89.7122 272.304 85.104 270.792 82.512 cv
269.856 80.928 269.568 80.4961 269.568 80.4961 cv
267.552 80.6401 li
ef
258.624 76.176 mo
258.624 76.176 260.496 78.48 262.008 80.28 cv
263.592 82.0801 265.104 83.592 266.184 84.8879 cv
267.336 86.2561 269.208 88.344 269.208 88.344 cv
269.208 88.344 270.216 88.1282 268.992 85.3921 cv
267.12 81.072 265.464 78.1921 260.712 76.5361 cv
259.56 76.104 258.624 76.176 258.624 76.176 cv
ef
239.904 69.0481 mo
239.904 69.1201 238.104 67.968 238.536 66.8879 cv
238.896 65.8801 239.688 65.7361 241.416 65.7361 cv
243.216 65.7361 246.096 66.0242 247.464 66.24 cv
252.864 67.032 255.744 69.3362 259.776 72.792 cv
261.864 74.592 262.584 75.384 260.208 74.52 cv
257.832 73.656 254.808 71.8562 251.856 70.1282 cv
250.416 69.3362 241.632 65.304 239.904 67.032 cv
239.184 67.7522 239.544 68.2561 239.688 68.4719 cv
239.904 68.688 239.904 69.0481 239.904 69.0481 cv
ef
238.464 70.9202 mo
238.464 70.9202 237.6 70.2722 239.328 69.696 cv
240.984 69.1921 241.632 67.968 243.792 68.832 cv
245.88 69.7681 247.536 70.2 248.904 70.8481 cv
250.272 71.4961 254.016 73.0801 251.928 73.0801 cv
249.912 73.1521 248.328 73.0801 245.52 71.8562 cv
241.992 70.416 238.68 69.9121 238.896 70.6321 cv
239.04 71.0642 239.904 72.2881 240.048 72.3601 cv
239.328 72.144 li
238.464 70.9202 li
ef
249.696 73.728 mo
249.696 73.728 251.28 73.9441 253.152 74.304 cv
255.096 74.7361 257.688 75.6001 257.688 75.6001 cv
257.688 75.6001 259.2 77.832 260.208 79.2 cv
261.288 80.4961 263.16 83.52 262.224 83.6641 cv
261.216 83.8081 260.928 82.584 258.84 81.936 cv
256.68 81.2161 254.88 79.7761 253.584 78.2639 cv
252.288 76.6799 250.704 75.4561 250.704 75.4561 cv
248.76 73.584 li
249.696 73.728 li
ef
253.584 79.488 mo
253.584 79.416 250.704 78.9121 249.336 78.408 cv
247.824 77.832 242.352 74.376 241.128 75.1682 cv
240.552 75.6001 240.696 75.8879 240.696 75.8879 cv
240.264 75.7441 li
239.76 75.6721 240.048 75.1682 240.552 74.7361 cv
241.992 73.4402 244.224 73.2241 246.096 73.656 cv
249.408 74.52 250.416 76.032 252.72 78.552 cv
252.72 78.552 253.584 79.5601 253.584 79.488 cv
ef
260.28 83.8801 mo
260.28 83.8801 263.448 85.3201 264.168 86.04 cv
264.888 86.76 265.968 90.072 266.328 91.656 cv
266.616 93.24 266.688 95.76 266.256 95.04 cv
265.752 94.3201 265.032 92.448 264.456 91.8 cv
263.592 90.792 261.36 88.0562 261.072 86.832 cv
260.856 85.824 260.136 84.6001 260.136 84.6001 cv
260.28 83.8801 li
ef
265.32 86.1841 mo
267.192 86.9761 li
267.192 86.9761 268.92 91.2241 269.136 92.52 cv
269.208 93.0959 270.144 97.8481 268.992 97.8481 cv
268.488 97.8481 267.984 97.488 267.984 97.488 cv
268.056 96.9841 li
268.056 96.696 269.424 98.3521 268.56 96.1201 cv
267.696 93.9602 266.904 92.0881 266.328 89.8562 cv
265.32 86.1841 li
ef
252 79.9202 mo
251.496 83.2322 252.936 84.312 255.312 86.5442 cv
256.608 87.7681 257.688 88.8481 258.912 89.4961 cv
260.136 90.2161 261.072 91.0081 261.36 90.2161 cv
261.648 89.3521 261.288 88.416 260.928 87.408 cv
260.568 86.4001 260.208 85.824 259.848 84.8162 cv
259.488 83.8081 258.624 82.2241 257.184 81.792 cv
255.816 81.4321 253.872 80.4241 253.44 80.28 cv
252.936 80.136 252 79.9202 252 79.9202 cv
ef
259.344 90.72 mo
259.272 90 261.648 91.728 262.224 93.5281 cv
262.224 93.5281 263.16 95.76 263.232 96.9841 cv
263.304 98.136 263.376 99.864 263.232 100.728 cv
263.016 101.592 263.232 102.24 262.656 102.312 cv
262.152 102.384 261.864 102.024 261.864 102.024 cv
261.864 102.024 262.512 102.24 262.512 101.592 cv
262.512 98.5681 260.496 95.1121 259.416 92.304 cv
259.344 90.72 li
ef
263.016 91.8721 mo
263.16 92.8081 264.24 95.04 264.96 97.0562 cv
265.536 98.7122 266.616 101.52 264.528 102.528 cv
263.664 102.96 263.448 102.6 263.448 102.6 cv
263.448 102.096 li
263.448 102.096 263.88 102.168 264.168 101.808 cv
265.248 100.08 263.664 95.1841 262.656 93.384 cv
261.864 91.8721 li
263.016 91.8721 li
ef
252.072 86.5442 mo
252.072 86.5442 255.24 87.9841 256.176 88.6321 cv
258.984 90.2881 260.28 94.6082 259.704 97.7761 cv
259.416 99.072 259.344 100.152 258.696 99.72 cv
258.048 99.2881 257.184 97.7761 256.32 96.624 cv
254.16 93.4561 253.08 90.864 252.144 87.1201 cv
252.072 86.5442 li
ef
246.888 79.5601 mo
248.4 79.488 250.128 78.9121 251.064 80.8562 cv
251.928 82.728 251.64 83.304 252.432 84.1682 cv
253.224 85.032 254.232 86.1841 254.232 86.1841 cv
254.232 86.1841 254.016 86.9041 253.656 86.76 cv
251.424 85.5361 248.904 83.6641 246.6 82.728 cv
241.128 80.4241 241.848 79.7041 246.888 79.5601 cv
ef
246.24 85.3201 mo
244.872 85.5361 244.008 85.7522 244.368 87.1201 cv
244.728 88.416 246.096 90.864 248.184 92.376 cv
250.272 93.8162 250.848 93.8879 251.784 94.032 cv
252.792 94.176 254.16 94.4641 253.8 93.6721 cv
253.08 91.728 252.576 89.7839 251.928 87.9121 cv
250.776 85.6082 249.048 84.8162 246.24 85.3201 cv
ef
245.88 78.624 mo
246.744 78.48 242.64 74.9521 237.312 76.5361 cv
235.368 77.1121 234.36 77.4001 234.216 78.1201 cv
234.144 78.8401 234.792 79.6321 234.792 79.6321 cv
235.296 79.488 li
235.296 79.488 234.36 79.488 234.792 78.7681 cv
235.728 77.2561 241.632 78.696 243.288 78.7681 cv
244.224 78.8401 244.944 78.8401 245.88 78.624 cv
ef
241.2 73.512 mo
240.912 73.584 234.216 72.2881 234.864 74.7361 cv
235.224 75.8162 236.088 76.6799 236.088 76.6799 cv
235.368 76.6799 li
235.368 76.6799 234.504 75.8879 234.288 75.312 cv
234.072 74.6641 233.496 73.656 234.648 73.0801 cv
237.528 71.5681 239.688 72.4321 242.784 73.0801 cv
241.2 73.512 li
ef
235.656 81.792 mo
235.008 82.4402 234.792 82.728 235.872 82.728 cv
238.32 82.728 241.632 83.6641 243.936 84.4561 cv
243.936 84.4561 247.392 85.6082 247.032 84.7441 cv
246.96 84.5281 246.024 83.6641 244.944 82.728 cv
242.496 80.7122 238.536 78.9121 235.656 81.792 cv
ef
231.336 83.448 mo
231.336 84.312 231.696 84.8879 231.696 84.8879 cv
231.264 85.104 li
231.264 85.104 230.616 83.9521 231.048 82.8721 cv
231.48 81.864 232.056 81.4321 233.424 81 cv
234.864 80.5681 237.096 80.4241 237.096 80.4241 cv
237.096 80.4241 236.736 80.4961 236.304 80.6401 cv
235.008 81.072 231.336 82.0801 231.336 83.448 cv
ef
239.76 84.8162 mo
239.256 84.8879 237.672 85.3921 236.232 85.104 cv
234.792 84.7441 234 84.24 232.848 84.8879 cv
231.624 85.6082 230.544 86.688 230.976 87.1921 cv
231.336 87.696 232.056 88.1282 232.056 88.1282 cv
231.696 88.2722 li
231.696 88.2722 230.328 87.624 230.4 86.688 cv
230.544 85.7522 230.976 84.6721 232.416 84.24 cv
233.784 83.8081 234.504 83.2322 236.088 83.448 cv
237.744 83.7361 240.84 84.384 240.84 84.384 cv
239.76 84.8162 li
ef
243.648 86.04 mo
243.648 86.04 240.984 85.896 239.832 86.4719 cv
238.68 87.0481 235.728 87.1921 236.664 88.2722 cv
237.672 89.28 238.896 90 241.704 90.6482 cv
244.512 91.2961 246.456 91.656 246.456 91.656 cv
246.456 91.656 245.448 90.144 245.016 89.4961 cv
244.656 88.9202 244.368 88.416 244.08 87.552 cv
243.72 86.688 243.648 86.04 243.648 86.04 cv
ef
250.416 94.248 mo
250.416 94.248 249.192 93.8162 248.472 93.312 cv
247.68 92.8081 247.68 92.2322 246.456 92.2322 cv
245.232 92.1602 244.368 92.304 244.296 93.8162 cv
244.296 95.3281 245.16 97.2 246.384 98.6401 cv
247.608 100.008 248.832 102.528 249.84 101.448 cv
250.92 100.296 251.064 98.4241 250.92 97.2 cv
250.776 95.9761 250.416 94.248 250.416 94.248 cv
ef
251.568 95.1121 mo
251.568 95.616 251.928 96.7681 252.072 98.136 cv
252.144 99.5042 253.728 101.16 253.8 102.744 cv
253.944 104.4 254.736 105.552 254.016 105.264 cv
253.296 104.976 252.144 103.464 252.144 103.464 cv
251.928 103.968 li
251.928 103.968 252.36 104.616 253.008 105.192 cv
253.728 105.768 254.232 106.848 254.88 105.408 cv
255.6 103.968 255.888 102.384 255.888 100.944 cv
255.888 99.4321 255.6 96.552 255.6 96.552 cv
254.448 94.5361 li
254.448 94.5361 253.656 94.3921 253.008 94.6082 cv
252.288 94.824 251.568 95.1121 251.568 95.1121 cv
ef
256.248 97.6321 mo
256.248 97.6321 256.392 99.864 256.464 101.232 cv
256.608 102.6 256.608 103.392 256.68 104.472 cv
256.68 105.48 257.112 106.416 256.536 106.704 cv
255.96 106.992 255.384 105.912 255.384 105.912 cv
254.952 106.2 li
254.952 106.2 255.096 106.704 255.528 106.92 cv
255.96 107.208 256.68 107.568 257.04 106.488 cv
257.328 105.408 257.688 103.68 257.76 103.032 cv
257.832 102.312 258.336 100.008 258.336 100.008 cv
257.328 98.7122 li
256.248 97.6321 li
ef
251.352 100.512 mo
251.352 100.512 251.352 100.728 251.352 101.088 cv
251.208 103.32 250.56 105.336 249.912 107.496 cv
249.696 108.216 249.48 109.008 248.688 108.864 cv
247.896 108.72 247.752 108.216 247.752 108.216 cv
247.392 108.576 li
247.392 108.576 247.608 109.368 248.688 109.368 cv
249.84 109.44 250.272 108.504 250.704 107.28 cv
251.136 106.128 251.712 103.608 251.712 103.608 cv
252 101.088 li
251.352 100.512 li
ef
242.928 92.0161 mo
242.928 92.0161 239.544 92.448 238.608 92.8081 cv
237.672 93.1682 237.24 92.9521 237.312 94.6082 cv
237.384 97.416 239.184 99.3601 242.496 99.072 cv
243.144 99 245.16 99.4321 244.728 98.208 cv
244.368 97.0562 243.936 95.688 243.72 94.968 cv
243.504 94.176 243.576 92.8801 243.576 92.8801 cv
242.928 92.0161 li
ef
236.088 88.7041 mo
235.872 88.6321 234 88.2722 232.632 89.28 cv
231.336 90.3601 230.544 91.8721 230.544 91.8721 cv
232.56 91.2241 234.648 90.792 236.736 91.1521 cv
239.76 91.728 241.848 92.448 238.968 90.5759 cv
237.96 89.928 236.952 89.4961 236.088 88.7041 cv
ef
245.664 98.8562 mo
246.456 99.72 li
247.32 100.656 245.808 104.4 244.872 105.12 cv
244.008 105.768 243.936 106.272 243.288 104.976 cv
242.64 103.752 241.992 101.952 241.92 101.16 cv
241.848 100.44 242.136 99.6482 242.136 99.6482 cv
243.216 99.6482 244.296 99.72 245.232 99.144 cv
245.232 99.144 245.808 98.928 245.664 98.8562 cv
ef
245.88 104.976 mo
245.88 104.976 243.792 107.784 243.144 108.288 cv
242.496 108.792 242.136 108.576 241.848 108.36 cv
241.56 108.216 241.416 108.072 241.416 108.072 cv
241.848 107.712 li
241.848 107.712 242.208 108.432 242.64 108 cv
243.072 107.568 244.296 106.272 244.296 106.272 cv
245.016 105.336 li
245.88 104.976 li
ef
241.272 102.312 mo
241.2 102.312 239.904 103.896 239.04 103.752 cv
238.248 103.608 236.376 102.744 236.52 101.52 cv
236.592 100.296 237.744 98.7839 237.744 98.7839 cv
237.744 98.7839 238.248 98.7122 239.256 99.2161 cv
240.192 99.6482 241.416 99.72 241.416 99.72 cv
241.416 99.72 241.344 102.312 241.272 102.312 cv
ef
241.416 103.752 mo
241.416 103.752 239.904 105.696 239.4 105.984 cv
238.896 106.272 238.536 105.624 238.464 105.192 cv
238.392 104.832 238.464 104.4 238.464 104.4 cv
238.464 104.4 239.256 104.112 239.832 103.824 cv
240.336 103.536 241.128 102.888 241.128 102.888 cv
241.416 103.752 li
ef
242.424 105.12 mo
242.424 105.12 241.704 106.344 241.344 106.704 cv
240.912 107.136 240.264 106.704 240.264 106.2 cv
240.192 105.696 240.192 105.696 240.192 105.696 cv
239.904 105.984 li
239.904 105.984 239.76 106.416 240.12 106.992 cv
240.48 107.568 241.128 108.144 241.632 107.568 cv
242.064 106.992 243.144 106.056 243.144 106.056 cv
242.424 105.12 li
ef
237.744 104.328 mo
237.744 104.328 236.952 106.488 236.448 105.984 cv
235.944 105.48 234.504 104.688 235.008 104.616 cv
235.512 104.544 236.736 104.616 237.096 104.184 cv
237.384 103.752 237.888 103.896 237.888 103.896 cv
237.744 104.328 li
ef
235.584 104.04 mo
234.792 104.04 233.928 103.968 234.144 102.816 cv
234.432 101.664 234.864 101.088 235.224 100.944 cv
235.584 100.8 236.52 99.792 236.376 100.152 cv
236.16 100.584 235.728 101.16 236.088 101.808 cv
236.52 102.456 236.664 102.888 236.664 102.888 cv
236.952 103.68 236.592 104.04 235.584 104.04 cv
ef
234.36 100.944 mo
233.496 101.376 232.416 102.168 232.56 101.16 cv
232.704 100.08 232.128 98.4961 233.28 99.072 cv
234.504 99.5759 235.512 99.144 235.512 99.144 cv
237.096 99.6482 235.656 100.296 234.36 100.944 cv
ef
235.296 98.6401 mo
234.432 98.6401 232.128 98.7839 233.064 97.5601 cv
234 96.2639 234.576 95.3281 234.936 95.2561 cv
235.296 95.1841 236.592 94.6082 236.592 94.6082 cv
236.592 94.6082 236.448 95.832 236.88 96.624 cv
237.384 97.416 237.816 97.7041 237.672 97.9919 cv
237.312 98.8562 236.376 98.7122 235.296 98.6401 cv
ef
232.272 97.7041 mo
231.624 98.136 229.68 97.7761 230.256 96.7681 cv
230.76 95.76 231.048 95.1121 231.984 95.4719 cv
233.064 95.832 234.288 96.552 232.272 97.7041 cv
ef
236.016 93.6001 mo
236.016 93.6001 233.928 94.3201 232.992 94.5361 cv
232.128 94.7522 230.616 95.5442 231.048 94.6799 cv
231.408 93.8879 232.128 92.9521 233.568 92.9521 cv
235.08 92.8801 236.016 93.6001 236.016 93.6001 cv
ef
270.936 61.416 mo
269.208 61.9919 277.92 61.7041 281.016 65.1602 cv
282.384 66.6721 283.032 68.4001 280.152 68.5442 cv
279.144 68.5442 277.704 68.616 277.704 68.616 cv
278.208 69.0481 li
278.208 69.0481 278.496 69.0481 278.856 69.0481 cv
280.584 69.1921 283.824 68.76 283.752 66.384 cv
283.752 64.8721 282.384 62.8562 280.44 61.8481 cv
278.496 60.8401 275.112 59.688 275.112 59.688 cv
273.816 61.1282 272.592 60.9121 270.936 61.416 cv
ef
210.6 53.8562 mo
184.32 44.208 156.672 41.4001 131.76 56.448 cv
121.752 62.4961 112.824 70.7761 102.816 76.896 cv
80.9998 90.2881 58.6079 86.3281 47.5198 76.248 cv
34.4878 64.2961 41.1838 45.4321 53.7119 36.864 cv
66.8879 27.864 88.2 32.9761 89.28 50.4001 cv
89.5681 55.8 87.4797 61.7761 82.5837 62.7122 cv
75.5999 64.0801 70.7039 59.3281 72.5037 54.936 cv
73.0081 53.7122 74.0881 52.416 75.7439 51.1921 cv
75.7439 51.1921 73.8 51.552 72.72 53.0642 cv
67.1038 60.3362 76.3201 66.1682 82.8718 64.4402 cv
89.4241 62.7122 92.0159 56.304 91.656 50.4001 cv
90.4319 31.824 66.24 24.48 51.6958 33.552 cv
36.9358 42.696 29.0879 64.728 45 79.5601 cv
57.8879 91.512 82.8 96.408 106.56 80.0642 cv
132.696 62.0642 152.496 44.208 186.984 51.2639 cv
190.368 51.9121 193.68 52.8481 196.992 53.8562 cv
210.6 53.8562 li
0 0 0 1 cmyk
ef
194.04 52.9202 mo
3.7439 52.9202 li
0 53.7839 li
3.81592 54.5042 li
194.04 54.5042 li
194.04 52.9202 li
ef
9.50391 51.624 mo
8.35181 51.624 7.34399 52.5601 7.34399 53.7122 cv
7.34399 54.864 8.35181 55.8 9.50391 55.8 cv
10.656 55.8 11.5918 54.864 11.5918 53.7122 cv
11.5918 52.5601 10.656 51.624 9.50391 51.624 cv
ef
18.0718 51.0481 mo
16.6318 51.0481 15.408 52.2722 15.408 53.7122 cv
15.408 55.1521 16.6318 56.3762 18.0718 56.3762 cv
19.512 56.3762 20.7358 55.1521 20.7358 53.7122 cv
20.7358 52.2722 19.512 51.0481 18.0718 51.0481 cv
ef
27.2158 50.04 mo
25.2 50.04 23.5439 51.696 23.5439 53.7122 cv
23.5439 55.728 25.2 57.384 27.2158 57.384 cv
29.2319 57.384 30.8879 55.728 30.8879 53.7122 cv
30.8879 51.696 29.2319 50.04 27.2158 50.04 cv
ef
225.936 158.76 mo
225.936 158.76 226.512 158.976 226.152 158.976 cv
225.288 158.904 224.352 158.616 223.488 158.832 cv
222.984 158.904 223.92 159.192 223.992 159.264 cv
229.824 161.424 234.648 164.016 238.032 169.56 cv
241.632 175.824 241.632 183.888 237.096 189.216 cv
233.352 193.608 227.808 196.2 221.976 194.184 cv
215.208 191.808 211.68 184.176 214.704 177.552 cv
217.512 171.72 224.64 169.2 230.256 172.584 cv
235.008 175.608 236.592 181.944 233.064 186.552 cv
230.04 190.368 224.424 191.088 220.824 187.488 cv
218.16 184.536 218.16 179.928 221.472 177.48 cv
224.136 175.608 228.096 176.256 229.32 179.496 cv
230.112 181.728 228.888 184.536 226.296 184.464 cv
225.576 184.464 224.856 184.104 224.424 183.528 cv
223.56 182.232 224.784 180.288 225.936 181.656 cv
226.512 182.304 227.088 181.224 227.088 180.72 cv
227.088 179.424 225.792 178.632 224.64 178.56 cv
222.192 178.488 220.968 180.504 220.392 182.52 cv
220.248 183.096 220.248 182.16 220.248 182.088 cv
220.32 179.856 222.048 177.912 224.208 177.696 cv
225.792 177.552 227.016 178.128 228.024 179.28 cv
228.528 179.928 227.952 178.776 227.88 178.632 cv
226.152 176.4 222.84 176.832 221.04 178.632 cv
218.088 181.8 219.528 186.624 223.056 188.496 cv
227.664 190.872 232.992 187.92 234.216 183.096 cv
235.512 177.768 231.768 172.656 226.44 171.72 cv
219.6 170.64 213.624 176.688 214.56 183.528 cv
214.632 184.32 214.848 185.184 215.208 185.904 cv
215.712 186.912 215.568 185.328 215.64 184.968 cv
215.712 184.608 li
215.784 184.608 215.928 185.04 215.928 185.112 cv
217.44 190.152 221.544 193.608 227.088 193.608 cv
228.096 193.608 229.032 193.464 229.968 193.248 cv
237.528 191.016 241.416 183.168 239.544 175.104 cv
236.808 165.096 227.016 159.552 217.008 160.128 cv
204.624 161.064 195.408 170.064 191.736 181.512 cv
191.376 182.808 191.088 184.104 190.728 185.328 cv
190.224 187.128 190.44 183.888 190.44 183.672 cv
193.176 158.4 217.296 155.592 225.936 158.76 cv
ef
191.304 179.928 mo
191.52 178.92 191.952 177.84 192.528 176.832 cv
195.48 171.936 202.32 169.776 206.928 173.88 cv
209.52 176.4 210.312 180.864 207.288 183.384 cv
205.632 184.68 202.608 184.968 201.744 182.664 cv
201.384 181.656 201.96 180.36 203.112 181.08 cv
204.264 181.728 205.704 181.296 206.424 180.216 cv
207.216 178.92 206.928 177.264 206.136 175.968 cv
203.616 172.152 198.216 172.728 195.12 175.536 cv
193.464 177.048 192.528 178.632 192.168 180.36 cv
191.88 180.216 191.592 180.072 191.304 179.928 cv
ef
141.984 124.344 mo
142.632 125.64 143.784 127.656 144.72 128.592 cv
145.8 129.672 147.24 130.032 146.736 130.32 cv
145.728 130.896 144.936 130.968 144.936 130.968 cv
147.672 133.704 li
147.672 133.704 145.8 133.776 145.8 134.424 cv
145.872 135.072 147.672 137.88 147.672 137.88 cv
145.872 138.672 li
149.328 141.84 li
147.816 142.416 li
152.064 144.864 li
149.616 145.728 li
149.616 145.728 156.528 148.968 159.696 149.976 cv
162.864 150.984 171.648 148.752 174.384 150.048 cv
177.12 151.344 180.36 153.648 180.36 153.648 cv
180.36 153.648 177.768 155.664 175.752 155.016 cv
173.736 154.368 168.408 151.488 162.576 153.144 cv
156.816 154.728 147.744 160.056 147.744 160.056 cv
148.896 160.776 li
144.936 164.16 li
146.016 164.736 li
143.64 168.264 li
144.648 168.984 li
140.184 176.256 li
140.184 176.256 147.168 172.8 146.952 173.808 cv
146.808 174.744 146.808 175.032 146.808 175.032 cv
146.808 175.032 148.896 172.944 149.04 173.736 cv
149.256 174.6 149.112 175.176 149.112 175.176 cv
152.136 174.24 li
152.568 175.608 li
155.664 173.088 li
156.024 174.744 li
159.192 172.008 li
158.832 174.6 li
163.368 171.36 li
164.088 172.8 li
164.088 172.8 165.6 171.648 166.176 170.352 cv
166.824 169.128 166.896 168.984 166.896 168.984 cv
167.544 170.496 li
167.544 170.496 170.208 165.888 171.072 163.152 cv
171.864 160.488 173.448 157.968 175.032 156.744 cv
176.544 155.592 180 154.728 180 154.728 cv
180 154.728 179.712 155.448 177.984 156.528 cv
176.256 157.536 171.216 161.856 170.568 166.176 cv
169.92 170.496 169.2 179.856 169.2 179.856 cv
170.136 179.496 li
170.568 182.52 li
171.36 182.304 li
171.36 182.304 171.288 186.12 171.504 186.696 cv
171.72 187.272 173.016 186.336 173.016 186.336 cv
173.016 186.336 173.88 187.632 174.384 189.216 cv
174.888 190.8 174.6 193.824 175.032 193.248 cv
175.032 193.032 175.104 192.816 175.176 192.6 cv
175.32 191.808 175.536 191.088 175.824 190.296 cv
176.04 189.36 176.184 188.424 176.256 187.56 cv
176.544 185.4 176.544 184.536 177.048 185.328 cv
177.624 186.048 177.696 186.552 177.84 186.84 cv
178.272 185.904 178.632 184.608 178.56 183.6 cv
178.488 182.952 179.424 183.744 179.784 184.104 cv
180.432 182.952 180.864 180.216 180.792 178.776 cv
180.648 176.832 180.216 174.312 180.576 174.96 cv
180.936 175.608 181.656 177.336 181.656 177.336 cv
181.656 177.336 182.016 174.816 182.376 172.44 cv
182.808 169.992 183.672 166.536 182.88 162.576 cv
182.16 158.544 180.648 156.384 180.936 155.448 cv
181.008 155.304 181.08 155.232 181.152 155.232 cv
182.16 154.872 182.88 155.736 183.6 156.384 cv
186.408 159.192 188.424 162.792 189.648 166.608 cv
192.024 174.24 191.376 182.232 188.64 189.648 cv
188.856 189.648 189.072 189.72 189.288 189.72 cv
190.512 186.336 191.376 182.88 191.808 179.424 cv
192.312 175.392 192.096 171.288 190.872 167.04 cv
189.576 162.792 187.344 158.76 184.248 155.664 cv
183.816 155.232 182.376 154.152 182.448 153.432 cv
182.448 153.36 182.52 153.216 182.664 153.144 cv
183.456 152.568 185.976 153.432 190.008 153.072 cv
194.04 152.712 197.136 150.912 199.368 149.904 cv
201.6 148.824 203.904 147.744 203.904 147.744 cv
203.904 147.744 202.032 147.6 201.312 147.456 cv
200.592 147.312 203.112 146.952 205.056 146.52 cv
206.424 146.232 208.944 145.08 209.88 144.144 cv
209.448 143.856 208.44 143.136 209.088 143.064 cv
210.024 142.92 211.248 142.2 211.968 141.48 cv
211.68 141.408 211.176 141.48 210.312 141.192 cv
209.448 140.904 210.24 140.688 212.184 139.824 cv
212.976 139.464 213.912 139.032 214.704 138.6 cv
215.352 138.168 216.072 137.664 216.72 137.304 cv
216.936 137.232 217.152 137.088 217.368 137.016 cv
217.8 136.368 214.92 137.52 213.264 137.52 cv
211.608 137.448 210.168 137.016 210.168 137.016 cv
210.168 137.016 210.744 135.504 210.096 135.432 cv
209.448 135.432 205.776 136.512 205.776 136.512 cv
205.776 135.72 li
202.752 136.152 li
202.896 135.144 li
202.896 135.144 194.04 138.384 190.08 140.184 cv
186.12 142.056 183.312 148.104 182.88 150.048 cv
182.376 151.992 181.656 152.424 181.656 152.424 cv
181.656 152.424 181.584 148.896 182.304 147.096 cv
182.952 145.296 184.968 143.064 187.344 141.552 cv
189.72 139.968 192.888 136.296 192.888 136.296 cv
191.088 136.152 li
191.088 136.152 191.88 135.792 192.888 134.856 cv
193.968 133.92 194.616 132.192 194.616 132.192 cv
193.104 131.832 li
194.976 126.648 li
192.528 127.656 li
194.256 123.84 li
192.6 124.056 li
194.184 120.312 li
192.744 120.312 li
192.816 117.072 li
192.816 117.072 192.24 117.432 191.448 117.504 cv
190.584 117.504 191.952 114.912 191.952 114.912 cv
191.952 114.912 191.736 114.984 190.872 115.488 cv
190.008 115.92 191.376 108.216 191.376 108.216 cv
185.616 114.552 li
184.608 113.76 li
181.872 117.072 li
181.008 116.136 li
178.92 120.96 li
177.912 120.024 li
177.912 120.024 175.248 130.176 175.32 136.224 cv
175.392 142.2 179.64 146.52 180.792 148.32 cv
182.016 150.048 180.792 153.072 180.792 153.072 cv
180.792 153.072 177.624 150.624 175.68 148.392 cv
173.664 146.088 173.376 137.088 171.504 134.28 cv
169.704 131.544 164.664 125.784 164.664 125.784 cv
164.52 128.376 li
160.92 124.92 li
160.776 126.576 li
156.816 124.128 li
156.528 126.072 li
156.528 126.072 153.36 125.064 152.712 125.208 cv
152.064 125.352 152.568 127.224 152.568 127.224 cv
149.112 125.352 li
149.112 125.352 149.328 126.144 149.04 127.296 cv
148.896 127.8 148.176 126.576 146.808 125.784 cv
145.656 125.208 143.424 124.632 141.984 124.344 cv
ef
258.84 180.432 mo
264.744 178.56 267.048 171.72 266.112 165.744 cv
263.952 154.944 254.16 148.464 243.936 146.448 cv
238.752 145.512 233.784 145.8 229.104 146.88 cv
216.288 149.832 203.688 157.824 196.2 168.84 cv
196.272 169.344 196.344 169.776 196.488 170.352 cv
197.568 168.408 198.864 166.464 200.52 164.664 cv
211.608 152.352 228.168 144.648 244.584 147.888 cv
254.376 149.904 263.52 156.528 265.104 166.968 cv
265.536 171.864 263.808 176.976 259.776 179.496 cv
259.848 179.352 259.992 179.136 260.064 178.992 cv
260.856 177.192 260.064 175.176 258.336 174.456 cv
256.608 173.664 254.592 174.456 253.8 176.184 cv
253.08 177.984 253.872 180 255.6 180.72 cv
256.68 181.224 257.904 181.08 258.84 180.432 cv
ef
270.792 196.056 mo
270.504 197.352 272.088 198.576 273.24 198.936 cv
277.56 200.016 280.944 195.696 281.52 191.808 cv
281.88 188.712 280.944 185.76 279.072 183.312 cv
273.672 176.472 264.312 176.616 257.976 181.08 cv
257.616 181.08 257.328 181.008 256.968 180.936 cv
261.144 177.912 266.4 176.616 271.8 177.984 cv
272.808 178.272 273.816 178.704 274.752 179.208 cv
276.552 179.784 278.424 179.928 280.44 179.568 cv
285.552 178.488 289.44 174.096 288.936 168.696 cv
288.504 164.304 284.832 160.56 280.224 161.352 cv
277.344 161.856 274.608 164.664 275.688 167.688 cv
276.048 168.696 276.84 169.56 277.92 169.704 cv
278.856 169.776 279.72 169.128 279.864 168.192 cv
279.936 167.256 280.944 167.472 281.304 168.12 cv
282.24 169.56 280.8 171.144 279.36 171.504 cv
276.624 172.152 274.464 169.776 274.248 167.256 cv
273.888 162.864 277.992 159.984 282.024 160.488 cv
286.344 161.064 289.152 164.664 289.44 168.912 cv
289.584 174.744 285.192 179.208 279.576 179.856 cv
278.064 180 276.624 179.856 275.328 179.496 cv
279.576 182.088 282.528 186.552 281.952 191.736 cv
281.376 196.056 277.632 200.664 272.88 199.296 cv
271.512 198.864 270.072 197.712 270.216 196.056 cv
270.288 195.264 271.152 194.04 272.016 194.04 cv
272.808 193.968 273.456 194.616 273.528 195.408 cv
273.528 196.128 272.952 196.848 272.16 196.848 cv
271.584 196.848 271.008 196.56 270.792 196.056 cv
ef
262.8 180.216 mo
261.072 179.496 258.984 180.288 258.192 182.016 cv
257.472 183.816 258.264 185.832 259.992 186.624 cv
261.792 187.344 263.808 186.552 264.6 184.824 cv
265.32 183.024 264.528 181.008 262.8 180.216 cv
ef
267.336 185.976 mo
265.536 185.184 263.52 185.976 262.728 187.776 cv
261.936 189.504 262.8 191.52 264.528 192.312 cv
266.256 193.104 268.344 192.312 269.064 190.512 cv
269.856 188.784 269.064 186.696 267.336 185.976 cv
ef
253.872 168.624 mo
252.072 167.832 250.056 168.624 249.264 170.352 cv
248.544 172.152 249.336 174.168 251.064 174.96 cv
252.864 175.752 254.88 174.888 255.672 173.16 cv
256.392 171.432 255.6 169.344 253.872 168.624 cv
ef
259.776 187.056 mo
258.048 186.336 256.032 187.128 255.24 188.856 cv
254.448 190.584 255.312 192.672 257.04 193.464 cv
258.768 194.184 260.856 193.392 261.576 191.664 cv
262.368 189.864 261.576 187.848 259.776 187.056 cv
ef
255.528 181.152 mo
253.8 180.36 251.712 181.152 250.992 182.952 cv
250.2 184.68 250.992 186.768 252.792 187.488 cv
254.52 188.28 256.536 187.488 257.328 185.688 cv
258.12 183.96 257.328 181.944 255.528 181.152 cv
ef
250.92 175.464 mo
249.192 174.672 247.104 175.464 246.384 177.264 cv
245.592 178.992 246.384 181.08 248.184 181.8 cv
249.912 182.592 251.928 181.8 252.72 180 cv
253.512 178.272 252.72 176.256 250.92 175.464 cv
ef
252.432 187.992 mo
250.632 187.2 248.616 187.992 247.824 189.792 cv
247.032 191.52 247.896 193.608 249.624 194.328 cv
251.352 195.12 253.44 194.328 254.16 192.528 cv
254.952 190.8 254.16 188.784 252.432 187.992 cv
ef
247.896 182.088 mo
246.096 181.368 244.08 182.16 243.288 183.888 cv
242.568 185.616 243.36 187.704 245.088 188.424 cv
246.888 189.216 248.904 188.424 249.696 186.696 cv
250.416 184.896 249.624 182.88 247.896 182.088 cv
ef
245.088 189.288 mo
243.288 188.496 241.272 189.288 240.48 191.016 cv
239.76 192.816 240.552 194.832 242.28 195.624 cv
244.08 196.344 246.096 195.552 246.888 193.824 cv
247.608 192.096 246.816 190.008 245.088 189.288 cv
ef
.431885 170.496 mo
1.58398 170.424 3.31201 170.424 4.31982 170.712 cv
5.47192 171 6.26392 171.792 6.26392 171.36 cv
6.26392 170.496 5.97583 169.92 5.97583 169.92 cv
8.85596 170.64 li
8.85596 170.64 8.13599 169.416 8.63989 169.2 cv
9.07178 168.984 11.5918 169.128 11.5918 169.128 cv
11.448 167.616 li
14.8318 168.696 li
14.688 167.472 li
17.928 169.344 li
17.5679 167.4 li
17.5679 167.4 22.3198 170.712 24.1919 172.44 cv
26.064 174.168 28.0078 180.864 29.8799 182.16 cv
31.752 183.456 34.5598 184.68 34.5598 184.68 cv
34.5598 184.68 34.9199 182.232 33.6958 181.152 cv
32.4719 180.072 28.584 177.624 27.4319 173.16 cv
26.2798 168.696 26.3518 160.704 26.3518 160.704 cv
27.2158 161.208 li
27.9358 157.248 li
28.7278 157.752 li
30.168 154.8 li
31.032 155.232 li
34.1279 149.472 li
34.1279 149.472 34.5598 155.376 35.136 154.944 cv
35.7119 154.44 35.856 154.296 35.856 154.296 cv
35.856 154.296 35.2798 156.528 35.856 156.312 cv
36.5039 156.168 36.864 155.736 36.864 155.736 cv
37.3679 158.184 li
38.448 157.896 li
37.9438 160.992 li
39.168 160.56 li
38.5918 163.656 li
40.1758 162.432 li
39.7439 166.68 li
40.9678 166.68 li
40.9678 166.68 40.824 168.048 40.1758 168.912 cv
39.5999 169.848 39.0959 170.208 39.0959 170.208 cv
40.4639 169.992 li
40.4639 169.992 38.7358 173.304 37.2959 174.888 cv
35.856 176.472 34.7759 178.488 34.5598 180 cv
34.344 181.44 35.064 184.032 35.064 184.032 cv
35.064 184.032 35.4958 183.6 35.4958 182.088 cv
35.5679 180.504 36.5039 175.536 39.0959 173.448 cv
41.688 171.36 47.6638 167.328 47.6638 167.328 cv
47.7358 168.12 li
49.896 167.184 li
50.0398 167.832 li
50.0398 167.832 52.5598 166.32 53.064 166.248 cv
53.4958 166.176 53.3518 167.4 53.3518 167.4 cv
53.3518 167.4 54.5039 167.4 55.7998 167.184 cv
57.0239 166.896 58.896 165.528 58.6799 166.032 cv
58.6079 166.176 58.4639 166.248 58.3198 166.392 cv
57.8879 166.752 57.4558 167.256 57.0239 167.76 cv
56.5198 168.192 55.9438 168.624 55.4399 169.056 cv
54.1438 170.064 53.5679 170.424 54.2158 170.424 cv
54.9358 170.496 55.2959 170.352 55.512 170.352 cv
55.0798 171 54.3599 171.72 53.7119 172.08 cv
53.208 172.224 54.0718 172.584 54.5039 172.728 cv
54 173.592 52.344 174.888 51.3359 175.392 cv
49.9678 176.04 48.168 176.76 48.7439 176.76 cv
49.2478 176.76 50.688 176.544 50.688 176.544 cv
50.688 176.544 49.1758 177.696 47.7358 178.92 cv
46.2959 180.072 44.3518 181.944 41.3999 183.024 cv
38.448 184.032 36.4319 183.816 35.928 184.392 cv
35.856 184.464 35.856 184.536 35.856 184.608 cv
36.0718 185.4 36.864 185.616 37.584 185.76 cv
40.5359 186.552 43.7039 186.552 46.656 185.904 cv
52.6318 184.536 57.6719 181.08 61.4878 176.472 cv
61.6318 176.544 61.7039 176.688 61.8479 176.832 cv
60.0479 178.92 58.104 180.864 56.0159 182.448 cv
53.4958 184.32 50.688 185.76 47.448 186.552 cv
44.136 187.344 40.6079 187.416 37.3679 186.48 cv
36.9358 186.408 35.6399 185.832 35.208 186.192 cv
35.136 186.264 35.064 186.336 35.064 186.408 cv
34.9919 187.128 36.5759 188.496 37.8718 191.304 cv
39.168 194.112 39.168 196.848 39.3118 198.72 cv
39.4558 200.592 39.6719 202.536 39.6719 202.536 cv
39.6719 202.536 38.8079 201.312 38.448 200.952 cv
38.0159 200.52 38.8079 202.32 39.24 203.76 cv
39.5999 204.84 39.8159 206.928 39.5278 207.864 cv
39.168 207.72 38.304 207.288 38.5198 207.72 cv
38.7358 208.512 38.7358 209.52 38.5918 210.24 cv
38.376 210.096 38.2319 209.736 37.7278 209.304 cv
37.2239 208.8 37.3679 209.448 37.512 211.104 cv
37.584 211.752 37.656 212.472 37.7278 213.192 cv
37.656 213.84 37.584 214.416 37.656 215.064 cv
37.656 215.208 37.656 215.424 37.656 215.568 cv
37.4399 216.072 37.0798 213.768 36.4319 212.688 cv
35.7839 211.536 34.9199 210.816 34.9199 210.816 cv
34.9199 210.816 34.1279 211.752 33.8398 211.32 cv
33.552 210.96 32.9038 208.08 32.9038 208.08 cv
32.3279 208.368 li
31.5359 206.208 li
30.8879 206.712 li
30.8879 206.712 29.6638 199.584 29.376 196.272 cv
29.0879 192.96 32.0398 188.784 33.1199 187.704 cv
34.2 186.696 34.272 186.048 34.272 186.048 cv
34.272 186.048 31.896 187.344 30.96 188.496 cv
30.0239 189.648 29.304 191.808 29.1599 193.968 cv
29.0159 196.128 27.864 199.656 27.864 199.656 cv
27.0718 198.504 li
27.0718 198.504 27.1438 199.152 26.928 200.232 cv
26.6399 201.24 25.7759 202.392 25.7759 202.392 cv
24.9839 201.456 li
22.2478 204.696 li
21.96 202.68 li
20.1599 205.272 li
19.584 204.12 li
17.7839 206.568 li
17.208 205.632 li
15.1199 206.928 li
15.1199 206.928 15.1199 206.424 14.8318 205.848 cv
14.5439 205.272 13.3198 207.216 13.3198 207.216 cv
13.3198 207.216 13.3198 207 13.2478 206.28 cv
13.2478 205.488 8.63989 209.376 8.63989 209.376 cv
10.656 203.112 li
9.79199 202.752 li
10.8718 199.728 li
9.93579 199.512 li
12.312 196.272 li
11.376 195.984 li
11.376 195.984 17.064 190.296 21.0959 188.064 cv
25.0559 185.76 29.5198 186.912 31.1758 187.056 cv
32.8318 187.128 34.344 185.184 34.344 185.184 cv
34.344 185.184 31.4639 184.032 29.2319 183.6 cv
27 183.168 20.8799 186.408 18.3599 186.264 cv
15.8398 186.12 10.0798 184.968 10.0798 184.968 cv
11.7358 183.888 li
8.13599 182.808 li
9.1438 182.088 li
6.04785 180.432 li
7.19995 179.496 li
7.19995 179.496 5.32788 177.768 5.18384 177.264 cv
5.03979 176.76 6.40796 176.4 6.40796 176.4 cv
3.88794 174.888 li
3.88794 174.888 4.46387 174.672 5.11182 174.024 cv
5.3999 173.736 4.31982 173.736 3.31201 173.16 cv
2.448 172.584 1.22388 171.36 .431885 170.496 cv
ef
193.392 174.168 mo
173.088 166.752 153.216 165.384 133.92 176.976 cv
126.216 181.656 119.304 188.064 111.528 192.816 cv
94.6799 203.184 77.3997 200.088 68.8318 192.312 cv
58.752 183.096 63.9358 168.552 73.5837 161.856 cv
83.7361 154.872 100.224 158.904 101.088 172.368 cv
101.304 176.544 99.72 181.152 95.9041 181.872 cv
90.5037 182.88 86.76 179.208 88.1277 175.824 cv
88.5598 174.888 89.3518 173.88 90.5759 172.944 cv
90.5759 172.944 89.136 173.232 88.2717 174.384 cv
83.9519 180 91.0798 184.536 96.1199 183.168 cv
101.232 181.872 103.248 176.904 102.888 172.368 cv
101.952 157.968 83.304 152.28 72.072 159.264 cv
60.6238 166.392 54.5039 183.384 66.8879 194.832 cv
76.824 204.12 96.0481 207.864 114.408 195.264 cv
134.64 181.296 149.976 167.544 176.616 173.016 cv
179.208 173.52 190.08 175.968 192.672 176.76 cv
193.392 174.168 li
ef
67.176 194.688 mo
62.928 190.296 57.5999 188.496 53.2798 188.928 cv
45.864 189.72 43.4158 197.784 45.5759 203.832 cv
47.7358 210.168 56.304 213.768 60.9839 208.152 cv
62.4238 206.352 63.2158 203.832 61.7759 202.32 cv
59.76 200.088 56.9519 200.448 56.448 202.392 cv
56.304 202.968 56.304 203.616 56.5918 204.48 cv
56.5918 204.48 56.0159 203.904 56.0159 203.112 cv
55.9438 199.224 60.552 199.584 62.3518 201.744 cv
64.1521 203.976 63.4319 206.856 61.7759 208.728 cv
56.7358 214.704 46.7278 211.176 43.9919 204.48 cv
41.3279 197.64 44.136 188.208 53.2798 187.2 cv
58.104 186.624 64.0081 188.424 68.616 193.104 cv
68.1121 193.608 67.6077 194.184 67.176 194.688 cv
ef
144.648 175.608 mo
136.728 179.136 131.616 185.4 130.176 191.376 cv
127.584 201.6 137.16 208.872 146.232 209.016 cv
155.808 209.16 164.808 199.584 159.552 190.512 cv
157.968 187.704 154.944 185.4 152.136 186.552 cv
148.176 188.208 147.312 192.168 149.688 193.752 cv
150.336 194.184 151.272 194.472 152.496 194.544 cv
152.568 194.544 151.488 194.976 150.408 194.616 cv
145.224 192.816 147.888 186.912 151.704 185.544 cv
155.592 184.248 159.048 186.624 160.776 189.72 cv
166.248 199.44 156.6 211.104 146.304 211.392 cv
135.936 211.68 124.704 203.256 127.8 190.512 cv
129.456 183.744 134.784 176.76 143.208 172.944 cv
143.712 173.808 144.144 174.744 144.648 175.608 cv
ef
353.016 158.76 mo
352.944 158.76 352.44 158.976 352.728 158.976 cv
353.664 158.904 354.6 158.616 355.464 158.832 cv
355.896 158.904 355.032 159.192 354.96 159.264 cv
349.128 161.424 344.304 164.016 340.92 169.56 cv
337.248 175.824 337.248 183.888 341.856 189.216 cv
345.528 193.608 351.072 196.2 356.904 194.184 cv
363.672 191.808 367.272 184.176 364.176 177.552 cv
361.368 171.72 354.312 169.2 348.624 172.584 cv
343.872 175.608 342.36 181.944 345.816 186.552 cv
348.912 190.368 354.528 191.088 358.056 187.488 cv
360.72 184.536 360.72 179.928 357.48 177.48 cv
354.744 175.608 350.856 176.256 349.56 179.496 cv
348.768 181.728 349.992 184.536 352.584 184.464 cv
353.376 184.464 354.024 184.104 354.528 183.528 cv
355.32 182.232 354.168 180.288 352.944 181.656 cv
352.368 182.304 351.864 181.224 351.792 180.72 cv
351.864 179.424 353.088 178.632 354.312 178.56 cv
356.688 178.488 357.912 180.504 358.488 182.52 cv
358.632 183.096 358.704 182.16 358.704 182.088 cv
358.632 179.856 356.904 177.912 354.672 177.696 cv
353.16 177.552 351.864 178.128 350.928 179.28 cv
350.352 179.928 350.928 178.776 351.072 178.632 cv
352.728 176.4 356.112 176.832 357.912 178.632 cv
360.864 181.8 359.424 186.624 355.824 188.496 cv
351.216 190.872 345.96 187.92 344.664 183.096 cv
343.368 177.768 347.112 172.656 352.44 171.72 cv
359.352 170.64 365.256 176.688 364.392 183.528 cv
364.248 184.32 364.104 185.184 363.672 185.904 cv
363.168 186.912 363.312 185.328 363.312 184.968 cv
363.168 184.608 li
363.096 184.608 363.024 185.04 363.024 185.112 cv
361.44 190.152 357.336 193.608 351.792 193.608 cv
350.784 193.608 349.848 193.464 348.912 193.248 cv
341.424 191.016 337.464 183.168 339.408 175.104 cv
342.072 165.096 351.864 159.552 361.872 160.128 cv
374.256 161.064 383.472 170.064 387.144 181.512 cv
387.504 182.808 387.864 184.104 388.224 185.328 cv
388.656 187.128 388.512 183.888 388.44 183.672 cv
385.776 158.4 361.584 155.592 353.016 158.76 cv
ef
387.648 179.928 mo
387.36 178.92 387 177.84 386.424 176.832 cv
383.4 171.936 376.632 169.776 372.024 173.88 cv
369.36 176.4 368.64 180.864 371.664 183.384 cv
373.248 184.68 376.344 184.968 377.208 182.664 cv
377.496 181.656 376.92 180.36 375.84 181.08 cv
374.688 181.728 373.176 181.296 372.528 180.216 cv
371.664 178.92 371.952 177.264 372.744 175.968 cv
375.264 172.152 380.736 172.728 383.832 175.536 cv
385.488 177.048 386.352 178.632 386.784 180.36 cv
387 180.216 387.36 180.072 387.648 179.928 cv
ef
436.968 124.344 mo
436.248 125.64 435.096 127.656 434.16 128.592 cv
433.08 129.672 431.712 130.032 432.144 130.32 cv
433.224 130.896 433.944 130.968 433.944 130.968 cv
431.28 133.704 li
431.28 133.704 433.152 133.776 433.08 134.424 cv
433.08 135.072 431.208 137.88 431.208 137.88 cv
433.008 138.672 li
429.552 141.84 li
431.136 142.416 li
426.816 144.864 li
429.264 145.728 li
429.264 145.728 422.352 148.968 419.184 149.976 cv
416.016 150.984 407.232 148.752 404.496 150.048 cv
401.832 151.344 398.592 153.648 398.592 153.648 cv
398.592 153.648 401.112 155.664 403.128 155.016 cv
405.216 154.368 410.472 151.488 416.304 153.144 cv
422.136 154.728 431.136 160.056 431.136 160.056 cv
429.984 160.776 li
434.016 164.16 li
432.864 164.736 li
435.312 168.264 li
434.232 168.984 li
438.768 176.256 li
438.768 176.256 431.784 172.8 431.928 173.808 cv
432.144 174.744 432.144 175.032 432.144 175.032 cv
432.144 175.032 430.056 172.944 429.84 173.736 cv
429.624 174.6 429.84 175.176 429.84 175.176 cv
426.744 174.24 li
426.312 175.608 li
423.216 173.088 li
422.928 174.744 li
419.76 172.008 li
420.048 174.6 li
415.584 171.36 li
414.792 172.8 li
414.792 172.8 413.352 171.648 412.704 170.352 cv
412.128 169.128 411.984 168.984 411.984 168.984 cv
411.336 170.496 li
411.336 170.496 408.744 165.888 407.88 163.152 cv
407.016 160.488 405.432 157.968 403.92 156.744 cv
402.336 155.592 398.952 154.728 398.952 154.728 cv
398.952 154.728 399.168 155.448 400.896 156.528 cv
402.624 157.536 407.736 161.856 408.384 166.176 cv
409.032 170.496 409.68 179.856 409.68 179.856 cv
408.744 179.496 li
408.384 182.52 li
407.52 182.304 li
407.52 182.304 407.592 186.12 407.376 186.696 cv
407.16 187.272 405.864 186.336 405.864 186.336 cv
405.864 186.336 405.072 187.632 404.568 189.216 cv
404.064 190.8 404.352 193.824 403.92 193.248 cv
403.848 193.032 403.848 192.816 403.776 192.6 cv
403.56 191.808 403.344 191.088 403.056 190.296 cv
402.912 189.36 402.768 188.424 402.624 187.56 cv
402.336 185.4 402.336 184.536 401.832 185.328 cv
401.328 186.048 401.184 186.552 401.04 186.84 cv
400.608 185.904 400.248 184.608 400.392 183.6 cv
400.464 182.952 399.528 183.744 399.096 184.104 cv
398.448 182.952 398.088 180.216 398.16 178.776 cv
398.232 176.832 398.664 174.312 398.304 174.96 cv
397.944 175.608 397.296 177.336 397.296 177.336 cv
397.296 177.336 396.936 174.816 396.504 172.44 cv
396.144 169.992 395.28 166.536 396 162.576 cv
396.792 158.544 398.304 156.384 398.016 155.448 cv
397.944 155.304 397.872 155.232 397.8 155.232 cv
396.792 154.872 396 155.736 395.352 156.384 cv
392.544 159.192 390.456 162.792 389.304 166.608 cv
386.928 174.24 387.576 182.232 390.24 189.648 cv
390.024 189.648 389.88 189.72 389.664 189.72 cv
388.368 186.336 387.504 182.88 387.072 179.424 cv
386.568 175.392 386.784 171.288 388.008 167.04 cv
389.304 162.792 391.536 158.76 394.704 155.664 cv
395.136 155.232 396.576 154.152 396.432 153.432 cv
396.432 153.36 396.36 153.216 396.288 153.144 cv
395.496 152.568 392.904 153.432 388.872 153.072 cv
384.84 152.712 381.744 150.912 379.512 149.904 cv
377.352 148.824 375.048 147.744 375.048 147.744 cv
375.048 147.744 376.92 147.6 377.64 147.456 cv
378.36 147.312 375.84 146.952 373.896 146.52 cv
372.456 146.232 369.936 145.08 369 144.144 cv
369.504 143.856 370.512 143.136 369.864 143.064 cv
368.856 142.92 367.704 142.2 366.984 141.48 cv
367.272 141.408 367.776 141.48 368.64 141.192 cv
369.504 140.904 368.712 140.688 366.696 139.824 cv
365.904 139.464 365.04 139.032 364.176 138.6 cv
363.528 138.168 362.88 137.664 362.16 137.304 cv
361.944 137.232 361.728 137.088 361.584 137.016 cv
361.152 136.368 364.032 137.52 365.616 137.52 cv
367.344 137.448 368.784 137.016 368.784 137.016 cv
368.784 137.016 368.208 135.504 368.784 135.432 cv
369.432 135.432 373.104 136.512 373.104 136.512 cv
373.176 135.72 li
376.128 136.152 li
376.056 135.144 li
376.056 135.144 384.84 138.384 388.8 140.184 cv
392.76 142.056 395.568 148.104 396.072 150.048 cv
396.576 151.992 397.224 152.424 397.224 152.424 cv
397.224 152.424 397.296 148.896 396.648 147.096 cv
395.928 145.296 393.912 143.064 391.608 141.552 cv
389.232 139.968 386.064 136.296 386.064 136.296 cv
387.792 136.152 li
387.792 136.152 387.072 135.792 385.992 134.856 cv
384.984 133.92 384.264 132.192 384.264 132.192 cv
385.848 131.832 li
383.976 126.648 li
386.352 127.656 li
384.624 123.84 li
386.352 124.056 li
384.696 120.312 li
386.208 120.312 li
386.064 117.072 li
386.064 117.072 386.64 117.432 387.504 117.504 cv
388.368 117.504 386.928 114.912 386.928 114.912 cv
386.928 114.912 387.144 114.984 388.08 115.488 cv
388.944 115.92 387.576 108.216 387.576 108.216 cv
393.336 114.552 li
394.272 113.76 li
397.008 117.072 li
397.872 116.136 li
400.032 120.96 li
400.968 120.024 li
400.968 120.024 403.632 130.176 403.56 136.224 cv
403.488 142.2 399.312 146.52 398.088 148.32 cv
396.936 150.048 398.16 153.072 398.16 153.072 cv
398.16 153.072 401.256 150.624 403.272 148.392 cv
405.288 146.088 405.576 137.088 407.376 134.28 cv
409.248 131.544 414.288 125.784 414.288 125.784 cv
414.432 128.376 li
417.96 124.92 li
418.104 126.576 li
422.064 124.128 li
422.352 126.072 li
422.352 126.072 425.52 125.064 426.168 125.208 cv
426.816 125.352 426.384 127.224 426.384 127.224 cv
429.768 125.352 li
429.768 125.352 429.624 126.144 429.912 127.296 cv
430.056 127.8 430.704 126.576 432.144 125.784 cv
433.296 125.208 435.528 124.632 436.968 124.344 cv
ef
320.04 180.432 mo
314.136 178.56 311.832 171.72 312.768 165.744 cv
315 154.944 324.72 148.464 334.944 146.448 cv
340.128 145.512 345.096 145.8 349.848 146.88 cv
362.592 149.832 375.192 157.824 382.752 168.84 cv
382.608 169.344 382.536 169.776 382.464 170.352 cv
381.312 168.408 380.016 166.464 378.36 164.664 cv
367.344 152.352 350.712 144.648 334.296 147.888 cv
324.576 149.904 315.36 156.528 313.848 166.968 cv
313.344 171.864 315.144 176.976 319.176 179.496 cv
319.032 179.352 318.96 179.136 318.816 178.992 cv
318.096 177.192 318.888 175.176 320.616 174.456 cv
322.344 173.664 324.36 174.456 325.08 176.184 cv
325.872 177.984 325.08 180 323.352 180.72 cv
322.2 181.224 320.976 181.08 320.04 180.432 cv
ef
308.088 196.056 mo
308.448 197.352 306.864 198.576 305.712 198.936 cv
301.32 200.016 297.936 195.696 297.36 191.808 cv
297 188.712 298.008 185.76 299.88 183.312 cv
305.28 176.472 314.64 176.616 320.976 181.08 cv
321.336 181.08 321.624 181.008 321.912 180.936 cv
317.808 177.912 312.552 176.616 307.152 177.984 cv
306.072 178.272 305.064 178.704 304.128 179.208 cv
302.4 179.784 300.456 179.928 298.512 179.568 cv
293.328 178.488 289.44 174.096 289.872 168.696 cv
290.376 164.304 294.12 160.56 298.728 161.352 cv
301.608 161.856 304.272 164.664 303.192 167.688 cv
302.832 168.696 302.04 169.56 300.96 169.704 cv
300.024 169.776 299.16 169.128 299.088 168.192 cv
298.944 167.256 298.008 167.472 297.576 168.12 cv
296.64 169.56 298.152 171.144 299.52 171.504 cv
302.256 172.152 304.416 169.776 304.704 167.256 cv
305.064 162.864 300.888 159.984 296.856 160.488 cv
292.608 161.064 289.728 164.664 289.44 168.912 cv
289.224 174.744 293.688 179.208 299.376 179.856 cv
300.816 180 302.256 179.856 303.624 179.496 cv
299.304 182.088 296.352 186.552 296.928 191.736 cv
297.504 196.056 301.248 200.664 306 199.296 cv
307.368 198.864 308.88 197.712 308.664 196.056 cv
308.592 195.264 307.8 194.04 306.936 194.04 cv
306.144 193.968 305.424 194.616 305.424 195.408 cv
305.352 196.128 306 196.848 306.792 196.848 cv
307.368 196.848 307.872 196.56 308.088 196.056 cv
ef
316.152 180.216 mo
317.88 179.496 319.896 180.288 320.688 182.016 cv
321.48 183.816 320.688 185.832 318.888 186.624 cv
317.16 187.344 315.072 186.552 314.352 184.824 cv
313.56 183.024 314.352 181.008 316.152 180.216 cv
ef
311.616 185.976 mo
313.344 185.184 315.432 185.976 316.152 187.776 cv
316.944 189.504 316.152 191.52 314.352 192.312 cv
312.624 193.104 310.608 192.312 309.816 190.512 cv
309.024 188.784 309.888 186.696 311.616 185.976 cv
ef
325.08 168.624 mo
326.808 167.832 328.824 168.624 329.616 170.352 cv
330.408 172.152 329.616 174.168 327.816 174.96 cv
326.088 175.752 324.072 174.888 323.28 173.16 cv
322.488 171.432 323.28 169.344 325.08 168.624 cv
ef
319.104 187.056 mo
320.832 186.336 322.92 187.128 323.64 188.856 cv
324.432 190.584 323.64 192.672 321.912 193.464 cv
320.112 194.184 318.096 193.392 317.304 191.664 cv
316.584 189.864 317.376 187.848 319.104 187.056 cv
ef
323.352 181.152 mo
325.152 180.36 327.168 181.152 327.96 182.952 cv
328.68 184.68 327.888 186.768 326.16 187.488 cv
324.36 188.28 322.344 187.488 321.552 185.688 cv
320.832 183.96 321.624 181.944 323.352 181.152 cv
ef
327.96 175.464 mo
329.76 174.672 331.776 175.464 332.568 177.264 cv
333.288 178.992 332.496 181.08 330.768 181.8 cv
328.968 182.592 326.952 181.8 326.16 180 cv
325.44 178.272 326.232 176.256 327.96 175.464 cv
ef
326.52 187.992 mo
328.248 187.2 330.336 187.992 331.056 189.792 cv
331.848 191.52 331.056 193.608 329.328 194.328 cv
327.528 195.12 325.512 194.328 324.72 192.528 cv
323.928 190.8 324.792 188.784 326.52 187.992 cv
ef
331.056 182.088 mo
332.784 181.368 334.872 182.16 335.592 183.888 cv
336.384 185.616 335.592 187.704 333.792 188.424 cv
332.064 189.216 330.048 188.424 329.256 186.696 cv
328.464 184.896 329.256 182.88 331.056 182.088 cv
ef
333.864 189.288 mo
335.592 188.496 337.608 189.288 338.4 191.016 cv
339.192 192.816 338.4 194.832 336.6 195.624 cv
334.872 196.344 332.784 195.552 332.064 193.824 cv
331.272 192.096 332.064 190.008 333.864 189.288 cv
ef
578.448 170.496 mo
577.368 170.424 575.568 170.424 574.56 170.712 cv
573.408 171 572.688 171.792 572.688 171.36 cv
572.688 170.496 572.904 169.92 572.904 169.92 cv
570.096 170.64 li
570.096 170.64 570.744 169.416 570.312 169.2 cv
569.88 168.984 567.288 169.128 567.288 169.128 cv
567.432 167.616 li
564.048 168.696 li
564.264 167.472 li
560.952 169.344 li
561.384 167.4 li
561.384 167.4 556.56 170.712 554.688 172.44 cv
552.816 174.168 550.944 180.864 549.072 182.16 cv
547.128 183.456 544.392 184.68 544.392 184.68 cv
544.392 184.68 544.032 182.232 545.256 181.152 cv
546.48 180.072 550.368 177.624 551.52 173.16 cv
552.672 168.696 552.6 160.704 552.6 160.704 cv
551.664 161.208 li
550.944 157.248 li
550.152 157.752 li
548.784 154.8 li
547.848 155.232 li
544.752 149.472 li
544.752 149.472 544.392 155.376 543.816 154.944 cv
543.24 154.44 543.096 154.296 543.096 154.296 cv
543.096 154.296 543.672 156.528 543.024 156.312 cv
542.376 156.168 542.088 155.736 542.088 155.736 cv
541.512 158.184 li
540.432 157.896 li
540.936 160.992 li
539.712 160.56 li
540.288 163.656 li
538.704 162.432 li
539.136 166.68 li
537.912 166.68 li
537.912 166.68 538.128 168.048 538.704 168.912 cv
539.352 169.848 539.856 170.208 539.856 170.208 cv
538.488 169.992 li
538.488 169.992 540.144 173.304 541.656 174.888 cv
543.096 176.472 544.176 178.488 544.32 180 cv
544.536 181.44 543.816 184.032 543.816 184.032 cv
543.816 184.032 543.384 183.6 543.384 182.088 cv
543.384 180.504 542.448 175.536 539.856 173.448 cv
537.264 171.36 531.288 167.328 531.288 167.328 cv
531.144 168.12 li
529.056 167.184 li
528.84 167.832 li
528.84 167.832 526.32 166.32 525.888 166.248 cv
525.384 166.176 525.528 167.4 525.528 167.4 cv
525.528 167.4 524.376 167.4 523.152 167.184 cv
521.928 166.896 519.984 165.528 520.2 166.032 cv
520.344 166.176 520.488 166.248 520.56 166.392 cv
520.992 166.752 521.424 167.256 521.856 167.76 cv
522.36 168.192 523.008 168.624 523.512 169.056 cv
524.808 170.064 525.384 170.424 524.664 170.424 cv
523.944 170.496 523.584 170.352 523.368 170.352 cv
523.8 171 524.52 171.72 525.24 172.08 cv
525.672 172.224 524.808 172.584 524.376 172.728 cv
524.952 173.592 526.608 174.888 527.544 175.392 cv
528.912 176.04 530.784 176.76 530.208 176.76 cv
529.632 176.76 528.192 176.544 528.192 176.544 cv
528.192 176.544 529.704 177.696 531.144 178.92 cv
532.584 180.072 534.6 181.944 537.552 183.024 cv
540.432 184.032 542.52 183.816 542.952 184.392 cv
543.024 184.464 543.096 184.536 543.024 184.608 cv
542.88 185.4 542.016 185.616 541.296 185.76 cv
538.416 186.552 535.248 186.552 532.224 185.904 cv
526.32 184.536 521.208 181.08 517.392 176.472 cv
517.32 176.544 517.176 176.688 517.104 176.832 cv
518.832 178.92 520.848 180.864 522.936 182.448 cv
525.384 184.32 528.192 185.76 531.504 186.552 cv
534.816 187.344 538.344 187.416 541.512 186.48 cv
542.016 186.408 543.312 185.832 543.744 186.192 cv
543.816 186.264 543.816 186.336 543.816 186.408 cv
543.888 187.128 542.376 188.496 541.08 191.304 cv
539.784 194.112 539.784 196.848 539.64 198.72 cv
539.496 200.592 539.28 202.536 539.28 202.536 cv
539.28 202.536 540.072 201.312 540.504 200.952 cv
540.864 200.52 540.072 202.32 539.64 203.76 cv
539.352 204.84 539.136 206.928 539.352 207.864 cv
539.784 207.72 540.576 207.288 540.432 207.72 cv
540.144 208.512 540.216 209.52 540.36 210.24 cv
540.504 210.096 540.648 209.736 541.224 209.304 cv
541.728 208.8 541.584 209.448 541.368 211.104 cv
541.296 211.752 541.224 212.472 541.224 213.192 cv
541.296 213.84 541.296 214.416 541.296 215.064 cv
541.296 215.208 541.296 215.424 541.296 215.568 cv
541.512 216.072 541.8 213.768 542.52 212.688 cv
543.168 211.536 544.032 210.816 544.032 210.816 cv
544.032 210.816 544.752 211.752 545.04 211.32 cv
545.328 210.96 545.976 208.08 545.976 208.08 cv
546.552 208.368 li
547.416 206.208 li
548.064 206.712 li
548.064 206.712 549.216 199.584 549.576 196.272 cv
549.864 192.96 546.912 188.784 545.832 187.704 cv
544.752 186.696 544.68 186.048 544.68 186.048 cv
544.68 186.048 547.056 187.344 547.992 188.496 cv
548.928 189.648 549.576 191.808 549.72 193.968 cv
549.864 196.128 551.088 199.656 551.088 199.656 cv
551.88 198.504 li
551.88 198.504 551.808 199.152 552.024 200.232 cv
552.24 201.24 553.104 202.392 553.104 202.392 cv
553.968 201.456 li
556.704 204.696 li
556.92 202.68 li
558.792 205.272 li
559.296 204.12 li
561.168 206.568 li
561.744 205.632 li
563.832 206.928 li
563.832 206.928 563.76 206.424 564.12 205.848 cv
564.408 205.272 565.56 207.216 565.56 207.216 cv
565.56 207.216 565.632 207 565.632 206.28 cv
565.704 205.488 570.24 209.376 570.24 209.376 cv
568.224 203.112 li
569.16 202.752 li
568.008 199.728 li
568.944 199.512 li
566.568 196.272 li
567.576 195.984 li
567.576 195.984 561.888 190.296 557.856 188.064 cv
553.824 185.76 549.36 186.912 547.704 187.056 cv
546.12 187.128 544.608 185.184 544.608 185.184 cv
544.608 185.184 547.416 184.032 549.648 183.6 cv
551.952 183.168 558.072 186.408 560.592 186.264 cv
563.112 186.12 568.8 184.968 568.8 184.968 cv
567.144 183.888 li
570.816 182.808 li
569.736 182.088 li
572.904 180.432 li
571.752 179.496 li
571.752 179.496 573.624 177.768 573.768 177.264 cv
573.912 176.76 572.544 176.4 572.544 176.4 cv
575.064 174.888 li
575.064 174.888 574.488 174.672 573.84 174.024 cv
573.48 173.736 574.632 173.736 575.64 173.16 cv
576.504 172.584 577.728 171.36 578.448 170.496 cv
ef
385.488 174.168 mo
405.792 166.752 425.736 165.384 445.032 176.976 cv
452.736 181.656 459.648 188.064 467.352 192.816 cv
484.2 203.184 501.552 200.088 510.12 192.312 cv
520.128 183.096 515.016 168.552 505.296 161.856 cv
495.144 154.872 478.656 158.904 477.864 172.368 cv
477.576 176.544 479.232 181.152 482.976 181.872 cv
488.448 182.88 492.192 179.208 490.752 175.824 cv
490.392 174.888 489.6 173.88 488.304 172.944 cv
488.304 172.944 489.744 173.232 490.68 174.384 cv
494.928 180 487.872 184.536 482.76 183.168 cv
477.72 181.872 475.704 176.904 475.992 172.368 cv
476.928 157.968 495.648 152.28 506.88 159.264 cv
518.256 166.392 524.376 183.384 512.064 194.832 cv
502.128 204.12 482.832 207.864 464.472 195.264 cv
444.24 181.296 428.976 167.544 402.336 173.016 cv
399.672 173.52 388.872 175.968 386.28 176.76 cv
385.488 174.168 li
ef
511.704 194.688 mo
516.024 190.296 521.352 188.496 525.6 188.928 cv
533.016 189.72 535.464 197.784 533.376 203.832 cv
531.144 210.168 522.648 213.768 517.896 208.152 cv
516.456 206.352 515.664 203.832 517.104 202.32 cv
519.192 200.088 522 200.448 522.504 202.392 cv
522.576 202.968 522.576 203.616 522.36 204.48 cv
522.36 204.48 522.864 203.904 522.864 203.112 cv
522.936 199.224 518.4 199.584 516.6 201.744 cv
514.8 203.976 515.52 206.856 517.104 208.728 cv
522.216 214.704 532.224 211.176 534.888 204.48 cv
537.624 197.64 534.744 188.208 525.672 187.2 cv
520.776 186.624 514.872 188.424 510.264 193.104 cv
510.768 193.608 511.272 194.184 511.704 194.688 cv
ef
434.232 175.608 mo
442.224 179.136 447.264 185.4 448.776 191.376 cv
451.368 201.6 441.792 208.872 432.648 209.016 cv
423.144 209.16 414.144 199.584 419.328 190.512 cv
420.984 187.704 424.008 185.4 426.744 186.552 cv
430.704 188.208 431.568 192.168 429.192 193.752 cv
428.544 194.184 427.608 194.472 426.384 194.544 cv
426.384 194.544 427.464 194.976 428.544 194.616 cv
433.728 192.816 431.064 186.912 427.176 185.544 cv
423.36 184.248 419.904 186.624 418.176 189.72 cv
412.632 199.44 422.28 211.104 432.576 211.392 cv
443.016 211.68 454.248 203.256 451.152 190.512 cv
449.496 183.744 444.168 176.76 435.672 172.944 cv
435.24 173.808 434.736 174.744 434.232 175.608 cv
ef
254.16 402.696 mo
252.72 406.152 256.68 410.544 259.848 411.984 cv
271.8 417.168 283.608 406.296 286.992 395.424 cv
289.368 386.712 288.072 377.784 283.824 369.864 cv
274.896 354.024 258.48 347.544 242.352 348.84 cv
241.848 347.112 li
249.624 346.536 257.616 347.832 265.392 351.216 cv
282.024 359.28 293.328 377.064 288.216 395.568 cv
284.616 407.448 271.728 418.968 258.696 412.992 cv
254.952 411.12 251.28 407.016 252.504 402.48 cv
253.152 400.176 256.104 397.08 258.624 397.368 cv
260.928 397.656 262.512 399.744 262.224 401.904 cv
262.008 404.208 259.92 405.864 257.616 405.576 cv
255.96 405.36 254.664 404.208 254.16 402.696 cv
ef
146.808 350.28 mo
146.88 349.848 142.416 358.92 135.864 358.992 cv
129.312 359.064 121.392 358.992 117.288 367.416 cv
113.184 375.768 109.08 382.968 101.88 381.096 cv
94.6077 379.224 93.1677 376.776 93.1677 376.776 cv
93.1677 376.776 97.0559 382.896 106.128 384.624 cv
115.272 386.424 128.664 382.536 137.52 367.272 cv
146.448 352.008 146.808 350.712 146.808 350.28 cv
ef
245.736 361.656 mo
244.872 359.064 244.008 355.248 245.304 352.584 cv
246.024 351.792 246.456 350.712 246.456 349.56 cv
246.456 347.184 244.512 345.168 242.064 345.168 cv
241.056 345.168 240.12 345.528 239.4 346.104 cv
235.944 346.32 232.776 345.096 229.464 342.864 cv
224.352 339.48 221.832 333.36 223.056 327.312 cv
224.136 322.992 227.808 318.456 232.704 319.32 cv
234.576 319.752 236.304 321.192 235.08 323.136 cv
234.648 323.784 233.208 325.512 233.928 326.376 cv
234.216 326.664 234.792 326.448 235.152 326.376 cv
235.512 326.304 235.872 326.304 236.232 326.304 cv
239.616 326.52 240.912 323.28 239.76 320.4 cv
238.608 317.952 236.304 316.656 233.712 316.296 cv
228.384 315.864 224.136 319.32 222.12 324 cv
219.24 331.632 222.696 339.624 229.32 344.016 cv
231.192 345.312 232.776 346.104 234.936 346.608 cv
234.216 346.536 233.928 346.464 233.064 346.392 cv
226.008 345.024 219.6 341.64 214.992 335.736 cv
211.248 330.48 209.448 324 211.752 317.664 cv
213.408 313.992 216.504 310.896 220.752 310.968 cv
222.264 311.112 223.344 311.616 224.352 312.408 cv
223.488 313.128 223.416 314.424 224.064 315.288 cv
224.784 316.224 226.152 316.368 227.088 315.648 cv
228.024 315 228.168 313.632 227.448 312.696 cv
226.944 312.048 226.152 311.76 225.36 311.904 cv
225.072 311.544 224.784 311.256 224.496 310.968 cv
221.184 308.448 216.936 309.672 213.984 312.264 cv
210.096 316.08 209.16 321.408 210.096 326.664 cv
211.968 335.304 218.232 341.496 226.008 344.664 cv
220.32 343.512 214.128 344.808 209.088 348.624 cv
199.872 355.68 198.072 368.928 205.2 378.144 cv
212.256 387.36 225.432 389.16 234.72 382.032 cv
239.472 378.432 242.208 373.176 242.856 367.632 cv
244.008 374.904 247.824 381.528 254.52 385.488 cv
259.2 388.008 264.528 388.8 269.424 386.28 cv
272.808 384.336 275.328 380.736 273.96 376.776 cv
273.816 376.344 273.6 375.984 273.384 375.624 cv
273.744 374.976 273.744 374.112 273.24 373.392 cv
272.592 372.456 271.296 372.168 270.288 372.816 cv
269.352 373.536 269.064 374.832 269.712 375.768 cv
270.36 376.704 271.584 376.992 272.592 376.488 cv
272.952 377.712 273.096 378.864 272.736 380.304 cv
271.512 384.408 267.552 386.352 263.592 386.712 cv
256.824 386.928 251.28 383.184 247.464 377.856 cv
244.8 373.896 243.36 369.576 242.928 365.112 cv
242.928 362.52 242.784 360.072 243.144 357.408 cv
243.288 356.544 243.432 355.68 243.576 354.96 cv
243.432 357.264 243.576 359.496 244.152 361.728 cv
246.312 369.36 252.648 375.192 260.856 374.904 cv
265.968 374.472 270.576 371.52 271.8 366.336 cv
272.304 363.744 271.8 361.152 269.856 359.28 cv
267.48 357.264 264.024 357.48 263.16 360.72 cv
263.016 361.08 262.872 361.44 262.728 361.8 cv
262.584 362.088 262.152 362.592 262.368 362.952 cv
262.944 363.888 265.104 363.024 265.824 362.88 cv
267.984 362.376 268.848 364.464 268.632 366.264 cv
267.912 371.232 262.44 373.392 258.048 372.96 cv
251.856 372.312 247.608 367.416 245.736 361.656 cv
cp
214.128 385.776 mo
213.336 385.344 212.544 384.984 211.752 384.624 cv
210.96 384.336 210.168 384.12 209.376 383.976 cv
205.776 383.328 202.32 383.76 199.224 385.776 cv
196.632 387.72 194.688 390.744 195.552 394.056 cv
196.128 395.856 197.784 397.8 199.8 397.44 cv
200.664 397.296 201.096 396.648 200.52 395.928 cv
200.16 395.496 199.728 395.136 199.368 394.776 cv
197.352 392.472 197.928 389.304 199.728 387.072 cv
199.944 386.856 200.16 386.64 200.376 386.424 cv
203.544 383.616 207.936 383.472 211.824 384.768 cv
212.616 385.056 213.336 385.344 214.128 385.776 cv
cp
200.16 367.488 mo
200.304 368.352 200.448 369.216 200.52 370.008 cv
200.736 374.112 199.512 378.288 195.912 380.664 cv
195.696 380.808 195.408 380.952 195.12 381.096 cv
192.528 382.248 189.288 381.96 187.632 379.44 cv
187.344 378.936 187.128 378.432 186.84 378 cv
186.264 377.208 185.544 377.496 185.184 378.288 cv
184.32 380.16 185.76 382.32 187.344 383.256 cv
190.296 384.984 193.752 383.904 196.272 381.888 cv
199.008 379.44 200.376 376.2 200.664 372.528 cv
200.664 371.808 200.664 370.944 200.592 370.152 cv
200.52 369.288 200.376 368.424 200.16 367.488 cv
cp
204.984 378.288 mo
200.376 382.32 198.648 385.2 196.2 387.072 cv
193.752 388.944 191.088 390.528 190.296 389.52 cv
189.576 388.512 191.736 386.28 194.184 384.408 cv
196.632 382.536 199.8 381.672 204.984 378.288 cv
ef
177.84 386.28 mo
178.128 390.528 172.296 393.768 168.408 394.128 cv
153.576 395.352 144.936 379.296 145.296 366.336 cv
145.872 356.04 150.48 346.824 158.112 340.056 cv
171.792 327.816 189.072 325.728 204.768 330.624 cv
208.44 331.776 212.04 333.864 214.344 335.52 cv
212.184 331.56 li
211.464 331.272 210.168 330.48 209.448 330.192 cv
201.888 327.384 193.536 325.872 184.752 326.808 cv
172.8 328.104 161.568 333.648 153.936 342.216 cv
151.632 343.728 148.464 345.528 145.152 346.536 cv
129.528 351.36 112.248 349.344 98.4958 337.104 cv
90.864 330.336 86.3279 321.12 85.7517 310.824 cv
85.3918 297.864 94.032 281.808 108.864 282.96 cv
112.752 283.392 118.584 286.632 118.296 290.88 cv
117.216 289.44 115.416 288.648 113.544 289.08 cv
110.952 289.584 109.368 292.104 109.872 294.624 cv
110.448 297.216 112.968 298.8 115.488 298.296 cv
118.296 297.648 120.312 293.184 120.168 290.448 cv
119.808 285.192 114.336 282.096 109.656 281.52 cv
93.4558 279.864 83.8079 296.928 84.384 311.112 cv
84.7439 318.024 86.9041 324.288 90.3601 329.688 cv
90.072 329.544 89.7839 329.4 89.5681 329.328 cv
83.8801 327.168 77.616 326.016 70.9919 326.736 cv
55.3679 328.464 41.3279 339.84 40.3918 356.184 cv
39.96 366.84 47.2319 379.656 59.3999 378.432 cv
62.928 378 67.032 375.696 67.2478 371.664 cv
67.3918 369.648 65.8801 366.264 63.7917 365.832 cv
61.8479 365.4 59.9758 366.624 59.5439 368.568 cv
59.1118 370.44 60.3359 372.384 62.2798 372.744 cv
63.6477 373.032 65.0881 372.456 65.8801 371.376 cv
66.0959 374.544 61.7039 376.992 58.752 377.352 cv
47.5918 378.216 41.1118 366.192 41.3999 356.4 cv
41.8318 348.696 45.2878 341.784 51.0479 336.672 cv
61.344 327.528 74.304 325.944 86.0398 329.616 cv
88.488 330.336 90.864 331.704 92.592 332.856 cv
100.224 342.576 112.32 348.912 125.136 350.352 cv
133.92 351.288 142.272 349.776 149.832 346.896 cv
150.048 346.896 150.264 346.752 150.48 346.68 cv
146.736 352.224 144.36 358.776 143.928 366.048 cv
143.424 380.232 153.072 397.296 169.2 395.64 cv
173.952 395.064 179.424 391.968 179.784 386.64 cv
179.928 383.976 177.912 379.512 175.032 378.864 cv
172.512 378.36 169.992 379.944 169.488 382.464 cv
168.912 385.056 170.568 387.576 173.088 388.08 cv
174.96 388.512 176.832 387.72 177.84 386.28 cv
ef
205.344 368.856 mo
203.832 370.08 204.912 373.68 207.648 376.992 cv
210.384 380.232 213.768 381.96 215.208 380.736 cv
216.648 379.512 215.64 375.84 212.904 372.6 cv
210.168 369.288 206.784 367.632 205.344 368.856 cv
cp
203.328 366.408 mo
205.344 364.752 210.096 367.056 213.984 371.664 cv
217.8 376.272 219.24 381.384 217.224 383.112 cv
215.208 384.84 210.384 382.464 206.568 377.856 cv
202.752 373.248 201.24 368.136 203.328 366.408 cv
0 0 0 0 cmyk
ef
85.5359 324.36 mo
85.5359 324.72 81.6477 316.8 75.8879 316.728 cv
70.1277 316.656 63.1438 316.728 59.5439 309.312 cv
55.9438 301.968 52.272 295.632 45.9358 297.216 cv
39.5999 298.872 38.304 301.104 38.304 301.104 cv
38.304 301.104 41.688 295.704 49.6799 294.12 cv
57.7439 292.608 69.552 295.992 77.3279 309.456 cv
85.176 322.848 85.4641 324 85.5359 324.36 cv
0 0 0 1 cmyk
ef
42.1199 344.736 mo
42.1199 344.376 38.8079 351.216 33.9119 351.216 cv
28.9438 351.288 23.0398 351.288 19.9438 357.552 cv
16.8479 363.888 13.752 369.288 8.35181 367.848 cv
2.87988 366.48 1.7998 364.608 1.7998 364.608 cv
1.7998 364.608 4.67993 369.216 11.5198 370.512 cv
18.4319 371.808 28.4399 368.928 35.136 357.48 cv
41.8318 346.032 42.1199 345.024 42.1199 344.736 cv
ef
324.72 402.696 mo
326.16 406.152 322.272 410.544 319.104 411.984 cv
307.08 417.168 295.272 406.296 291.888 395.424 cv
289.44 386.712 290.808 377.784 295.056 369.864 cv
303.984 354.024 320.472 347.544 336.6 348.84 cv
337.104 347.112 li
329.328 346.536 321.336 347.832 313.488 351.216 cv
296.856 359.28 285.552 377.064 290.664 395.568 cv
294.264 407.448 307.224 418.968 320.184 412.992 cv
324 411.12 327.672 407.016 326.448 402.48 cv
325.8 400.176 322.848 397.08 320.328 397.368 cv
318.024 397.656 316.368 399.744 316.656 401.904 cv
316.944 404.208 319.032 405.864 321.264 405.576 cv
322.992 405.36 324.288 404.208 324.72 402.696 cv
ef
432.072 350.28 mo
432.072 349.848 436.464 358.92 443.016 358.992 cv
449.568 359.064 457.488 358.992 461.592 367.416 cv
465.696 375.768 469.872 382.968 477.072 381.096 cv
484.272 379.224 485.712 376.776 485.712 376.776 cv
485.712 376.776 481.896 382.896 472.752 384.624 cv
463.68 386.424 450.288 382.536 441.36 367.272 cv
432.504 352.008 432.144 350.712 432.072 350.28 cv
ef
333.216 361.656 mo
334.008 359.064 334.872 355.248 333.648 352.584 cv
332.928 351.792 332.424 350.712 332.424 349.56 cv
332.424 347.184 334.44 345.168 336.816 345.168 cv
337.824 345.168 338.76 345.528 339.48 346.104 cv
342.936 346.32 346.104 345.096 349.488 342.864 cv
354.528 339.48 357.048 333.36 355.824 327.312 cv
354.744 322.992 351.072 318.456 346.176 319.32 cv
344.376 319.752 342.648 321.192 343.8 323.136 cv
344.232 323.784 345.672 325.512 344.952 326.376 cv
344.664 326.664 344.088 326.448 343.728 326.376 cv
343.368 326.304 343.008 326.304 342.648 326.304 cv
339.264 326.52 337.968 323.28 339.12 320.4 cv
340.344 317.952 342.648 316.656 345.24 316.296 cv
350.496 315.864 354.744 319.32 356.76 324 cv
359.64 331.632 356.256 339.624 349.632 344.016 cv
347.76 345.312 346.176 346.104 343.944 346.608 cv
344.736 346.536 344.952 346.464 345.888 346.392 cv
352.944 345.024 359.28 341.64 363.888 335.736 cv
367.704 330.48 369.504 324 367.128 317.664 cv
365.472 313.992 362.448 310.896 358.2 310.968 cv
356.688 311.112 355.608 311.616 354.6 312.408 cv
355.392 313.128 355.536 314.424 354.816 315.288 cv
354.096 316.224 352.8 316.368 351.864 315.648 cv
350.928 315 350.712 313.632 351.432 312.696 cv
351.936 312.048 352.8 311.76 353.52 311.904 cv
353.808 311.544 354.096 311.256 354.456 310.968 cv
357.768 308.448 362.016 309.672 364.896 312.264 cv
368.784 316.08 369.72 321.408 368.856 326.664 cv
366.984 335.304 360.648 341.496 352.872 344.664 cv
358.632 343.512 364.824 344.808 369.792 348.624 cv
379.08 355.68 380.808 368.928 373.752 378.144 cv
366.696 387.36 353.448 389.16 344.232 382.032 cv
339.48 378.432 336.672 373.176 336.096 367.632 cv
334.872 374.904 331.056 381.528 324.432 385.488 cv
319.68 388.008 314.352 388.8 309.528 386.28 cv
306.144 384.336 303.624 380.736 304.992 376.776 cv
305.136 376.344 305.352 375.984 305.568 375.624 cv
305.208 374.976 305.208 374.112 305.64 373.392 cv
306.288 372.456 307.656 372.168 308.592 372.816 cv
309.6 373.536 309.816 374.832 309.168 375.768 cv
308.52 376.704 307.296 376.992 306.36 376.488 cv
305.928 377.712 305.784 378.864 306.144 380.304 cv
307.44 384.408 311.328 386.352 315.36 386.712 cv
322.056 386.928 327.672 383.184 331.488 377.856 cv
334.08 373.896 335.52 369.576 335.952 365.112 cv
336.024 362.52 336.168 360.072 335.808 357.408 cv
335.664 356.544 335.448 355.68 335.304 354.96 cv
335.52 357.264 335.304 359.496 334.8 361.728 cv
332.64 369.36 326.232 375.192 318.024 374.904 cv
312.984 374.472 308.376 371.52 307.08 366.336 cv
306.576 363.744 307.08 361.152 309.096 359.28 cv
311.4 357.264 314.856 357.48 315.792 360.72 cv
315.864 361.08 316.008 361.44 316.152 361.8 cv
316.368 362.088 316.728 362.592 316.512 362.952 cv
315.936 363.888 313.848 363.024 313.056 362.88 cv
310.896 362.376 310.104 364.464 310.248 366.264 cv
311.04 371.232 316.44 373.392 320.832 372.96 cv
327.096 372.312 331.272 367.416 333.216 361.656 cv
cp
364.752 385.776 mo
365.616 385.344 366.408 384.984 367.2 384.624 cv
367.992 384.336 368.784 384.12 369.504 383.976 cv
373.104 383.328 376.632 383.76 379.656 385.776 cv
382.248 387.72 384.192 390.744 383.328 394.056 cv
382.824 395.856 381.168 397.8 379.08 397.44 cv
378.288 397.296 377.784 396.648 378.36 395.928 cv
378.72 395.496 379.152 395.136 379.584 394.776 cv
381.6 392.472 381.024 389.304 379.152 387.072 cv
379.008 386.856 378.792 386.64 378.576 386.424 cv
375.336 383.616 370.944 383.472 367.056 384.768 cv
366.336 385.056 365.544 385.344 364.752 385.776 cv
cp
378.792 367.488 mo
378.576 368.352 378.432 369.216 378.36 370.008 cv
378.216 374.112 379.44 378.288 382.968 380.664 cv
383.256 380.808 383.544 380.952 383.76 381.096 cv
386.352 382.248 389.592 381.96 391.32 379.44 cv
391.608 378.936 391.752 378.432 392.112 378 cv
392.616 377.208 393.408 377.496 393.768 378.288 cv
394.632 380.16 393.192 382.32 391.608 383.256 cv
388.656 384.984 385.2 383.904 382.68 381.888 cv
379.872 379.44 378.576 376.2 378.216 372.528 cv
378.216 371.808 378.216 370.944 378.288 370.152 cv
378.432 369.288 378.576 368.424 378.792 367.488 cv
cp
373.968 378.288 mo
378.576 382.32 380.232 385.2 382.68 387.072 cv
385.128 388.944 387.864 390.528 388.584 389.52 cv
389.376 388.512 387.144 386.28 384.768 384.408 cv
382.32 382.536 379.08 381.672 373.968 378.288 cv
ef
401.04 386.28 mo
400.752 390.528 406.584 393.768 410.544 394.128 cv
425.304 395.352 433.944 379.296 433.584 366.336 cv
433.008 356.04 428.472 346.824 420.84 340.056 cv
407.088 327.816 389.808 325.728 374.184 330.624 cv
370.512 331.776 366.912 333.864 364.536 335.52 cv
366.696 331.56 li
367.416 331.272 368.784 330.48 369.504 330.192 cv
377.064 327.384 385.416 325.872 394.2 326.808 cv
406.08 328.104 417.312 333.648 424.944 342.216 cv
427.32 343.728 430.488 345.528 433.728 346.536 cv
449.352 351.36 466.704 349.344 480.384 337.104 cv
488.016 330.336 492.624 321.12 493.2 310.824 cv
493.56 297.864 484.92 281.808 470.088 282.96 cv
466.2 283.392 460.368 286.632 460.584 290.88 cv
461.664 289.44 463.536 288.648 465.408 289.08 cv
467.928 289.584 469.584 292.104 469.008 294.624 cv
468.504 297.216 465.984 298.8 463.392 298.296 cv
460.584 297.648 458.568 293.184 458.712 290.448 cv
459.072 285.192 464.544 282.096 469.296 281.52 cv
485.424 279.864 495.072 296.928 494.568 311.112 cv
494.136 318.024 491.976 324.288 488.52 329.688 cv
488.88 329.544 489.096 329.4 489.312 329.328 cv
495 327.168 501.336 326.016 507.888 326.736 cv
523.584 328.464 537.624 339.84 538.56 356.184 cv
538.92 366.84 531.72 379.656 519.552 378.432 cv
516.024 378 511.92 375.696 511.632 371.664 cv
511.56 369.648 513 366.264 515.16 365.832 cv
517.032 365.4 518.976 366.624 519.336 368.568 cv
519.768 370.44 518.544 372.384 516.6 372.744 cv
515.232 373.032 513.864 372.456 513.072 371.376 cv
512.856 374.544 517.248 376.992 520.128 377.352 cv
531.288 378.216 537.768 366.192 537.48 356.4 cv
537.048 348.696 533.664 341.784 527.904 336.672 cv
517.608 327.528 504.648 325.944 492.84 329.616 cv
490.392 330.336 488.016 331.704 486.288 332.856 cv
478.656 342.576 466.632 348.912 453.744 350.352 cv
444.96 351.288 436.608 349.776 429.048 346.896 cv
428.904 346.896 428.688 346.752 428.472 346.68 cv
432.216 352.224 434.592 358.776 434.952 366.048 cv
435.528 380.232 425.88 397.296 409.68 395.64 cv
405 395.064 399.528 391.968 399.168 386.64 cv
399.024 383.976 401.04 379.512 403.848 378.864 cv
406.368 378.36 408.888 379.944 409.464 382.464 cv
409.968 385.056 408.384 387.576 405.792 388.08 cv
403.992 388.512 402.12 387.72 401.04 386.28 cv
ef
373.608 368.856 mo
375.048 370.08 374.04 373.68 371.304 376.992 cv
368.568 380.232 365.184 381.96 363.672 380.736 cv
362.232 379.512 363.312 375.84 366.048 372.6 cv
368.784 369.288 372.168 367.632 373.608 368.856 cv
cp
375.624 366.408 mo
373.536 364.752 368.784 367.056 364.968 371.664 cv
361.08 376.272 359.64 381.384 361.656 383.112 cv
363.744 384.84 368.496 382.464 372.384 377.856 cv
376.2 373.248 377.64 368.136 375.624 366.408 cv
0 0 0 0 cmyk
ef
493.416 324.36 mo
493.416 324.72 497.304 316.8 503.064 316.728 cv
508.824 316.656 515.736 316.728 519.408 309.312 cv
523.008 301.968 526.608 295.632 532.944 297.216 cv
539.352 298.872 540.576 301.104 540.576 301.104 cv
540.576 301.104 537.192 295.704 529.2 294.12 cv
521.208 292.608 509.4 295.992 501.552 309.456 cv
493.776 322.848 493.416 324 493.416 324.36 cv
0 0 0 1 cmyk
ef
536.832 344.736 mo
536.76 344.376 540.072 351.216 545.04 351.216 cv
549.936 351.288 555.912 351.288 558.936 357.552 cv
562.032 363.888 565.128 369.288 570.6 367.848 cv
576 366.48 577.08 364.608 577.08 364.608 cv
577.08 364.608 574.2 369.216 567.36 370.512 cv
560.52 371.808 550.44 368.928 543.744 357.48 cv
537.12 346.032 536.832 345.024 536.832 344.736 cv
ef
289.44 375.12 mo
289.296 375.552 289.8 364.176 283.392 360.504 cv
276.912 356.904 268.992 352.656 269.496 342.072 cv
270 331.488 269.784 322.128 261.576 320.04 cv
253.44 318.024 250.632 319.68 250.632 319.68 cv
250.632 319.68 257.76 315.648 267.768 318.888 cv
277.776 322.128 288.936 333.216 289.44 353.232 cv
290.016 373.176 289.656 374.688 289.44 375.12 cv
ef
290.016 375.12 mo
290.232 375.552 289.728 364.176 296.208 360.504 cv
302.688 356.904 310.536 352.656 310.032 342.072 cv
309.528 331.488 309.744 322.128 317.952 320.04 cv
326.16 318.024 328.968 319.68 328.968 319.68 cv
328.968 319.68 321.768 315.648 311.76 318.888 cv
301.824 322.128 290.592 333.216 290.016 353.232 cv
289.512 373.176 289.872 374.688 290.016 375.12 cv
ef
378 257.544 mo
378 257.544 394.56 256.464 408.888 256.752 cv
426.672 257.112 442.08 255.888 456.192 268.704 cv
456.192 268.704 447.912 257.616 426.312 255.312 cv
404.784 253.008 378 257.544 378 257.544 cv
ef
419.688 255.24 mo
419.688 255.24 436.176 256.248 450.576 255.96 cv
468.288 255.672 483.768 256.824 497.88 244.008 cv
497.88 244.008 489.528 255.096 468 257.4 cv
446.472 259.704 419.688 255.24 419.688 255.24 cv
ef
459.288 257.544 mo
459.288 257.544 475.848 256.464 490.176 256.752 cv
507.888 257.112 523.368 255.888 537.48 268.704 cv
537.48 268.704 529.2 257.616 507.6 255.312 cv
486.072 253.008 459.288 257.544 459.288 257.544 cv
ef
523.8 259.128 mo
525.816 259.56 530.352 260.496 531.72 261.36 cv
533.448 262.512 535.752 263.016 539.64 263.376 cv
543.528 263.736 548.208 264.312 548.208 264.312 cv
544.896 262.728 li
554.76 263.592 li
553.608 262.512 li
561.384 262.8 li
560.232 261.792 li
568.944 261.792 li
565.992 260.712 li
572.976 260.568 li
570.672 259.704 li
576.864 259.128 li
570.672 258.624 li
572.976 257.76 li
565.992 257.616 li
568.944 256.536 li
560.232 256.536 li
561.384 255.528 li
553.608 255.744 li
554.76 254.736 li
544.896 255.6 li
548.208 253.944 li
548.208 253.944 543.528 254.52 539.64 254.88 cv
535.752 255.24 533.448 255.744 531.72 256.968 cv
530.352 257.832 525.816 258.768 523.8 259.128 cv
ef
334.008 260.568 mo
334.008 260.64 334.08 260.64 334.152 260.712 cv
334.08 260.64 334.008 260.64 334.008 260.568 cv
cp
339.768 259.704 mo
339.768 259.704 339.768 259.632 339.696 259.632 cv
339.768 259.704 li
cp
340.488 260.64 mo
340.56 260.712 340.56 260.712 340.632 260.784 cv
340.56 260.712 340.56 260.712 340.488 260.64 cv
cp
340.416 260.568 mo
340.488 260.64 li
340.416 260.568 li
cp
340.488 261.144 mo
340.272 260.784 340.056 260.496 339.84 260.136 cv
338.904 258.624 337.104 257.544 335.88 256.968 cv
337.104 256.896 338.328 256.824 339.624 256.824 cv
338.976 257.4 339.048 258.48 339.696 259.632 cv
339.696 259.56 li
339.912 260.064 340.2 260.64 340.488 261.144 cv
cp
346.968 260.712 mo
346.896 260.568 li
346.896 260.64 346.968 260.64 346.968 260.712 cv
cp
346.968 260.712 mo
347.04 260.784 347.112 260.856 347.184 260.928 cv
347.112 260.856 347.04 260.784 346.968 260.712 cv
cp
346.68 260.352 mo
346.752 260.424 346.824 260.496 346.824 260.568 cv
346.824 260.496 346.752 260.424 346.68 260.352 cv
cp
346.32 259.848 mo
346.464 260.064 346.536 260.208 346.68 260.352 cv
346.536 260.208 346.464 260.064 346.32 259.848 cv
cp
347.04 261.216 mo
346.824 260.928 346.608 260.568 346.32 260.208 cv
345.312 258.552 343.152 257.4 341.928 256.824 cv
346.248 256.824 li
345.528 257.4 345.528 258.624 346.32 259.848 cv
346.32 259.776 346.248 259.776 346.248 259.704 cv
346.176 259.704 li
346.464 260.208 346.752 260.712 347.04 261.216 cv
cp
353.592 260.856 mo
353.592 260.928 353.664 261 353.736 261.072 cv
353.664 261 353.592 260.928 353.592 260.856 cv
cp
353.376 260.64 mo
353.448 260.712 li
353.376 260.712 353.376 260.64 353.376 260.64 cv
cp
353.088 260.28 mo
353.088 260.28 353.088 260.352 353.16 260.352 cv
353.088 260.352 353.088 260.28 353.088 260.28 cv
cp
352.8 259.92 mo
352.872 259.992 352.944 260.064 352.944 260.136 cv
352.944 260.064 352.872 259.992 352.8 259.92 cv
cp
353.52 261.36 mo
353.304 261 353.088 260.712 352.872 260.352 cv
351.792 258.552 349.488 257.4 348.264 256.896 cv
352.872 256.896 li
352.008 257.4 352.008 258.624 352.8 259.92 cv
352.8 259.776 li
352.728 259.776 li
352.944 260.28 353.232 260.856 353.52 261.36 cv
cp
360.144 261 mo
360.216 261.144 li
360.216 261.072 360.144 261.072 360.144 261 cv
cp
359.424 260.136 mo
359.496 260.28 li
359.496 260.208 359.496 260.208 359.424 260.136 cv
cp
359.352 259.992 mo
359.352 260.064 359.424 260.064 359.424 260.136 cv
359.424 260.064 359.352 260.064 359.352 259.992 cv
cp
360.072 261.432 mo
359.856 261.144 359.64 260.784 359.424 260.424 cv
358.2 258.552 355.752 257.4 354.672 256.896 cv
359.568 256.896 li
358.56 257.328 358.56 258.624 359.352 259.992 cv
359.28 259.92 li
359.496 260.424 359.784 260.928 360.072 261.432 cv
cp
366.552 261 mo
366.624 261.072 366.696 261.216 366.768 261.288 cv
366.696 261.216 366.624 261.072 366.552 261 cv
cp
366.048 260.424 mo
366.12 260.424 366.12 260.496 366.12 260.496 cv
366.12 260.496 366.12 260.424 366.048 260.424 cv
cp
365.904 260.136 mo
365.904 260.208 365.976 260.28 366.048 260.352 cv
365.976 260.28 365.904 260.208 365.904 260.136 cv
cp
366.624 261.576 mo
366.408 261.216 366.192 260.928 365.976 260.568 cv
364.68 258.552 362.016 257.328 361.008 256.968 cv
366.264 256.968 li
365.112 257.328 365.04 258.696 365.904 260.136 cv
365.832 260.064 365.832 260.064 365.832 259.992 cv
365.76 259.992 li
366.048 260.496 366.336 261.072 366.624 261.576 cv
cp
333.432 252.936 mo
333.36 253.08 li
333.36 253.008 333.432 253.008 333.432 252.936 cv
cp
334.008 252.288 mo
333.792 252.432 li
333.864 252.432 333.936 252.36 334.008 252.288 cv
cp
333.792 252.504 mo
333.72 252.576 333.648 252.648 333.648 252.72 cv
333.576 252.792 333.504 252.864 333.432 252.936 cv
333.504 252.864 333.576 252.792 333.648 252.72 cv
333.648 252.648 333.72 252.576 333.792 252.504 cv
cp
334.224 252 mo
334.152 252.072 334.152 252.144 334.08 252.216 cv
334.152 252.144 334.152 252.072 334.224 252 cv
cp
334.368 251.856 mo
334.368 251.928 334.296 251.928 334.296 252 cv
334.296 251.928 334.368 251.928 334.368 251.856 cv
cp
339.912 253.152 mo
339.84 253.224 li
339.912 253.152 li
cp
339.84 253.224 mo
339.12 254.376 339.048 255.456 339.624 256.032 cv
338.112 256.032 336.672 256.032 335.232 256.104 cv
336.384 255.6 338.76 254.52 339.912 252.792 cv
340.2 252.432 340.416 252.072 340.632 251.784 cv
340.344 252.288 340.056 252.792 339.768 253.296 cv
339.84 253.296 li
339.84 253.224 li
cp
340.632 252.288 mo
340.56 252.288 340.56 252.36 340.488 252.36 cv
340.632 252.288 li
cp
347.832 251.784 mo
347.76 251.784 347.688 251.856 347.688 251.856 cv
347.832 251.784 li
cp
346.536 253.08 mo
345.672 254.232 345.528 255.456 346.104 256.104 cv
342.072 256.032 li
343.368 255.528 345.384 254.448 346.464 252.864 cv
346.68 252.504 346.968 252.216 347.184 251.856 cv
346.824 252.36 346.536 252.864 346.32 253.44 cv
346.32 253.368 li
346.392 253.296 346.464 253.224 346.536 253.08 cv
cp
347.112 252.432 mo
346.968 252.576 346.824 252.792 346.68 252.936 cv
346.824 252.792 346.968 252.576 347.112 252.432 cv
cp
347.328 252.216 mo
347.256 252.288 347.184 252.36 347.112 252.432 cv
347.184 252.36 347.256 252.288 347.328 252.216 cv
cp
353.088 253.152 mo
352.296 254.304 352.08 255.456 352.584 256.104 cv
348.768 256.104 li
350.064 255.528 351.936 254.52 353.016 253.008 cv
353.232 252.648 353.448 252.288 353.664 252 cv
353.376 252.504 353.088 253.008 352.8 253.512 cv
352.872 253.512 li
352.944 253.368 353.016 253.296 353.088 253.152 cv
cp
353.304 252.936 mo
353.232 253.008 353.16 253.008 353.16 253.08 cv
353.16 253.008 353.232 253.008 353.304 252.936 cv
cp
353.592 252.576 mo
353.52 252.648 353.448 252.72 353.376 252.792 cv
353.448 252.72 353.52 252.648 353.592 252.576 cv
cp
353.808 252.36 mo
353.736 252.432 353.664 252.504 353.592 252.576 cv
353.664 252.504 353.736 252.432 353.808 252.36 cv
cp
359.64 253.224 mo
358.848 254.376 358.56 255.528 359.064 256.176 cv
355.464 256.176 li
356.688 255.6 358.56 254.592 359.568 253.08 cv
359.784 252.72 360 252.432 360.216 252.072 cv
359.928 252.576 359.64 253.08 359.352 253.656 cv
359.424 253.584 li
359.496 253.512 359.568 253.368 359.64 253.224 cv
cp
360.504 252.288 mo
360.432 252.36 li
360.504 252.288 li
cp
366.048 253.584 mo
365.328 254.592 365.184 255.6 365.544 256.248 cv
362.088 256.176 li
363.384 255.6 365.112 254.664 366.048 253.224 cv
366.264 252.864 366.552 252.504 366.768 252.216 cv
366.408 252.72 366.192 253.224 365.904 253.728 cv
365.976 253.656 365.976 253.584 366.048 253.584 cv
cp
366.192 253.368 mo
366.12 253.44 366.12 253.512 366.048 253.512 cv
366.12 253.512 366.12 253.44 366.192 253.368 cv
cp
366.624 252.792 mo
366.552 252.864 366.48 252.936 366.48 253.008 cv
366.48 252.936 366.552 252.864 366.624 252.792 cv
cp
366.84 252.648 mo
366.768 252.648 366.696 252.72 366.624 252.792 cv
366.696 252.72 366.768 252.648 366.84 252.648 cv
cp
366.984 252.432 mo
366.912 252.504 366.912 252.576 366.84 252.576 cv
366.912 252.576 366.912 252.504 366.984 252.432 cv
cp
370.008 256.248 mo
368.712 256.248 li
370.008 255.672 371.664 254.664 372.6 253.296 cv
374.256 250.848 375.912 249.264 375.912 249.264 cv
375.912 249.264 371.952 250.056 370.656 250.416 cv
369.648 250.704 368.784 251.136 367.992 251.64 cv
368.28 251.208 368.496 250.848 368.784 250.488 cv
371.16 247.392 375.192 246.312 378.648 245.16 cv
378.576 245.088 li
375.048 246.168 372.024 247.032 369.216 249.336 cv
369.36 249.192 369.36 249.192 369.36 249.192 cv
369.36 249.192 365.4 249.984 364.104 250.344 cv
363.096 250.632 362.232 251.064 361.512 251.568 cv
361.728 251.136 361.944 250.704 362.232 250.344 cv
364.608 247.32 368.64 246.24 372.096 245.016 cv
368.496 246.024 365.544 246.888 362.664 249.192 cv
362.808 249.12 362.88 249.048 362.88 249.048 cv
362.88 249.048 358.848 249.84 357.552 250.2 cv
356.544 250.488 355.68 250.92 354.96 251.424 cv
355.176 250.992 355.464 250.632 355.752 250.272 cv
358.056 247.176 362.088 246.096 365.544 244.944 cv
365.544 244.872 li
361.944 245.952 358.992 246.816 356.184 249.12 cv
356.256 248.976 356.328 248.976 356.328 248.976 cv
356.328 248.976 352.368 249.768 351.072 250.128 cv
350.064 250.416 349.128 250.848 348.408 251.352 cv
348.624 250.92 348.912 250.488 349.2 250.128 cv
351.576 247.104 355.608 246.024 358.992 244.8 cv
355.464 245.808 352.44 246.672 349.632 248.976 cv
349.776 248.904 349.776 248.832 349.776 248.832 cv
349.776 248.832 345.816 249.624 344.52 249.984 cv
343.512 250.344 342.648 250.704 341.856 251.208 cv
341.928 251.208 li
342.144 250.776 342.36 250.416 342.648 250.056 cv
345.024 246.96 349.056 245.88 352.512 244.728 cv
352.512 244.656 li
348.912 245.736 345.96 246.6 343.08 248.904 cv
343.224 248.76 343.296 248.76 343.296 248.76 cv
343.296 248.76 339.264 249.552 337.968 249.912 cv
336.96 250.2 336.096 250.632 335.304 251.136 cv
335.376 251.136 li
335.592 250.704 335.88 250.272 336.168 249.912 cv
338.472 246.888 342.504 245.808 345.96 244.584 cv
342.36 245.592 339.336 246.528 336.456 248.904 cv
335.088 250.056 334.08 251.568 333.216 253.224 cv
333.288 253.152 li
333.36 253.08 li
332.496 254.376 332.496 255.672 333.432 256.176 cv
329.4 256.392 325.584 256.968 321.912 258.192 cv
323.424 257.04 324.864 255.888 326.304 254.664 cv
328.752 252.648 330.624 247.68 328.392 244.872 cv
327.384 243.504 326.88 242.064 325.296 240.984 cv
323.568 239.832 321.264 239.544 319.176 239.4 cv
315.504 239.256 311.76 239.328 308.088 239.832 cv
304.416 240.408 328.824 239.184 326.592 246.456 cv
325.728 249.048 323.568 250.92 322.704 253.512 cv
321.192 258.264 312.768 262.512 309.096 265.464 cv
304.56 268.272 300.024 271.008 295.632 273.96 cv
295.128 274.536 294.624 275.184 294.12 275.832 cv
304.416 268.992 316.44 265.104 329.256 266.4 cv
337.536 267.264 342.648 279.576 336.168 285.408 cv
333.648 287.712 329.832 288.288 325.368 290.736 cv
325.8 290.664 327.384 290.16 329.256 289.584 cv
335.664 287.568 340.992 285.984 341.208 280.368 cv
341.424 274.392 338.184 270.288 333.36 267.264 cv
331.344 265.968 333.576 266.544 337.248 267.84 cv
340.128 268.848 342.72 270 345.168 271.296 cv
350.424 274.104 353.016 278.712 359.136 278.496 cv
364.176 278.28 370.152 276.048 370.224 276.12 cv
370.368 276.192 363.816 276.84 359.568 275.688 cv
354.312 274.176 349.992 271.584 345.096 269.352 cv
338.328 266.256 330.984 264.6 323.928 264.744 cv
320.472 264.816 317.016 265.032 313.488 265.968 cv
309.312 266.544 310.104 266.256 314.352 263.664 cv
315.936 262.728 320.328 260.424 322.488 259.344 cv
325.872 258.192 329.256 257.544 332.784 257.184 cv
332.496 257.904 332.784 258.984 333.576 260.136 cv
333.432 259.92 333.288 259.704 333.216 259.488 cv
333.144 259.488 li
333.936 261.072 334.872 262.656 336.24 263.88 cv
338.976 266.328 342 267.336 345.528 268.488 cv
345.6 268.488 li
342.144 267.192 338.184 265.968 335.952 262.8 cv
335.664 262.44 335.448 262.008 335.232 261.648 cv
335.16 261.576 li
335.88 262.152 336.744 262.584 337.752 262.872 cv
339.048 263.304 343.008 264.24 343.008 264.24 cv
343.008 264.24 342.936 264.168 342.864 264.096 cv
345.6 266.472 348.552 267.48 352.08 268.632 cv
352.08 268.56 li
348.696 267.264 344.736 266.04 342.432 262.944 cv
342.216 262.512 341.928 262.152 341.712 261.72 cv
342.432 262.224 343.296 262.656 344.304 263.016 cv
345.6 263.448 349.56 264.384 349.56 264.384 cv
349.56 264.384 349.488 264.312 349.416 264.168 cv
352.152 266.616 355.104 267.552 358.632 268.704 cv
355.248 267.408 351.216 266.184 348.984 263.016 cv
348.696 262.656 348.48 262.224 348.264 261.864 cv
348.984 262.368 349.848 262.8 350.856 263.088 cv
352.152 263.52 356.04 264.456 356.04 264.456 cv
356.04 264.456 356.04 264.384 355.896 264.312 cv
358.632 266.688 361.656 267.696 365.112 268.848 cv
365.184 268.776 li
361.728 267.48 357.768 266.256 355.536 263.16 cv
355.248 262.728 355.032 262.368 354.816 261.936 cv
354.744 261.936 li
355.464 262.44 356.328 262.872 357.336 263.232 cv
358.632 263.664 362.592 264.6 362.592 264.6 cv
362.592 264.6 362.52 264.528 362.448 264.384 cv
365.184 266.832 368.136 267.768 371.664 268.92 cv
371.664 268.848 li
368.28 267.552 364.32 266.4 362.016 263.232 cv
361.8 262.872 361.512 262.44 361.296 262.08 cv
362.016 262.584 362.88 263.016 363.888 263.304 cv
365.184 263.736 369.144 264.672 369.144 264.672 cv
369.144 264.672 369.072 264.6 369 264.528 cv
371.736 266.904 374.688 267.912 378.216 269.064 cv
378.216 268.992 li
374.832 267.696 370.8 266.472 368.568 263.376 cv
368.28 262.944 368.064 262.584 367.848 262.152 cv
367.776 262.152 li
368.496 262.656 369.432 263.088 370.44 263.448 cv
371.736 263.88 375.696 264.816 375.696 264.816 cv
375.696 264.816 374.04 263.16 372.456 260.64 cv
371.16 258.48 368.136 257.256 367.344 256.968 cv
369.864 256.968 li
369.864 258.696 372.24 260.424 376.992 258.984 cv
378.144 258.624 381.024 257.544 381.816 257.184 cv
382.248 257.184 382.104 257.112 381.888 257.112 cv
381.024 256.752 378.216 255.528 377.136 255.168 cv
373.032 253.728 370.656 254.808 370.008 256.248 cv
ef
314.352 280.368 mo
314.136 279.72 312.984 279.504 312.336 279.648 cv
309.816 280.224 309.312 283.32 310.032 285.408 cv
310.68 287.136 311.976 288.36 313.56 289.08 cv
320.184 291.96 327.096 285.264 325.656 278.568 cv
325.584 278.496 325.44 277.776 325.296 277.848 cv
325.224 277.848 325.224 278.136 325.224 278.208 cv
325.08 279.936 325.008 281.952 323.856 283.464 cv
323.424 284.112 323.856 282.816 323.928 282.672 cv
325.512 276.984 322.56 271.44 317.16 269.136 cv
312.984 267.408 308.52 268.056 304.632 270.072 cv
304.344 270.216 304.056 270.36 303.768 270.504 cv
303.048 270.864 303.336 270.504 303.696 270.216 cv
304.128 269.712 304.704 269.28 305.28 268.92 cv
313.632 263.592 325.656 268.416 326.448 278.784 cv
326.664 283.824 323.784 288.576 318.672 289.8 cv
315.072 290.52 311.184 289.08 309.816 285.552 cv
308.952 283.248 309.672 279.936 312.408 279.36 cv
313.2 279.144 314.28 279.36 314.64 280.224 cv
314.784 280.656 314.712 281.52 314.28 281.808 cv
313.848 282.024 313.344 281.88 313.128 281.448 cv
312.912 281.088 313.056 280.584 313.416 280.368 cv
313.704 280.224 314.064 280.224 314.352 280.368 cv
ef
294.768 258.048 mo
295.344 258.552 294.984 259.632 294.552 260.208 cv
292.896 262.152 289.872 261.288 288.36 259.632 cv
287.208 258.336 286.704 256.608 286.776 254.808 cv
287.136 247.68 296.208 244.44 301.464 248.76 cv
301.536 248.832 302.112 249.264 302.04 249.408 cv
301.968 249.48 301.68 249.336 301.68 249.336 cv
300.024 248.688 298.152 247.824 296.352 248.184 cv
295.56 248.256 296.928 248.472 297 248.472 cv
302.832 249.624 306.432 254.736 306.072 260.568 cv
305.784 265.104 303.192 268.776 299.664 271.368 cv
299.376 271.584 299.088 271.728 298.872 271.944 cv
298.224 272.376 298.656 272.304 299.088 272.16 cv
299.736 271.944 300.384 271.656 300.96 271.296 cv
309.456 266.256 310.536 253.296 301.68 247.968 cv
297.216 245.448 291.672 245.952 288.288 249.984 cv
286.128 252.792 285.696 256.968 288.216 259.776 cv
289.8 261.576 293.112 262.44 294.84 260.28 cv
295.344 259.632 295.632 258.552 295.056 257.904 cv
294.768 257.544 293.976 257.256 293.544 257.472 cv
293.112 257.76 293.04 258.264 293.256 258.624 cv
293.544 258.984 294.048 259.128 294.408 258.84 cv
294.696 258.696 294.84 258.336 294.768 258.048 cv
ef
200.88 257.544 mo
200.88 257.544 184.392 256.464 169.992 256.752 cv
152.28 257.112 136.8 255.888 122.688 268.704 cv
122.688 268.704 131.04 257.616 152.568 255.312 cv
174.096 253.008 200.88 257.544 200.88 257.544 cv
ef
159.264 255.24 mo
159.264 255.24 142.776 256.248 128.376 255.96 cv
110.664 255.672 95.1838 256.824 81.072 244.008 cv
81.072 244.008 89.3518 255.096 110.952 257.4 cv
132.48 259.704 159.264 255.24 159.264 255.24 cv
ef
119.592 257.544 mo
119.592 257.544 103.104 256.464 88.7039 256.752 cv
70.9919 257.112 55.512 255.888 41.3999 268.704 cv
41.3999 268.704 49.752 257.616 71.28 255.312 cv
92.8079 253.008 119.592 257.544 119.592 257.544 cv
ef
55.1519 259.128 mo
53.064 259.56 48.5278 260.496 47.2319 261.36 cv
45.5039 262.512 43.1279 263.016 39.24 263.376 cv
35.4238 263.736 30.7439 264.312 30.7439 264.312 cv
34.0559 262.728 li
24.1199 263.592 li
25.344 262.512 li
17.5679 262.8 li
18.72 261.792 li
10.0078 261.792 li
12.8879 260.712 li
5.90381 260.568 li
8.27979 259.704 li
2.08789 259.128 li
8.27979 258.624 li
5.90381 257.76 li
12.8879 257.616 li
10.0078 256.536 li
18.72 256.536 li
17.5679 255.528 li
25.344 255.744 li
24.1199 254.736 li
34.0559 255.6 li
30.7439 253.944 li
30.7439 253.944 35.4238 254.52 39.24 254.88 cv
43.1279 255.24 45.5039 255.744 47.2319 256.968 cv
48.5278 257.832 53.064 258.768 55.1519 259.128 cv
ef
244.944 260.568 mo
244.872 260.64 244.8 260.64 244.8 260.712 cv
244.8 260.64 244.872 260.64 244.944 260.568 cv
cp
239.112 259.704 mo
239.184 259.632 li
239.112 259.704 li
cp
238.392 260.64 mo
238.392 260.712 238.32 260.712 238.32 260.784 cv
238.32 260.712 238.392 260.712 238.392 260.64 cv
cp
238.536 260.568 mo
238.464 260.568 238.464 260.64 238.392 260.64 cv
238.536 260.568 li
cp
238.464 261.144 mo
238.68 260.784 238.896 260.496 239.112 260.136 cv
240.048 258.624 241.848 257.544 243.072 256.968 cv
241.848 256.896 240.552 256.824 239.328 256.824 cv
239.904 257.4 239.832 258.48 239.184 259.632 cv
239.184 259.56 li
239.256 259.56 li
238.968 260.064 238.752 260.64 238.464 261.144 cv
cp
231.984 260.712 mo
232.056 260.568 li
231.984 260.64 231.984 260.64 231.984 260.712 cv
cp
231.912 260.712 mo
231.912 260.784 231.84 260.856 231.768 260.928 cv
231.84 260.856 231.912 260.784 231.912 260.712 cv
cp
232.272 260.352 mo
232.2 260.424 232.128 260.496 232.056 260.568 cv
232.128 260.496 232.2 260.424 232.272 260.352 cv
cp
232.56 259.848 mo
232.488 260.064 232.344 260.208 232.272 260.352 cv
232.344 260.208 232.488 260.064 232.56 259.848 cv
cp
231.912 261.216 mo
232.128 260.928 232.344 260.568 232.56 260.208 cv
233.64 258.552 235.728 257.4 236.952 256.824 cv
232.704 256.824 li
233.424 257.4 233.352 258.624 232.56 259.848 cv
232.632 259.776 232.632 259.776 232.704 259.704 cv
232.488 260.208 232.2 260.712 231.912 261.216 cv
cp
225.36 260.856 mo
225.288 260.928 225.216 261 225.144 261.072 cv
225.216 261 225.288 260.928 225.36 260.856 cv
cp
225.576 260.64 mo
225.504 260.712 li
225.576 260.64 li
cp
225.864 260.28 mo
225.792 260.352 li
225.864 260.28 li
cp
226.08 259.92 mo
226.08 259.992 226.008 260.064 225.936 260.136 cv
226.008 260.064 226.08 259.992 226.08 259.92 cv
cp
225.36 261.36 mo
225.576 261 225.792 260.712 226.008 260.352 cv
227.16 258.552 229.464 257.4 230.616 256.896 cv
226.08 256.896 li
226.872 257.4 226.872 258.624 226.08 259.92 cv
226.152 259.776 li
226.224 259.776 li
225.936 260.28 225.648 260.856 225.36 261.36 cv
cp
218.808 261 mo
218.664 261.144 li
218.736 261.072 218.736 261.072 218.808 261 cv
cp
219.456 260.136 mo
219.384 260.28 li
219.456 260.208 219.456 260.208 219.456 260.136 cv
cp
219.528 259.992 mo
219.528 260.064 219.528 260.064 219.456 260.136 cv
219.528 260.064 219.528 260.064 219.528 259.992 cv
cp
218.88 261.432 mo
219.096 261.144 219.312 260.784 219.528 260.424 cv
220.68 258.552 223.128 257.4 224.28 256.896 cv
219.384 256.896 li
220.32 257.328 220.392 258.624 219.528 259.992 cv
219.6 259.92 li
219.672 259.92 li
219.384 260.424 219.168 260.928 218.88 261.432 cv
cp
212.328 261 mo
212.256 261.072 212.184 261.216 212.112 261.288 cv
212.184 261.216 212.256 261.072 212.328 261 cv
cp
212.832 260.424 mo
212.832 260.424 212.832 260.496 212.76 260.496 cv
212.832 260.496 212.832 260.424 212.832 260.424 cv
cp
213.048 260.136 mo
212.976 260.208 212.904 260.28 212.904 260.352 cv
212.904 260.28 212.976 260.208 213.048 260.136 cv
cp
212.328 261.576 mo
212.544 261.216 212.76 260.928 212.976 260.568 cv
214.2 258.552 216.936 257.328 217.944 256.968 cv
212.616 256.968 li
213.84 257.328 213.912 258.696 213.048 260.136 cv
213.048 260.064 213.048 260.064 213.12 259.992 cv
212.904 260.496 212.616 261.072 212.328 261.576 cv
cp
245.52 252.936 mo
245.592 253.08 li
245.52 253.008 245.52 253.008 245.52 252.936 cv
cp
244.944 252.288 mo
245.088 252.432 li
245.016 252.432 245.016 252.36 244.944 252.288 cv
cp
245.088 252.504 mo
245.16 252.576 245.232 252.648 245.304 252.72 cv
245.376 252.792 245.448 252.864 245.448 252.936 cv
245.448 252.864 245.376 252.792 245.304 252.72 cv
245.232 252.648 245.16 252.576 245.088 252.504 cv
cp
244.656 252 mo
244.728 252.072 244.8 252.144 244.872 252.216 cv
244.8 252.144 244.728 252.072 244.656 252 cv
cp
244.512 251.856 mo
244.584 251.928 244.584 251.928 244.656 252 cv
244.584 251.928 244.584 251.928 244.512 251.856 cv
cp
239.04 253.152 mo
239.112 253.224 li
239.04 253.224 239.04 253.152 239.04 253.152 cv
cp
239.112 253.224 mo
239.76 254.376 239.904 255.456 239.328 256.032 cv
240.768 256.032 242.28 256.032 243.72 256.104 cv
242.496 255.6 240.192 254.52 238.968 252.792 cv
238.752 252.432 238.536 252.072 238.248 251.784 cv
238.608 252.288 238.896 252.792 239.112 253.296 cv
239.112 253.224 li
cp
238.32 252.288 mo
238.392 252.36 li
238.32 252.288 li
cp
231.12 251.784 mo
231.264 251.856 li
231.192 251.856 231.192 251.784 231.12 251.784 cv
cp
232.344 253.08 mo
233.208 254.232 233.424 255.456 232.848 256.104 cv
236.808 256.032 li
235.512 255.528 233.496 254.448 232.416 252.864 cv
232.2 252.504 231.984 252.216 231.768 251.856 cv
232.056 252.36 232.344 252.864 232.632 253.44 cv
232.56 253.368 li
232.488 253.296 232.416 253.224 232.344 253.08 cv
cp
231.84 252.432 mo
231.984 252.576 232.128 252.792 232.272 252.936 cv
232.128 252.792 231.984 252.576 231.84 252.432 cv
cp
231.624 252.216 mo
231.696 252.288 231.768 252.36 231.768 252.432 cv
231.768 252.36 231.696 252.288 231.624 252.216 cv
cp
225.792 253.152 mo
226.656 254.304 226.872 255.456 226.368 256.104 cv
230.112 256.104 li
228.888 255.528 226.944 254.52 225.936 253.008 cv
225.648 252.648 225.432 252.288 225.216 252 cv
225.504 252.504 225.792 253.008 226.08 253.512 cv
226.008 253.368 225.864 253.296 225.792 253.152 cv
cp
225.648 252.936 mo
225.648 253.008 225.72 253.008 225.792 253.08 cv
225.72 253.008 225.648 253.008 225.648 252.936 cv
cp
225.36 252.576 mo
225.432 252.648 225.432 252.72 225.504 252.792 cv
225.432 252.72 225.432 252.648 225.36 252.576 cv
cp
225.072 252.36 mo
225.144 252.432 225.288 252.504 225.36 252.576 cv
225.288 252.504 225.144 252.432 225.072 252.36 cv
cp
219.24 253.224 mo
220.104 254.376 220.32 255.528 219.888 256.176 cv
223.488 256.176 li
222.192 255.6 220.392 254.592 219.384 253.08 cv
219.168 252.72 218.952 252.432 218.664 252.072 cv
219.024 252.576 219.312 253.08 219.528 253.656 cv
219.528 253.584 li
219.456 253.512 219.384 253.368 219.24 253.224 cv
cp
218.376 252.288 mo
218.52 252.36 li
218.448 252.36 218.448 252.288 218.376 252.288 cv
cp
212.904 253.584 mo
213.552 254.592 213.768 255.6 213.408 256.248 cv
216.864 256.176 li
215.568 255.6 213.84 254.664 212.832 253.224 cv
212.616 252.864 212.4 252.504 212.184 252.216 cv
212.472 252.72 212.76 253.224 213.048 253.728 cv
212.976 253.728 li
212.976 253.656 212.904 253.584 212.904 253.584 cv
cp
212.76 253.368 mo
212.76 253.44 212.832 253.512 212.904 253.512 cv
212.832 253.512 212.76 253.44 212.76 253.368 cv
cp
212.328 252.792 mo
212.328 252.864 212.4 252.936 212.472 253.008 cv
212.4 252.936 212.328 252.864 212.328 252.792 cv
cp
212.112 252.648 mo
212.184 252.648 212.256 252.72 212.256 252.792 cv
212.256 252.72 212.184 252.648 212.112 252.648 cv
cp
211.896 252.432 mo
211.968 252.504 212.04 252.576 212.112 252.576 cv
212.04 252.576 211.968 252.504 211.896 252.432 cv
cp
208.872 256.248 mo
210.168 256.248 li
208.944 255.672 207.288 254.664 206.352 253.296 cv
204.696 250.848 202.968 249.264 202.968 249.264 cv
202.968 249.264 207 250.056 208.296 250.416 cv
209.304 250.704 210.168 251.136 210.888 251.64 cv
210.672 251.208 210.384 250.848 210.168 250.488 cv
207.792 247.392 203.76 246.312 200.304 245.16 cv
200.304 245.088 li
203.904 246.168 206.856 247.032 209.664 249.336 cv
209.592 249.192 209.52 249.192 209.52 249.192 cv
209.52 249.192 213.48 249.984 214.776 250.344 cv
215.784 250.632 216.72 251.064 217.44 251.568 cv
217.224 251.136 216.936 250.704 216.648 250.344 cv
214.344 247.32 210.312 246.24 206.856 245.016 cv
210.384 246.024 213.408 246.888 216.216 249.192 cv
216.144 249.12 216.072 249.048 216.072 249.048 cv
216.072 249.048 220.032 249.84 221.328 250.2 cv
222.336 250.488 223.272 250.92 223.992 251.424 cv
223.704 250.992 223.488 250.632 223.2 250.272 cv
220.824 247.176 216.792 246.096 213.336 244.944 cv
213.408 244.872 li
216.936 245.952 219.96 246.816 222.768 249.12 cv
222.624 248.976 222.624 248.976 222.624 248.976 cv
222.624 248.976 226.584 249.768 227.88 250.128 cv
228.888 250.416 229.752 250.848 230.544 251.352 cv
230.472 251.352 li
230.256 250.92 230.04 250.488 229.752 250.128 cv
227.376 247.104 223.344 246.024 219.888 244.8 cv
223.488 245.808 226.44 246.672 229.248 248.976 cv
229.176 248.904 229.104 248.832 229.104 248.832 cv
229.104 248.832 233.064 249.624 234.36 249.984 cv
235.44 250.344 236.304 250.704 237.024 251.208 cv
236.808 250.776 236.52 250.416 236.232 250.056 cv
233.928 246.96 229.896 245.88 226.44 244.728 cv
226.44 244.656 li
229.968 245.736 232.992 246.6 235.8 248.904 cv
235.728 248.76 235.656 248.76 235.656 248.76 cv
235.656 248.76 239.616 249.552 240.912 249.912 cv
241.92 250.2 242.856 250.632 243.576 251.136 cv
243.288 250.704 243.072 250.272 242.784 249.912 cv
240.408 246.888 236.376 245.808 232.92 244.584 cv
232.992 244.584 li
236.592 245.592 239.616 246.528 242.496 248.904 cv
243.864 250.056 244.872 251.568 245.664 253.224 cv
245.664 253.152 li
245.592 253.08 li
246.456 254.376 246.456 255.672 245.52 256.176 cv
249.552 256.392 253.368 256.968 257.04 258.192 cv
255.528 257.04 254.016 255.888 252.648 254.664 cv
250.2 252.648 248.328 247.68 250.488 244.872 cv
251.568 243.504 252 242.064 253.584 240.984 cv
255.312 239.832 257.688 239.544 259.704 239.4 cv
263.448 239.256 267.12 239.328 270.792 239.832 cv
274.464 240.408 250.128 239.184 252.36 246.456 cv
253.152 249.048 255.384 250.92 256.176 253.512 cv
257.76 258.264 266.184 262.512 269.856 265.464 cv
274.392 268.272 278.928 271.008 283.32 273.96 cv
283.824 274.536 284.328 275.184 284.832 275.832 cv
274.464 268.992 262.512 265.104 249.696 266.4 cv
241.344 267.264 236.304 279.576 242.712 285.408 cv
245.232 287.712 249.048 288.288 253.512 290.736 cv
253.152 290.664 251.496 290.16 249.696 289.584 cv
243.288 287.568 237.888 285.984 237.672 280.368 cv
237.456 274.392 240.696 270.288 245.52 267.264 cv
247.608 265.968 245.304 266.544 241.632 267.84 cv
238.752 268.848 236.16 270 233.784 271.296 cv
228.528 274.104 225.936 278.712 219.744 278.496 cv
214.776 278.28 208.728 276.048 208.656 276.12 cv
208.584 276.192 215.064 276.84 219.312 275.688 cv
224.568 274.176 228.96 271.584 233.784 269.352 cv
240.552 266.256 247.968 264.6 254.952 264.744 cv
258.48 264.816 261.936 265.032 265.464 265.968 cv
269.64 266.544 268.776 266.256 264.528 263.664 cv
262.944 262.728 258.552 260.424 256.392 259.344 cv
253.08 258.192 249.624 257.544 246.168 257.184 cv
246.456 257.904 246.168 258.984 245.304 260.136 cv
245.448 259.92 245.592 259.704 245.736 259.488 cv
245.808 259.488 li
245.016 261.072 244.08 262.656 242.712 263.88 cv
239.904 266.328 236.952 267.336 233.352 268.488 cv
236.736 267.192 240.768 265.968 243 262.8 cv
243.288 262.44 243.504 262.008 243.72 261.648 cv
243.72 261.576 li
243 262.152 242.136 262.584 241.128 262.872 cv
239.832 263.304 235.872 264.24 235.872 264.24 cv
235.872 264.24 235.944 264.168 236.088 264.096 cv
233.28 266.472 230.328 267.48 226.8 268.632 cv
226.8 268.56 li
230.256 267.264 234.216 266.04 236.448 262.944 cv
236.736 262.512 236.952 262.152 237.168 261.72 cv
236.448 262.224 235.584 262.656 234.576 263.016 cv
233.352 263.448 229.392 264.384 229.392 264.384 cv
229.392 264.384 229.464 264.312 229.536 264.168 cv
226.8 266.616 223.848 267.552 220.32 268.704 cv
223.704 267.408 227.664 266.184 229.968 263.016 cv
230.184 262.656 230.472 262.224 230.688 261.864 cv
229.968 262.368 229.104 262.8 228.096 263.088 cv
226.8 263.52 222.84 264.456 222.84 264.456 cv
222.84 264.456 222.912 264.384 222.984 264.312 cv
220.248 266.688 217.296 267.696 213.768 268.848 cv
213.768 268.776 li
217.152 267.48 221.184 266.256 223.416 263.16 cv
223.704 262.728 223.92 262.368 224.136 261.936 cv
224.208 261.936 li
223.416 262.44 222.552 262.872 221.544 263.232 cv
220.248 263.664 216.288 264.6 216.288 264.6 cv
216.288 264.6 216.36 264.528 216.504 264.384 cv
213.696 266.832 210.744 267.768 207.216 268.92 cv
207.216 268.848 li
210.672 267.552 214.632 266.4 216.864 263.232 cv
217.152 262.872 217.368 262.44 217.584 262.08 cv
216.864 262.584 216 263.016 214.992 263.304 cv
213.768 263.736 209.808 264.672 209.808 264.672 cv
209.808 264.672 209.808 264.6 209.952 264.528 cv
207.216 266.904 204.264 267.912 200.736 269.064 cv
200.664 268.992 li
204.12 267.696 208.08 266.472 210.384 263.376 cv
210.6 262.944 210.888 262.584 211.104 262.152 cv
210.384 262.656 209.52 263.088 208.512 263.448 cv
207.216 263.88 203.256 264.816 203.256 264.816 cv
203.256 264.816 204.912 263.16 206.424 260.64 cv
207.792 258.48 210.744 257.256 211.608 256.968 cv
209.016 256.968 li
209.088 258.696 206.712 260.424 201.888 258.984 cv
200.808 258.624 197.928 257.544 197.064 257.184 cv
196.632 257.184 196.848 257.112 197.064 257.112 cv
197.856 256.752 200.664 255.528 201.744 255.168 cv
205.92 253.728 208.296 254.808 208.872 256.248 cv
ef
264.6 280.368 mo
264.744 279.72 265.896 279.504 266.544 279.648 cv
269.064 280.224 269.64 283.32 268.848 285.408 cv
268.2 287.136 266.976 288.36 265.32 289.08 cv
258.768 291.96 251.784 285.264 253.296 278.568 cv
253.296 278.496 253.44 277.776 253.584 277.848 cv
253.656 277.848 253.656 278.136 253.728 278.208 cv
253.872 279.936 253.944 281.952 255.024 283.464 cv
255.528 284.112 255.024 282.816 255.024 282.672 cv
253.44 276.984 256.392 271.44 261.792 269.136 cv
265.968 267.408 270.36 268.056 274.32 270.072 cv
274.608 270.216 274.896 270.36 275.184 270.504 cv
275.832 270.864 275.544 270.504 275.256 270.216 cv
274.752 269.712 274.248 269.28 273.672 268.92 cv
265.32 263.592 253.296 268.416 252.432 278.784 cv
252.216 283.824 255.168 288.576 260.28 289.8 cv
263.808 290.52 267.696 289.08 269.064 285.552 cv
269.928 283.248 269.28 279.936 266.544 279.36 cv
265.68 279.144 264.672 279.36 264.312 280.224 cv
264.096 280.656 264.24 281.52 264.672 281.808 cv
265.032 282.024 265.536 281.88 265.752 281.448 cv
265.968 281.088 265.896 280.584 265.464 280.368 cv
265.176 280.224 264.816 280.224 264.6 280.368 cv
ef
284.112 258.048 mo
283.608 258.552 283.896 259.632 284.328 260.208 cv
285.984 262.152 288.936 261.288 290.52 259.632 cv
291.672 258.336 292.248 256.608 292.176 254.808 cv
291.744 247.68 282.744 244.44 277.488 248.76 cv
277.416 248.832 276.84 249.264 276.912 249.408 cv
276.912 249.48 277.2 249.336 277.272 249.336 cv
278.928 248.688 280.728 247.824 282.6 248.184 cv
283.392 248.256 282.024 248.472 281.88 248.472 cv
276.12 249.624 272.448 254.736 272.808 260.568 cv
273.168 265.104 275.688 268.776 279.288 271.368 cv
279.576 271.584 279.792 271.728 280.08 271.944 cv
280.656 272.376 280.224 272.304 279.792 272.16 cv
279.144 271.944 278.568 271.656 277.92 271.296 cv
269.424 266.256 268.344 253.296 277.2 247.968 cv
281.664 245.448 287.208 245.952 290.52 249.984 cv
292.752 252.792 293.256 256.968 290.736 259.776 cv
289.008 261.576 285.84 262.44 284.04 260.28 cv
283.536 259.632 283.248 258.552 283.896 257.904 cv
284.184 257.544 284.976 257.256 285.408 257.472 cv
285.768 257.76 285.912 258.264 285.624 258.624 cv
285.408 258.984 284.904 259.128 284.472 258.84 cv
284.256 258.696 284.112 258.336 284.112 258.048 cv
ef
437.328 467.424 mo
437.328 467.424 451.872 456.48 457.992 455.544 cv
464.184 454.608 465.84 454.032 465.84 454.032 cv
465.84 454.032 465.912 450.936 463.968 450.36 cv
462.024 449.856 460.872 448.56 459.72 447.12 cv
458.568 445.752 458.28 445.248 458.28 445.248 cv
459.288 445.248 li
457.56 442.944 li
458.64 443.088 li
457.344 440.208 li
458.424 440.712 li
457.56 437.4 li
458.64 437.904 li
458.064 435.096 li
459.216 435.672 li
459.216 435.672 459.648 433.512 460.08 431.784 cv
460.584 430.128 461.016 425.808 461.016 425.808 cv
461.016 425.808 462.312 427.176 464.688 429.552 cv
467.136 431.856 468.288 433.512 468.288 433.512 cv
470.016 432.432 li
469.728 434.736 li
471.168 434.52 li
470.88 436.464 li
472.32 436.176 li
471.96 438.912 li
473.616 438.624 li
472.824 440.712 li
473.832 440.928 li
473.832 440.928 474.264 444.024 471.744 446.832 cv
469.224 449.568 467.28 449.784 466.848 451.368 cv
466.488 453.024 466.848 453.96 466.848 453.96 cv
466.848 453.96 470.808 453.384 472.608 452.808 cv
474.48 452.232 476.28 451.296 475.92 449.784 cv
475.56 448.272 475.992 445.248 478.296 443.16 cv
480.6 441.144 481.392 440.496 481.392 440.496 cv
480.96 442.152 li
484.056 439.992 li
484.416 441.864 li
488.016 439.92 li
487.512 441.504 li
491.256 440.856 li
490.68 441.936 li
494.208 441.864 li
493.632 442.8 li
497.448 442.872 li
496.728 443.736 li
496.728 443.736 500.184 444.024 501.336 444.096 cv
502.56 444.168 507.528 444.6 507.528 444.6 cv
507.528 444.6 503.496 447.048 501.192 448.632 cv
498.816 450.144 499.248 449.856 499.248 449.856 cv
500.904 450.936 li
498.168 450.792 li
498.168 450.792 500.112 452.592 499.608 452.376 cv
499.104 452.088 496.08 452.16 496.08 452.16 cv
497.376 453.456 li
494.064 453.312 li
494.64 454.824 li
491.76 454.824 li
494.28 456.48 li
494.28 456.48 491.112 456.984 487.512 456.912 cv
483.984 456.768 481.68 456.192 479.808 454.536 cv
477.936 452.88 475.272 453.096 472.176 454.032 cv
469.08 454.968 465.768 455.256 464.616 455.616 cv
463.464 456.048 465.984 457.128 468.72 457.992 cv
471.456 458.784 472.464 455.256 477.072 456.48 cv
481.68 457.704 485.64 458.064 485.64 458.064 cv
484.272 459.072 li
486.864 459.504 li
485.784 460.296 li
488.664 461.664 li
487.44 461.808 li
489.888 463.104 li
488.592 463.32 li
490.752 465.336 li
489.024 465.48 li
491.184 467.784 li
489.6 468.072 li
489.6 468.072 490.032 470.16 490.392 473.4 cv
490.824 476.64 490.968 477.288 492.48 479.448 cv
493.992 481.68 495.216 482.832 495.216 482.832 cv
495.216 482.832 490.176 480.816 487.584 479.088 cv
484.992 477.36 484.2 476.28 484.2 476.28 cv
483.912 478.152 li
483.912 478.152 482.544 476.568 482.04 475.2 cv
481.608 473.904 481.536 476.28 481.536 476.28 cv
481.536 476.28 479.592 475.272 479.592 473.04 cv
479.52 470.88 478.224 474.336 478.224 474.336 cv
478.224 474.336 477 472.32 476.928 470.448 cv
476.856 468.648 475.848 472.176 475.848 472.176 cv
475.848 472.176 475.128 471.168 474.552 468.36 cv
473.976 465.552 473.904 470.952 473.904 470.952 cv
473.904 470.952 471.528 467.28 471.456 464.472 cv
471.312 461.664 468.648 459.36 467.28 458.64 cv
465.984 457.848 463.32 456.048 460.512 456.12 cv
457.704 456.264 454.824 457.272 450.792 459.648 cv
446.688 462.024 440.064 467.424 440.064 467.424 cv
437.328 467.424 li
ef
526.968 480.456 mo
527.544 480.96 532.368 485.352 535.032 486.36 cv
537.84 487.44 539.928 487.512 542.304 488.592 cv
544.608 489.672 546.624 491.4 546.624 491.4 cv
544.392 491.328 li
547.128 494.856 li
545.616 495 li
546.912 499.536 li
545.76 499.752 li
545.76 499.752 546.84 502.992 547.2 504.288 cv
547.488 505.584 549.648 509.976 549.648 509.976 cv
549.648 509.976 545.76 506.88 544.608 506.232 cv
543.456 505.584 540.648 503.712 540.648 503.712 cv
540.072 504.792 li
536.04 502.272 li
535.536 503.712 li
532.872 500.184 li
532.296 502.272 li
532.296 502.272 531.144 499.896 530.712 497.376 cv
530.352 494.856 530.784 492.768 530.496 489.744 cv
530.28 486.936 527.328 481.104 526.968 480.456 cv
526.896 480.384 526.896 480.384 526.968 480.456 cv
ef
383.616 517.752 mo
378.864 517.68 373.896 515.52 371.952 510.912 cv
370.656 507.456 371.808 502.848 376.128 503.208 cv
376.56 503.28 379.08 503.28 378.936 502.488 cv
378.864 502.2 377.136 501.624 376.776 501.48 cv
373.32 499.896 370.296 502.272 369.36 506.016 cv
368.496 511.56 372.384 515.88 377.208 517.968 cv
383.04 520.056 388.8 518.904 393.984 515.664 cv
400.104 511.272 403.416 505.08 404.424 497.736 cv
405.072 489.384 402.624 481.968 397.512 475.344 cv
396.216 473.76 394.704 472.248 393.048 470.88 cv
392.76 471.096 li
397.008 474.696 400.32 479.376 402.336 485.208 cv
404.784 492.984 404.28 501.12 399.96 508.176 cv
396.216 513.792 390.456 517.68 383.616 517.752 cv
ef
374.04 515.952 mo
371.304 514.08 367.92 513.216 364.752 514.44 cv
361.8 515.736 359.784 519.192 362.52 521.64 cv
362.808 521.856 364.392 523.368 363.816 523.728 cv
363.528 523.872 362.16 523.152 361.872 523.08 cv
358.848 521.856 358.488 518.616 360.216 515.88 cv
363.024 511.992 367.992 511.776 372.168 513.432 cv
373.104 513.936 373.968 514.44 374.76 515.088 cv
374.04 515.952 li
ef
357.408 473.256 mo
355.464 474.12 355.392 477.576 356.184 479.448 cv
359.352 486.504 368.784 486.432 374.544 483.048 cv
379.08 480.24 381.96 475.848 383.256 470.736 cv
388.152 449.784 364.68 433.152 346.032 441.072 cv
345.744 441.144 343.8 442.008 343.872 442.44 cv
343.944 442.656 344.88 442.512 345.024 442.512 cv
346.896 442.296 348.912 442.08 350.856 442.008 cv
356.976 441.648 363.024 443.088 366.912 447.984 cv
371.088 453.6 370.44 462.096 363.744 465.408 cv
359.784 467.208 354.456 466.056 352.944 461.52 cv
352.296 459.144 353.376 455.616 356.328 455.688 cv
357.552 455.76 358.776 456.984 357.48 457.92 cv
356.184 458.928 356.04 460.728 356.904 462.024 cv
357.984 463.536 360 463.896 361.728 463.608 cv
367.2 462.528 368.928 456.192 367.272 451.512 cv
364.464 444.168 357.696 443.16 350.928 444.168 cv
337.032 446.112 326.016 456.696 322.92 471.096 cv
320.04 484.272 324.432 496.872 332.496 507.312 cv
333.072 508.032 333.72 508.824 334.296 509.544 cv
335.592 511.344 334.368 510.768 333.288 510.048 cv
331.632 508.896 330.12 507.456 328.752 505.944 cv
308.592 484.416 316.224 446.544 346.032 438.552 cv
360.792 435.168 376.344 441.072 382.68 455.4 cv
383.4 457.128 383.904 458.856 384.192 460.656 cv
385.344 463.608 387.144 466.344 389.664 468.576 cv
396.576 474.336 406.656 474.984 413.352 468.648 cv
418.752 463.32 419.76 454.32 413.856 448.992 cv
410.04 445.752 403.56 445.104 400.536 449.784 cv
399.672 451.296 399.312 453.24 400.32 454.824 cv
401.184 456.12 402.912 456.624 404.352 455.832 cv
405.648 454.896 406.368 456.48 406.008 457.704 cv
405 460.512 401.328 460.224 399.384 458.712 cv
395.64 455.688 396.504 450.288 399.6 447.264 cv
405.072 442.224 413.28 444.672 416.952 450.576 cv
420.696 456.912 418.896 464.616 413.568 469.44 cv
405.936 475.92 395.28 474.624 388.368 467.784 cv
387.648 467.064 386.712 466.344 385.776 466.776 cv
383.976 467.64 384.408 468.864 384.048 470.52 cv
382.896 475.776 380.016 480.6 374.976 483.624 cv
368.784 487.368 358.56 487.224 355.32 479.448 cv
354.456 477.144 354.456 473.904 356.832 472.464 cv
357.984 471.744 360.504 471.528 361.512 472.68 cv
362.376 473.688 362.232 475.2 361.224 476.064 cv
360.216 477 358.704 476.856 357.768 475.848 cv
357.12 475.056 357.048 474.048 357.408 473.256 cv
ef
362.808 491.256 mo
361.872 489.744 362.016 487.872 363.096 486.504 cv
362.16 486.216 361.368 485.64 360.792 484.848 cv
359.496 482.976 360 480.456 361.872 479.16 cv
362.52 478.728 363.312 478.44 364.032 478.44 cv
363.312 476.712 363.888 474.552 365.472 473.472 cv
367.344 472.176 369.936 472.608 371.16 474.48 cv
371.664 475.2 371.88 475.992 371.88 476.784 cv
373.32 476.64 374.832 477.288 375.696 478.584 cv
376.344 479.592 376.56 480.816 376.272 481.968 cv
377.424 482.04 378.504 482.616 379.224 483.624 cv
380.088 484.92 380.232 486.504 379.584 487.8 cv
380.304 488.088 380.952 488.592 381.456 489.24 cv
382.752 491.112 382.32 493.632 380.52 494.928 cv
378.864 496.152 376.704 495.936 375.264 494.568 cv
375.048 495.288 374.544 495.936 373.896 496.368 cv
372.024 497.664 369.504 497.232 368.136 495.432 cv
367.56 494.64 367.344 493.632 367.416 492.696 cv
365.76 493.272 363.888 492.696 362.808 491.256 cv
ef
365.328 480.528 mo
365.472 480.672 365.616 480.816 365.76 480.96 cv
365.688 480.96 li
364.752 482.04 364.608 483.552 365.256 484.776 cv
364.176 485.64 362.52 485.64 361.512 484.632 cv
360.36 483.624 360.288 481.824 361.368 480.672 cv
362.376 479.52 364.176 479.448 365.328 480.528 cv
0 0 0 0 cmyk
ef
370.008 474.336 mo
371.304 475.632 371.448 477.648 370.152 479.016 cv
368.928 480.312 366.912 480.384 365.544 479.16 cv
364.248 477.936 364.176 475.848 365.4 474.552 cv
366.624 473.184 368.712 473.112 370.008 474.336 cv
ef
369.792 481.392 mo
369.864 481.392 369.864 481.464 369.936 481.536 cv
369.792 481.68 369.648 481.752 369.504 481.896 cv
368.928 482.472 368.568 483.12 368.424 483.84 cv
367.776 483.912 367.2 484.128 366.696 484.632 cv
366.552 484.704 366.408 484.848 366.336 484.992 cv
366.264 484.92 366.192 484.848 366.12 484.776 cv
365.184 483.768 365.184 482.184 366.192 481.248 cv
367.272 480.312 368.856 480.312 369.792 481.392 cv
ef
374.976 478.584 mo
375.84 479.592 375.768 481.032 374.904 481.896 cv
374.76 481.824 li
373.68 480.816 372.168 480.6 370.872 481.104 cv
370.512 480.168 370.728 479.088 371.52 478.368 cv
372.528 477.504 374.112 477.576 374.976 478.584 cv
ef
363.384 490.896 mo
364.176 491.976 365.616 492.408 366.84 491.904 cv
367.632 491.616 368.208 490.968 368.496 490.248 cv
367.56 490.104 366.768 489.6 366.264 488.88 cv
365.76 488.16 365.616 487.224 365.76 486.36 cv
365.04 486.36 364.248 486.648 363.672 487.296 cv
362.736 488.304 362.664 489.816 363.384 490.896 cv
ef
373.824 492.696 mo
373.752 492.48 373.68 492.264 373.536 492.12 cv
372.168 492.696 370.728 492.336 369.792 491.256 cv
368.568 491.976 367.992 493.488 368.568 494.856 cv
369.144 496.296 370.872 496.944 372.312 496.368 cv
373.752 495.792 374.4 494.136 373.824 492.696 cv
ef
381.168 490.392 mo
380.52 488.736 378.576 487.944 376.92 488.664 cv
375.264 489.312 374.472 491.256 375.12 492.912 cv
375.84 494.568 377.712 495.36 379.44 494.712 cv
381.096 493.992 381.888 492.12 381.168 490.392 cv
ef
374.544 488.232 mo
374.544 488.16 374.472 488.088 374.4 487.944 cv
374.256 488.088 374.112 488.16 373.968 488.232 cv
373.248 488.592 372.456 488.736 371.736 488.592 cv
371.52 489.168 371.016 489.672 370.44 490.032 cv
370.296 490.104 370.08 490.176 369.936 490.176 cv
370.008 490.32 370.008 490.392 370.08 490.464 cv
370.656 491.688 372.168 492.192 373.464 491.616 cv
374.688 490.968 375.192 489.456 374.544 488.232 cv
ef
378.936 484.272 mo
378.36 483.12 376.92 482.688 375.768 483.192 cv
375.84 483.336 li
376.416 484.704 376.128 486.216 375.192 487.296 cv
375.912 487.944 376.992 488.088 377.928 487.584 cv
379.152 486.936 379.584 485.496 378.936 484.272 cv
ef
375.264 483.552 mo
375.192 483.336 375.048 483.12 374.904 482.904 cv
374.76 482.688 374.544 482.472 374.4 482.256 cv
373.104 481.104 371.16 481.176 369.936 482.472 cv
368.928 483.552 368.856 485.28 369.792 486.432 cv
370.584 487.728 372.168 488.232 373.608 487.656 cv
375.192 487.008 375.912 485.136 375.264 483.552 cv
ef
366.696 488.592 mo
367.416 489.528 368.64 489.96 369.792 489.456 cv
370.368 489.24 370.8 488.808 371.088 488.304 cv
370.368 488.016 369.72 487.512 369.288 486.792 cv
368.784 486.144 368.496 485.352 368.496 484.56 cv
367.92 484.632 367.344 484.92 366.984 485.352 cv
366.12 486.288 366.048 487.584 366.696 488.592 cv
ef
377.064 481.392 mo
377.064 481.392 376.56 478.08 375.12 477.432 cv
373.608 476.784 371.736 474.912 372.888 472.824 cv
374.112 470.664 376.488 471.528 376.848 472.392 cv
377.208 473.256 376.92 473.688 376.92 473.688 cv
376.92 473.688 376.056 472.176 375.048 472.896 cv
374.04 473.688 373.824 474.84 375.768 476.28 cv
376.92 477.216 377.496 477.792 377.784 478.368 cv
377.712 478.008 377.64 477.648 377.496 477.432 cv
374.904 474.408 380.016 472.608 380.016 476.064 cv
380.088 476.712 379.872 476.784 379.872 476.784 cv
379.872 476.784 379.584 475.56 378.792 476.064 cv
378 476.496 379.296 477.288 379.152 478.08 cv
378.936 478.944 377.64 480.528 377.064 481.392 cv
0 0 0 1 cmyk
ef
377.064 481.392 mo
377.064 481.392 380.016 482.976 380.088 484.56 cv
380.16 486.216 381.24 488.592 383.688 488.232 cv
386.064 487.872 386.064 485.352 385.416 484.704 cv
384.696 484.056 384.192 484.128 384.192 484.128 cv
384.192 484.128 385.344 485.496 384.264 486.216 cv
383.184 486.864 382.032 486.72 381.384 484.344 cv
380.952 482.904 380.592 482.184 380.16 481.752 cv
380.448 481.896 380.736 482.112 380.88 482.328 cv
382.824 485.784 386.28 481.608 383.04 480.384 cv
382.464 480.168 382.392 480.312 382.392 480.312 cv
382.392 480.312 383.4 481.032 382.68 481.608 cv
381.96 482.184 381.672 480.672 380.88 480.528 cv
380.016 480.456 378.072 481.104 377.064 481.392 cv
ef
423.288 442.368 mo
424.944 442.944 426.024 444.456 426.096 446.184 cv
426.96 445.824 427.896 445.752 428.904 446.04 cv
431.064 446.688 432.288 448.92 431.64 451.08 cv
431.424 451.872 430.992 452.52 430.416 453.024 cv
432.144 453.888 433.008 455.832 432.432 457.776 cv
431.856 459.864 429.552 461.16 427.392 460.512 cv
426.6 460.296 425.952 459.792 425.448 459.216 cv
424.44 460.224 422.928 460.656 421.416 460.224 cv
420.264 459.864 419.328 459.072 418.896 457.992 cv
418.824 457.992 li
417.888 458.64 416.664 458.856 415.512 458.568 cv
414 458.136 412.992 456.984 412.632 455.616 cv
411.912 455.832 411.048 455.904 410.256 455.688 cv
408.096 455.112 406.8 452.88 407.376 450.72 cv
407.88 448.776 409.752 447.552 411.624 447.696 cv
411.408 446.976 411.336 446.184 411.552 445.392 cv
412.128 443.232 414.36 442.008 416.592 442.584 cv
417.528 442.8 418.32 443.376 418.824 444.168 cv
418.896 444.168 li
419.76 442.728 421.56 441.936 423.288 442.368 cv
ef
428.112 452.232 mo
427.896 452.232 427.752 452.16 427.536 452.16 cv
427.536 452.088 li
427.608 450.648 426.816 449.424 425.52 448.92 cv
425.808 447.552 427.032 446.544 428.472 446.616 cv
429.984 446.688 431.208 448.056 431.136 449.568 cv
430.992 451.152 429.696 452.304 428.112 452.232 cv
0 0 0 0 cmyk
ef
428.4 459.864 mo
426.6 459.792 425.232 458.208 425.376 456.408 cv
425.448 454.608 427.032 453.24 428.832 453.384 cv
430.56 453.456 432 455.04 431.856 456.84 cv
431.784 458.64 430.2 460.008 428.4 459.864 cv
ef
424.224 454.392 mo
424.08 454.32 424.008 454.32 423.936 454.32 cv
424.008 454.176 424.008 453.96 424.008 453.816 cv
424.152 453.024 424.008 452.232 423.648 451.584 cv
424.152 451.152 424.44 450.576 424.512 449.928 cv
424.584 449.712 424.584 449.568 424.584 449.424 cv
424.656 449.424 424.728 449.424 424.872 449.424 cv
426.24 449.568 427.176 450.864 426.96 452.232 cv
426.816 453.6 425.592 454.536 424.224 454.392 cv
ef
421.92 459.792 mo
420.696 459.576 419.832 458.424 419.904 457.128 cv
420.048 457.128 li
421.488 457.272 422.856 456.48 423.504 455.256 cv
424.368 455.76 424.872 456.696 424.728 457.776 cv
424.512 459.072 423.288 460.008 421.92 459.792 cv
ef
423.072 443.016 mo
421.776 442.656 420.408 443.232 419.76 444.456 cv
419.4 445.176 419.328 446.04 419.616 446.76 cv
420.336 446.256 421.272 446.112 422.136 446.4 cv
423 446.616 423.72 447.192 424.08 447.984 cv
424.728 447.552 425.088 446.76 425.16 445.968 cv
425.232 444.6 424.368 443.376 423.072 443.016 cv
ef
413.928 448.272 mo
414.144 448.344 414.36 448.416 414.504 448.488 cv
414.504 448.416 li
415.224 447.192 416.592 446.544 417.888 446.76 cv
418.392 445.464 417.888 443.952 416.592 443.232 cv
415.224 442.512 413.568 443.088 412.776 444.456 cv
412.056 445.824 412.56 447.48 413.928 448.272 cv
ef
409.752 454.608 mo
411.336 455.472 413.28 454.824 414.144 453.24 cv
415.008 451.656 414.36 449.712 412.776 448.848 cv
411.192 448.056 409.248 448.632 408.384 450.216 cv
407.52 451.8 408.168 453.744 409.752 454.608 cv
ef
416.232 452.088 mo
416.304 452.16 416.376 452.16 416.448 452.232 cv
416.52 452.016 416.592 451.872 416.664 451.728 cv
416.952 451.008 417.456 450.432 418.104 450.072 cv
417.96 449.424 417.96 448.776 418.248 448.128 cv
418.32 447.984 418.392 447.84 418.464 447.696 cv
418.392 447.624 418.32 447.624 418.248 447.552 cv
416.952 446.976 415.512 447.552 414.936 448.848 cv
414.36 450.072 414.936 451.584 416.232 452.088 cv
ef
415.296 457.92 mo
416.52 458.352 417.816 457.848 418.392 456.696 cv
418.32 456.696 li
416.952 455.976 416.232 454.608 416.304 453.24 cv
415.368 453.168 414.36 453.744 414 454.752 cv
413.496 455.976 414.072 457.416 415.296 457.92 cv
ef
418.608 456.12 mo
418.824 456.264 419.04 456.336 419.328 456.408 cv
419.544 456.48 419.832 456.552 420.048 456.552 cv
421.776 456.624 423.288 455.328 423.36 453.672 cv
423.432 452.088 422.424 450.792 420.984 450.432 cv
419.616 450 418.032 450.576 417.312 451.944 cv
416.52 453.456 417.096 455.328 418.608 456.12 cv
ef
421.992 446.904 mo
420.84 446.616 419.616 447.12 419.04 448.128 cv
418.752 448.704 418.68 449.352 418.824 449.856 cv
419.544 449.64 420.408 449.64 421.128 449.856 cv
421.92 450.072 422.64 450.504 423.144 451.08 cv
423.504 450.648 423.792 450.144 423.792 449.496 cv
423.864 448.272 423.072 447.192 421.992 446.904 cv
ef
418.608 458.928 mo
418.608 458.928 421.056 461.16 422.568 460.728 cv
424.152 460.296 426.744 460.512 427.176 462.888 cv
427.608 465.264 425.304 466.128 424.44 465.696 cv
423.576 465.264 423.504 464.76 423.504 464.76 cv
423.504 464.76 425.16 465.408 425.448 464.184 cv
425.736 462.888 425.232 461.88 422.784 462.024 cv
421.344 462.096 420.48 462.024 419.976 461.736 cv
420.192 461.952 420.48 462.168 420.768 462.24 cv
424.656 462.888 421.848 467.496 419.616 464.904 cv
419.256 464.4 419.328 464.256 419.328 464.256 cv
419.328 464.256 420.336 464.976 420.624 464.112 cv
420.912 463.248 419.4 463.536 419.112 462.816 cv
418.68 462.024 418.68 459.936 418.608 458.928 cv
0 0 0 1 cmyk
ef
418.608 458.928 mo
418.608 458.928 415.296 459.576 414.216 458.424 cv
413.136 457.2 410.832 456.048 409.176 457.848 cv
407.592 459.648 409.176 461.592 410.112 461.664 cv
411.048 461.736 411.336 461.304 411.336 461.304 cv
411.336 461.304 409.608 461.016 410.04 459.792 cv
410.4 458.568 411.408 457.992 413.424 459.36 cv
414.648 460.224 415.368 460.584 416.016 460.584 cv
415.656 460.656 415.296 460.728 415.08 460.584 cv
411.408 459.144 411.336 464.544 414.648 463.464 cv
415.224 463.248 415.224 463.104 415.224 463.104 cv
415.224 463.104 414 463.176 414.144 462.312 cv
414.36 461.376 415.512 462.384 416.16 462.024 cv
416.952 461.52 417.96 459.72 418.608 458.928 cv
ef
393.84 471.744 mo
394.848 472.176 403.2 475.272 407.016 475.2 cv
411.192 475.056 413.856 474.12 417.384 474.336 cv
420.912 474.48 424.296 475.632 424.296 475.632 cv
421.488 476.784 li
426.672 479.88 li
424.872 480.744 li
428.904 485.856 li
427.464 486.72 li
427.464 486.72 430.488 490.248 431.568 491.76 cv
432.576 493.2 437.616 497.736 437.616 497.736 cv
437.616 497.736 431.064 495.72 429.336 495.504 cv
427.536 495.288 423 494.28 423 494.28 cv
422.856 495.936 li
416.448 494.928 li
416.52 496.872 li
411.336 493.776 li
411.696 496.728 li
411.696 496.728 409.032 494.352 407.232 491.328 cv
405.36 488.304 404.928 485.496 403.056 481.824 cv
401.328 478.368 394.632 472.464 393.84 471.744 cv
393.696 471.672 393.696 471.672 393.84 471.744 cv
ef
309.528 498.312 mo
310.896 498.096 312.12 499.968 312.336 501.264 cv
313.056 506.088 307.944 509.328 303.624 509.544 cv
300.24 509.544 297.144 508.248 294.624 505.944 cv
284.832 496.296 291.672 479.088 304.488 476.928 cv
304.704 476.856 306 476.64 306.144 476.928 cv
306.216 477.072 305.64 477.288 305.568 477.36 cv
302.472 478.944 299.016 480.528 297.144 483.552 cv
296.424 484.848 298.296 483.12 298.512 482.976 cv
307.44 475.992 319.464 477.288 327.456 485.136 cv
333.504 491.328 335.592 499.608 334.8 508.032 cv
334.728 508.68 334.656 509.256 334.656 509.904 cv
334.512 511.344 335.016 510.624 335.304 509.832 cv
335.808 508.608 336.168 507.312 336.384 506.016 cv
339.768 487.368 322.488 469.512 303.624 475.56 cv
294.408 478.872 288.216 487.44 289.656 497.376 cv
290.952 504.216 296.352 510.12 303.624 509.976 cv
308.304 509.832 313.704 506.232 312.768 500.904 cv
312.48 499.392 311.328 497.664 309.6 497.664 cv
308.664 497.664 307.224 498.456 307.08 499.392 cv
307.008 500.256 307.584 501.048 308.448 501.12 cv
309.312 501.264 310.104 500.688 310.176 499.824 cv
310.32 499.176 310.032 498.6 309.528 498.312 cv
ef
507.168 495.288 mo
508.032 494.496 507.384 492.696 506.664 491.904 cv
503.784 488.88 498.96 490.68 496.584 493.488 cv
494.784 495.72 494.136 498.528 494.424 501.408 cv
495.792 513 510.912 517.176 518.976 509.688 cv
519.12 509.616 519.912 508.824 519.84 508.608 cv
519.768 508.464 519.264 508.752 519.192 508.752 cv
516.6 509.976 513.72 511.56 510.696 511.2 cv
509.472 511.056 511.632 510.624 511.776 510.624 cv
521.136 508.176 526.464 499.464 525.24 490.032 cv
524.232 482.76 519.696 477.144 513.648 473.256 cv
513.216 472.968 512.784 472.68 512.28 472.392 cv
511.272 471.744 511.992 471.816 512.712 472.032 cv
513.792 472.32 514.8 472.752 515.808 473.256 cv
530.136 480.528 533.232 501.336 519.408 510.984 cv
512.496 515.448 503.424 515.304 497.52 509.112 cv
493.632 504.72 492.48 498.096 496.224 493.272 cv
498.816 490.176 504 488.376 507.096 491.76 cv
507.96 492.768 508.536 494.424 507.672 495.576 cv
507.168 496.224 505.944 496.728 505.224 496.368 cv
504.576 496.008 504.36 495.216 504.72 494.568 cv
505.08 493.92 505.872 493.704 506.52 494.064 cv
506.952 494.28 507.24 494.856 507.168 495.288 cv
ef
408.528 471.888 mo
408.528 471.888 435.24 468.144 458.208 466.848 cv
486.72 465.192 511.272 464.04 534.96 483.48 cv
534.96 483.48 520.704 466.344 485.928 464.328 cv
451.08 462.384 408.528 471.888 408.528 471.888 cv
ef
546.768 464.184 mo
546.552 465.192 544.896 465.48 543.96 465.336 cv
540.432 464.472 539.568 460.08 540.648 457.128 cv
541.512 454.752 543.312 453.024 545.544 451.944 cv
554.832 447.768 564.696 457.128 562.752 466.488 cv
562.752 466.632 562.536 467.64 562.32 467.64 cv
562.176 467.64 562.176 467.208 562.176 467.136 cv
561.96 464.616 561.744 461.808 560.16 459.72 cv
559.512 458.784 560.16 460.584 560.232 460.8 cv
562.608 468.792 558.504 476.64 550.944 480.024 cv
545.04 482.472 538.848 481.68 533.232 478.872 cv
532.8 478.656 532.44 478.44 532.008 478.224 cv
531.072 477.792 531.432 478.296 531.864 478.728 cv
532.584 479.448 533.376 479.952 534.168 480.528 cv
546.048 487.872 562.968 480.888 563.904 466.272 cv
564.12 459.072 559.944 452.448 552.744 450.792 cv
547.704 449.856 542.232 451.944 540.36 456.912 cv
539.208 460.224 540.144 464.904 544.032 465.696 cv
545.184 465.912 546.696 465.624 547.2 464.4 cv
547.416 463.752 547.272 462.6 546.624 462.24 cv
546.12 461.88 545.4 462.096 545.112 462.672 cv
544.752 463.248 544.968 463.896 545.544 464.256 cv
545.904 464.472 546.408 464.4 546.768 464.184 cv
ef
141.552 467.424 mo
141.552 467.424 127.08 456.48 120.888 455.544 cv
114.768 454.608 113.04 454.032 113.04 454.032 cv
113.04 454.032 113.04 450.936 114.912 450.36 cv
116.856 449.856 118.08 448.56 119.232 447.12 cv
120.384 445.752 120.6 445.248 120.6 445.248 cv
119.664 445.248 li
121.32 442.944 li
120.312 443.088 li
121.608 440.208 li
120.528 440.712 li
121.32 437.4 li
120.24 437.904 li
120.816 435.096 li
119.664 435.672 li
119.664 435.672 119.232 433.512 118.8 431.784 cv
118.368 430.128 117.864 425.808 117.864 425.808 cv
117.864 425.808 116.568 427.176 114.192 429.552 cv
111.816 431.856 110.664 433.512 110.664 433.512 cv
108.936 432.432 li
109.152 434.736 li
107.784 434.52 li
108.072 436.464 li
106.632 436.176 li
106.92 438.912 li
105.336 438.624 li
106.056 440.712 li
105.12 440.928 li
105.12 440.928 104.616 444.024 107.208 446.832 cv
109.728 449.568 111.6 449.784 112.032 451.368 cv
112.464 453.024 112.032 453.96 112.032 453.96 cv
112.032 453.96 108.144 453.384 106.272 452.808 cv
104.472 452.232 102.672 451.296 103.032 449.784 cv
103.392 448.272 102.888 445.248 100.584 443.16 cv
98.28 441.144 97.488 440.496 97.488 440.496 cv
97.9197 442.152 li
94.824 439.992 li
94.5359 441.864 li
90.9358 439.92 li
91.4397 441.504 li
87.6238 440.856 li
88.2717 441.936 li
84.7439 441.864 li
85.3201 442.8 li
81.4319 442.872 li
82.2239 443.736 li
82.2239 443.736 78.696 444.024 77.5437 444.096 cv
76.3918 444.168 71.3518 444.6 71.3518 444.6 cv
71.3518 444.6 75.4558 447.048 77.76 448.632 cv
80.0637 450.144 79.7039 449.856 79.7039 449.856 cv
77.9758 450.936 li
80.7117 450.792 li
80.7117 450.792 78.8401 452.592 79.2717 452.376 cv
79.7761 452.088 82.8 452.16 82.8 452.16 cv
81.5037 453.456 li
84.8879 453.312 li
84.24 454.824 li
87.1199 454.824 li
84.6721 456.48 li
84.6721 456.48 87.8401 456.984 91.3679 456.912 cv
94.968 456.768 97.2 456.192 99.1438 454.536 cv
101.016 452.88 103.608 453.096 106.776 454.032 cv
109.872 454.968 113.112 455.256 114.336 455.616 cv
115.488 456.048 112.968 457.128 110.232 457.992 cv
107.424 458.784 106.488 455.256 101.88 456.48 cv
97.2717 457.704 93.3118 458.064 93.3118 458.064 cv
94.6077 459.072 li
92.0159 459.504 li
93.1677 460.296 li
90.2878 461.664 li
91.4397 461.808 li
88.9919 463.104 li
90.3601 463.32 li
88.1277 465.336 li
89.928 465.48 li
87.7678 467.784 li
89.3518 468.072 li
89.3518 468.072 88.9197 470.16 88.488 473.4 cv
88.0559 476.64 87.9119 477.288 86.3997 479.448 cv
84.8879 481.68 83.6638 482.832 83.6638 482.832 cv
83.6638 482.832 88.7761 480.816 91.2957 479.088 cv
93.8879 477.36 94.6799 476.28 94.6799 476.28 cv
95.0398 478.152 li
95.0398 478.152 96.408 476.568 96.8401 475.2 cv
97.344 473.904 97.4158 476.28 97.4158 476.28 cv
97.4158 476.28 99.2878 475.272 99.3601 473.04 cv
99.4319 470.88 100.728 474.336 100.728 474.336 cv
100.728 474.336 101.88 472.32 102.024 470.448 cv
102.096 468.648 103.032 472.176 103.032 472.176 cv
103.032 472.176 103.824 471.168 104.4 468.36 cv
104.976 465.552 105.048 470.952 105.048 470.952 cv
105.048 470.952 107.352 467.28 107.496 464.472 cv
107.568 461.664 110.304 459.36 111.6 458.64 cv
112.968 457.848 115.56 456.048 118.44 456.12 cv
121.248 456.264 124.056 457.272 128.16 459.648 cv
132.264 462.024 138.816 467.424 138.816 467.424 cv
141.552 467.424 li
ef
51.9119 480.456 mo
51.3359 480.96 46.584 485.352 43.9199 486.36 cv
41.0398 487.44 38.9519 487.512 36.6479 488.592 cv
34.272 489.672 32.3279 491.4 32.3279 491.4 cv
34.4878 491.328 li
31.824 494.856 li
33.2639 495 li
31.9678 499.536 li
33.1199 499.752 li
33.1199 499.752 32.0398 502.992 31.752 504.288 cv
31.4639 505.584 29.2319 509.976 29.2319 509.976 cv
29.304 509.976 li
29.304 509.976 33.1199 506.88 34.344 506.232 cv
35.4958 505.584 38.304 503.712 38.304 503.712 cv
38.8079 504.792 li
42.9119 502.272 li
43.344 503.712 li
46.0798 500.184 li
46.656 502.272 li
46.656 502.272 47.7358 499.896 48.168 497.376 cv
48.5999 494.856 48.0959 492.768 48.3838 489.744 cv
48.6719 486.936 51.6238 481.104 51.9839 480.456 cv
51.9839 480.384 51.9839 480.384 51.9119 480.456 cv
ef
195.336 517.752 mo
200.088 517.68 204.984 515.52 206.928 510.912 cv
208.296 507.456 207.072 502.848 202.824 503.208 cv
202.392 503.28 199.8 503.28 200.016 502.488 cv
200.088 502.2 201.744 501.624 202.104 501.48 cv
205.56 499.896 208.656 502.272 209.52 506.016 cv
210.384 511.56 206.496 515.88 201.672 517.968 cv
195.84 520.056 190.08 518.904 184.896 515.664 cv
178.848 511.272 175.536 505.08 174.528 497.736 cv
173.808 489.384 176.328 481.968 181.368 475.344 cv
182.736 473.76 184.248 472.248 185.832 470.88 cv
186.192 471.096 li
181.944 474.696 178.632 479.376 176.544 485.208 cv
174.096 492.984 174.672 501.12 178.992 508.176 cv
182.664 513.792 188.424 517.68 195.336 517.752 cv
ef
204.912 515.952 mo
207.648 514.08 211.032 513.216 214.2 514.44 cv
217.08 515.736 219.168 519.192 216.36 521.64 cv
216.072 521.856 214.56 523.368 215.136 523.728 cv
215.352 523.872 216.72 523.152 217.008 523.08 cv
220.032 521.856 220.464 518.616 218.736 515.88 cv
215.856 511.992 210.888 511.776 206.712 513.432 cv
205.776 513.936 204.912 514.44 204.12 515.088 cv
204.912 515.952 li
ef
221.472 473.256 mo
223.488 474.12 223.488 477.576 222.696 479.448 cv
219.6 486.504 210.168 486.432 204.408 483.048 cv
199.872 480.24 196.92 475.848 195.624 470.736 cv
190.8 449.784 214.2 433.152 232.848 441.072 cv
233.136 441.144 235.152 442.008 235.008 442.44 cv
235.008 442.656 234 442.512 233.928 442.512 cv
231.984 442.296 230.04 442.08 228.024 442.008 cv
221.976 441.648 215.856 443.088 211.968 447.984 cv
207.792 453.6 208.512 462.096 215.136 465.408 cv
219.168 467.208 224.496 466.056 225.936 461.52 cv
226.656 459.144 225.576 455.616 222.624 455.688 cv
221.328 455.76 220.104 456.984 221.472 457.92 cv
222.696 458.928 222.912 460.728 221.976 462.024 cv
220.896 463.536 218.952 463.896 217.224 463.608 cv
211.752 462.528 209.952 456.192 211.608 451.512 cv
214.416 444.168 221.256 443.16 227.952 444.168 cv
241.848 446.112 252.864 456.696 256.032 471.096 cv
258.84 484.272 254.52 496.872 246.456 507.312 cv
245.808 508.032 245.232 508.824 244.656 509.544 cv
243.288 511.344 244.512 510.768 245.592 510.048 cv
247.248 508.896 248.76 507.456 250.2 505.944 cv
270.288 484.416 262.656 446.544 232.92 438.552 cv
218.088 435.168 202.608 441.072 196.2 455.4 cv
195.552 457.128 195.048 458.856 194.76 460.656 cv
193.608 463.608 191.736 466.344 189.216 468.576 cv
182.304 474.336 172.296 474.984 165.528 468.648 cv
160.2 463.32 159.12 454.32 165.024 448.992 cv
168.84 445.752 175.392 445.104 178.344 449.784 cv
179.28 451.296 179.568 453.24 178.56 454.824 cv
177.696 456.12 175.968 456.624 174.6 455.832 cv
173.232 454.896 172.512 456.48 172.944 457.704 cv
173.952 460.512 177.624 460.224 179.568 458.712 cv
183.24 455.688 182.376 450.288 179.28 447.264 cv
173.808 442.224 165.6 444.672 161.928 450.576 cv
158.184 456.912 159.984 464.616 165.312 469.44 cv
172.944 475.92 183.672 474.624 190.584 467.784 cv
191.304 467.064 192.24 466.344 193.176 466.776 cv
194.904 467.64 194.472 468.864 194.832 470.52 cv
195.984 475.776 198.936 480.6 203.904 483.624 cv
210.168 487.368 220.32 487.224 223.56 479.448 cv
224.496 477.144 224.424 473.904 222.12 472.464 cv
220.896 471.744 218.376 471.528 217.44 472.68 cv
216.576 473.688 216.648 475.2 217.656 476.064 cv
218.736 477 220.248 476.856 221.112 475.848 cv
221.76 475.056 221.832 474.048 221.472 473.256 cv
ef
216.072 491.256 mo
217.08 489.744 216.936 487.872 215.856 486.504 cv
216.72 486.216 217.584 485.64 218.088 484.848 cv
219.384 482.976 218.88 480.456 217.08 479.16 cv
216.36 478.728 215.64 478.44 214.848 478.44 cv
215.64 476.712 215.064 474.552 213.408 473.472 cv
211.536 472.176 209.016 472.608 207.72 474.48 cv
207.216 475.2 207 475.992 207 476.784 cv
205.56 476.64 204.12 477.288 203.256 478.584 cv
202.536 479.592 202.392 480.816 202.68 481.968 cv
201.528 482.04 200.376 482.616 199.656 483.624 cv
198.792 484.92 198.72 486.504 199.368 487.8 cv
198.576 488.088 197.928 488.592 197.424 489.24 cv
196.128 491.112 196.56 493.632 198.432 494.928 cv
200.016 496.152 202.248 495.936 203.616 494.568 cv
203.904 495.288 204.408 495.936 205.056 496.368 cv
206.856 497.664 209.448 497.232 210.744 495.432 cv
211.32 494.64 211.536 493.632 211.464 492.696 cv
211.536 492.696 li
213.12 493.272 214.992 492.696 216.072 491.256 cv
ef
213.552 480.528 mo
213.408 480.672 213.264 480.816 213.192 480.96 cv
214.2 482.04 214.344 483.552 213.696 484.776 cv
214.776 485.64 216.36 485.64 217.44 484.632 cv
218.592 483.624 218.664 481.824 217.584 480.672 cv
216.504 479.52 214.704 479.448 213.552 480.528 cv
0 0 0 0 cmyk
ef
208.872 474.336 mo
207.576 475.632 207.504 477.648 208.728 479.016 cv
209.952 480.312 212.04 480.384 213.336 479.16 cv
214.704 477.936 214.776 475.848 213.552 474.552 cv
212.328 473.184 210.24 473.112 208.872 474.336 cv
ef
209.16 481.392 mo
209.088 481.392 209.016 481.464 208.944 481.536 cv
209.088 481.68 209.232 481.752 209.376 481.896 cv
209.952 482.472 210.312 483.12 210.456 483.84 cv
211.104 483.912 211.752 484.128 212.256 484.632 cv
212.4 484.704 212.472 484.848 212.616 484.992 cv
212.688 484.92 212.76 484.848 212.832 484.776 cv
213.768 483.768 213.696 482.184 212.688 481.248 cv
211.68 480.312 210.096 480.312 209.16 481.392 cv
ef
203.904 478.584 mo
203.112 479.592 203.112 481.032 204.048 481.896 cv
204.12 481.824 li
205.2 480.816 206.784 480.6 208.08 481.104 cv
208.44 480.168 208.152 479.088 207.36 478.368 cv
206.352 477.504 204.84 477.576 203.904 478.584 cv
ef
215.496 490.896 mo
214.776 491.976 213.336 492.408 212.04 491.904 cv
211.248 491.616 210.744 490.968 210.456 490.248 cv
211.32 490.104 212.112 489.6 212.616 488.88 cv
213.192 488.16 213.336 487.224 213.12 486.36 cv
213.912 486.36 214.704 486.648 215.28 487.296 cv
216.216 488.304 216.288 489.816 215.496 490.896 cv
ef
205.128 492.696 mo
205.2 492.48 205.272 492.264 205.416 492.12 cv
206.712 492.696 208.224 492.336 209.088 491.256 cv
210.384 491.976 210.888 493.488 210.312 494.856 cv
209.736 496.296 208.08 496.944 206.64 496.368 cv
205.2 495.792 204.48 494.136 205.128 492.696 cv
ef
197.712 490.392 mo
198.432 488.736 200.304 487.944 202.032 488.664 cv
203.688 489.312 204.48 491.256 203.76 492.912 cv
203.112 494.568 201.168 495.36 199.512 494.712 cv
197.856 493.992 197.064 492.12 197.712 490.392 cv
ef
204.336 488.232 mo
204.408 488.16 204.48 488.088 204.48 487.944 cv
204.624 488.088 204.768 488.16 204.984 488.232 cv
205.704 488.592 206.424 488.736 207.144 488.592 cv
207.432 489.168 207.864 489.672 208.512 490.032 cv
208.656 490.104 208.8 490.176 208.944 490.176 cv
208.944 490.32 208.872 490.392 208.872 490.464 cv
208.224 491.688 206.712 492.192 205.488 491.616 cv
204.264 490.968 203.76 489.456 204.336 488.232 cv
ef
199.944 484.272 mo
200.592 483.12 201.96 482.688 203.112 483.192 cv
203.04 483.336 li
202.536 484.704 202.824 486.216 203.76 487.296 cv
202.968 487.944 201.888 488.088 200.952 487.584 cv
199.8 486.936 199.296 485.496 199.944 484.272 cv
ef
203.616 483.552 mo
203.76 483.336 203.904 483.12 204.048 482.904 cv
204.192 482.688 204.336 482.472 204.552 482.256 cv
205.776 481.104 207.792 481.176 208.944 482.472 cv
210.024 483.552 210.024 485.28 209.16 486.432 cv
208.368 487.728 206.784 488.232 205.344 487.656 cv
203.76 487.008 202.968 485.136 203.616 483.552 cv
ef
212.184 488.592 mo
211.536 489.528 210.24 489.96 209.088 489.456 cv
208.512 489.24 208.08 488.808 207.864 488.304 cv
208.584 488.016 209.232 487.512 209.664 486.792 cv
210.168 486.144 210.384 485.352 210.384 484.56 cv
210.96 484.632 211.536 484.92 211.968 485.352 cv
212.76 486.288 212.832 487.584 212.184 488.592 cv
ef
201.888 481.392 mo
201.888 481.392 202.32 478.08 203.832 477.432 cv
205.272 476.784 207.144 474.912 205.992 472.824 cv
204.84 470.664 202.464 471.528 202.104 472.392 cv
201.672 473.256 201.96 473.688 201.96 473.688 cv
201.96 473.688 202.824 472.176 203.904 472.896 cv
204.912 473.688 205.128 474.84 203.184 476.28 cv
201.96 477.216 201.384 477.792 201.168 478.368 cv
201.168 478.008 201.24 477.648 201.456 477.432 cv
204.048 474.408 198.864 472.608 198.864 476.064 cv
198.864 476.712 199.008 476.784 199.008 476.784 cv
199.008 476.784 199.368 475.56 200.16 476.064 cv
200.952 476.496 199.584 477.288 199.728 478.08 cv
199.944 478.944 201.312 480.528 201.888 481.392 cv
0 0 0 1 cmyk
ef
201.888 481.392 mo
201.888 481.392 198.936 482.976 198.792 484.56 cv
198.72 486.216 197.64 488.592 195.264 488.232 cv
192.816 487.872 192.816 485.352 193.536 484.704 cv
194.184 484.056 194.688 484.128 194.688 484.128 cv
194.688 484.128 193.536 485.496 194.616 486.216 cv
195.696 486.864 196.92 486.72 197.568 484.344 cv
198 482.904 198.288 482.184 198.792 481.752 cv
198.432 481.896 198.216 482.112 198 482.328 cv
196.128 485.784 192.6 481.608 195.84 480.384 cv
196.488 480.168 196.56 480.312 196.56 480.312 cv
196.56 480.312 195.552 481.032 196.272 481.608 cv
196.992 482.184 197.208 480.672 198 480.528 cv
198.936 480.456 200.88 481.104 201.888 481.392 cv
ef
155.664 442.368 mo
153.936 442.944 152.856 444.456 152.856 446.184 cv
152.784 446.184 li
151.992 445.824 150.984 445.752 150.048 446.04 cv
147.888 446.688 146.664 448.92 147.24 451.08 cv
147.528 451.872 147.96 452.52 148.536 453.024 cv
146.808 453.888 145.872 455.832 146.448 457.776 cv
147.096 459.864 149.328 461.16 151.488 460.512 cv
152.28 460.296 153 459.792 153.504 459.216 cv
154.512 460.224 156.024 460.656 157.464 460.224 cv
158.688 459.864 159.552 459.072 160.056 457.992 cv
160.992 458.64 162.216 458.856 163.44 458.568 cv
164.88 458.136 165.96 456.984 166.32 455.616 cv
167.04 455.832 167.832 455.904 168.696 455.688 cv
170.856 455.112 172.08 452.88 171.504 450.72 cv
171 448.776 169.2 447.552 167.328 447.696 cv
167.544 446.976 167.544 446.184 167.328 445.392 cv
166.752 443.232 164.52 442.008 162.36 442.584 cv
161.424 442.8 160.632 443.376 160.056 444.168 cv
159.12 442.728 157.392 441.936 155.664 442.368 cv
ef
150.768 452.232 mo
150.984 452.232 151.2 452.16 151.344 452.16 cv
151.344 452.088 li
151.272 450.648 152.136 449.424 153.36 448.92 cv
153.144 447.552 151.92 446.544 150.48 446.616 cv
148.896 446.688 147.744 448.056 147.816 449.568 cv
147.888 451.152 149.256 452.304 150.768 452.232 cv
0 0 0 0 cmyk
ef
150.48 459.864 mo
152.28 459.792 153.648 458.208 153.576 456.408 cv
153.432 454.608 151.92 453.24 150.12 453.384 cv
148.32 453.456 146.952 455.04 147.024 456.84 cv
147.168 458.64 148.68 460.008 150.48 459.864 cv
ef
154.728 454.392 mo
154.8 454.32 154.872 454.32 155.016 454.32 cv
154.944 454.176 154.872 453.96 154.872 453.816 cv
154.8 453.024 154.944 452.232 155.232 451.584 cv
154.8 451.152 154.44 450.576 154.368 449.928 cv
154.368 449.712 154.368 449.568 154.368 449.424 cv
154.296 449.424 154.152 449.424 154.08 449.424 cv
152.712 449.568 151.776 450.864 151.92 452.232 cv
152.136 453.6 153.36 454.536 154.728 454.392 cv
ef
156.96 459.792 mo
158.256 459.576 159.12 458.424 158.976 457.128 cv
158.904 457.128 li
157.392 457.272 156.096 456.48 155.376 455.256 cv
154.512 455.76 154.008 456.696 154.152 457.776 cv
154.368 459.072 155.664 460.008 156.96 459.792 cv
ef
155.88 443.016 mo
157.104 442.656 158.472 443.232 159.12 444.456 cv
159.552 445.176 159.552 446.04 159.264 446.76 cv
158.544 446.256 157.608 446.112 156.816 446.4 cv
155.952 446.616 155.232 447.192 154.8 447.984 cv
154.224 447.552 153.792 446.76 153.792 445.968 cv
153.648 444.6 154.584 443.376 155.88 443.016 cv
ef
164.952 448.272 mo
164.736 448.344 164.592 448.416 164.376 448.488 cv
164.376 448.416 li
163.728 447.192 162.36 446.544 160.992 446.76 cv
160.488 445.464 161.064 443.952 162.288 443.232 cv
163.656 442.512 165.384 443.088 166.104 444.456 cv
166.824 445.824 166.32 447.48 164.952 448.272 cv
ef
169.2 454.608 mo
167.616 455.472 165.6 454.824 164.808 453.24 cv
163.944 451.656 164.52 449.712 166.104 448.848 cv
167.688 448.056 169.704 448.632 170.496 450.216 cv
171.36 451.8 170.784 453.744 169.2 454.608 cv
ef
162.72 452.088 mo
162.648 452.16 162.504 452.16 162.432 452.232 cv
162.432 452.016 162.36 451.872 162.288 451.728 cv
161.928 451.008 161.424 450.432 160.776 450.072 cv
160.992 449.424 160.92 448.776 160.704 448.128 cv
160.632 447.984 160.488 447.84 160.416 447.696 cv
160.488 447.624 160.56 447.624 160.704 447.552 cv
161.928 446.976 163.44 447.552 163.944 448.848 cv
164.52 450.072 163.944 451.584 162.72 452.088 cv
ef
163.584 457.92 mo
162.432 458.352 161.064 457.848 160.488 456.696 cv
160.632 456.696 li
161.928 455.976 162.648 454.608 162.576 453.24 cv
163.584 453.168 164.52 453.744 164.952 454.752 cv
165.456 455.976 164.88 457.416 163.584 457.92 cv
ef
160.344 456.12 mo
160.128 456.264 159.84 456.336 159.624 456.408 cv
159.336 456.48 159.12 456.552 158.832 456.552 cv
157.104 456.624 155.664 455.328 155.592 453.672 cv
155.448 452.088 156.456 450.792 157.896 450.432 cv
159.336 450 160.92 450.576 161.64 451.944 cv
162.432 453.456 161.856 455.328 160.344 456.12 cv
ef
156.96 446.904 mo
158.04 446.616 159.264 447.12 159.84 448.128 cv
160.128 448.704 160.2 449.352 160.056 449.856 cv
159.336 449.64 158.544 449.64 157.752 449.856 cv
156.96 450.072 156.312 450.504 155.808 451.08 cv
155.376 450.648 155.16 450.144 155.088 449.496 cv
155.016 448.272 155.808 447.192 156.96 446.904 cv
ef
160.344 458.928 mo
160.344 458.928 157.824 461.16 156.312 460.728 cv
154.8 460.296 152.208 460.512 151.704 462.888 cv
151.272 465.264 153.648 466.128 154.512 465.696 cv
155.304 465.264 155.376 464.76 155.376 464.76 cv
155.376 464.76 153.72 465.408 153.432 464.184 cv
153.144 462.888 153.72 461.88 156.096 462.024 cv
157.608 462.096 158.4 462.024 158.976 461.736 cv
158.688 461.952 158.472 462.168 158.184 462.24 cv
154.296 462.888 157.104 467.496 159.264 464.904 cv
159.696 464.4 159.552 464.256 159.552 464.256 cv
159.552 464.256 158.616 464.976 158.256 464.112 cv
157.968 463.248 159.48 463.536 159.84 462.816 cv
160.272 462.024 160.2 459.936 160.344 458.928 cv
0 0 0 1 cmyk
ef
160.344 458.928 mo
160.344 458.928 163.584 459.576 164.664 458.424 cv
165.744 457.2 168.12 456.048 169.704 457.848 cv
171.36 459.648 169.776 461.592 168.84 461.664 cv
167.832 461.736 167.544 461.304 167.544 461.304 cv
167.544 461.304 169.272 461.016 168.912 459.792 cv
168.48 458.568 167.472 457.992 165.528 459.36 cv
164.304 460.224 163.512 460.584 162.936 460.584 cv
163.296 460.656 163.584 460.728 163.872 460.584 cv
167.544 459.144 167.544 464.544 164.304 463.464 cv
163.728 463.248 163.728 463.104 163.728 463.104 cv
163.728 463.104 164.952 463.176 164.736 462.312 cv
164.592 461.376 163.44 462.384 162.72 462.024 cv
162 461.52 160.92 459.72 160.344 458.928 cv
ef
185.112 471.744 mo
184.032 472.176 175.752 475.272 171.864 475.2 cv
167.76 475.056 165.024 474.12 161.496 474.336 cv
157.968 474.48 154.656 475.632 154.656 475.632 cv
157.392 476.784 li
152.208 479.88 li
154.008 480.744 li
150.048 485.856 li
151.416 486.72 li
151.416 486.72 148.392 490.248 147.384 491.76 cv
146.304 493.2 141.264 497.736 141.264 497.736 cv
141.336 497.736 li
141.336 497.736 147.816 495.72 149.616 495.504 cv
151.416 495.288 155.952 494.28 155.952 494.28 cv
156.096 495.936 li
162.504 494.928 li
162.36 496.872 li
167.616 493.776 li
167.256 496.728 li
167.256 496.728 169.848 494.352 171.72 491.328 cv
173.52 488.304 173.952 485.496 175.824 481.824 cv
177.552 478.368 184.32 472.464 185.112 471.744 cv
185.184 471.672 185.184 471.672 185.112 471.744 cv
ef
269.424 498.312 mo
268.056 498.096 266.832 499.968 266.616 501.264 cv
265.824 506.088 270.936 509.328 275.256 509.544 cv
278.712 509.544 281.808 508.248 284.256 505.944 cv
294.048 496.296 287.28 479.088 274.392 476.928 cv
274.248 476.856 272.88 476.64 272.808 476.928 cv
272.736 477.072 273.312 477.288 273.384 477.36 cv
276.408 478.944 279.864 480.528 281.736 483.552 cv
282.528 484.848 280.584 483.12 280.44 482.976 cv
271.44 475.992 259.488 477.288 251.496 485.136 cv
245.448 491.328 243.36 499.608 244.08 508.032 cv
244.152 508.68 244.224 509.256 244.296 509.904 cv
244.368 511.344 243.936 510.624 243.576 509.832 cv
243.072 508.608 242.784 507.312 242.496 506.016 cv
239.112 487.368 256.392 469.512 275.256 475.56 cv
284.472 478.872 290.736 487.44 289.224 497.376 cv
287.928 504.216 282.528 510.12 275.328 509.976 cv
270.648 509.832 265.176 506.232 266.112 500.904 cv
266.4 499.392 267.552 497.664 269.352 497.664 cv
270.216 497.664 271.656 498.456 271.8 499.392 cv
271.944 500.256 271.368 501.048 270.504 501.12 cv
269.64 501.264 268.848 500.688 268.704 499.824 cv
268.632 499.176 268.92 498.6 269.424 498.312 cv
ef
71.7117 495.288 mo
70.9197 494.496 71.4958 492.696 72.2878 491.904 cv
75.1677 488.88 79.9919 490.68 82.2957 493.488 cv
84.0959 495.72 84.8157 498.528 84.5281 501.408 cv
83.1599 513 68.0398 517.176 59.9758 509.688 cv
59.8318 509.616 58.9678 508.824 59.1118 508.608 cv
59.1838 508.464 59.616 508.752 59.688 508.752 cv
62.2798 509.976 65.1599 511.56 68.1838 511.2 cv
69.4797 511.056 67.3201 510.624 67.1038 510.624 cv
57.8159 508.176 52.4878 499.464 53.6399 490.032 cv
54.72 482.76 59.1838 477.144 65.2317 473.256 cv
65.7361 472.968 66.1677 472.68 66.5999 472.392 cv
67.6077 471.744 66.8879 471.816 66.1677 472.032 cv
65.0881 472.32 64.0798 472.752 63.0718 473.256 cv
48.8159 480.528 45.72 501.336 59.4719 510.984 cv
66.4558 515.448 75.4558 515.304 81.3601 509.112 cv
85.2478 504.72 86.4719 498.096 82.656 493.272 cv
80.136 490.176 74.9519 488.376 71.7839 491.76 cv
70.9197 492.768 70.344 494.424 71.28 495.576 cv
71.7839 496.224 73.0081 496.728 73.7278 496.368 cv
74.3757 496.008 74.592 495.216 74.2317 494.568 cv
73.8718 493.92 73.0798 493.704 72.4319 494.064 cv
71.928 494.28 71.7117 494.856 71.7117 495.288 cv
ef
170.424 471.888 mo
170.424 471.888 143.64 468.144 120.672 466.848 cv
92.2317 465.192 67.6799 464.04 43.9919 483.48 cv
43.9919 483.48 58.2478 466.344 93.0237 464.328 cv
127.8 462.384 170.424 471.888 170.424 471.888 cv
ef
32.1838 464.184 mo
32.3999 465.192 33.9839 465.48 34.9199 465.336 cv
38.448 464.472 39.3118 460.08 38.304 457.128 cv
37.3679 454.752 35.6399 453.024 33.3359 451.944 cv
24.1199 447.768 14.1838 457.128 16.1279 466.488 cv
16.2 466.632 16.4158 467.64 16.5598 467.64 cv
16.7039 467.64 16.7039 467.208 16.7039 467.136 cv
16.9919 464.616 17.136 461.808 18.72 459.72 cv
19.3679 458.784 18.72 460.584 18.72 460.8 cv
16.344 468.792 20.448 476.64 28.0078 480.024 cv
33.8398 482.472 40.104 481.68 45.72 478.872 cv
46.0798 478.656 46.512 478.44 46.9438 478.224 cv
47.8799 477.792 47.448 478.296 47.0159 478.728 cv
46.3679 479.448 45.5759 479.952 44.7119 480.528 cv
32.9038 487.872 15.9839 480.888 14.9758 466.272 cv
14.76 459.072 18.9358 452.448 26.208 450.792 cv
31.2478 449.856 36.72 451.944 38.5918 456.912 cv
39.7439 460.224 38.7358 464.904 34.8479 465.696 cv
33.6958 465.912 32.1838 465.624 31.752 464.4 cv
31.5359 463.752 31.6799 462.6 32.2559 462.24 cv
32.8318 461.88 33.552 462.096 33.8398 462.672 cv
34.1279 463.248 33.9839 463.896 33.408 464.256 cv
32.9758 464.472 32.4719 464.4 32.1838 464.184 cv
ef
247.896 563.472 mo
252.432 560.592 257.76 563.4 259.704 567.864 cv
262.44 574.992 257.256 581.904 250.2 583.272 cv
241.2 584.712 233.784 577.656 233.064 568.872 cv
232.488 557.784 241.92 549.504 252.72 549.792 cv
264.024 550.368 272.448 559.512 273.24 570.672 cv
273.6 578.88 270.072 585.648 264.24 591.12 cv
264.168 591.12 263.376 591.84 263.88 591.552 cv
264.528 591.264 265.176 590.688 265.752 590.256 cv
278.568 579.672 277.2 558.936 262.656 550.44 cv
251.28 544.176 236.808 548.352 231.624 560.592 cv
227.448 571.104 232.56 583.128 243.72 586.368 cv
252.72 588.6 261.936 583.776 264.096 574.488 cv
265.608 566.496 260.64 558.576 252.288 557.928 cv
245.592 557.64 239.616 562.824 240.696 569.736 cv
241.704 574.488 246.528 578.16 251.28 575.712 cv
253.728 574.344 255.312 570.816 252.864 568.512 cv
252 567.792 250.632 567.504 249.696 568.44 cv
248.832 569.448 250.272 570.816 248.688 571.32 cv
247.392 571.68 246.24 570.672 245.736 569.592 cv
244.8 567.216 245.952 564.84 247.896 563.472 cv
ef
110.376 587.736 mo
119.304 571.248 136.728 560.16 156.528 559.296 cv
176.688 558.432 193.32 567.648 206.496 582.264 cv
206.568 582.336 208.224 584.28 207.648 583.056 cv
206.856 581.472 205.56 579.888 204.48 578.52 cv
185.4 554.472 151.848 549.936 127.224 564.12 cv
113.472 572.04 98.9998 589.104 99.9358 606.024 cv
100.656 618.192 110.736 628.344 123.192 627.624 cv
123.192 627.696 li
123.192 627.624 li
129.168 627.336 133.92 624.312 137.088 619.92 cv
143.352 611.28 143.28 598.248 134.856 591.048 cv
127.368 584.568 115.992 584.64 109.944 593.136 cv
104.904 600.336 104.904 611.28 112.032 617.184 cv
118.368 622.44 127.872 622.368 132.696 615.168 cv
139.032 605.88 133.776 592.056 121.896 592.776 cv
121.896 592.704 li
121.896 592.776 li
119.088 592.92 116.928 594.072 115.272 595.8 cv
116.928 593.856 119.232 592.488 122.04 592.344 cv
136.656 591.48 139.752 607.248 133.416 616.104 cv
128.088 623.376 117.936 623.448 111.456 617.76 cv
102.528 609.912 105.552 596.736 110.376 587.736 cv
ef
104.256 594.36 mo
103.032 595.944 101.736 597.456 100.296 598.896 cv
80.9998 618.048 48.7439 621.36 29.8799 599.688 cv
18.5039 585.648 17.2798 563.616 33.2639 552.384 cv
42.2639 546.624 56.0159 546.768 60.9839 557.712 cv
62.4238 561.528 62.136 565.488 59.688 568.8 cv
57.8159 571.176 53.4958 573.336 56.8079 576.576 cv
52.7039 575.064 50.2559 571.104 52.0559 566.928 cv
53.4238 563.904 52.4158 561.312 49.1758 560.016 cv
49.9678 554.76 41.4719 555.264 38.5198 556.272 cv
33.6238 558.072 30.312 561.312 28.2959 565.272 cv
30.7439 563.616 33.6958 562.68 37.0078 563.04 cv
42.9119 563.904 47.448 568.728 46.8718 574.848 cv
46.1519 579.528 42.1919 583.272 37.2959 582.48 cv
34.0559 581.76 31.5359 578.88 32.3279 575.496 cv
32.9038 573.48 35.064 571.752 37.1519 572.832 cv
38.448 573.552 38.5198 574.776 37.8718 575.928 cv
37.2959 577.008 38.448 577.44 39.3118 577.368 cv
41.9758 577.008 42.7678 573.912 42.1919 571.68 cv
40.752 567.216 35.5679 565.776 31.6079 567.576 cv
28.7278 568.8 26.928 571.032 26.064 573.696 cv
25.9919 573.984 25.8479 574.344 25.8479 574.632 cv
25.272 581.976 27.5759 589.896 31.5359 595.584 cv
45.1438 614.088 70.9197 615.24 89.4958 603.504 cv
95.8318 599.184 100.872 593.928 104.616 588.096 cv
104.544 590.04 104.472 592.344 104.256 594.36 cv
ef
202.464 560.376 mo
199.152 574.2 209.016 586.872 220.824 592.776 cv
242.208 602.928 266.4 594.216 281.088 577.008 cv
284.328 573.12 286.92 568.944 289.224 564.48 cv
289.944 563.184 288.648 565.992 288.576 566.208 cv
282.528 578.88 271.728 588.744 258.768 594.216 cv
242.136 600.552 223.848 598.968 210.24 586.872 cv
202.248 578.88 197.352 567.288 201.6 556.128 cv
204.264 549.648 210.672 543.312 218.16 543.888 cv
220.032 544.104 222.696 545.04 222.84 547.344 cv
223.056 552.096 215.352 550.656 212.76 550.8 cv
207 551.232 203.904 554.904 202.464 560.376 cv
ef
206.856 581.76 mo
205.848 580.896 204.84 580.032 203.76 579.24 cv
188.928 568.656 167.4 569.952 157.248 586.224 cv
151.272 596.736 152.784 611.352 164.592 617.112 cv
171.072 619.92 180.144 618.336 182.232 610.632 cv
182.808 607.896 182.232 605.376 180.216 603.36 cv
178.704 602.064 175.608 601.056 177.48 598.608 cv
174.96 600.048 173.736 602.928 175.392 605.448 cv
176.616 607.32 176.184 609.12 174.24 610.344 cv
175.32 613.728 169.632 614.304 167.616 613.944 cv
156.384 611.784 154.584 597.528 158.76 588.816 cv
165.744 575.136 182.664 571.464 196.128 577.368 cv
200.808 579.384 208.512 584.064 211.68 587.52 cv
211.392 586.224 207.216 583.128 206.856 581.76 cv
ef
330.984 563.472 mo
326.52 560.592 321.192 563.4 319.248 567.864 cv
316.44 574.992 321.624 581.904 328.68 583.272 cv
337.752 584.712 345.096 577.656 345.888 568.872 cv
346.464 557.784 337.032 549.504 326.16 549.792 cv
314.856 550.368 306.432 559.512 305.712 570.672 cv
305.28 578.88 308.88 585.648 314.712 591.12 cv
314.712 591.12 315.504 591.84 315 591.552 cv
314.352 591.264 313.776 590.688 313.2 590.256 cv
300.384 579.672 301.752 558.936 316.296 550.44 cv
327.672 544.176 342.072 548.352 347.328 560.592 cv
351.432 571.104 346.392 583.128 335.232 586.368 cv
326.232 588.6 316.944 583.776 314.784 574.488 cv
313.344 566.496 318.24 558.576 326.664 557.928 cv
333.288 557.64 339.264 562.824 338.184 569.736 cv
337.248 574.488 332.352 578.16 327.672 575.712 cv
325.152 574.344 323.64 570.816 326.016 568.512 cv
326.952 567.792 328.32 567.504 329.256 568.44 cv
330.12 569.448 328.68 570.816 330.192 571.32 cv
331.56 571.68 332.64 570.672 333.144 569.592 cv
334.152 567.216 332.928 564.84 330.984 563.472 cv
ef
468.504 587.736 mo
459.648 571.248 442.152 560.16 422.424 559.296 cv
402.192 558.432 385.632 567.648 372.456 582.264 cv
372.384 582.336 370.728 584.28 371.304 583.056 cv
372.096 581.472 373.32 579.888 374.472 578.52 cv
393.552 554.472 427.104 549.936 451.728 564.12 cv
465.408 572.04 479.952 589.104 478.944 606.024 cv
479.016 606.024 li
478.944 606.024 li
478.296 618.192 468.216 628.344 455.688 627.624 cv
455.688 627.696 li
455.688 627.624 li
449.784 627.336 445.032 624.312 441.792 619.92 cv
435.528 611.28 435.6 598.248 444.024 591.048 cv
451.584 584.568 462.96 584.64 468.936 593.136 cv
474.048 600.336 473.976 611.28 466.848 617.184 cv
460.512 622.44 451.008 622.368 446.184 615.168 cv
439.848 605.88 445.104 592.056 456.984 592.776 cv
456.984 592.704 li
456.984 592.776 li
459.792 592.92 462.024 594.072 463.608 595.8 cv
461.952 593.856 459.648 592.488 456.84 592.344 cv
442.224 591.48 439.128 607.248 445.536 616.104 cv
450.792 623.376 460.944 623.448 467.424 617.76 cv
476.352 609.912 473.4 596.736 468.504 587.736 cv
ef
474.696 594.36 mo
475.92 595.944 477.216 597.456 478.656 598.896 cv
497.952 618.048 530.136 621.36 549 599.688 cv
560.448 585.648 561.672 563.616 545.616 552.384 cv
536.688 546.624 522.936 546.768 517.968 557.712 cv
516.456 561.528 516.744 565.488 519.192 568.8 cv
521.136 571.176 525.456 573.336 522.144 576.576 cv
526.176 575.064 528.624 571.104 526.824 566.928 cv
525.528 563.904 526.536 561.312 529.704 560.016 cv
528.984 554.76 537.48 555.264 540.36 556.272 cv
545.256 558.072 548.568 561.312 550.656 565.272 cv
548.208 563.616 545.184 562.68 541.944 563.04 cv
536.04 563.904 531.504 568.728 532.08 574.848 cv
532.728 579.528 536.688 583.272 541.656 582.48 cv
544.824 581.76 547.416 578.88 546.624 575.496 cv
545.976 573.48 543.888 571.752 541.728 572.832 cv
540.432 573.552 540.36 574.776 541.08 575.928 cv
541.584 577.008 540.432 577.44 539.568 577.368 cv
536.976 577.008 536.184 573.912 536.76 571.68 cv
538.128 567.216 543.312 565.776 547.344 567.576 cv
550.152 568.8 552.024 571.032 552.888 573.696 cv
552.96 573.984 553.032 574.344 553.104 574.632 cv
553.608 581.976 551.376 589.896 547.344 595.584 cv
533.736 614.088 508.032 615.24 489.384 603.504 cv
483.12 599.184 478.08 593.928 474.264 588.096 cv
474.336 590.04 474.48 592.344 474.696 594.36 cv
ef
376.488 560.376 mo
379.728 574.2 369.864 586.872 358.056 592.776 cv
336.744 602.928 312.552 594.216 297.792 577.008 cv
294.624 573.12 292.032 568.944 289.656 564.48 cv
288.936 563.184 290.232 565.992 290.304 566.208 cv
296.424 578.88 307.224 588.744 320.184 594.216 cv
336.744 600.552 355.104 598.968 368.64 586.872 cv
376.704 578.88 381.6 567.288 377.28 556.128 cv
374.616 549.648 368.28 543.312 360.72 543.888 cv
358.848 544.104 356.184 545.04 356.04 547.344 cv
355.824 552.096 363.528 550.656 366.192 550.8 cv
371.88 551.232 375.048 554.904 376.488 560.376 cv
ef
372.096 581.76 mo
373.032 580.896 374.112 580.032 375.192 579.24 cv
389.952 568.656 411.552 569.952 421.632 586.224 cv
427.68 596.736 426.096 611.352 414.36 617.112 cv
407.808 619.92 398.736 618.336 396.648 610.632 cv
396.072 607.896 396.72 605.376 398.736 603.36 cv
400.176 602.064 403.272 601.056 401.472 598.608 cv
403.992 600.048 405.144 602.928 403.56 605.448 cv
402.336 607.32 402.696 609.12 404.712 610.344 cv
403.632 613.728 409.248 614.304 411.336 613.944 cv
422.568 611.784 424.368 597.528 420.12 588.816 cv
413.136 575.136 396.216 571.464 382.752 577.368 cv
378.072 579.384 370.368 584.064 367.272 587.52 cv
367.488 586.224 371.736 583.128 372.096 581.76 cv
ef
264.6 657.072 mo
263.52 658.224 261.144 657.432 260.064 656.424 cv
256.032 652.608 258.336 646.2 262.008 643.104 cv
265.032 640.656 268.704 639.72 272.52 640.08 cv
287.928 641.808 293.544 661.824 283.752 672.624 cv
283.608 672.768 282.6 673.92 282.312 673.776 cv
282.168 673.632 282.528 673.056 282.528 672.984 cv
284.184 669.456 286.128 665.64 285.696 661.68 cv
285.48 659.952 284.976 662.832 284.904 663.12 cv
281.808 675.432 270.288 682.632 257.76 681.12 cv
248.112 679.824 240.552 673.92 235.368 665.928 cv
235.008 665.28 234.648 664.704 234.288 664.128 cv
234.144 663.984 234.072 663.912 234 663.768 cv
231.84 658.8 227.664 654.624 222.696 652.392 cv
212.616 648.216 200.808 652.248 196.416 662.472 cv
194.256 667.8 196.488 672.84 193.32 677.808 cv
189.864 682.776 183.096 684.936 177.912 681.12 cv
174.744 678.6 173.304 673.56 176.688 670.536 cv
177.84 669.744 179.352 669.312 180.72 669.672 cv
181.368 669.96 181.944 670.464 182.16 671.04 cv
181.368 670.464 180.432 670.104 179.424 670.104 cv
177.264 670.176 175.608 671.976 175.68 674.136 cv
175.536 676.656 177.84 679.464 180.648 679.392 cv
190.944 678.96 189.072 662.4 177.624 664.992 cv
172.512 666.144 169.992 671.472 170.784 676.44 cv
170.784 676.584 170.856 676.728 170.856 676.8 cv
167.76 679.32 163.368 679.752 160.056 676.944 cv
157.32 674.496 156.6 670.032 159.768 667.584 cv
161.208 666.504 163.152 666.216 164.592 667.44 cv
165.24 668.088 165.744 669.168 165.168 670.032 cv
164.376 670.968 163.8 669.672 162.864 670.032 cv
162 670.392 161.856 671.472 162.144 672.336 cv
163.152 674.568 166.032 674.28 167.688 672.912 cv
170.496 670.104 169.128 665.784 165.96 663.984 cv
161.28 661.536 156.168 664.488 154.728 669.312 cv
154.44 670.68 154.368 671.976 154.584 673.272 cv
153.072 672.84 151.488 672.624 149.832 672.84 cv
149.256 672.912 148.68 673.056 148.104 673.2 cv
143.64 674.352 138.744 672.408 137.304 667.584 cv
136.44 664.056 138.384 659.952 142.344 659.592 cv
144.144 659.52 145.944 660.456 146.448 662.256 cv
146.592 663.192 146.376 664.272 145.44 664.632 cv
144.288 665.064 144.504 663.624 143.568 663.408 cv
142.56 663.264 141.912 664.056 141.696 664.92 cv
141.264 667.368 143.784 668.736 145.944 668.448 cv
149.832 667.728 151.056 663.336 149.472 660.096 cv
147.024 655.488 141.048 655.128 137.232 658.296 cv
136.152 659.232 135.36 660.312 134.856 661.464 cv
133.92 660.312 132.696 659.232 131.184 658.44 cv
125.712 655.848 119.016 657.936 116.856 663.84 cv
116.64 664.632 116.496 665.496 116.496 666.36 cv
114.48 665.28 112.176 664.776 109.656 664.992 cv
106.416 665.496 103.68 667.224 102.024 669.672 cv
99.072 671.544 95.1838 671.688 92.1599 669.168 cv
89.4958 666.648 88.7761 662.256 91.9441 659.736 cv
93.384 658.728 95.3279 658.44 96.7678 659.664 cv
97.4158 660.312 97.9197 661.32 97.344 662.184 cv
96.552 663.192 95.9758 661.824 95.0398 662.184 cv
94.1038 662.616 94.032 663.696 94.3201 664.488 cv
95.3279 666.72 98.2078 666.504 99.864 665.064 cv
102.672 662.328 101.304 658.008 98.136 656.136 cv
93.4558 653.688 88.344 656.712 86.9041 661.464 cv
86.0398 664.992 87.1199 668.232 89.28 670.536 cv
87.3357 670.896 85.3918 671.76 83.6638 673.128 cv
81.2878 675.36 79.9919 678.312 79.9919 681.264 cv
78.552 684.504 75.384 686.736 71.4958 686.304 cv
67.8958 685.8 64.8 682.416 66.0237 678.672 cv
66.6721 677.016 68.1838 675.648 70.0559 675.864 cv
70.9197 676.08 71.928 676.656 71.928 677.664 cv
71.8557 678.888 70.5598 678.168 69.9841 678.96 cv
69.4797 679.824 69.9841 680.76 70.7039 681.264 cv
72.7917 682.56 75.0237 680.76 75.5999 678.672 cv
76.4641 674.784 72.864 671.976 69.1917 672.192 cv
66.1677 672.552 64.0081 674.424 63.0718 676.944 cv
59.9758 679.32 55.656 679.752 52.4158 676.944 cv
49.6799 674.496 49.032 670.032 52.1279 667.584 cv
53.5679 666.504 55.584 666.216 56.9519 667.44 cv
57.6719 668.088 58.104 669.168 57.5278 670.032 cv
56.8079 670.968 56.1599 669.672 55.2239 670.032 cv
54.3599 670.392 54.2158 671.472 54.5039 672.336 cv
55.512 674.568 58.3918 674.28 60.0479 672.912 cv
62.928 670.104 61.4878 665.784 58.3198 663.984 cv
53.6399 661.536 48.5278 664.488 47.1599 669.312 cv
46.7998 670.68 46.7278 671.976 46.9438 673.272 cv
45.5039 672.84 43.8479 672.624 42.1919 672.84 cv
41.616 672.912 41.0398 673.056 40.4639 673.2 cv
36 674.352 31.104 672.408 29.7358 667.584 cv
28.7998 664.056 30.7439 659.952 34.7039 659.592 cv
36.5039 659.52 38.304 660.456 38.8079 662.256 cv
39.0239 663.192 38.8079 664.272 37.8718 664.632 cv
36.6479 665.064 36.9358 663.624 35.928 663.408 cv
34.9919 663.264 34.272 664.056 34.0559 664.92 cv
33.6958 667.368 36.2158 668.736 38.304 668.448 cv
42.1919 667.728 43.4878 663.336 41.9038 660.096 cv
39.3838 655.488 33.48 655.128 29.5918 658.296 cv
28.584 659.232 27.792 660.312 27.2158 661.464 cv
26.2798 660.312 25.0559 659.232 23.5439 658.44 cv
18.0718 655.848 11.376 657.936 9.21582 663.84 cv
7.77588 668.592 10.3679 673.92 15.6238 674.496 cv
19.2239 674.712 22.824 671.904 21.96 668.016 cv
21.4558 665.928 19.1519 664.128 17.064 665.424 cv
16.344 665.928 15.8398 666.936 16.344 667.728 cv
16.9199 668.592 18.2158 667.8 18.2878 669.024 cv
18.2878 670.032 17.3518 670.68 16.4158 670.824 cv
14.5439 671.04 13.032 669.744 12.4558 668.088 cv
11.2319 664.272 14.2559 660.96 17.928 660.384 cv
21.8159 659.952 24.9119 662.184 26.3518 665.424 cv
26.3518 668.376 27.6479 671.4 30.0959 673.56 cv
31.824 675 33.6958 675.792 35.7119 676.152 cv
33.48 678.456 32.3999 681.768 33.3359 685.224 cv
34.7759 689.976 39.8879 693 44.4958 690.552 cv
47.6638 688.752 49.104 684.36 46.2239 681.624 cv
44.6399 680.184 41.688 679.968 40.6799 682.2 cv
40.3918 683.064 40.5359 684.072 41.3999 684.504 cv
42.3359 684.864 42.9839 683.568 43.7039 684.504 cv
44.2798 685.368 43.8479 686.376 43.1279 687.024 cv
41.76 688.248 39.7439 688.032 38.304 686.952 cv
35.208 684.504 35.856 680.04 38.5918 677.52 cv
41.616 675 45.4319 675.144 48.4558 677.016 cv
50.0398 679.464 52.8479 681.264 56.0159 681.696 cv
58.3918 681.912 60.552 681.48 62.4958 680.616 cv
62.4958 681.336 62.6399 682.128 62.856 682.848 cv
65.0159 688.824 71.6399 690.84 77.1838 688.248 cv
78.6238 687.456 79.8479 686.448 80.8557 685.224 cv
81.3601 686.376 82.1521 687.456 83.2317 688.464 cv
87.0481 691.632 92.9519 691.272 95.4719 686.592 cv
97.0559 683.352 95.8318 678.96 91.9441 678.24 cv
89.7839 677.952 87.2639 679.392 87.696 681.84 cv
87.9119 682.704 88.5598 683.496 89.5681 683.352 cv
90.5037 683.136 90.2878 681.624 91.4397 682.056 cv
92.3757 682.416 92.592 683.568 92.3757 684.432 cv
91.9441 686.304 90.1438 687.168 88.344 687.096 cv
84.384 686.736 82.4397 682.704 83.304 679.104 cv
84.6721 674.28 89.6399 672.336 94.1038 673.488 cv
94.6799 673.704 95.2561 673.776 95.8318 673.92 cv
97.488 674.064 99.072 673.92 100.584 673.416 cv
100.368 674.712 100.368 676.08 100.728 677.448 cv
102.168 682.2 107.28 685.224 111.96 682.776 cv
115.056 680.904 116.496 676.584 113.616 673.776 cv
112.032 672.408 109.152 672.192 108.144 674.424 cv
107.856 675.216 107.928 676.296 108.864 676.728 cv
109.8 677.088 110.376 675.72 111.168 676.728 cv
111.672 677.52 111.24 678.6 110.592 679.248 cv
109.152 680.472 107.208 680.184 105.696 679.176 cv
102.6 676.656 103.32 672.192 105.984 669.744 cv
109.512 666.792 114.192 667.512 117.288 670.32 cv
118.368 672.552 120.384 674.208 123.192 674.496 cv
126.864 674.712 130.464 671.904 129.6 668.016 cv
129.024 665.928 126.792 664.128 124.704 665.424 cv
123.984 665.928 123.48 666.936 123.984 667.728 cv
124.56 668.592 125.856 667.8 125.928 669.024 cv
125.928 670.032 124.992 670.68 124.056 670.824 cv
122.184 671.04 120.672 669.744 120.024 668.088 cv
118.872 664.272 121.896 660.96 125.496 660.384 cv
129.456 659.952 132.552 662.184 133.992 665.424 cv
133.992 668.376 135.288 671.4 137.736 673.56 cv
139.392 675 141.336 675.792 143.28 676.152 cv
141.12 678.456 140.04 681.768 140.904 685.224 cv
142.344 689.976 147.456 693 152.136 690.552 cv
155.304 688.752 156.672 684.36 153.864 681.624 cv
152.208 680.184 149.328 679.968 148.32 682.2 cv
148.032 683.064 148.176 684.072 149.04 684.504 cv
149.976 684.864 150.624 683.568 151.344 684.504 cv
151.92 685.368 151.416 686.376 150.768 687.024 cv
149.4 688.248 147.384 688.032 145.944 686.952 cv
142.776 684.504 143.496 680.04 146.232 677.52 cv
149.184 675 153.072 675.144 156.024 677.016 cv
157.68 679.464 160.416 681.264 163.656 681.696 cv
166.752 681.984 169.56 681.192 171.792 679.536 cv
174.24 684.504 179.784 687.096 185.472 686.376 cv
190.944 685.368 194.976 681.768 196.92 677.016 cv
198.576 680.328 201.312 683.064 205.128 684.648 cv
212.04 687.24 219.888 684.72 222.984 677.808 cv
225 672.696 223.704 666.504 218.52 663.984 cv
207.144 658.512 201.096 675.504 211.824 678.456 cv
214.776 679.248 217.944 676.8 218.376 674.136 cv
218.952 671.904 217.584 669.6 215.424 669.024 cv
214.344 668.664 213.192 668.88 212.328 669.312 cv
212.688 668.808 213.408 668.376 214.128 668.232 cv
215.64 668.16 217.152 669.024 218.16 670.104 cv
220.968 674.064 218.232 679.104 214.272 680.976 cv
207.936 683.784 201.312 679.824 198.936 673.704 cv
195.984 665.568 200.736 657.144 208.512 653.976 cv
219.96 649.584 231.48 657.144 234.72 668.304 cv
235.008 669.384 235.152 670.464 235.368 671.472 cv
235.512 672.48 235.656 673.416 235.8 674.352 cv
236.376 678.24 238.464 684.144 235.944 687.672 cv
235.008 689.04 233.64 689.976 231.768 690.192 cv
229.248 690.48 226.584 688.752 226.584 686.016 cv
226.656 684.648 227.664 683.064 229.176 683.352 cv
229.68 683.424 230.256 683.928 229.752 684.36 cv
229.176 684.936 229.032 685.584 229.608 686.232 cv
230.616 687.24 232.056 686.664 232.776 685.584 cv
233.856 683.856 232.92 681.84 231.192 680.832 cv
228.6 679.536 225.72 680.904 224.568 683.424 cv
223.128 686.736 224.856 690.264 228.024 691.776 cv
232.128 693.504 236.52 691.416 238.32 687.384 cv
239.976 683.28 238.176 677.88 237.528 673.776 cv
237.456 673.128 237.312 672.48 237.24 671.904 cv
248.328 688.032 273.6 690.552 285.48 673.2 cv
291.312 663.984 290.952 651.96 282.816 644.184 cv
276.912 639.072 268.128 637.56 261.792 642.6 cv
257.688 645.984 255.384 652.968 259.848 657 cv
261.216 658.152 263.376 658.944 264.96 657.72 cv
265.752 657.072 266.472 655.416 265.968 654.48 cv
265.464 653.616 264.384 653.328 263.52 653.832 cv
262.728 654.336 262.44 655.416 262.872 656.208 cv
263.232 656.856 263.952 657.144 264.6 657.072 cv
ef
314.352 657.072 mo
315.432 658.224 317.808 657.432 318.888 656.424 cv
322.92 652.608 320.616 646.2 316.872 643.104 cv
313.92 640.656 310.176 639.72 306.432 640.08 cv
290.952 641.808 285.336 661.824 295.128 672.624 cv
295.272 672.768 296.352 673.92 296.568 673.776 cv
296.712 673.632 296.424 673.056 296.352 672.984 cv
294.768 669.456 292.752 665.64 293.184 661.68 cv
293.4 659.952 293.976 662.832 293.976 663.12 cv
297.144 675.432 308.664 682.632 321.192 681.12 cv
330.84 679.824 338.328 673.92 343.512 665.928 cv
343.944 665.28 344.304 664.704 344.664 664.128 cv
344.736 663.984 344.808 663.912 344.88 663.768 cv
347.112 658.8 351.216 654.624 356.256 652.392 cv
366.336 648.216 378.072 652.248 382.536 662.472 cv
384.624 667.8 382.464 672.84 385.632 677.808 cv
389.016 682.776 395.856 684.936 400.968 681.12 cv
404.136 678.6 405.576 673.56 402.264 670.536 cv
401.112 669.744 399.6 669.312 398.16 669.672 cv
397.584 669.96 397.008 670.464 396.792 671.04 cv
397.512 670.464 398.448 670.104 399.528 670.104 cv
401.616 670.176 403.272 671.976 403.2 674.136 cv
403.416 676.656 401.04 679.464 398.232 679.392 cv
387.936 678.96 389.88 662.4 401.328 664.992 cv
406.44 666.144 408.888 671.472 408.168 676.44 cv
408.096 676.584 408.096 676.728 408.096 676.8 cv
411.12 679.32 415.584 679.752 418.896 676.944 cv
421.632 674.496 422.28 670.032 419.184 667.584 cv
417.744 666.504 415.728 666.216 414.288 667.44 cv
413.64 668.088 413.208 669.168 413.784 670.032 cv
414.504 670.968 415.152 669.672 416.088 670.032 cv
416.952 670.392 417.096 671.472 416.736 672.336 cv
415.728 674.568 412.848 674.28 411.264 672.912 cv
408.384 670.104 409.824 665.784 412.92 663.984 cv
417.6 661.536 422.712 664.488 424.152 669.312 cv
424.512 670.68 424.584 671.976 424.368 673.272 cv
425.808 672.84 427.392 672.624 429.12 672.84 cv
429.696 672.912 430.272 673.056 430.776 673.2 cv
435.24 674.352 440.208 672.408 441.576 667.584 cv
442.44 664.056 440.568 659.952 436.608 659.592 cv
434.808 659.52 433.008 660.456 432.504 662.256 cv
432.288 663.192 432.504 664.272 433.44 664.632 cv
434.592 665.064 434.376 663.624 435.384 663.408 cv
436.32 663.264 437.04 664.056 437.184 664.92 cv
437.616 667.368 435.096 668.736 433.008 668.448 cv
429.048 667.728 427.824 663.336 429.408 660.096 cv
431.928 655.488 437.832 655.128 441.648 658.296 cv
442.728 659.232 443.52 660.312 444.024 661.464 cv
445.032 660.312 446.256 659.232 447.768 658.44 cv
453.24 655.848 459.936 657.936 462.024 663.84 cv
462.312 664.632 462.456 665.496 462.456 666.36 cv
464.472 665.28 466.776 664.776 469.296 664.992 cv
472.464 665.496 475.272 667.224 476.856 669.672 cv
479.88 671.544 483.696 671.688 486.72 669.168 cv
489.456 666.648 490.104 662.256 487.008 659.736 cv
485.568 658.728 483.552 658.44 482.112 659.664 cv
481.464 660.312 481.032 661.32 481.608 662.184 cv
482.328 663.192 482.976 661.824 483.912 662.184 cv
484.776 662.616 484.92 663.696 484.56 664.488 cv
483.552 666.72 480.672 666.504 479.088 665.064 cv
476.208 662.328 477.648 658.008 480.816 656.136 cv
485.424 653.688 490.536 656.712 491.976 661.464 cv
492.84 664.992 491.832 668.232 489.6 670.536 cv
491.616 670.896 493.488 671.76 495.216 673.128 cv
497.664 675.36 498.96 678.312 498.888 681.264 cv
500.4 684.504 503.496 686.736 507.384 686.304 cv
511.056 685.8 514.08 682.416 512.856 678.672 cv
512.28 677.016 510.768 675.648 508.896 675.864 cv
507.96 676.08 507.024 676.656 507.024 677.664 cv
507.096 678.888 508.32 678.168 508.896 678.96 cv
509.4 679.824 508.968 680.76 508.248 681.264 cv
506.16 682.56 503.856 680.76 503.352 678.672 cv
502.488 674.784 506.088 671.976 509.688 672.192 cv
512.712 672.552 514.872 674.424 515.88 676.944 cv
518.904 679.32 523.224 679.752 526.536 676.944 cv
529.2 674.496 529.92 670.032 526.824 667.584 cv
525.384 666.504 523.368 666.216 521.928 667.44 cv
521.28 668.088 520.848 669.168 521.352 670.032 cv
522.144 670.968 522.72 669.672 523.728 670.032 cv
524.592 670.392 524.736 671.472 524.376 672.336 cv
523.368 674.568 520.488 674.28 518.904 672.912 cv
516.024 670.104 517.464 665.784 520.56 663.984 cv
525.24 661.536 530.352 664.488 531.792 669.312 cv
532.152 670.68 532.152 671.976 531.936 673.272 cv
533.448 672.84 535.032 672.624 536.688 672.84 cv
537.336 672.912 537.912 673.056 538.416 673.2 cv
542.88 674.352 547.848 672.408 549.216 667.584 cv
550.08 664.056 548.136 659.952 544.176 659.592 cv
542.448 659.52 540.648 660.456 540.144 662.256 cv
539.928 663.192 540.144 664.272 541.08 664.632 cv
542.232 665.064 542.016 663.624 543.024 663.408 cv
543.96 663.264 544.68 664.056 544.824 664.92 cv
545.256 667.368 542.736 668.736 540.576 668.448 cv
536.688 667.728 535.464 663.336 537.048 660.096 cv
539.568 655.488 545.472 655.128 549.288 658.296 cv
550.368 659.232 551.16 660.312 551.664 661.464 cv
552.672 660.312 553.896 659.232 555.336 658.44 cv
560.88 655.848 567.576 657.936 569.664 663.84 cv
571.104 668.592 568.584 673.92 563.328 674.496 cv
559.656 674.712 556.128 671.904 556.92 668.016 cv
557.496 665.928 559.728 664.128 561.816 665.424 cv
562.536 665.928 563.04 666.936 562.536 667.728 cv
561.96 668.592 560.736 667.8 560.592 669.024 cv
560.664 670.032 561.6 670.68 562.464 670.824 cv
564.336 671.04 565.848 669.744 566.496 668.088 cv
567.72 664.272 564.624 660.96 561.024 660.384 cv
557.136 659.952 553.968 662.184 552.528 665.424 cv
552.528 668.376 551.232 671.4 548.856 673.56 cv
547.128 675 545.184 675.792 543.24 676.152 cv
545.4 678.456 546.48 681.768 545.616 685.224 cv
544.176 689.976 539.064 693 534.384 690.552 cv
531.288 688.752 529.848 684.36 532.728 681.624 cv
534.312 680.184 537.192 679.968 538.2 682.2 cv
538.488 683.064 538.416 684.072 537.48 684.504 cv
536.544 684.864 535.968 683.568 535.176 684.504 cv
534.672 685.368 535.104 686.376 535.752 687.024 cv
537.192 688.248 539.136 688.032 540.648 686.952 cv
543.744 684.504 543.024 680.04 540.36 677.52 cv
537.336 675 533.448 675.144 530.496 677.016 cv
528.84 679.464 526.104 681.264 522.864 681.696 cv
520.56 681.912 518.328 681.48 516.456 680.616 cv
516.456 681.336 516.312 682.128 516.024 682.848 cv
513.936 688.824 507.24 690.84 501.768 688.248 cv
500.256 687.456 499.032 686.448 498.096 685.224 cv
497.52 686.376 496.728 687.456 495.72 688.464 cv
491.832 691.632 485.928 691.272 483.408 686.592 cv
481.824 683.352 483.048 678.96 487.008 678.24 cv
489.096 677.952 491.616 679.392 491.256 681.84 cv
491.04 682.704 490.32 683.496 489.384 683.352 cv
488.376 683.136 488.592 681.624 487.44 682.056 cv
486.504 682.416 486.288 683.568 486.504 684.432 cv
487.008 686.304 488.808 687.168 490.608 687.096 cv
494.568 686.736 496.44 682.704 495.576 679.104 cv
494.208 674.28 489.24 672.336 484.848 673.488 cv
484.272 673.704 483.696 673.776 483.12 673.92 cv
481.392 674.064 479.808 673.92 478.368 673.416 cv
478.584 674.712 478.512 676.08 478.152 677.448 cv
476.712 682.2 471.6 685.224 466.992 682.776 cv
463.824 680.904 462.384 676.584 465.264 673.776 cv
466.848 672.408 469.728 672.192 470.808 674.424 cv
471.096 675.216 470.952 676.296 470.088 676.728 cv
469.152 677.088 468.504 675.72 467.784 676.728 cv
467.208 677.52 467.64 678.6 468.288 679.248 cv
469.728 680.472 471.744 680.184 473.184 679.176 cv
476.28 676.656 475.632 672.192 472.896 669.744 cv
469.368 666.792 464.688 667.512 461.592 670.32 cv
460.584 672.552 458.496 674.208 455.688 674.496 cv
452.088 674.712 448.488 671.904 449.28 668.016 cv
449.856 665.928 452.088 664.128 454.248 665.424 cv
454.968 665.928 455.4 666.936 454.896 667.728 cv
454.32 668.592 453.096 667.8 453.024 669.024 cv
453.024 670.032 453.96 670.68 454.896 670.824 cv
456.768 671.04 458.208 669.744 458.856 668.088 cv
460.08 664.272 456.984 660.96 453.384 660.384 cv
449.496 659.952 446.328 662.184 444.888 665.424 cv
444.888 668.376 443.592 671.4 441.216 673.56 cv
439.488 675 437.544 675.792 435.6 676.152 cv
437.76 678.456 438.84 681.768 437.976 685.224 cv
436.536 689.976 431.424 693 426.744 690.552 cv
423.648 688.752 422.208 684.36 425.088 681.624 cv
426.672 680.184 429.552 679.968 430.56 682.2 cv
430.92 683.064 430.776 684.072 429.912 684.504 cv
428.976 684.864 428.328 683.568 427.608 684.504 cv
427.032 685.368 427.464 686.376 428.112 687.024 cv
429.552 688.248 431.568 688.032 433.008 686.952 cv
436.104 684.504 435.384 680.04 432.72 677.52 cv
429.696 675 425.88 675.144 422.856 677.016 cv
421.2 679.464 418.464 681.264 415.296 681.696 cv
412.2 681.984 409.392 681.192 407.088 679.536 cv
404.712 684.504 399.168 687.096 393.48 686.376 cv
387.936 685.368 383.904 681.768 382.032 677.016 cv
380.376 680.328 377.568 683.064 373.824 684.648 cv
366.912 687.24 358.992 684.72 355.968 677.808 cv
353.88 672.696 355.248 666.504 360.36 663.984 cv
371.808 658.512 377.784 675.504 367.056 678.456 cv
364.104 679.248 361.008 676.8 360.576 674.136 cv
360 671.904 361.296 669.6 363.528 669.024 cv
364.608 668.664 365.688 668.88 366.624 669.312 cv
366.264 668.808 365.544 668.376 364.824 668.232 cv
363.24 668.16 361.728 669.024 360.72 670.104 cv
357.912 674.064 360.648 679.104 364.608 680.976 cv
370.944 683.784 377.64 679.824 380.016 673.704 cv
382.968 665.568 378.216 657.144 370.44 653.976 cv
358.992 649.584 347.4 657.144 344.232 668.304 cv
343.944 669.384 343.728 670.464 343.512 671.472 cv
343.368 672.48 343.224 673.416 343.08 674.352 cv
342.576 678.24 340.416 684.144 342.936 687.672 cv
343.872 689.04 345.312 689.976 347.112 690.192 cv
349.632 690.48 352.296 688.752 352.296 686.016 cv
352.224 684.648 351.288 683.064 349.704 683.352 cv
349.2 683.424 348.624 683.928 349.128 684.36 cv
349.704 684.936 349.92 685.584 349.344 686.232 cv
348.336 687.24 346.824 686.664 346.104 685.584 cv
345.096 683.856 346.032 681.84 347.688 680.832 cv
350.28 679.536 353.16 680.904 354.384 683.424 cv
355.752 686.736 354.096 690.264 350.928 691.776 cv
346.824 693.504 342.36 691.416 340.632 687.384 cv
338.976 683.28 340.704 677.88 341.352 673.776 cv
341.496 673.128 341.568 672.48 341.64 671.904 cv
330.552 688.032 305.352 690.552 293.4 673.2 cv
287.64 663.984 287.928 651.96 296.064 644.184 cv
301.968 639.072 310.824 637.56 317.16 642.6 cv
321.192 645.984 323.568 652.968 319.104 657 cv
317.736 658.152 315.504 658.944 313.92 657.72 cv
313.128 657.072 312.408 655.416 312.984 654.48 cv
313.416 653.616 314.496 653.328 315.36 653.832 cv
316.224 654.336 316.512 655.416 316.008 656.208 cv
315.648 656.856 315 657.144 314.352 657.072 cv
ef
266.616 736.92 mo
268.416 732.744 li
268.416 732.744 268.56 733.032 267.552 736.128 cv
263.448 748.8 250.128 760.464 235.728 756.144 cv
221.472 751.824 217.368 731.304 222.48 718.92 cv
225.72 711.216 231.84 707.328 231.84 707.328 cv
231.84 707.328 229.176 709.704 227.52 712.944 cv
225.936 716.184 224.208 722.952 231.84 727.992 cv
239.472 733.032 233.496 738.288 244.368 744.984 cv
255.24 751.608 266.616 736.92 266.616 736.92 cv
cp
67.7517 759.744 mo
67.3918 759.6 67.1038 759.456 66.7439 759.24 cv
63.9358 758.088 61.0559 757.224 58.1758 756.72 cv
52.4158 749.808 51.1199 744.48 47.6638 741.384 cv
44.064 738.216 39.5999 735.768 37.1519 738.216 cv
35.5679 739.8 36.2158 741.96 37.7278 744.192 cv
33.8398 741.888 29.304 740.52 27.5039 743.184 cv
25.9199 745.56 28.2239 748.224 31.3918 750.384 cv
31.104 750.312 30.8159 750.24 30.5278 750.168 cv
26.7119 749.376 22.6799 749.52 22.1758 752.256 cv
21.6719 754.416 23.9758 756 26.928 756.936 cv
25.8479 756.72 24.8398 756.648 23.9038 756.792 cv
20.6638 757.152 17.4958 758.376 17.7839 760.68 cv
17.928 761.904 18.9358 762.624 20.304 762.912 cv
20.0159 763.056 19.7278 763.2 19.4399 763.416 cv
16.7759 765.216 14.4719 767.664 15.7678 769.608 cv
16.0559 770.112 16.4158 770.328 16.8479 770.544 cv
16.8479 770.616 li
15.552 772.632 14.688 775.08 15.9839 776.016 cv
16.6318 776.52 17.4238 776.304 18.2158 775.728 cv
16.4158 779.904 15.1919 784.728 16.7039 789.12 cv
16.7039 787.176 16.8479 785.304 17.136 783.432 cv
19.9438 766.368 36 755.352 54.1438 757.584 cv
60.3359 758.304 65.9519 760.392 70.9197 763.416 cv
76.1038 768.528 83.3757 771.552 91.2239 771.48 cv
101.304 771.264 111.312 765.792 116.424 757.08 cv
113.256 766.44 116.568 778.248 123.408 785.016 cv
129.24 790.704 136.224 791.856 136.224 791.856 cv
136.224 791.856 132.912 790.776 130.248 788.472 cv
127.512 786.168 123.408 780.696 128.376 773.28 cv
133.344 765.864 125.928 763.416 133.2 753.264 cv
135.072 750.672 138.744 749.16 143.208 748.368 cv
181.44 794.304 263.088 801.216 287.496 734.472 cv
288.216 732.312 289.08 729.864 289.368 727.56 cv
289.656 725.904 288.432 728.856 288.288 729.072 cv
278.208 752.256 261.72 770.256 236.736 777.456 cv
210.312 785.016 168.048 771.048 149.976 747.72 cv
151.704 747.648 153.504 747.648 155.304 747.792 cv
163.08 748.224 169.056 749.448 174.384 752.4 cv
177.12 753.912 180.072 755.64 182.88 757.512 cv
183.24 757.944 183.672 758.376 184.104 758.808 cv
200.376 773.352 222.264 775.152 242.136 767.664 cv
257.616 761.112 270.504 749.304 277.848 734.112 cv
277.992 733.896 279.504 730.512 278.64 732.096 cv
275.832 737.352 272.664 742.392 268.848 747 cv
251.28 767.592 222.336 778.032 196.776 765.936 cv
182.664 758.808 170.856 743.688 174.744 727.128 cv
176.472 720.576 180.216 716.184 187.128 715.68 cv
190.224 715.536 199.44 717.264 199.152 711.504 cv
199.008 708.84 195.84 707.688 193.608 707.472 cv
184.608 706.752 176.976 714.312 173.808 722.088 cv
169.92 732.096 172.296 742.464 177.84 751.032 cv
162.576 739.368 137.448 736.488 122.688 748.08 cv
120.888 749.52 119.376 751.248 118.296 753.12 cv
118.296 752.976 118.224 752.904 118.008 753.264 cv
117 754.632 116.136 756.072 115.128 757.44 cv
105.048 770.112 86.2561 773.64 73.8718 761.976 cv
65.5198 753.768 63.864 740.52 71.9998 731.52 cv
78.3357 725.04 88.9197 723.456 95.616 730.368 cv
99.72 734.976 100.584 742.968 94.6799 746.568 cv
93.1677 747.432 91.4397 747.72 89.7117 747.288 cv
87.3357 746.496 85.3201 743.184 88.4158 741.888 cv
90.4319 740.808 88.7761 738.432 87.3357 737.856 cv
83.6638 736.56 80.6399 739.944 79.9919 743.256 cv
78.9836 750.24 85.6799 754.848 92.0881 754.416 cv
99.9358 753.552 104.976 746.712 105.048 739.08 cv
104.76 728.496 95.9758 721.152 85.7517 720.792 cv
72.5759 720.936 63 731.808 62.856 744.696 cv
62.928 750.384 64.7278 755.496 67.7517 759.744 cv
ef
312.264 736.92 mo
310.464 732.744 li
310.464 732.744 310.32 733.032 311.328 736.128 cv
315.504 748.8 328.824 760.464 343.224 756.144 cv
357.48 751.824 361.584 731.304 356.4 718.92 cv
353.232 711.216 347.04 707.328 347.04 707.328 cv
347.04 707.328 349.776 709.704 351.36 712.944 cv
353.016 716.184 354.672 722.952 347.04 727.992 cv
339.408 733.032 345.456 738.288 334.584 744.984 cv
323.712 751.608 312.264 736.92 312.264 736.92 cv
cp
511.128 759.744 mo
511.488 759.6 511.848 759.456 512.208 759.24 cv
514.944 758.088 517.824 757.224 520.704 756.72 cv
526.536 749.808 527.76 744.48 531.216 741.384 cv
534.888 738.216 539.28 735.768 541.728 738.216 cv
543.312 739.8 542.736 741.96 541.152 744.192 cv
545.112 741.888 549.648 740.52 551.448 743.184 cv
552.96 745.56 550.728 748.224 547.56 750.384 cv
547.848 750.312 548.136 750.24 548.424 750.168 cv
552.24 749.376 556.2 749.52 556.776 752.256 cv
557.208 754.416 554.904 756 552.024 756.936 cv
553.104 756.72 554.04 756.648 555.048 756.792 cv
558.288 757.152 561.456 758.376 561.168 760.68 cv
561.024 761.904 560.016 762.624 558.648 762.912 cv
558.936 763.056 559.152 763.2 559.44 763.416 cv
562.176 765.216 564.48 767.664 563.184 769.608 cv
562.896 770.112 562.464 770.328 562.032 770.544 cv
562.104 770.616 li
563.4 772.632 564.192 775.08 562.896 776.016 cv
562.248 776.52 561.456 776.304 560.736 775.728 cv
562.464 779.904 563.76 784.728 562.176 789.12 cv
562.176 787.176 562.032 785.304 561.744 783.432 cv
559.008 766.368 542.88 755.352 524.808 757.584 cv
518.544 758.304 512.928 760.392 508.032 763.416 cv
502.776 768.528 495.576 771.552 487.728 771.48 cv
477.648 771.264 467.64 765.792 462.456 757.08 cv
465.624 766.44 462.312 778.248 455.472 785.016 cv
449.712 790.704 442.656 791.856 442.656 791.856 cv
442.656 791.856 445.968 790.776 448.704 788.472 cv
451.368 786.168 455.472 780.696 450.504 773.28 cv
445.536 765.864 452.952 763.416 445.68 753.264 cv
443.88 750.672 440.208 749.16 435.744 748.368 cv
397.512 794.304 315.864 801.216 291.456 734.472 cv
290.664 732.312 289.728 729.864 289.44 727.56 cv
289.224 725.904 290.448 728.856 290.52 729.072 cv
300.672 752.256 317.16 770.256 342.216 777.456 cv
368.568 785.016 410.904 771.048 428.976 747.72 cv
427.176 747.648 425.376 747.648 423.576 747.792 cv
415.8 748.224 409.824 749.448 404.496 752.4 cv
401.76 753.912 398.88 755.64 396.072 757.512 cv
395.64 757.944 395.208 758.376 394.776 758.808 cv
378.576 773.352 356.616 775.152 336.744 767.664 cv
321.264 761.112 308.376 749.304 301.032 734.112 cv
300.96 733.896 299.448 730.512 300.24 732.096 cv
303.12 737.352 306.216 742.392 310.032 747 cv
327.672 767.592 356.544 778.032 382.176 765.936 cv
396.288 758.808 408.024 743.688 404.136 727.128 cv
402.408 720.576 398.664 716.184 391.824 715.68 cv
388.656 715.536 379.44 717.264 379.728 711.504 cv
379.872 708.84 383.112 707.688 385.344 707.472 cv
394.344 706.752 401.976 714.312 405.144 722.088 cv
408.96 732.096 406.656 742.464 401.112 751.032 cv
416.376 739.368 441.432 736.488 456.192 748.08 cv
458.064 749.52 459.504 751.248 460.656 753.12 cv
460.584 752.976 460.656 752.904 460.872 753.264 cv
461.88 754.632 462.744 756.072 463.824 757.44 cv
473.832 770.112 492.696 773.64 505.08 761.976 cv
513.36 753.768 515.016 740.52 506.88 731.52 cv
500.616 725.04 489.96 723.456 483.336 730.368 cv
479.232 734.976 478.368 742.968 484.2 746.568 cv
485.784 747.432 487.44 747.72 489.24 747.288 cv
491.616 746.496 493.56 743.184 490.464 741.888 cv
488.52 740.808 490.176 738.432 491.616 737.856 cv
495.216 736.56 498.312 739.944 498.888 743.256 cv
499.896 750.24 493.272 754.848 486.864 754.416 cv
479.016 753.552 473.976 746.712 473.832 739.08 cv
474.12 728.496 482.904 721.152 493.2 720.792 cv
506.376 720.936 515.88 731.808 516.096 744.696 cv
516.024 750.384 514.152 755.496 511.128 759.744 cv
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 11.0.0
%%For: (pingwin pingwin) (home)
%%Title: (Page rules I [Converted].eps)
%%CreationDate: 4/2/2015 8:54 AM
%AI9_DataStream
%Gb!R&CMtN@OX7N0"k8%3^d8D8gL<TrGeDOu9%f9Q$mcWfl5g6pN<5$[WoAh.-C@J!lsIMVbg%s7HcaFSm[`/d%([bH20q[ce(gP8
%IeqN#h7\=0qYJH\^Uj=.0+[rRCkm;j%pKo9qoMW`qHpCTJ+`6>`S%U,@r$7rf*Q<'ZVlS,*Z30\4S!]?Qg\jrhE612Is622mbOqU
%S%JQA^HDGZk2PsXmI+E[HN*a_Y&CKBiU6^=io.,3%7Zl%[YFhSmc(jZ?QSRkV#U;9jj!\S='rE!Y?q8*[f-/qrFPr]IXH;2nBh$_
%^0ht1op\2E\,ORc4:Lq5j5FYNo)#KVY2;Ct?T_TN^%p9PU\,G<?MqEB?+mr@5IC0m=.t'>j5KI0^:ec@oACWMA?5FMLS#[XMZ<SC
%]=4HGZ_s,_WFCo!nR;=0/I;3f?]=d[D"dd6pie_lL[*dmo#nec2i9OrL-qNdT*l_XT7$^#rldE[C&Gm!mG"+gLFZTIZEK&;?GukD
%PI<%9kA`I#93^Is4KGkAn_udBBfK>JI:r.Vkc;biX2"T'n6`=N?=2N0NPDuQq!._5g02f!I+W0Wq=j>rY3u>Sc1M/Tm#,6>^&l'[
%H[U#]RQ^W\2]#TIITGgMg#<MYpYT7>[-`-_o,\;/bJQ7%Dng^MH[bL,Fl.W.GAj\Ar8I(9XeWX5l?(Zk?^Q7Uj'A!==o8q;gWJ?p
%l'6K7:[>\E(?N`J!Io<CrS@.9?`IW%fDg)FrAo/ag5^pfQZ`:Dli+6V5O;l!n\`8p)fFcPJ+NNeh(<4U)ucbMC:j47gY+T1hsmoG
%_uA6$q>MsmCP8m@He0=KIY45>p64D1hmT`']QrE6plG/nn)+-@c*qnhrT%Tu]Y=:*lL<oS_tWPc?G1X_mcOi'r9(m<C"2b?7hO'"
%Y2B6Vj0*j?\ps=`2u`7Bp[>g\r8I)3-Jm&Qr)8!?XhI$k.3FDd07BMlnc.._?X;IB>^psInb2kGbEq)c_VaB@5Oe$;I.jU6S!]PV
%Gl4K7f^gISr#JJH\(>QPJN\DRrqbS'7s&tP((C64eb9ku5t9%IkZWF-ru9j3r4SS@U]14]a/b]A[oZ-3b!l3cJ%rLCqam"CFSj>=
%c1S^'S<JsGs8J6a[1dcAFiSs>s8<`5S'TDf\'rp#VI08\UZ^u.o$$NO"7(>Z]"pQ(q1!a4pQmi4lgW*Kl[RlIoWLJDI/_lYgT/6L
%Zo28s2qEEmNJ>@>n6c.eo>_58IP8"pMEcOj9)O"PYQ*>UofjD_08FlKc/E%/FZ@&5XSo7aCG1"i^A$_XlhB@V5PrR]o@=r[_tr60
%g\(L);t/nf:#hC<hPi0C3UPVdI;OK1j1f"8:B'bEj_$gRnlPY/Gk&Oe]$K+mO/D^J\@fq5E-94;s6(C9YPLIOD_F2Krm2J6BjJH&
%GOa&2p8;8I/cp1rIU6AjFtW3T8GM4`c@=TO=TA'#s78+;[sdo!6i4`ELS+P<p?#(bnI,9HS$oeTNm77GY?u2:G]E=]/b[*F^MY,W
%qYS1Z>Q+Bh0CJ9^?LGi#e\fAl2M1rD]bpde]m.3"^V9L*#,:1j+&,O[*$+kTHTqEe>?u]-IIm=7lA\u<mc^ff]D:lu^Noj0mf&4G
%m;H;Le1]]bJ5bIOr$ST=^LM(-*QMZ^d+b2k?Z4eLIJNlu_qj_;r]oe`lfC?>=YuA0QH0!sbK!BuBA9-KIb^^:;#]SjGNs[*DmXe'
%Hhk-/4!1$'Dlufs++LB`edpo>/TPoVq<+g1T.nVNGAhqD55s"9WBpH3^Gl-TI,i7sSj%SB:8["+[t"5"]hRD?>[RL!Fd:[:^:JZ@
%IsGVV_&r4*:3up3nXdn3q>'K_/oH,K-fO:pm`plSMMBk-j.QDJnt<_3])M-p:Cr32I6?9HV>Ma^VEqjO^qX-hIe`p&j."ZfCtjE7
%CWA0B1q[bp*h"L'IeE)\gIOOmdPf$Nh;/%^LA6-95H_'!h/E>*gt_pF0<P7s_s$G57N+7Q?i53i%q0c=$iJu]ilu]90>>%ZI!PJ[
%rS,elD,5P)J+`6prpf:CLTA0R*<,s1ou"a-f/M:lipOuP:NLnm5?uu.HujLOs8$\KI]2dU*s1LnRsoR2'uU#aj)8tMbb^WmLYJ,t
%%j,ZBpYhm,^NhFD4E#GLVpXG]ro227[hinD0;$r7Y?rC.?2rYZ/stdN5J4[SHZe6FHMd]]Ckum`%>.b6>5dmf_qXnrLYlIOHapZ%
%r\sTKV8#T-S<"`fc.0Gp5PE0;Zkp*U%bIi9`PY[ps-7;4+)_&?2bf:AC]4,?7W#D_J,.@>lg+;Sh)GAAis[U.<r/??I+Y<D3:tqV
%kp`U%m^<7%JQ5A4qX*t/BpUJjY2>euDD0lF=VJM_lJ>j[mPLXkIXV"NrPMpb@r-po4*SU$gZ\LI2>kGRe`B0Q6Jl&'>eIUp@HEQA
%BleK>rT<D7d#R$32LY==J+r,6$f_c)^:_"*gGUK39n.#8j?#>V5Oum"nUnHoX8B@[pa5HD1N[nds8)$R$YseXr3pk\s1Z82DYQ=3
%h<4O9n)'\Hl0+PFriFqpRl>O%3?hhHB<=#%GOJ:Ok4=o-hctW39tU&O\Tn'eqn.FTYA_auqspTX[ha1+?bcVCMg$7ka5u+`gH'&"
%NU`,HGAl1>Gjp.TiQncC[sO)J^!sE/h\-JV%6r53r`R]mI_"S1+a\2J]_,"gOY+p`27@SSY[bYMD8/T&_:;'4GVe=Z?CY?R-`u)B
%5+&&-_i8PR4Pq1Ln!=s,\b`H`r5[9ul_N&if/T3;jq%+`lLF0%"!@F6c,85HpYWX\d.#EEp!)7gDsrjW][S6GGM<6BaTsOpr-,W"
%5.eM<s7<k7DneGVJb[^KhfgQs-T$=_Hi*&eDjje"e*mIA)sb"[rN,1Sd(\uE-T'/@ImW2USj2*;BPb!"2])31h!Sj#hml->f(Nqo
%:9WQ&HhYpKhtP$6\W)S<NR#]EK>W.doe#UY?<qrH@9`'tH2#S$ou#$qgX5Ufg84K0p!!`&0j;;D#PV_fNpiC&RU+db5'pt[H3e1;
%SLQIBGBs#HK1FE1]tLrj3uD>eHJ\)Lk3D=';]C2cTl#TtGPC"6gHO7\DgLXd5b#6,n#em\l-QL`rnHo1mf2Z!c0k#'RqVZ'?$pp=
%Ihn3q2[Cu487UJVDsn`2FHY"Xj+K)S]!aI\-;gGX2qJSL(N5pOVa&\dL2uh0TDFe\G9>N/dI8+/B0Y&>p!p\?n(rG6hVZ&\5;P1_
%K0'=?^2G"Zh:2a5VmZEF-al)lUOD'C+(m7/<O[@3Bq3A)>cT`p7YL$rV(loS=kQ":5_!R.j%#U%Xml^W]3AdGj4XEaI6X1*H(WE[
%+)KZWg5BE5C\-8T@Qq^p>H:Or+l5B;Yh@d?Y<VMR[,XZ_i=E]/[DC8(H-t[AX>(4)ebuc7nUj!o#=ACQ_Q[AC7_?*IY"T;j[->=7
%it'#)^/4+t'Xj>BmMD+s+$..2hSmCQfYMtL/+;A$iI1GB(cIhsqt'L8``V-rq4k#&_F3Dihn;.ps*FDKipHRsVG3trqYMq\3rJDF
%k<6,gYgGK'DZk,*:sc:U+1B,WZ%'F$G`<Z]*cp)[%k9R/OII7Ss(Aefr9=Nh$1'j8"+TMkYodfSeIPgp]\P*j%URP+nG=Hb_5Gq/
%n;7_oFN3/Ep?"!P%>X7.B!T3`Sh'Va"*Uqu-P:"t8:D>*Cr+O@3B21*h!9D+)kSYP%)N#8q)=rEjCeL&.c^Prk,J;lC&_n.r;:O5
%`XYIBqNibqs7GWlCBrtSK3u(mI3T5X,]Bf6T)J[-ObOYIprC-sp655@!L"*'H1>U2OeY?7:35Huj1ZPbV)F@H*H"/Icg%a"7[q_Y
%[2c'?h)*$V)ki56fI6E/>j'?[[12)6fq)CQpHF2=2YK>:qq3`/X6"/fa8I]/X8Nmn'5ET8c^ZTQk\o=Uj\X^.2YfG#ZgCTPdb:l!
%Hb6mn7h;fW6h>Q2QHa*l\fB!]C(gG(-`tteCkgCMK_D/QQEu",[NOMoFZ:>pBT4pZ%bI\O%2`G7<EfFBV&VXP*.rEcAY5j5SB]UH
%B0R=^%(s9OAck_%Rk[\1E],Ld8=98$>%plM>Dm@@[<RD5=S1n?XH`G/2MF%fCRa_B[6ktXfeSQSWK"G!R%cY;Qf2>jX"\2(Y\o4*
%R1[o^+54`5;d6mP_eni^=+=:gmp*='[q,BeEjerki];Fa\]jasojDNm'^Ld^:$oX[2#BNtN`t*ZXT#H3ENF!sASmXG:1puAa6PGL
%l`J8mqcZdlXYl8`L>cqhgC)_jcB`n84Di,n;.a&([7L_%[b%n3:RLB`4)8AS#_Q:3m;--G$)`(#\(gP6"`rReE*[k;DbE5eA`D('
%2S],uK4pkua)UD\URd@LD4%!Uqe^(TBs2FWh+";M'Z8'"fb[EUjJ1DJp82Elj_."t>H,;PDdsgQQsJT!^Xo?/>LB86YW-ilF+a^r
%3).jYSo#4ul:*Q\fP=F_"4sdl*Kep@[EUWY_ebMjq4;>.33/PIY+%**`5unD],aR]is@*.=I4t>9ZqT[GM?.Ep@5lnTjRQ=B,o+U
%\N/^<F81E#D/U/*pO2W+'>@sDfk*=@NB=MLW:-G7(s@S]@SaEG=B^bikM'u,[KB$9ae>u6_$8Y;%@;-LqeW\%*:+qGX\3dgmAUtA
%3L&+H2T40SD@;LoD,5;m`R!p3?Id?U;Xrg_]P/9b/l[1_NG-0h/N#_H%^]NGn+^4ae\rHO>Y9+E[@TkTS>?PEZQG((0hMD6Q4oHk
%Vn+JTU#R#MkKID\PDpNBN!57br=,Y5K<pDO;srhG0iOPl4P%fBD:Gtr^6@7\p:I!b3ZKLYHkn)KqaF<6O^8tooc;^lDPqY04*O7I
%FZ[=\k3!A)W4"^$)f[Y\d5J^UOuAS<F'Hrs9Q%ZLQ-oD`NG\FMZ%=9pPE!pmQQSD:,NhsaAmD@Lb'()I"G4sBs6d!PL,fCa<YPWo
%#2Jq-N+qku?e]-)bT8Uq,>HLhW<?ehWm.!7CHPULBm3A3qS4!qV<sLi),D[=&b`d6X?AAn'%j/a.p4c(dkl'0G!?N)6<i1oqdZ,X
%ZJ+0VV/5`fiBXc.bqI=]\!(W('f*TpZeYdWHiIst48=lnXR1FSAm`IlYYhe3YTGK-Peg.X8HY_nS)EIS+'8ZUcd],F!Fscl'^_VG
%9ePBASGT\j]c)ffR9d5J<o-o>$/-BO<9%FT?g=dUHm'l@=E(%Zc?sUO<f.s#LUI]VJt5$.Fr)%MgtVh,NRbOTeF'JZ$(8WkLdHQO
%<d#P=[^'D!(U`Y;2@b6HEp:&f^Nuu1:P7Z9BVTC*M]TR":I0?7qRb@cA\ih/\'%V8[ng9+N>pVu<:)5'^8m5*3jWRrnllO/@IdCX
%mZ$=L^U1g1X)gJ:j/0h[SaF]A-Z(Z7"P=O]/T%Z"0j1^9Db\=3(;`5IfI:0oc'dZu<q:j%B6^j2[OjiflN[t/lc1&5/GWOU/*M95
%@5^*[0:E0"X!))h/MoAr9uc1oTT.h]?H@QL<:%-KIGIYoMe;AQ)gHp#'(Kj8Ws`'I5+TgSfON*4H.iHMEAm@,B"i]J=:I=OGCI0W
%f>[JdRuP\43U>a>#LBGqd(oYU9kEqHm[(aXAR6Ag&aVEN">_p7`I"=p"09o==1eB/$@i]RfA\&1AC0^1\\OU#bkl4^_hdatP84"e
%"#&Pta_reL\nSAE(q0P`Pq>I0A5:4/@l9gnen8S"jsC?S67BdJfl=*7jdQ#tA]"C4#1Ur%M3BCEc]m$uH.oD<ls3?LhB?8b$/)aL
%qII&H<l>012ACM"gmZA[FnX>'<oY"`[gCATGk6&'_'X$[8Q;I=)9O,$KLFK!$c[#Rl:)Y@WSA+G"3-/hU/OL`Fn&ZAGq2>]A[e4X
%l[kae<"e+ZB#;%5Cq%>>;QGucG^1R9\<mbXcQ!^F1JrN<D=9K%1r4Lr`M40gh(We^Z$WTsdh)DeomR$Z$/o\AI:$@XKB*@+Wid[&
%21@@7RZ@@XoO<>=K4ipnF#d^VV6HAH_G7U/>4FNbrqmP4^6,=%k,R_[^H?gWoViaPc5fTIMfm+OIs[0[5asjMfH@a@FJhj($egTD
%m$iq5;rd,FEAU-n,2*K^;J%1l[9*0hgqL6TU"%*153eZK#pI=ad4LjnYUJt9mt/QYB'F;fY1'@i^C'L4nj#8b=AV+L\\e!l9CIo`
%NckWo#"#e'B:Un`=/SncQl!4p2bQc5SJeiUX=*ksUMhmEQq_=h4?Sd^Q'IMM8BBH:A1OE-b!n0n1n#Ilm"Po(!\/cgZ.@(;gB\sR
%cG#c+c;W2YiZ]:PUO^4g+2*)EOV/Acp8nYG"AkX;m^-!OTS$85TQR+DNENVa]3n^="[a-E69k<4ocmNbgKUAD[<K4lTi(^r(:"B!
%G0V[YXkA/UeDYGclEahu+($\R@>_=`n1MK4gF[*^&429IHuhK4Hd,RoGGPh!E3<VThu2"Ihgseb=O!FBPB$<J3]9?o#%;.?D>G<e
%Q#F5l+=al'YMQP\0q?2%TipD"TiPhC(l2cnRW*>83n#LenY`hE9]Nq>PK;WpD@;8e:Y^"(`2r9i]I6t.ZrK!#b3K4!B1:kI>brH!
%k82MCB?k3Q-tWg$^$t(:#X7k,)Tf5#qTr!L?NTW%qu.E;MW0UE37#Ht.9;)bN(%eDRJR0]O4FWDAYBdA)4<fN:+gKch3VV+meQ'i
%*/^&W$Xn2Jm9gDHm'T<%eY>uL"gf>Pl?]-IUSg@*J+?VeF>]4c$QHQuM/T3C_g8Ptg_"U-Bb8]Z4F*^S+-=;daSDki<cNO!,+-Ir
%>/+4k5VQ[%A[!X&CZFF-<QqEHD4O>WW11tUcp"LZd&)*LQ&<n)hM%B(O^7H^)4P4"Jq4KAX0sMTiZ#tKFDGEQ(_N@POiuNf!P=b6
%K!P4ZHXsIJVp4U:&?pP/mUe2"EZ=O`W_)6;fWcRoFYhIgqWO5;gWt,m,ak(U7m&,&1_-1Ld:g6)T\tGql=5g1g!H@)ORBL(p<tY=
%0G?R[LubQAfWEE[`q:YLCqnf3>\XT[1WKqg>^U@gD_G3=g@b$d94)[7TTNG7(2M1bg[8ope88i8,VGO9@h(4+G'u6+)W#=T]c(l=
%m-.!m/tUeQ^(D-,pjfiRR<8G^\=Tt6R7e'B9bTVH4`?k;m8D>a#nhtRi0M4$NCGq=@!\)63PXqqU7=qs4ZaUQbkBfj^tJ?QXDpR.
%2Y412k?q$?8ol]4-9uC;"7;t_Gd"csg6DKZgc2'7eMGl>#^/a`3*`NklV*fNb'oEM&VA-E-6WXKA9:<F@biY.?&,ZsD%S,DL[/K?
%K3njRK'6hl"Mod%.#;)TS6]B)\WF-?X;\nn.d_JIc;7ctXZJ0u=>RsF:C=XrZi<MeBc=k<J[=r=%d$sYBSloKjSK'Uqetd!SU_bT
%'onbu>gKP2D*TFheP/NQq2C6_L?/5RG(U2#+>uUWHZIl/o\iHXXCtt;4gLhZ7"=i@DY1iLgLr%4q:68o=O5e;2")mU@u3p5L"ZS/
%"VfQkUtP81cG5doX`8'5Vo]o[Xks9)jSG^dSd'WlCNa&\dk3eFcaA1>I$!X$aX)lC6cJj%`#2W:?0A(eiX1S??LSLhClmB]pcHa`
%K4Ohu7%BaJ`OcD<NpaT?;Z<X:H"lR*F0$-6FFB491/g.YI``:#Wg$alCJ87YghA\A]fO;LKn[Cgd-a.O'G[rI=.3BRQm_/6;slmj
%3OJ9kI4fe=7qqVe8@>Jg8C20`HH,Ab!Sd>Ae,j&p1*X+<$3%7-_dR"q.HA7@$iBQB%=YKJ`eOj\[,f\=];5-aP4?`lDmNU.lf?\a
%Z+_isT=.7^F'%M@9A(p.pKPL1CHBKmOuY@VZ$"e17D?$Xg&pDE1\pp6H#iH30"Yd!`PtUXM]:qkLc':i2@VL!B`FC?r[8/kT3`H,
%3N$>`e$lYnXH\D7?-3gI7r3?aF62Q4Ve5XZ0q79aPMCoHg6o2O'Y8n*i/*OegjHMNO)gH2k(6n"kE5,hQ#AO$]u;mqP)I<"HD#tM
%PY:NsJI41RP+#4HHHYaM]os>mQ3mEgKM-0M:ul7M?!uIG'sMr7)o7hl2jG6d.XTm:R]GI9eSS33IYV&a$aY<7;[Wb7)(<qg")BAF
%ck,@58VWtYk>KTd7lO;PDn:)K<?>:@2CcMhj.*prcCfDWSHl`'22rC=[u&>T-L!9D)%BNO.+;G`bZ]2Qd-Q$D4h?ckpL</)^:1Kd
%k/%.Z>i!]pN/kFC>Lu4\ce8QdI(9..c-Wi@?QN@'BI8UB8-:YsqkZr:JdftO',LT6%;jsp5g!tC4Y5r*R$BS=^LHD8K==k#&LIVR
%a`p5aAW,;VMa)DHYts/W$f,9MoAeR=PF)/34-Q"k,)imHXeVZs+%P]MoO.g%*SV+6=Ol*RS2X'=j,N83Ukg%&:@0K(IB^$EIb!pE
%9R?,;I+i4cgdnJM7r6t$"[GO4/,q"n&j07F)8l667pr1L!@t]q#RcoC.."<6\i'W+@N>,kk_nn[UCE%s%MMXU"P9*Qq?NLClOZ]Y
%';Y#5jdP4iFXQ\0h88fLaJ*M+"C9`-+$&[2dh5jter[E2$[3_#A7fLgp.^.=qQ>=J\q?=h_2U;bk/W`.+1YQ(IFQ71kGsqMM,t:r
%,4fV9d_m/Uldr"pG2?IsKiI/NZuf$BU9.UXA>(_h-9&lbnZ*GJ"i\3mTH#WugTtj6:G/'ICg)(3#CF5XhRiWDm?A,I>q!'X^kB2-
%R2i\=45@QQoAE)rUH8tj%(cWfD9S3eDRrVj8P)B<W%Abs1f/Ntcidki=/s52?MPkXYRG*o%<'9Cr=jY521ig&'=X2:+tUXp;V'<9
%=(3L83\]eF$5!ED2<.VW1sr#mk]0-P0J-$&I_K[b`&E@AN6@?a.u]9WEK;bHJKY3oT#4D[G!rmnT'I'k5An0?5V$1h6X?:^+m..n
%BI8%2bU-BOOJ@F>Wl[_C%JIf:CF59@aG&"bB?-"k-JF`I,i)j@\[<iuLW)(o>:,(l8aj64.FKNjREYPM@Cb09dX=mjkH,E^f*t/$
%*D3]*qD$YPLVPB:3[\\.,[F*%,[]F9ZYN=27#P2?R]OfsL8=+qk%],bm1rDgkE*gk>p.6j]=.7n)^a&R@r0d(42#/WhEpMu%WBA#
%?MUUa@r.D$T?WZ3%:s_83>[bK$nK$hd4+E=SnG=#N@B**A?WL:<@q`?=SQ,t(b%Y0/g5iPn+>Vn"_TI1C-_n[/iL8dToiSE7gt5W
%^3+FHO6r0D13RL[57q[k#e,n7;red9_atj[LBF;lY;ofq8qNDp8-\Z(h5(@6.k*<8r9=%LT#XRo<]S*eJdL7rmohORcIO.!ou&g:
%$BumN/G*U1Jef[nlYrlAn;bSf#H_F-V9jhS5k0r9NQbm349WHOF;(kM;WM=kL:1)V%l.PrM[h.P*glGU+X#%RqH2'\.q,D>p:J]i
%B:nc*R&'68(UPVID1sD7`^o0mPGSko<2h#Mq!LO/2bo9$B?AK`heL@Xr+"+tL$X=VF5()hpX;bcG94fG(CqIlYu,81I(nf:QH@&=
%qP-^&c4fH,e]jlYVXX#q>0<&kZ>WiO@i\2<U-eaE$=+ICa$J]j@PDebBe[dkJBH6$F:09tG@@-HQH=$D30>RE+>1?!b8Td7hk&3m
%keLIZCh]J4MrBnqL5&Zg_?&`jJV=okh^58Kn1od1dMN+00Jt>opLf5OfN%2YX/SoEU(nGDPB`uLPpSm?8T(XL&K+[b1di"ZoPpj=
%0VVF?j=q$0>P0sGn9jND"R^lPcL#G*3j\!M%9=L$PATN#@GOUQaf!U"bLjFKN%"r8'QU\BD!9Es\k.63?!T%nQ4KZ)/,:.\DL,-`
%=c>!Nk!01,9"$)LE]5IbNp8Rs(u?p5,&G71cu)Q'*@Y_<pSR[aOaNZchG?;Qo-spc_`qO6*K,AQ])9@eEM]R[g?GQo1GJOj-!/DR
%8:N&U':=+h>;)M)9d]Zi=c=9M:?,)S`%g/.=p0Bm0pV9%?RMII#.C&:Zm8ORPfpkCrRRm#g8"s,V%[&O.n(,\379^8NGPL)JXE_J
%%Q/l<g=GG&l!^8&mGSgkZ8aNjW(`MEBI5\82V#Rcrh6baZq\``#F;O6!c"Z<M"Mp/[P]kU@N,E/+sR6o"J1u<(F%?sob'l7U%mU#
%%74YR\n>so4h6Y\45o5tL"Y"P=#'q<?/2$5XCj&-4UbpDV6J)";-\LHcbOW2bq[/1m3qN_I-Pk"0Kj7&RHC5QD-X_>jH3\fi+eMm
%"OfAKS61+g;`Nh1p?pIF1=Gm:iAR57$FXlOQ(eG0CqcC/$XS"^](='@0u?FMd@K^9=3%X<[miU.NtM=[+j+[7>0gI^_Th;AGe53i
%!]T40,`YAXRGi:2?`QluiJgk;TfP!Da3ABCTOO,:5'.$Q($YD*7:CT#>TU+7Je6JL?sY8SL'04bAA(.K(p:`+\.EWtq9;:F,?#=o
%,R4k@9,CrrVb4g$Obos(Z?Jr%U<#FO#(=sYp:UIj?[sS5PNg4B6qBrQV+&/'nX6p(>=>.<&A_B'$8Ft*?2KNSk\6nlgc3[r9W[e]
%Hhl.n[6dYT:k5;5_OOL>lG2B/628)1ccRZ.23Zm']eE[M!P2Hh]HUcF1W;irGp\7S1rm-3:lZAq+cesYTY+$rZ`Ls11XjY`IXg%=
%F1j_E!6]4C<^^N8FGZ][hn"^o#kJbS)g+7!D%kgDNAW#W$=R&&f=VUirTCUaaLX-:?ukGYZ[1>.)L([F"Y"quiY6E8=Pe#eqc$U"
%EG,@UJH>0cNPD4;kH4uB9V*l#eE2aR!tH?SX4t;UVW#as-+#&OR?urY`(RR8q.1q.&AP-%irmcbc3WC8:'J7-ek/+b6te3)=$2LV
%%oLj6UB$i=X<>BB/qNL'Ji:2#d\Dl3Zm1?/Xa_!5HUMWP%D6`@/^7ZicgL%l"IU;(lD;$cB:fQEe5:.F-;Z09_fW,uaZCm5K4M38
%<XQ0(e&#fZB?jmJ9P_h*Wf$d[Fo&KMB]ZSK;="rT:36ePglstB]*5dYS-Bk[3Ofi,WQ$aP-s!@+Dq2^D2U5ZsTk$%Ar\_B=@HTte
%J6TmJ)bZQl_LP@8dgYk-qLsH*U6kos;da;gH"=Ic,;7)sBe9o;.XMN8At)aP)9J,o22qrqRO"HG2iUDiN<ueJ)*qdH#a9$#MJ&M5
%cIQAL;?"\D3T44/<1)pKU`Q-05,5_7jt^MSQ&>7+1;>e=CHYL\TNu)nj_tu^>uEKe=Z_!_&\PpfKE3+-dL+!G-"*bd:EGQLP?G?V
%>leF,UdQ%,ql$I;9id>*@l\7MP8Wh"Np+1a4/C%r[)P/MN@l>b`pY]Dj<?o\X$bXLHY.AtKQsFQL&Ij<)Lb#F_k#kn0Is=@:u!NR
%?+Nm"-)Ms0^qFVY/Zs$Rjaep[rX?=84B7Cm*p+d)NG]hrkT!%2Z^WeHd;Oi+U&U!/hs"t>*7H`@,2aW=Hc+&1=aXW&J4HDGC_of*
%N!j^iBU`kXN&$Z9b4nd_5$d#3`2\*#K7_cGUHT^3fFJDc@(puHW)i'EH.2g]?g3ZAA;?9;cR8fMkGUlQ6P<:dn/b$BZ@8Fig+,q\
%HH+l'1BQG,eq^IP7prGUDFNT/lHMHUqb5e\5T&9AKoshNH%SN1$Y'ca#2=0O8!/9bjU7hs,8-(r,:p],dl.eX6lSWS@i0@*93dbJ
%muP/.4tC0%=;bU%HTF)?'7Q78h4AC3Si7H?J<%J4]^+&q@`*gM<M*`tTMWt2&?R/ZhD9!4J:@-c^oS1faMBbmqOd`:ndkC6RSV`K
%Be0jK592u7j"1*6n/6q7,`sj/Ug>-3]II!@2JLnSMMth_DV&C5FrsTjHN5:j,NP+,&lkGDScnIX*]E.*,6lVm&9<%EHgjatN$D70
%_DR+V1Nku(XZ?p23F'%$5F[k[YQRlP+cj8.c#@LU:,=&QeCKOpaGDqr:P9fXghd6,ccKb9L-.,0Z=k=k9Q?n+ZVd+71j(P30ri>5
%;,03TlVC$S05fh2W_t@;4D8o8$lP[JCbt*!F>IMn(0XoR9ga=k%+Pq<*"#TJPgCV,*Hb#,M.Wp@9#LFm0c^f\s7Fa68PH/F2f9d!
%ignHZ#3K;mDdn3(IROC%H_Q0qI^lUk)eol9=mcXCY=G*;ls?i1`@V*&;AOk?km_T_E,F&n6iXVuC[&W,Y;u8d#5#K$&2Ee=YD<JD
%OACO?!iouDFHa7Wqs%_;W(D^]*ss55,iCF1reDI<IlgR3k`r'F8@hSp2QhEJR8LD(MI3lFj_Dut8.Fl5b>CY.M)-rj,5rIrXCc++
%%i/dqADU"Fn.ZC98uZ0c9jLQrYru$+,L2D46b2`c:k;tb?fK[EothHnZ/V)!UBuAVV2,G*Y)D/.coe<t6@=-J)ciam8/J2"mq*4[
%`.]o%`o@^PihNejW4;V.'^7TFA#?mmM>?2e=edL6JZ&Q\T&-H:)TR+!XG[H.rP#d]JMiUB3'QS!E#]D2XAek+%_Bf%0[Z='G&p%d
%b/BKXFT+]?Qk`%o65&u_IL]PW0?/>M0j%_WN0k\Q-/<V@KW,YE79FK(T)S=o>nfmV<M$A+2?_Rf[[@g9Om4:\/24H59P:[&o]WEE
%=U@_dQX@8.>N8<;jcM%p1[$HF862g6!K<G)2COsqi@(:"7P:;K6,>d)^:6GP:V$;&o@W8\8"#FH1EK=U@8W7L!!5\o?^WmO-jl>(
%8#F'^TL0P>O^.$9o]Wc(m52"4XM@4MW-9R'O]=)1-8N2,5!+8.>&!5o-$MnR^*cMda"7WKmmmOS\@b;S.a&qc_.TS(Dk+[p$56r]
%6DjXDkcnN],8cuL-$im.n$*`Zeg/`,9:e?5!j7b+H1P1*+#5Te&?k7*O-sP5qV^!#a>BAcMt&]4GBoNE;r5T6S\%@c,GY`D#A/#7
%;f=VBm%(mJm?/*8>pb(>HN.:/$BGD0D)]S=BbH=C5?$`7!RW=_HQMd[;bHQ&B*pS5Udf\JBZU$,9cZY.!6h@!PR<-Zed1Da+5_dZ
%/Z*4aQUb<Urd.:4Q!cqc1aHLP<qE5UVCe&eMK-V]n#[8&@_(/%!hnA>MNUYG8OoNk4-^>.G]_&cDE;<cV]UN[hh7F9^*ZBdMCi!G
%Ldf-UAs';?odfIeDT)m$p&$.e:hLA"o-j9K%#s=m#%!!h`%Ok3hpX8GEK<RY*homGRcYU0J[gD$8&Ur8(+HAg/k%4gOin]0M$3-!
%98lb_C$o.QZbYf>Pb".M@!gt!.IA1Vs%47\RtIW&Xip'EV.XSj8,IS":Z;HY^ZsJ\5/tgd9u#'ub'gC.njq#8f(Pk_bRG7oEs"56
%4e"Tt]joio$XHl%<D8.)#_[V_AFl^JC6ZJ_j$`J,P,8\c2OCaEII_8N)&#S-MJK/DGB]O<o:NcO$g1"q,[OeVJsaC"$S<P\`^O'n
%U,oY/\G,AO'<B+'%qbr$>ea5$V7:W$SR)ASaN/Q[>9L)kO`=c;E!_RqcPI=O*q'$_8kYWCD$P(SI6f^(UFFQed?>L.;:O2We!-c3
%c`s@R98[!rX2rAS,NY/6j*[)#lB3',ik*6UXIjfSK<jR[W(+'["s=N6CmE7K(3/HRs66@'k*>*GN0qYf2tgns5t-=@/"*-!@\6m9
%$5A,XHo`O]==+>tQi5W\;gUo?4GR/@2;MP#LI=mj',?*c6kXnj0Z:Nd?lE9a%WmITiU2;+KqoUlOAHdDH>1*8f4cT?h;d'FHq:Y_
%7#k3oD5#$p%ad<L',K8G"GJ="L^%i[0c/sMb8(Zs'<\-nY>V%*`/\6r#m\:6s/22QPde5.(D,uFaKdiC&aVjQ27X4`@85iG!?[!%
%+P6r,C1a>djGqa(io>RH1C2eX7M->mS!E#oO+a^)2Y(m_m`%+9+"+Uao<6EpF?-hdZ-!fIc4HPpC`H6;%'ah+E,<"UFm8H&>BZ[h
%3LEm@1&,n??+hC6d2+kt$5X<&6p2ba?Q]bNM%LVeX>E-:V9?-kLF!Gbc$h#/mjB#/pB[V?OoaTOk7dBaX*uqP1IGe%+i6f5KL^Am
%qSNnG*UOgi>9#Y]jH7a2B1_J5c6Mk:E]rZkI=+=QcV&$tP7,j8YWQ6?f&78F^f'Moh.t?68^f&#&q,=CHAa#)W/:Sb#^:?_;UG>O
%'1(7_&(h-i]cn?rhZS1h$CjQ%PKRj4(+h=:*7&u!$VugI0VZ(XW>p/5=KF1c,BON:+"V,!VKguaR]trXS"j<JE$b(@k*n^#&h8Va
%YC%kK'1t.EUuP)6A:>Q*SseL"Jt#ZuOb$'m_k#N_!1+0f46J=="N8CbZcH-I7R-Hsh(@7?o-43uiSZ#g3$Z-sTR%fiPC^t;TCr$.
%:,<SGa/<t[!TYfm0Z'.W'?ER)6PHWF2QIG30iURDc]NBFg]=6:%;UP*7grXGa:U3uUA.1b)?JodK"*<=5[\;g6?KLcQQ;#PO!"u&
%6:)G=Tk4=uRs4rAn^9q!hN]g.'b7I98;2W:\L\%#$GK]qR5;fmS[o+]\:_2[#D+-R,%WA^*XGbjL7Ml1h:Xs'_E6*3D?sX3)02bu
%D1S)#'.(r$EQ_H?_erjF!9S-nc,2foB/?UZU$gXLlOXrQF\`!aH\@KE"FZl(+)`9a_B6Ul`oAVjGuTIe13-W0!3"5$BEjI\K?X(\
%a/ZM]bn^sGp>oEMOI+@Pi11onM&3^7^CXWGd>(LGHm\4)0P#J*AG%GeK42b?'.Q!C0%FZhF^NWMJo#tsZZ%aB":tf3]1K^m5.3*s
%aN]o2WS8ohXa(teRBN2c1!]oMB"m13Ptl"OILFH*H^$_m#ihS?V\4]*)^AQ]i,Nn2PmA^MdRfn1[f8&P#&$pS2Z$d:k^c@2ld-#Z
%!_Bn_Q+CMqkd(pmTlI9QI97_A[)l]ZkqurJk:L((M2-?D/UdC%1W%J!hYA@8mILO`LA/J\1(n/)4h%#IGpA3IA'F#[2)fs14?k@Q
%d#LhL@()r"$'UY@Nsh"n4;`b>m7Hpkj=Am#dm75ZCkJU$=3f7,NloLeg:V_i$JoW9,7/c/6t9D,pDU2"pG#S8gp.O26`j1C6BqiS
%9hFT`QULKrhP>%]N/^22R/_]SaOON(d#*Jo^p=Lam.&dMU&TQQ*?nN;+ZaFgL'0TQ]24dFBO6C?_NuOAqc"4&3;-4#@dUql^O;cO
%b.3Y29hJFD+[9)+^lVt>Ne3cP#Q)co-DcNNZ*[)RXiB=.R$_$r5rV*\2]4P1Z'O%U,LCZdQGDdTN0V5N?$R+14Er:?RuB5_Q^ftb
%>nog?R6Ah_/eJ+Ta'%h-<]:n_.6_>S/[CL\%rJ?S.Bl<RR+9>6F\8&)7\&R7MKtnQc\Gf3R!u=hc0S[J\;1^8V(/3D,rH#Z2(XD0
%K)3jt2%%Q5JWk*)Xi:Di@q?3p?f5I"oL0NT))o^VWc1kU;3uT03%7;\Yj=\BU8+"rb?,No5>gC8bd&Oq_FYUoL.-f[ENf4dQ8fb5
%i!acJ,u2IJ2e&"2)-7tMHArTNa<_;!EIq!VC5O2_f\3,U=/!iZDK^gNAY#=t7u<Eb.r$<[A"j[7$7BC!ic/&YADB:L;[#q9c/.6B
%2]6hcF,fH3fkH^1_)rYEl`-EgkhrnU<8F?$ZTtBFN%+iXbF=`=<j<DaJq:dJ52<tc?&he60E[6_)-qmYQ.n8tiM7/6[q(2VG'06"
%8+fTrI<J2lYA[;CEGa5b_5hr;XD`^\;TQuV-=mc_-AAr2J_RPKieA8eUPRVNAKNA\'!n<?is\ljr`up+9&".*r,dXjCc`@R9"AMC
%*)fqnUhiuHd2O$>Jl71g5bQ+6KS$)L-=p%"Pa8UW5bq[qo:]Y1WEt)u"baR'7Go=QLTG>jL+0ssAP6kJY7*H^N<d:000R8a^O6a$
%Zq8`D)#m;N"Kuu!Z@\-XOgD>"D?n0*e':g@ZKi8M-oV=dBFd2MiZksE4SXnY9^LKdBX)#T'0PO'M4k;":a$q"M&$tE\sJoc8fOF/
%37u([eD0b<;tUj\S$bsU4K`OQa8@P8?k\tKLVLRokCRBZV5(9+8b_XP"2QoirE"!&&Hu9[#*NDc`a(Hg]':Ve=%N-H'tKd?mZjJX
%2@,EV5U16Pdr>9]KrBeR:coq2%of8Y</!`Eg'K0$!$(>1o,Y-j$&1_j'^M<?AMCI9=X=9\-o$q].2\CY"j6`/k&Jo]e3[ch'@7S^
%^$B8PRIJ-WBfcm/b@Sd/F@s*XRkNM-!ODE%#WXLlA\f&$&[\J+"os@[J&Y7B7;cF,2_&LTRH6X6K`P1Vo*!!Af3MWH?Le4`IHJt&
%O#r3l/GE3*/]u`?Wspkj&XPpt:U&],s(:#eN%0B''29?E(8*1*;@F.n-E]+Yji8&W]Rpc;=n;cDbBY+DSm^Ri:=:;\Y_m>5ac\#R
%Tt1DnbR!<N+p&3U<R,snc]-\X^j1rX>SO9Ud.n96'6hPG`35"E$McQiCKV=@9f5`#j!)(.a/7_b'U[d<9d:UKa6AY3dI*KHL9uqo
%A-8DlA3&1'.HAY#B"V,9R)WC2.?e/P]!<]/m=o^jq+W>oB(AMj[@OJe8L[)PS`>ahqc'd?]F9]8-+g\[E,4rag^cCCgf60a@,5)Q
%lmeWd>LAH2j:GijJtfRAa]LX?*h%tZ%7DKq'/Lg.dghY>:U!FohIYr8EEc11T8`Xm,hOYrOpmu@T"*U(ku`oJU>6EtAhIhfZ-bD*
%XjCSqM4.`7P;6"_@Gql5E7B")Q;]Zej$_&T5p)ZF!b.lWK#IM.=.'`BpahmjYcd=a-c`aB=uL!#G%FHARl<q^1rm%!.etX]Ss8&"
%7"J;P8AnhGM(g;+[WS7cAKPI=B%<*NXTU^XN%%;/%,kjH'2Wp,7+Dt:6C0iu@Ne\9b?g!.P!r0XLITS<Q5H5R@b[?.8W':ZUc?Cn
%fb7%b!6;&)#pu$A&R"f1/I=!o;/D`.[$'4Zpk!:Ub2GcZ(d)[R$L"F$pLi:qcj60&8LKlQ``7:5'"l10%[B2nkF%mWj=YQ/UO,u6
%"S+.@V^QnD%7LTO1E,bMU\@1,'9G?DH'4i5.,g/7QP>uH.C<nYjG=cs=uU`T3dh*qnO<_RfiZihdnT3lKAll.=n2^aU'&]Yi4>9(
%,?IprNQRD3:o>`5\A&RNV=RZsL-TaL:GKF?Pt)n%7mEu8CPl8!k=d(BlN00SC['gi0E!V[>0o-.eklGL?MFY>_'9=LR;^dCV.9QA
%#]:(>lCNOIk[f(]$Oj\52,4jL$0%a9K5UBbU;fG64omA^B&U9#JMA*Hp]Nu#^f[E0l=OU4":,T2,24t3A5370V[Br1krLAC!eMpJ
%?0)_2)/c+VLQabLT7@c4::ujd!j_;%BT+3\Y9cjho_3"WPHr:.X#Lqm=G7tLT>2j@)4ZsfarFh<N5#?=@Sg&""@U7eEH5Fg@@1A%
%lU[;1Pttf2TbJE1:LLkV!Rk?%AQEQI.\Dr.R;5t$Us*,cYM2%p"5aribK;19;UN?(@(.I`-1H)S:J0FW,Ga!b9%6$R<KYCp8Vl74
%B3+D`;O&Z('s(8NL-FKmQ'@E=:I+MT0-3bpD8qdf-`&TZRQ`Y-<[\OFSeO_LFmD8!;k1>A;C>4_e3*g]!d'Aof."U+F:hTN\gnPt
%;%A#r'E**,=;Cg9<]bkhJO*oW`rdW^r`/@h6pKiC_C9U9[EoW.8kdS_G%)`#;<#E:q5pgRM:ni@jsfuQ8U,#V]b:r[35mUKaqUiM
%c8-gooQTt'lr@7+)ZTr7n>"hHhS]['h%=<X0G7gA*Z?e0afT8WJbi74V!GT>1P%g**VE/m@j&`[_(_I$'L@,)f5I=GjS)gG,Sm%'
%GENtJ\WcAFPWP"`ao)"*=[DIY#C!&@8eV8goiA`X8PWi`qjBfK,%(*"g<W#t<A)d9%hR/=[p)lp8IIU7YjFjFjTr[*N?%^tes]e+
%P/pfSFsr0*S4CZDSDZ>WZa.eHI`\U[PUbI?XE0P;9-@!&GTpm54(n"%6P$p\8BR/oPn)<o3<94*GRLR@J/&Zl0^G6ZortO@c3[Ye
%#G3\IT_Zi'/5PcY*WZtiWU4mbGpPeBa*Numj=ur\_)&GWWm"$hi'YuS4IcQk$B\O]:i^nakQFsaQt1V75Uii_Wm41B=Rs=QcT++j
%)?7rQf$uds-Q*<-3[[BGWQ72J,8NdW=T_LUG>Gh2?LF$0<B7n_l[2*O!+f2kBfr;$hCN^L6%Nnt66&?DnR]m)-P/W,,6&%H"rCCt
%s,4Y?Lor3TOJU_:V^a'Ukbu&@;h(f(p<bUCOV>*3rK=7&!a1_<(,S.T'@kbeEWWM6rY7pq:4\oI3D^U':0H^)e-8r6_/CMa]%\)*
%^VIH2-i)7_-&VNA1)3*YE3FMAh$q>4(\jl.+00.\b6+t$JgSbm-]l&JfOC,0[[q1=ENT#h][9`KSsc[$K'B&VPJI`R+h(_m3l/28
%SMrZsMru3PSJ-gsc5aDV-eMDjc4PLA'U)LjbR+!%h_EMj*Mh;6=Ut)G[D"26JtCHfTcFPsQMY-dd`M)HT5ubWq0tKT"f"PJ[OP&Z
%h6P_?/9QPgZ"d,O3rq(qL<Ma_$H"0afL]7>(d=%NKn^@Z-OqrUSYWqEp+t6'Prf"4Kn>R/BUaJ>Wh!O<BP#l]/3916m[UKhFQH8j
%^GDgKnR\r*n0[XF-Y4q\[Li+,MNoaeMpW:0NaPe%"gAM?lN@@LUY&8U;A)eRN5e@42_#1f)m*3f/8Lfl$GkG%XEDr/:^H%]Z\ZeH
%?*t?I$gi[\9#[#7<BGIi7lke3bu%X0,W08gS(As*G?O26*6SM*PrcbHnQIM"IoYJgL;g\Bc$Dp5R7a$CP>RB/L^0IgLpj#4KX<;j
%g[<"9=spj6_lb*;Ts5PDF87;j?*$g(SL2@t0mLthCD</@@`[eYjbMZqIR^E1:?rQPl?EB3H@',`Z<a'.&3-!>QcZXuo!Vg@"dDK]
%h[/^M46@VkZDrPT8agDbF;?YF5p9E"eiHA1+)@ETP3jeoHKoU"g12ZohN^-Q3QZ-H.Wke""$iX2$"tlf')R.iC/C3W_3ZSZ<aLfn
%NiLN!2t3nj![;CuEmANr#6Kgnk-n?IoNCE(m<'t%&e#4]Z+,Rqc:S$9%sGU/V=T-O2##_[q)ZQDQ!']4'4:ED!d7#3PAVNlcu8K?
%M;+g;dT&AS^/2J&(*sE3eP:(Y3m+]4oVQSmj\?q)\WL'sA5m,a<p7?H@>&f'40c#L9t\EQmCES/Re9G&Is3MgohIbo%E[n+jAT@#
%'+bJ:C_]b80fn:!ie^rg-JB,LgVaSgP$%7mL>jKp3k6[JKIhG$8R\0g7Adj\frL"%UhS,lJY,a5;m:&'YE,\2Gq8$Ib&eQYap<[B
%W[DK!aSYYS,rN7BZg:8P8ej[uXBD":g&.S7J^2fR#h2J#:LFM<_:U\SMZ$EIUs,F&VQqSr*^!i;b/,OT?!$m@9Qt7f,O%ObZLWjO
%.k\BZ7l\gD\ZkX]IBTl\MAu2#i>],o$+eAR/DY91Zm:2d9VrEs'#?Y4qSZoD%uFY):d8)hXuc6\Y4>/Q.m);,c0Sa3'?hhpJFpfh
%*EWn@maO[Vn9!&0!`F'HeVq\*KtLZC$i@8&TU=]lAII*!_iW\9V\Wm6:diG"7fAO@2l9'sL)=%N`FWA/A/F>>X:/30Yu$`N3Lqj!
%j!*ifXF?>0H9%h^kS(iQr5-7NZh-i04!i.RiEdTP:.nsZWh83-,F"q&T7H"R%m'LP?6$DdajsJK\[`)a>D1R%7bsV\ah*^%U@_$W
%#@_fm4p1]fRdmjtX#uUSF7Z,T".%6?Q7RITCi[k^l6i$4eil[^D2;cF[Cb-?H1;R'bs^?M^eq'UGI:5`Gq0.&&/]K-WQ0@A(V8_q
%4:$"0cQTp9CR#Ld1#62>r1rh[)thfW5W2L6`-cL#m)gJaT/qR6HL01!6"6WF,c@4*p^R9;dQr$9Vf/-u50D>6#XDha4Cn!f.X3=H
%I9HF-q8/]C+l`/4V,+sR-:l:$\OGTnlpfu(]2pnt@@BI1^XiLrV*GZ:fNa04I?NlOd+RucAapG)A6Mc-\Q.mX]^<;Y-[%mI.V^l@
%V_^U+;?c?RV,*+bIWWHK,,7jL&[V*9/;I3p'GF:H&]V+'YU$N38^opYA)c4m4oo#$+V>JSaU>7%IU^^-SjC9"+h.Vb1ue0SDeN5M
%,]*gmgodD]"f[k@]<'J]J!*\RYq3fPU&l6Iqs2CsfX6'*K$HJqcFS*Nj_ST*PKo?7ngEQQ;rLO0;`VHmrhOn1'\_"Nf##Umes/I^
%#:p]D_CmgV+1(YI#/D-"Zmg2dioZU3\<bZ@MIh;Jh@$Y\84ZW\.kXOsBuo9]QpAY_lkJ'*D!F;/MniBq;A>2%d`L2j&;IhuTKa&)
%i3)cF\jT^!U_l)-+\JAKRla67R![9IHg)<+\RtJC3^^O--S_Z)q;h?dODiB9FNDTPYS^<LoZAQD`#`%g7?pZs927Q7b4I03!ZjXY
%J>"I'n[%usfF&oaS^$GSp<k=#`8%Zf,qj**25372oi.2Pn82pA;>C>2o\e,bk$hS1B#M5rYQSQVeighb@/h(LM[;03/^'_nF4"`c
%.cReVeQm0H%"*CoZd.eSUEmKH8n_6h_:Bi+2.q.LR'f7ge#D2h4t/A9]WkLN_iA?n'=:VYX"'a+WY18!Fik.QbL[X#:'4C1Ihb2a
%)><X)XF67:3GY6pbg]UO;'rm_a4VXVL9,lF1md@p3195*0#O9TP\Qke6L0HVd)-`tU`q4s+;O$V]60G(@Gh;MdubV-:e[9`=nTST
%DBZ!*$@Q*jUBjIAVk2q?MJ:.J@8&<gIm]SG0GVk:bG)3H$7P=hbT\HL0NShnoDe0amM$IJ:M3=`CsBQ-/;',%:0@cIm971S8]1^r
%60VjXW&U.M1D'9*j,$-VkmF,[>*7&T4_GoPcog_=l_#NJc'Kc[DChbr!AEc-B_rCW[rsL]Xq@jqO9@!#`]iV/TKJ\qE<HFFF`gNr
%!Bekl7`S3;+f'/TBt?&JBh2YMPiU";K4;KUi;bW!kCS$t61,DP60YgU"r`0NMIfVIQP1"?A'A'["WrZn/KTc^(IPq>*SEKSTO_#)
%nGNnZ<<i[iT(6oR<1DgS;RUdjkqZf^64`o*<_:e,an^r6b%L#c'm`gTI25-Md7"FqkKUPHLj`NE=U@MUT6N\"nW^,-P"mkXG,-cg
%8M9gDe3O+03&iOSWf7((d`@So:ssncm*_,8]0[o[C!1](,mp=k9ncD!\BkbDc(`6QAf[-!;gTQ4^V93XD)Zf>(,NnWGcEJp+m#^:
%9%Z!(T9?k@+i]J_H?eA6lSJq0DUn:/]qIb@7hc\)_1MlNgluHL$`9tXdKOn+Xqg5K$q8=XlCqTpD6iTOkq"-mi>n#V:lLgpCoJ*U
%:(?N`7kKr^$k[b/mfalmKQ4USL=.ZUis"PMp*$13a/1-@[$W9Y/<73rSf[7"L8"qZ)%"1&b.8IX!5DOF@OTQ873]&&[]($7>!Ebo
%*Dr1IXXun@?4%u$PR6@;(HOTj59r'b<sL%g8&GqF9F7>nTJWW!MUGZ2E><%]clKmO<.cI(+ZW^7I-8kA"R%+$o#R6L#/ZgQ4>h4r
%Kul2ETKjeI0R.t/8eB'BVq@QC!_S4GkW0"n;(FZ-BO>ZX$DgM-h&*p">`_.:C_,pYqBot[Agh#&,PjIk3rj`X\']%F/h5'2b!_Q=
%T&ia'QrgH/2!XAK4.XK`?`G\Trkq-N=_3c$8tBP#$hh`[-]q6L\gJ@OWaN7D/+$7O5d[<(r.`8mcI+).':u$r]%;uTfZFGooEg-$
%kb)GMPLTOK2#qD%[BV-.P.H<j.@^D7I556730-FOh#f"W6IDae],mB(+H="1Gt7-o,mLiA2_p?$.t*R:Ss<*_(quGi[uo;[Z%*E?
%\1jXX_1As/<Ip@3R3I7W,,m<`3T2fd=TpblT0/_[1-r"#o9?>)K!.Wa&_H;W;8qLoTQrT4&cmi('T3sDBM(j?OtK:%e3#C9:@3q2
%(ieo"T4%1lHV!V.=g023h0@prOSLX+q6TV_0Lj>f=8Sd<;G`G0lotEVZ;PM)53_';(EM<TX&ZFu8Jg7L`D7\L3i#tj^26lA"R]+S
%g-N>:-(qR=$#$F36W6ZY/Z5cH8[n%C)<Z8#M#D-f0#JIKd+p7%@`GFQT,UHfCEg?P)SP(*(WB1]SYh3rLrPF!@b:gZ6\H%S39mc0
%1;^QDU,b?>IF8SI>n/m\=o+pukU_,pOl`ZldY0\ojcch`\e)1aMejtT#&Am[>+rj-'*V#8`A+l"[iUoJ:UaNFF<2SH/:@#9_'BXf
%ded#=,gEbIHt!WT$GBm4':D!dp`p`+pog]t%!RD$\fG59Xu)HUC'Bgii\`+(0^Pg6>$qkoB0-KnV#-Y<X)OM?i=ckkr91KV8W#!\
%8ts1,e31&c;S>-K<@="('F%Z3`_lOW@t@!rR>F+sKhjsC`E6JjrMBmt)fA\>ae37VfjZM\\M@L&.sfVU$'-NBZAO\#F3Ir`eB&,?
%Au:?O8U"X<3dV>VkcB)>d[JpJ(u(J<1om3i9sX%Ub#GHgnn`?CXp9bp<'<79H#QK6D8a+]"edGnP,a0Jijp*`ii/g1fG-Tl3:+`,
%aV6PmKaGD8m]=fer9D?'fn$<o8bP=5Sn'g8;NgOP`-<Ag=;Tec3GbZ7.X[D6o<.QhM#.f,N%cY_%cV[t\csT=(\rriG_0iIh)-^S
%Ujg4E-TR3ij@Pg-,G"CIfsMd]bc$Kq#=@FmU_:0u?-/9_Pn6!+pN'oTgtg<l4:)WTRIQbX.Or^B!p@gC-_N2\N3eXDs'<#G&1uVA
%.sB@;1@fi`fo@P*EqBMCUf9Q+R;*q2Z=]U:TjtJ:da0Dpif'#`MOgQDPD1Cq#g4.J:?(A@[?G52FWRHK!<u]pjG<#'R0[*7P:jo(
%,'>[99%Y$?m)s]&l.$q>IteUk\Ies>6rZ8LHhJs_,u;a/,62_L4:*1?X*Be$<:rtGhB1FYa[o"5=JQ/%i^l+pU>Uk_et!bu6Ne/>
%)!MC!F;_)]nDsD`90,n__62]f\sL<];56m#(-K^.5#^X19U%_<B=k/kRD5O#lgSkolq'bDM-6C+7TT1-/i>AZYWl[CPIrS`6qh/\
%,u=+"c_;f^;UfS>j+<G+]:(+nB.gSF$?0/>Uf4B&ZWTWq/on-'W&0C'FCHf;A%E)g.!f>5N\kL\>s1$gn1B@"ckS]8M,Dh8fo0t)
%\+H#dl:IkrWp30ONDU764pA.,)FDnd(-UnmT.G;OM:!l#'(Ks]!Jd)CX*Kko.c#lbhN>ht2Mjif0a!C*e[pLu:!d/qdb02Sk?KIj
%ITBJ'Y1uUgZ\[7*B;9]EaE^YN,_d8*<mRZ2n\i5-eP7m\694+PFL'grS1rJTaT5q42ojS$46a&g`DIAiP8-ma_(9g4)YnR`MoHoT
%SWl.7g?9U$m.DoQ&i+r<lf?_=S;5?;nsrqNUs!92I25*e.X[>/**orc1P6+I/mWN3[W1G28$+i&3rs%3fE1Y0WQB;E:@dN*f*FN$
%bFP<(<&A&7%;DbB\J$1t[2\)h1d&eEE7qPV8N.SEok#M#G3(2OUW__CRUB7fUeAq(O)dtn^@Yt2Y#,rsacT)>]JS*?jGARP398aB
%)g/q.A8R(aA(8e#SY`LM8LUHfM!/G+/"VF=0qetS0MOl<7u7)m=M'sP'>i5GjCc#ejO"T$.k=J/\J(&Qe&9Yu^_pBWQIW.=G@Cg6
%'Xa$&P>>`*PNT8p*^O9\AS0ISM45V!&S=&SqY`3_AL\Lu_[N8[-Y^'Tb+4&R=!b+1nm2\e.84<0R$R;40_p6LaDrZS`hQs3nOceC
%8UHbed/>0u/e.8T]otuF&#=nEMkHRUVWgkEMQ[,30/uWJ+pJkKlCF:KcEC!3`TL/G2j#Vrge#Q$2J.FlkrF_Z'e:iK+aBM(j*8:K
%:(3AF.!H;YEE,(lRosu@6al6_h>h5.LMOb(&82+tONRE.!AZ>TFC]p/dc_AK:NH%0Nt#<6Eq#9T>fJ\\]q,C'@`_&#lDn::aO2Vu
%IA&V5ZCrb>"HH#TFD=N12H#+4$hQREoog+dnjjCl#_Q`CfVj&cJqP2ACa\b`OT)TI8LNp6?n$;5>]-GqV&9t28QYL/9u%?-6(!T"
%.4<8-PW\377m&gW/Fs3U#TS`)kXi5tRMiY[B]XKq`QOA=h0%&4-clr;%p#H;C_f1u2?O'*NaPQ%i1fC;oE7PtUm-co?PSHbn1hMS
%-^]5V5?C9bpH;T<kFh)d;=u30]p("-oL,%'<V6Lj^]JY;Zau4?WF^riVCX7:+.8cC\^Det!oAm?&g\2P4V9?JSn+!s<]pcA1Qq5S
%#%L0N'7=gb%U93)TG$r,BR!F`;j9H0B[#kcd4,$.gRjfqaW<HS->FEc+fVMg@`]4*^f9tPdF'4Yk]C5cJ"Z-7E!n8\/;p)"!Kl:@
%$XqNg.]&je,J:l',FtdOj"r)R.(JSFMC+3`3[<"CXQpn^mB/Pl`h"=JCN4^4f*5A5GFTsT.WI&Hj9]6)!n8406jR.&mpp!+"08!Z
%b%bCjP?f%c?,_geZ0W"uP0%8nQ<iJL?(mJ,/Y/Ka\Bue$)CJ`3W(2].9bpKTs)4*O8%cXZ`mf[E]ZDM$1P)eiL!"SX9idOA<(>`A
%BH!-ofd$MO/">m_Ojo3,@:ZMaiClN+40G2%O!K[a-EG!&<7qDO-c^au_BtOJ3)nL?EqItbC=;7`gsq9I=X\tQZY1.IW%+6pckT"S
%nHfs@=J8FX''ACE>ul:kSb1nf=jb/aRB<]HYU>/s`<V2<]Hm9%7"LpL,mo@D,[?,+Ahl-TWN/+dF2V?1PL1D/IE@Z?D(cN_lBmMO
%,2])/N(TQeBbUPtK?3-"X@87.eoQXKb_PtD<A>qROZFQkdf?.j5lAnd-d<6>ic4\Z\G*X"JJl`6..)h8$A$nS4DU2g8OE1=TZtXQ
%cs'V;,eoS?9?JSL%al\uc,OO^OP`[!3j^3;LEkdu&'BY7B<Xt;;70pITX%KCk+AYE8H/%k*OM6rM?V#[fWOb,XB@;=J@m:Q+EiUV
%+F`H3K!ahlg[jdmnL/cus4"LSiFbA>r:.OOp655f=qNrQ)-SRsg(ng?8WX,='t[sb#pU&+\R'^8NFkFfPAa4/aE9V`Ag+T"9qk<L
%nKZpUB(?66I`8@t#:SQ+"&'V>]&6<u#T/Mub:EW,@0eKl(g#qM92uCB:o9>rW(\bkQtUE>RC*a^OV$g+L9MA\$NMPjY/-qg72=,`
%@L"K=frbK.@(!2+Kc7gH4'5.H!p1'QmP`gbM">IuD%-=PjlWCW!TkG<pJU1]F.!`J9NqK3gG)j.)P7YJgbLSsh%gIOc;LIn_VoDH
%4\an$6AgImR9;`G]?7>d$hI>6<+^0ZDm?N@G&^tk)(YuSmP_ft(WcEi[&T<:FtM&`i&*eVN$,l"Z-F48!M#/mM8nq7#(d/G2Yf$o
%j_1QN&'$+>D,00R7s%&!2S=;Tf0^UA.FV)PN(e9_,K9iF"'V*I3@T*lnCo3$8.\'C@)Yd8cN24-WAap+8Dn4o*IEq<:jB0*To(WZ
%FN+fS/K2SD%$h1Z6(tr67'Yk*K>&hZZ9Spo]0QtOdtsLbNF)QAjcj^,^:>stN,YagPsqb_!lm!<qG%#V\8=a*a^MaM'K*q]k<]j#
%D`L=f8p?Y[qs*Zno7>ROfl$8M.r-]!@BfX<-\;E[-/cBC\5_h8ebanB@_V9W'%)Xq>8Ya)F5<>%cm'4_Mb3=pCCV&<@@.rGBA`Ok
%5g74K(`ikiGgicL<g3%S3mTsYq\V.E2GAR>J?WTo(0'k%ai!`;U"PJD%_FB1W@iAS3BMttNW"sf/K^[kil6guA4-O96q'4PQK]WO
%b*4#HfS2U>@NC:gE1D'0=6E!dY)0KJCpoK%QW;(u31lkrq4ZcbQQ.@WX<<JJb7rf1\lHSW+uISRAX?P]:>4H\=$=>qS0K[m.e-'N
%.U6/KCoW(/=C"fo2iWE+7,n-[^S4YUNspY!Y*dnX^rfb.$I?6"QANR.U;fd[G9*N<\/q$-M9FZ"PA612MjHXk'bi&0Wb=_hhchJ^
%\\L6""2a%>MrdnZU)$KD<pN+q/J"bsbKmDi*A0]l"XA#"QHG.HS)m@O'/*02/Bk*FW*(OM9UXWieiYX(,"6/G3hu'P_J$D;+WB^P
%_/0Li%+*'J4j8G'J)Q13%;'_a\JH@hjK6Eo&p@QJ`=b/NG!"6u"re@6QC,daJr*OKERmigj-5QTfRUO)PGL$#TU6PK$HCdHO8*kJ
%NPN/#36l[+h5%&/0j#Eq@2+?+U77%TJ7-d+cZY.lR`Cii]lqWt5i4WM(Bt%X^]@:O`7W9$s#\L/J6hjm'ZAC(Z09,$-9KM3E`dM=
%iBZq>#2m.=bYJgE9idZmVTfkjU<B:@ST4-&`i\'F55E0W2ag/UmdTGB9\EbQ[Y>DAq(>8\:IhOEp\rsKT7Bim<b9N)2"-#!'*W%W
%h*]BNl5lSij^2;75^+#rVCnpE&4Jn!AK<&H8*.3k+cHq(\%%sA&l&b`<W!!$K2e_qi6CU;0;E#G].aoA)I@SdL@OSJEQBWZa0Q-_
%"I%dd]l&i`dR)H`EFkpZ?4SYDXr[[uQP1GEAhp!H`N9t8<B.SuX&qL[[$Zgc6sHp;YO1N=NVtX",eCZ(1`TC<:$j=],bLh569%H8
%S@H1E)`"R5PXU@>ZT[NBE/=i@d-PqTN4VgdF-M\G?enB^!p(B1\3=rV\@-o5A,LFD<+c5ffR@g`_2)`A,/<gtXe5KNEQP,]&YT=O
%AN4kaLmpe3a6OtphW.s&pW\C*!+Dd?U=VurYQ]32"po!<Ctjn!j"taa<l^7j,oQ!"`7Y:4k=07We<L3SUG.PYlPXKJbfgM62l]3f
%9^IU+egp<$i*\u%N+;#BAT>AAEMMc66%g\HiRlKU7GaFl#%lfBY'ffoKe>VBKP\T;TMFjhFH?DN?V"_XHH@T[1b:F;0JF>N[+XDH
%/q&8Q:34eBaop.Sk+B:$pAbr3F!jlXUD<mi`Y@O]F)IMhl]es3TU:/X6tm2&2U5`9H=B&bB$jB(6q!Uo5ONuG9HJbPlt)'I$I#qo
%J:hT"6LFK07'RAqS9IAChS8TMTU8O[MJoU`>`27)ct*]$n=XUk6#+K\[9Q(rYORm](KG7*`e!-N@.I1XP"nq(GI_93Q"<SqeQl[f
%6SFXej19&`d!(`#;[kQ4r#iL=A?Z3n9?Ocm!C01!aGVgUSSf%G67`*Jm2maT'rnWh(Ah8rJ-i0XI'8/CjC>3c-;aesd!h86C8KXC
%[7WR"M^Z8`qMtufJR=hlaN'g7Mi".KQ.\%bU=aJ_8@=Zg(a->q?+0f[*qr!XJ&p>CIW*QVpd5_P](6\GG?.eG(nWLBP[dkO6'],g
%qP%_We-?>%;2>\r@p)h=c`M/-A08bQgs_No>$SWA!Ln9>mhk?!nM[5[%4)O5/S@C&5tBkh<`A6\\[o:13]1JI+#c7^[\VOUq^*6j
%M4ciCSOO>rgr)oXH.CG`$smqT'9,s@r0A<)Nca3=JAnpHnOB2!C%klMJ]V)R5r\UuGg9ALI+mDUlBkLfkQI5FGLTLJM"T.R>,Z:g
%_HULZi4(#+F,HNo4Xbb-GSYT+8+l/5L!YHS8@LkLm?f`uU,=,EjIa5/marV;3+Oe9;nSF*$%c-$7g%k*XQXh+"=/O9/LqDhi=(G*
%@pBd0pfWe!57s:b1\%\J'j-=/+3N!2P,kAHc"4#7`sYUT'c-\VGq9R2=t>6GWk]!MgDGl0dcCq,gTBBe0i]"ng+=d?,u-a_qF/Jh
%Z&QGs"u!i8Cr'2=l%:#.XU/saZH/u']B5N8kmG6SG,)!5C8,K)&\F(kD?Ct`,@LV1Sf+@4led7;k^"(tI).bqSmh8B^]8uLZHKu;
%DH]h"KsP?d@c?I/_F!8jS=*36$S.$c&9,ErOVU>X+"5E`2B)G:I"Q8<_F=qq(h?kT@Sp\m7%$GpRsm/7Q79]Me%R\9n(qaRa+Ut@
%XB.W31R%#])C!PNch9iKo4("q,%<L=EI*tG<*9js^qbauRqT>d&.q<s/TH9dSl?V`C+Ei['PXgYM!92D6CHImVL[S-F"]K]D)1EP
%O\-r52%atd/Ik/EjO]+QE''\h[I+0.`3D)S`B2:c%1(@6FeNOdY:9W'<k%L;',^K$\/ig(_CEKk(44AkgN`WABs)?"9)rSS_GB1=
%3T?`Lp8f(b,4c@=nh-l,2_b&>+>?!8]B?',B]2HhB5HK$B3AA?p&Va9?.djI.aMc4QA-"'.@djg\q&1EqufY*SrbLD@dlbh%b3`0
%(ldphJW^'_Kn61*e6'YfK0.;FB-\^p&Ig-Vf+]V9fF%>d%TW*Y.(VG0?*M<i$8?_O`OT>VSej.a7cV$t1k*6\FP]S4pjh`Ydf?<U
%/3DlncWq[#ptC;Mdi41i`\_nc_G46[@r64Co&cq`B5Ng%=FU[1m=].+;HVrkaX4[[SpF6N"]Zsb)db3!j><W`h5G+S'MjOW?tZIV
%TQWS_2Wa:ieZGL9qKqor!lL_LqYe)DO,u28C='?4&JkGAF.JjfV<>PV@V8ZsH#Kh<X1$dh4=/Iqp/qD2Kt?@5jkLr)HdHZXUPI@d
%pW8bQec`aBg$5H@2so-4>oFQ'`lUF<Ar(jj,E#oR)GaHf1dA:N)$aY)a-jL1(pW=Qcg61"+,#,ITS(T.Cicn$KO"b%P8W;YH`6!n
%<QR^tlm"f\eIs(33=;N-D.047IB#CDCm3*.Ajn&N;+K2KIX!*)j2&:U3i,EZ0I-Z\dR"X<6@qOuFFe17[>;d%2r0Kd\3H';[U$kF
%dfL!`;7EoffQ2u;!0#T`5j)n59R[:.bkL>6"Qj4L]*mph,J2d7?!(3n#/c@rAA5f$j!??JV&U@,!cf)D[S5+;Kn>KLOBN<oG8:u%
%jOZ(X?u3b4"3n!<^qBu,#\#?dA2a!DN$\HE?LM;+fk_uL%<EegcNk+M$)]J&3NE'(;`;h..e+>k^@;"-Yf7ZY,;YWkc%$*?1+4qu
%O*nd8&t0;?(#TM@_=QKT#=F<j#Y?_&M&hPG4KQo4L@@V-c]g$b8^O8-A1b4bn`UlP<0fjQ,7>/BOh3:b6?QhU1ihi3UGUjVDE+5W
%4K*H3Kl?YBf?;LG%'TJC$EGsZF&N+%Kq>rENE8;T/h,iqGm9-<QtPa5`O,O3?@A+SNREHmdP70IgIA;]ac],Hq$)iK6dki]EO-6)
%lMR?]1_)^Z&K_*CO!*?2FRQ`;>=#3$'A4FReV!Mf,;RVM;,dXO(@)UYpO2/?cd_CP,.G<jJLh>hKkh78>)W\`%@St"QApKJfL4Bu
%SUlteM?.NL\LflS[7hE`'1'[Y\!1s9!8h=!RflG'E^:l/.]G(Pki3D2;=(Pj`L_:!R-"l\Br?oeDF&O:(#D+2#$.fl6BqB%B)13C
%4&c*aY33(rW(Ypq-L2kuGk0!2$tL8UYXp1+-)'o(i:1h#mi+,9/OF9)GtbTGSSK!qGcWm,nD&g:T3KEl6qfsb*Tr(79K?JaHu*+B
%qM5gN>m_=_?m:!8Mg<dn>P:=%g1@W'PDV[m?o5mkEQ"B$'Z)J-3d5ZB:LO9/<DNj4,H@DQJpR0f1I/^#$QTIL`<R/g%n5,!;i8qo
%o>9!"<HS@om%GhLTL3B`U2mqM+U[&\<<ZduIWKJBFP04Y^HrorkNr.IJ2D9W]*4Jmg3deF?@aPm5tia/D<hEj`!aWf\#'.J>Nqtr
%AZi[`'dI4P9Of+pb:]aW1=oQ/h+0cTBtY'QX2W.>>4&*p,WsS?Z!ACeFY^!TcJ`Uf:.0J&#U*qoLlNN"dD704UOp#Z/eVMCoUTO5
%b*H+pi.U&Sn-BGfieV2D<sl*]B2oN0MH#.^Ls:!ogsZjA7PuG0.he7EO=?h_55"@;1U]#;CTJ[*7!&GLa[97MdKFt-mbr=4iPG.5
%o`4=`d;rXt<+>!2a8MKMQ`lfR6F77WefKVm7GH:bBuCVcV^\G\5usj;Gi9O!5aT:?`4@9V,Vpca4g5-Amu''p6l4g$7-)^kCE;iC
%<chs]P_GY/`>E(;1HK(><&T-M\JEpnKTU^I5)m2:=]gpOS$JnX98"Q&c*2"HT_,MAHLFfc,.8eeZ#4/=1\QBkM_nRh3sb$a2+^r/
%Nr.#G<07DmEnJrV_a)^a,J+AC&XO(ZmFXQq'=O_jccgKgBGRgC&HQAdY*.7(--=FMW8j&8J1VN(66Hp4G7IiO'<-qTb9jeIGoR[L
%-ZLi0.B)pm\2<')^+d-]DnQBt^BNcK.f$Md*37kSN5Vs'0Cj%=B*etm6fK6<fsP.PE#T"saASCj&h)#P9NlF-E*hP^_#LFL"uA=]
%(P`t.Oh<pj$-$0;_He>1=2q$Cq&ps5CqO84-2MaHb8;uh?6fj_bMgThEl[\e\2)R<#^RfX)6mZ=$\ef4'q8,>^8GV]e$,S\UL1Yl
%lkgAq8gE(TRRMCE6meAeJSF6)[#R`Y=?jQo+Zn;l.<._q[$F7Hf@1T\@;0K;8EY**pg8h'Cac6ZmS&3O4!!8@Za>>`hfJiS)?Jf&
%OF=,J0[)*YH+e=7M,fJkOU"f&?Ol;=dFEHIoU(1lIgc3A,fN$i;)Tf?prI.F#d^r&&3@gC0,QuRN2gX.GN:]KlE;t"-I`hfjmpEZ
%RAaea6E#`<?#n@ifut-I6^B(rd2cqO5j$\+B"ReX)G_[ci>$OdVY;![!e,"XG+Vg3k.0@h_59(#?(81C,Y)Zj'-1ik))$QM>0Te]
%mbUQC@'K>pH]P@qL]68JLfrJ%6;bu*=BLrXLoU8:bj\0Je[3ApbfG@$1jalf!YjFPmLsPWq(jYn/Q3c`^q+"KJAp:DF\q!+rO1mT
%dTAI&VV#A5(s,:_E%5Xgf/.6k<Y)?c^XjeRTp4uE=i*r9/()k7`j/;RbX_>j6r7^%&23.]8++9EZBRKc.tCU^,n:IhVLTr`!'(MC
%*E-Ku")66Bbm<6e\7o#)9Ag`_o0EplVjW6]-EqA4iA;:h:'k`\<jp*9`Ja=fe5RNl%ub/1&#6/Mb`atI1g0LOb7SN0@h0#1UYTbC
%X#kVpm.?/+\Wd[4VOV?,dn-WLGD0,0a09-'d414"Zp^u9!bq0VKttXq/TB"8=/Cok$n\3jBk*AbnNgSHYX:'E2(Q'7m$\>nAqXk8
%1,/<=5:k)3\Gig4H)LnR.9d(pJFtY:c@O63]%]9Z30JpR`>3#FM7^.@6NY1c6s:F[X&%b-MfD6`D!/W(l+NSNNBZCJZ2&cY$)II(
%j`acY[s&6AkGiuX1bUX[6(uu%g:5?Y>p%e0n;1<Am39^^%tgo!O@!ecW_1)oT126.086KN@$$fo:)(<G,#ZqZQ,W\I;R@5$H_bA)
%WNlolk(;F%F&=Vcg0uDr\d("(7HRQMhEW!P)j,8IEHN,9rQ9jLH$Gqt[t?Lq:gnE2@5)?#!b*d1lZa0PlTmljp3\%d\">T?="<8.
%B0'Tq!EZF?Y/8JGg[3cP+"2<;imukuR:i+!^DUYF$W9ih/P.[u".($he'UQCm,"-\C?1W+rH$XH"m(=."I&e1JqBIG4#YOp_[@eB
%JJ7RbPm!_F\l1V0Rg6C];Y0'<VcTbMi..79TUm\M$D&.Cr$dmE/[u1%O?;jhKQCT0@27?:4X;l?@T-A0WLS@7BFC6"7lkXJDo%p]
%)E`?pQIlEM'EDKra<d@AhBrsJ"B2W,9lAt?Pr7+5#uoopd;T?B3A!tPT,)lCQJ]2n-\c@_Z_en=-cd];X&NBY#3m1#\4PR;.^mu@
%O+<S,.#Y.0q3r]l=AIXj:r7d96kqWnH7]8iColej/`XsAQsjfA3K)P=J>K6*%#$4Km#fd;iu+mp>j3YD$l+Vk`P+-Y/pu.CgIQ;G
%b-^tUFKC0th:P2K-ru'iJRC6\A`-Lo\En+kOU-h9+OFGN&gQAh?J/F]o*CD1j[([WSCu<!D.W,jI`L4sm[:kUc!<+<h6/:gFs*$:
%2trLq&:D5JD1<FZK,>[J#he>\@j;?ead4R6YOV?I,/\_q):X!7QE:+'>O%Jr%gU23p'=a-$XdAnLKN35Ka";.H#=b/(klcoc8"r_
%nnALLiHG"X!V*RRePh7)XG)Y11WJurEk.TL7KW@q-u9<.,dQBSjHG3A7)3M<rZeIT643:nko+-WM'2m_eU&u"*1CJk>22_<A_eXe
%g8J9JL8/pdKo.`@i>7uER*7fp$Q\>!l^s"8MD0`ZZd:1;`YE/;,qSq[elb4UZire?1F?!hTpUHA:-@ot#sT*"H8K]Y!Ms7j+V9UK
%B1?(^-BAqMF,\l<a^>8077NJt3#*+EE0kR,FuYH_n(9u'/lk=\LYh/5P`8ml,RUI8OLCKF_JZpll&9bT"n>f%5SVDO8P3Q74VcP1
%<]*PFVmN?C'[!>n7#88*Okd>i@E]i"m571tR9ALMTQk(#J1/5"QAna5D-`&qL31#$+PoG3W42BQV2PGGMj8<9;U&npEr-&ihkFn>
%IUXSDcSWNGfO\N^Wo&YsZ4<-\$_N-bX4+A4[(2_c<kjMYrLc+.acBl0.HM,Z+g_d7<L!'=UcJrtFOPKMLD:bbCXPm:B27so%#$&a
%ZdBs>aj"C/47<S#8isFW0CF-85F217q1;p'$Wp;q$!g@dB!u\4,+\[B<H8c_[u]*p8PCI8NXAN_0'AEaYnUe">"<LiA5ag*nOU/6
%o8tQObXqpb3@`6FqCT$PB87<=R4WE*F>m1_CWFFG3ol#^:BsTGY]4N67PZDHLt#o-NYa5fX)K^+s+1_'XaOb9Y[oj20f/47&I,+l
%q9Zu0Ci$ulEuZ*7Wf<$5$g'.Y)!,4L%P>1MAFO"f\-sl1\<2+e'ckXBg*8V=#mUR-$4,fLN^MlKq)r6Z)X3lY@IY1W+Bjdpgn8PQ
%AVonL6T8IT&^@I?9i9m.hAK6)!$?GX)(aJq4*PRQ%IZn1=To8EDb>g0;VA3HRHgV1*c:88\OUGP3%.3?13Ed3q:-qUfWD&+0&U\G
%SXMNNN0-8l1A]FeDmg<[D_W4N^fe2YY_,JLFsWWi)D,6W.F5'=]lR^hDp"j("_.Eh7iR0&Z*:rb\C8\@gLVstcmC-?k.\:YXPDjd
%K=<KsMNiW'X+u"Y,;EmMa!`-`r,=e\=cTQdn0mJWMi1F!^o^%_T]1>7pHMSMJDG$NG*ZEZQ_od@_dhC,9N\07(ZI0q6kgN*R'P(S
%7iCf!bpNWVJ90BQ>f,5!VkC098D?/).b^6]AiS9d.;W6_)ZJj%@G5CW+)dGdZ%_H^I2T`*8cP8\3XP.G-tUg18$D;#5Q1S0oEJ\U
%Ls@^2'HRN[:M5)d#W:a;_2p#K?&U68?^u>#P@-m@@RdS.RU+%uG$pas<+m*.*NOB"0MpAL3)VYqUbGkalD:T%R7faJcu83e<CKS!
%IR1Hi.PI<>rD:F6#*d9H[YD,A52p3:o+eUePprfI1gCVmK2WcM=9lD9PR9D;HJoo)=Q@?dQ=XTL!k`8k%EfX59PjqI\WRM#lq/S[
%70mJuL_hZg&pA\3]ASAT6$OGF8'X=O2<4SHRupR<k(/I"eiHno^-(k-FMKrm\lTN])ak31d&`7cN`ok%T5`jV&.iDB3K&^V4B/bn
%dKn](DO+tT=<5#i+tn&8nPOlY?L=&L\bhopbnCI@A,7B?_)>:_H],f"_3IjOR!1>ONtuf*)D7>:/7jm;4]\7p%-.iW`)N@k?L;`1
%l:o$BP=u[QVca1A7"MBaA)9>3$?uq"AY:;k:`)D7.I*h#qA#.AR,]-)@RdU3j.sd:`^K`V'K7V$die`Ag7j+G$5OcN97i'r$R94D
%E3X,FQ/Ad#,"nCtQ;L,#>Sl*N;^rEifJHB]-7$+R1_1JOa=^X2%9i)ai$LlJoe__ts2^"nBs&o$g!!0KijXRn2D)3GG3EDaWhA%l
%CtD*nAB,KR'0gXH0K-%#UtscX`)QS)P]Lo7f*lp=a;?7T+j=2"N$a_(YudfJQ?P;`4snaR.QAi(/hqQ>)t-Bn.O%[88IC+jGu>>0
%4"Z?j@M3;^$gQ=.3@C#Qhc)P],79)11BsRDp]usmRNp<V?!%q9eDlKr[k\JZ6k%G;3gKQ36V`.YFHl<6'SWDq8h^u9_rX`eUbOq`
%FLiBW"bD75"!Bm<&p4DFB/?F*ioLm!4k;@^6&.?V/He)"'+Kk2lR>UG#YYFuZnW+0a[0iRJfACfI*=`>&JOu-6;M[c.oI<"8'*Hh
%`\<^h`%LMuarELt"V-_@W%kA,eUZ:Kd>/+<GnLcH/D65/;XbR@C=)+7PE_-16S+F\Sa#]FDX]n'8?=OnSft5S)T)l&IO2'MYRfoU
%*S/k"$X/06@[\*Ud@nRClZQ*7eh-Ur1(%JoWrPQO?3!W<Cq8?Dl]ce"H4u@eP#W`0<I-m,Pqc3WZ%><4-;Nb:7Fo%t/eQ,hUk+7g
%:j<<bfmcC5jHq[>,KMTU3!pYANcgjQa>#6*?(95VAnHq;#(uGg3#&k\&ml7N^`DD.<g[pcs)XZ"i/N<:1<=OfE=,5L7i\"!-4TU'
%A(.<^7g5)PH_E&GL`eKc#<2osC>*j=lnXG&;qkA_M^8^!j2UY1OdD^U'DHVSmd"r0YmK&X('c;(0s$<i>CrcC8.ltUKU5R&8A$\L
%SmhP=G_+ki.h4OncS>5>!QQlO9EB.KYmHl"E?iHu:KrU"T^8gqNN<.8KQR[[)BOb,)6g7i%ua(upf&(3Ys&ha%MqGd.\%2@pWE;S
%JDW1%dI_t`&EG(@`hlIJo=3O5iO_["7lLNp;3FLm4m$_tDB%[E]L^?,YbomMYLqh@O;E6K2)ZU2GGc]0Yd%oG]LE/bAns6o3jSVh
%efFm4$>Z_I=RUFBp'`p,[R4:RX]9X4*S+>pP/`25<\":7PY>>_a#bWt=KTa>'%C$c$Hj16(asjU!br.)g%c6.(uFVgI3OYNe.T*$
%^(+l$Sf@nu<m9s1/gSkI7rtI\]Z[c`LGX`dY3L1$@s*t"(JnUdfTj%$)QT'R!>B2VO*XJi+H=oC"p#p-e\\n;*R\%A1c,JOXMTR*
%>-!1n.]g:(k5Jg"J]R"G9tNMS.i#<!Bro/Y\Ip@qAqgYrQV$rmdTD2dHL6j7lKAU!TJ:POB"%d"^uuU@k*Sn(;]X@iST\F&-.J;6
%3)RYJ1kt[2``#-^@1Q7$:V8F:LH@j9Kf<&5Ut?/q%"$=Hc"?i,&JKB-/r_74>XqB(0oWreFD?R*c"+`m*4)3BnPuE(&qFK#CBc`K
%$ZE-+7UCGt_MGL[GBdU?`W1ZN<f>13M)PVW;h0]`<_HGI<!&)286OVtVJ8s>PT\"30f_*'a(cKg+>V@Y'OT`-ENBok!pgK=lF98*
%SK4sr$I6'^*5gq5e)5L[fU?D)U\P]rJLK1X2ho6.TAto6iVsrlO#@3*$Vs)._V(TF*,&i,PHU_-`m@BAiA1CbiplYt2MT$[En^hX
%"#SMlk+B3kkb,rd>ohE3k("M\KGjr4=5JP.:S:Pa$E,]>*?GQ*K<8Y9Fq\QuF36mM:KG?.RZQ>KNIdr8*c&Q!H,`D<3cm][&Le#I
%oBur+VhAdd-LGnOA)KpP\YV=t$58;qWYjVK9f\oe5][*u87Nc=Q$%p4Qa9$tbM<dS:.\;n<3XtL`l!Q$KF[b"j#>F8>j2KEc@,eR
%<<Os7PcDq,+J]-n:Oj((Kr/D5;`H\o!;e]3BsV/t&sC"GZa^/UTbJ$?$,2D<"^s$_l<X6bc;Gr'ioQDT*+o[Skdnp<-kQ@:(AFh]
%cuM4@0b=GJbkD.DpD;t#.97D+Ld\U9<5<F>&0Ro+ZuN@KK,VZ)M1n6ORd;Wr^9"6P<t]:"HS;HT:oHu?-5mT--$EC#h=o_#Qb?k(
%1-/0K7Gs/*^oe)6r-'+8^+5Y9J6PhpBQ$PV0h?K(q)t;N=>!95FUQ@+B@<,#a$?HSVhgF?BMgP'JjLVD0ulsb@E=n>iNZE?;Qn/8
%990F6h!/^/+dORd3oh.7lQTCqNcbHd'\%]M33MXV-LDF<`%d>t!hHC1^bu4RJ`,-Lif3UfB,;ZrS(1;hcmh(*B4/fed)IPcI*=4<
%G@M':21[XiU#,6fToDc.0pDi"2JoP2d@lOcY6g'59rV@YD;O62V>=\HA(.m[:h(.Oltp!\)GAmW:h*=_rU(&p1"1bEP'g31$7'Vm
%0rTH5b7eY"1uB1f)T,Jn(=/Yea"F%qCCC`bF])=Oe*=eL!91eml_6fQ23sP7JW8VK^JiY+[*T:qXQuZPWe0/DMK$T)>#0Y5E5nbT
%Y'Aoa_(%jc.ft^,TijorYdQNh(=F$J7"]NU0pjNSEeH4Q&p9j=dm"2%RC@*<#!/D3&?-?5>"=oa(ia(@FIJk#65ma\rIPd4(oG6s
%C'QSMRAJb.Vb=HjTJ<bSi*;*CeX1S]M)1HTGD@u/NToG5LGNO1>kJCZQD]Qn@lSKs<stBM*))]Q"Z1t?lO8V8@lWDl[5q#3GfQ[S
%LJaEF1R>M=@)bGT)K`iTiDn1%Kela7imMQ(K=eZVO>(/]N8M@&)$;++frN"."7u.XVo'BF2Ct@Q4R:#a%VQ:Bk9ihdA$A?\pfug;
%iDGfi&nVQsT#$A^I3N+>d*O)@J/R[A-.!KTijH!'<=B>M.,H]'CE"VKfS$h:!Z?nHW<X<i`>,bi3dZsn0`2*q(nU=[K*a;f<Um)m
%!ZBIhgL6%LcZrsV`#-C\HdTgJ(rL57SlfBZKri[3N'Zn'UYB49R940'br_"A':Kp]hEf.ZMXEaL5]kbDQmr5#K'sT?:[p-3`_p(%
%.?VQ987NtRO+^1K=19]A/I0iDoF-=9<Cu]h,S<O>*@@H!TI.4"/?H+b&,;_+CCEVk3ZZ^P/ZeU$6]HZ\go,iD1YY>AcBb-CdThu4
%@s+f'1h/@!1j2qG'5B)c5m.ce,M26BW%lp->WkZWYr!C2CWm1li#!Ka=P+_hac%co956;SJM!#(?qbQp`D4:565VRM)LH?*HmM%S
%W@4UC6Q2FdPVM0/2APIIiD2&R^H/<u$+9:K)k4$Q;UGQ>ND3E8'HPo[<1,-GBOc#V\AGStl#l4:`c,E#A(AuH+?Xob^!Oc,l?8,\
%5T>>`7]7E+Rt@pXUVX(iq^C6haCp0F2f)DFLho/T>/V=P5qK:\o&_7L)#Pg8M[4*763-en9Li2pe)WA3,qNM/.D37b!XiNPP"9(b
%&*?,;A.9TSFc3Mj'.f;F%tK\6'j3<q2J/29#Ycr$!B.gRT+YsV.T+lVN\N@hbc:L#bH@5B^`&]>8C_a^0oVBpCi=tY'1$XN"YcoT
%KOCgkAoqob;b:&'3;[+F=GG[NN!`-H#[>X$5TYt`*4*O%"4?dZiJgR,&uUCA2N=^ReDZB]AlKU>if-ZbdWp[.2@ZtYGBdWH+T&qC
%`pasX[lc9i#\>[Z`hlTO[5+e[_A"I--@%K]fFF+HGqhD0+M3M$!b4jY'U)@';cs2Wbe9N30QKQ7I;Ta`DML''BaWIuEE[IQLb+2t
%Rp_fXE7]a]Rh4[=F-@Li`"]^V';"VX?F^P\Cr.d<D;j`/$#+5E5[&gt7aGNdNOAB<`BPn#I2\?&SNp]6..L*a7#ZfhPKkC"8/K:P
%3hS2=O##mr;0aH/L4^<>!UYEW0RPeZ"="jJ"[ppGr+:>"_Mj$_TOJs%13ADcn!\eCL^n!td@r^a(joa4?juL7D5%.M_]Y\LT6ndi
%BO$r`m6)Mis*+6I\K;)2L=$g_]Q4.10W&,&^=Y7FT+?=S>q>OZHnc.\Vqlb>KOLk)LX?\n5Ol_>.<7t!UE$Ih4N8d`f!4*U@bhoe
%0F\YkBkasEH,`QDN.FI>6h2P`/KS@kLbYDOk8GAZ(f$cmH\a@6+`#DDaG;MS$<*Q0@14^5Dd.o`K0fPe`n_RIgkd(!LbX"'q*Ua1
%K_8kp^`pefs"O063g+$aP557Y%kXt=E'O>fA&VEVEEg(H@&-Eb(/TLqBf%W/*YHpaQiXd^mGWMc4?TFeR$-GG$fNW`0J;8JNfk(G
%5sZ9DAun%\:M&O\8=X"O3q`G,ZG'YNN'X_*q+6d)dm>?p$t)E8eQ#I_6Vj$s&*Y!CJYoKgPl7!TAtp5J7XF`AT8[mMCH7>I+YK?@
%SGl[,+uWGJ9PXI8GJY,S"Q1'A=;_d/D&J5Upo/RFiu(5E"m$BC=?U9ASn_A#bD>21Zou8I0=.56ILMBMAP!:8JhcnE.d(];Y8Yn=
%;Z#68FZ^+hU)@/N=1fcm^]IViR3(i+"FOABN%Kqg[].sNWFR2U>f3Ree7$kJ>;)R&(dg=oQ,Nd!7V?t@%KW6[S-lnPk@85X5'P?%
%D<B\E227Bq#`,%e#XF-n0d/0mnn2SQ$bPd=mPY\'nUUGSdRIpB@b<ZWP4)^VXeK5`5-]X&a&r7K=@5D#:,6ZB)CC3Df5>ks8*p@6
%N+$C?-P0+[\6,"<>8CR!)oENT<HW/8B3C7"C':3KIIRO39_4S2@V,T)R4tfM5VIGg2BbD:2ChHLe<cc;a)6-3(gE:7*@l>M6+EGt
%_j`;kZT\0(0Xe&0EO+\ea,J<;IJ>s]`fte2"J.!Y(^?<h>#u21j!MTYa8iOQ\/<A\@+LZ>\[,L;\!^S3%kHqBj9Kd67dY.J-A<:p
%?48u,!7RCZ%jh'h&Qa5;(.7PR+Z#)SAMGKc+0/UbZ&<%!3.!"o&1sH\fLsQ?j(rrPN+%m>Sj]LGW^PKkTrnj8T@_:Eal3HHCl^%8
%!Vb&ZR:AI^*@_C>@sjOF^kZBlju^BrVF=og&WF,q*,0`eSNFMaerojJ>$H\,"j0[3=$<tl;mALUMZJ,pUYCprp6bEh0JlZ+Wn>:*
%:sCVYj">AW)OJGrL+Xp;6gS9!prG)]g:bg^A/Euqh`m$,Ccc5%Lq)Pn>-sbt?s]Kq0t*bs^oi=Nr"FS&fG2Z`9k'j%''f?*0QtmS
%`jXnWas3+0D5YOELhmJ1h,3u4q+H9-'W0RoQSNER@h:CO[7J=r7):oUZXb=N/(Uumi)QJWN^5"n8+DUVM#,t_D;1%+CuO_t+$SS)
%ic"]nW-0.agQn)^`BUfi3Z3-G'9I(#OiKmU[VZNF3!R$47P$J2Z>J?d.Nl#7>^cg;Nn0n$V\=Z!9q^mRn\m6;G1I(96t?jcZmhEa
%WeX#3L+gORmTa;dH0c2bO_pRYHQ!\<qP/'5`C?.\@5]kHZM]sNaL9@3mNs33KF=t<P2W>*Ug.SX9!$Oa8[`J=LIS@UOO-BG>-`!$
%961]/D<mJ6,nlL$3MdK-2&RH7+[gC86);JjjCI#F["1\A#+:kT)Elb'%">*%>FcieI^49(nWQ8)./:lE6p!e:SfD<d<E<E[9,Se8
%B2PZ"(abN</#'><#J6T^$$&;Zq#Wi_?+3*"+Xr-u:T12)Z'F;83kPTlBp)pV/"naZcrMI*$^Y'<n$HZlIV2d<<nDif]Oe-BD`_qV
%TNo<->f:339,\LcfsY_"oGft-ptP^RU+Y2doaX3=JC[2"0A@8/VQb#lYo2<##gB`rTL`"KD8U<eEL9%bnf1).#,/!LeV8'h9sC<&
%'F1,k[['V?Q+DW:"o%*6M&+?N2m]-c#g6ICq5DXT\YFD1fbW&a2I81uM[L?@:pcA6q6r>9Uo;NlE,pEl+BpVuT@Z.1I&ne5YUrN<
%l/RVsS6a@;?;/M3*+tXBAb1`=/0!s2Z^Sh,3SP<(d#-roY>Lu'D6n*4X)*+m]i$VKl"lo:o&I0g*,KVc/Z1CfoS@eA458G_\j0jh
%bI-6lc;nS=q$^FqMCuWLFn^$V.*ke<H@NsV4[_%:-<dA6R?'<jZrFQ!dRrU<gin+b+KK?87`2/iI$!DsZ@npa)4*qW1[%.[jGN;?
%FmZ(@bXrYmr1D^(fqQFcFl/k#n<],!3s"%nG&'Rl!$kI63\)?c96@G3D'LPBCCKaL3,`Yi/AmEW`Iq:hL"T2.!^qbIV`L@HSIKFA
%XdA.NMBU-sm2>&F&'IG!<hlcjeMtL.\[f^Hk>*'iql8C2+Ng%?,_k;*YqltY-TB(YlCdn-!UUSFE7(Fh?.-M94^.e9hr;-'7ZE-i
%Pr[P<nnjYkf?)FKeO:KPNs5mq\+-5Iq7rA\Z>eP/K/"O`T)<8ETT^S%bQTdD[3q+`/\>O'1^M2&+I9CiS;ehs/-+.pKd:'mk"1Kg
%Kdq"/Bs":B8jbNDXq=_R"=-GeY-bDd`:"HPL^QIqBoj<D%l7QrD.)sjjblj#<e;MhCHi2CbO+b'd?52Vg.`EuMjkt%TIqp8>&=dI
%VkL"N>th@t]!/H;@DgH#AcB'J,;]b81951%$u/EZ[CAkcBJ$@t\485,fU1/2UuH8sC:LuS,rRY=f_<&92Ej"R!L2ZE6QZqA&h$((
%>T^?8&%?+OYYgDmZm48#bc4_BPeUY]a:2+MC2q^#qDEEGk!Cqb<Xk%O=%4mtC8R"^Zr,,=jAp'`<jVpp,K1L_?>\G&2QH;J6"i`F
%0J=U-M:Dm_[bXB#9XBIX)jPmt>2+3:R;>i<gV/S%+fX$8U3j@hX_lucg8%!X)[7HeD<"j<9pr&c0s5AK0X&I*L7>Y#eV\H#K]ID'
%monN"cPu6i7#1$]i_(50NUr]c/S&:tR!Gf*9YIkTRsIl;=*P]EP"!0p*Qmq(!k.K(oX+.li@3<X.0;Ci-aoRT@)GM!I;'C3n5jkN
%Rt;*%VAeo&W#KcW>rT_BCm\8":%L'q:8q8A'k8sSc+MihfI?P^cXj6t%9r5XZFsKI]2>iPU7CJIPC)>gYS>FQrMlY.qiA5(Ko_eH
%K(0I^8$]F/A<`WhZu"\N3aDMb]PNruB';'\[W4SiC:4S*c!6pcgh_45+]u8Wi"f6D=jaQABF?lV>6a[XIPs1<Z>tmAg@.H5B&mTc
%=&":UR%t29OJ@QZ(='H`eRU)\mQR(\e%(n@L!t.9GsQk%$S&/Z.At/8L0PniF^NIF@T2\.+h?oN)Ni%i[dM&n:V1&kF1#\pY(pHQ
%NN6p0b^4'4[V^3C_dlPIQp\?e+E!M0*i$8"<oL2P+1BFpoMadcgEo:[S?m2r@p9p%lfgh+7R+>Qg7U@7nMAR[a[NOBY"%4QgX`Fe
%iImBJVYR2>feuQ2NlB\[?HNKC&m?rOgcFmBDcS&WP.'=>9J$oc)m<;>TfCfRIjL5uXb%?<,2fQ#b6[CQgU>+rRc`nlH>\#mj1lOQ
%r%rBjShg&KC"'()F5$n45b*4]J7]aUe+W#aW%5*8aL@9Ap#9oEAu?sO7#J-Pc)t=__W!V+gU\u^RZZtE39HdMX`D;tM&Tj6=m7A5
%XdoKeCiI1V'5#4#pU]P/ie@r^BJpX8%B,&'l"@e@qQmi*/?C)HM;2,D"XK5bC2T\RE\hE&kAnaM]?/iI+66t/aZ3VhV=D*iS]"Tt
%cj^W!<;ca,OX?tFm\>ZJGb6XqJK44m6)%RLn[_$-M[4UaqVSr[Vm!$TUFjbB(:@?[,e7.8J5,Ke*\.;&o5lYfeEG_]H['Y#h[PaE
%O:L[,7\D`tcr(ds8b-IhJP"_L<><BR/#t0_-dCBqg)ne%Q!^N\]OCW7g6V0iBVor;(Ca=qCEXD@gGU%lFgr*Jj<15GIU9c"Ym`Tb
%]5bNdS%<8Il+5!3R]2\/klfCCH<YULj\5<$pW+mcJ/Wt$]J;OJ(O=M8fA_)YC-8JR@nr/Lc_ShfOK<D#&mV+,`4@LRX^jeib[%rD
%KP#Q\+HX\mVDm_*N&-peD-^D2c=;`u-_h`>]G",uW8@$2[^V(KDQep<nWQm;ZQR_9=-pEicJHO3UrMf1/m2@Mght1b(HJJG&`E?Y
%@<&n&.9s84[BG.`VaC$(*4Y[o]8bT_h5%j1mC)F0fJ0oUeq,SFD8N_;l]a(^G"Y<(d(c6_8;/X9[icKS"FpbI!(b&[O`UTLX8)2t
%LA`3[Mi36rApAg15T1O&SHPW)a-h)<K$KM2RmhLCe'B"sE=F5TcE^eH&:_JL&95W9+c8R-Z)k)k/5n[n5,sfP\hC-(!Aj7+)`>59
%;:MfpD>Bms%op$)Wc;QpmZ!kF4JSBCecf9?<O/g0ON1&b6Tm].b/bp_04W84%.(Pq6C`V:BXJD?#IPg<>Esc+8jZli=u?)8*8;T5
%7FicKUlR!ZXl=2[K$B0kiY[OMp8IWm>B#WKs"fomjt`6-cl,<glqKnbL6+M72th_PB`^`"`2FJ+Qm[T^Lb)7#S[h0D74L]Q:>TE8
%6Id=l8?A%(1SFB.)I'-6J$RF3[!3&XoYjFa,Y=soh:CgXXIRE=M&Uh=Ec*YW+H$%8lI*]S_*l9,(-IP<J$Kmi+!cbTL"PK\SJS+6
%q5JX!7<aqW(r%"W]A*4)NZ)E$3-`r*#FK@3Y%7Eu-`=#K3_ed/:9`BoK.a?QU)BKTELrG>R#*ntaW<&r[B(jn-IaQQ2JJ.PV9bue
%H!n"t5eHGXK^8dZX7BtXM<+Hhcl9=^nrhW0WaiW1BbUabC=pSS(0i"[)\EQKgmlr,EPh75(*:6;Zr(^]P.(aq)/cTb)NL>\Fd\Gr
%DSG>W8p6>8Xm72bga.1uVe4V_g@$;9W#Q[3R[VDk:9T(m]^%82i;(_!_iAZbh:SSC$J>`[m"9tD/Q3hrS.[#Yd(EMo91X)T4rKP^
%Xn/m__%:6Reh"cL-'ZEDC6W4+bS--nhB@aRY$-Jq0qG"!gbGa4j+qY?S^*RZ4_(2*JJ_n#liIG[lTi=0BlYCg<-`7i1jm$)9TuC'
%N*>JpEYaiO,hc,\EVrS*od!VURs<;#X]:RN,N8?5iG>[kQ]$h=223^mS?,]sVg<#3GIj*Kceb$=&iisSbqA$=PiU9PQ=C6-mb:9:
%$F=BuhihL=[)="=MiPu#N5bWZf,6-ZTj1A!=\<_U#uh!_jr0Vg5rk1!!?nN;_IG['Is;[PV`4RGSs;$KjNYY[YTbM)fpKT%@QYLe
%3'Z3DqrUk"Ak_I9R<7jj-K.7\d3Z[XCIRguNJZk_mfTZYn?M$eY)0Dl%12j/bV)rE1=j+<HJ$9Xof=Fr@O0D:\e[3KG71Henfttc
%B=[n2[3CfoWnu6jj2K>0VOm>TMlptml)n`#_0*QXeb*t,9$Ms@hoCD*=nOprEH9$OMnC48p31<8H&4]@XZNZ*9oc`+UPnMt"]e2c
%iNj<-::]84U4OT+1Xr&/fG5NUR>`coko_/BQqse1R?KV.#t;"Q02etpgAeAdj(=F:p`UfNoi1!q`o#G?"$t![XNi]lSn$=!J.TaD
%OHn2Bp_B!uTO$U/Eu\oB0$Z!X_ELq*=d5cj7i(KdKd6_=5\<mb7Hpr=\/Ph)f=#UU,*"32+T/Im/3h-VR?Ip`CP&`n]^$m;M6RD.
%T5M:9SLC6VUijD/I!WJjm#$".@:*eVKH[-ON-'FU#$sa(Y"Pb#OO.1ErD6]OKX"6P):USOYH=,/&!aR'U$=/WS3Yh;+1O'Z>`Ne[
%NaEfIr_1I!c]Nc#12PoLeCs/SNEHf5(5-,\H<N/hQqT%N*)eIY4e12S?85lU?68.:9gK#F^hAKd]=3s?PO>f5e6Z?f>)!kPme:59
%lX*@QhK<kA%V>Y!<S@YODnutC4,Eil'cbi-&\d)iV'@QK1l6C\lL]n/ZsGd_E)t<inhB.0ZV=)\1IFFaD,Soq0uUZ1iV8@XcHG8j
%?4L4LN5PZ0f-HA(rTlKE64J7)D3GTdUN`0l%AEBl7),[\"<%iLmikL]pk!@IN.hW`ecCL?_\E+_'%Y(B\Ja8C8KeGC'aEQJf-bb<
%TtoT.BI0V;BW&0p(Sr?BL7:d3>Yql&4`RC;"/g%LMct^FGV.3A?`J:`/1TN/##bA,hlkYg*(l!=_jXU]%b#A0:1ohCRK\o3-FF"U
%*^sX/&!9Y`,1*S^B@/.lX"b*NCXW=:f&4gq`j'T1J*8_kKBUs(JgjV4p\D14VTWV6lq!YeF?FBNlb_`GA]:/BC8sC%Mj6&]ajO$#
%9(J3\)XCMj-tiTt+61#-i^@;cGB3n<_QgS4h!W!&i%d\ZR]A%eDmfgSN+o%<S'uK;6dREC,s0,/c8,<k]KY/8_OX$)ehZjB<UL8V
%#0/1(p:Qp8YCoYC_H"5R>%(E)(k7<A7.]HdLOLSr<ZH];d%0>6#T=pt#9+X/[$q(qO&PE["9fDZcA)L+CBa$u]5attiXnfO>='(6
%\cDUN*-9urj+eG;E&uV?71q$nIM@+->.(55I]@LpSX0n,aieZ0JSoa3SQD`)1O37HLZ6@A.,H*XAVd1p/7s8'P)rC:hP'&8\KfiK
%bKk`.fN>M==5bdP-FYGt5kmlZ;8rXAOaoM/A]dc?X@)MV]"@JkUJgteC3EPNA_gF7kdW`j%rM`"mDAkgB7*5nm<V=9;qNA&)n%8l
%'JT>^3HV].8WNLT$k>3tlo=C8R.\^XW9(h73f*7,Eb:T?Et_;ElVeUKH#hYL>*aCH^UK][*ck#aATmO`lDrW[,M:ITE:'NW-tje`
%X\fA&cSjb++lR9)*nit`eofGr#T"Q&NO`m;`5Q;g/A_*Z(pf]4,J9`B+`;mn@a*o,4d+6(*%jRmBtIg2L%f^'^_Mq"^:1MMGK1m,
%L4HtbWX/K**Pc;*rrS&K:Z2<(A1HZ#78G"p*Hj*F&NR5tmiVRFJfeVh>qMSHnV\SsCugPl6uRr)d,T>;1j&(Uj,RkoZ"f$A@Spur
%(7AlT+Q8gD3eC.&#Eo/6.!_#JmBC8$d3gQslT+&I)"!JL/Q`:K3BY\Ad<FM:,MVlKePS;ag`:!?kk6ur,?,os!=i*j=$W[,BO`7A
%(lk%`),;9\q5@t%3=<o=nAYg*&e7!8@Y`rX1[e17/4/uq;SV-+U4_H/P"T>GK1f'_QJR2Q(Ia!rBo;GJpVj!`>n6@OmZUZmW;DUR
%A9@T=`iEAZ'oLgU@p*\Y*i-De.e=2t-LR@sjl]3?b96?lIM6kdk]6rp32ZPH3fWG@%%(f\F#L)W1$l+R<H=S)9G?=o?ZWl'>A>Cu
%--]LCg*SVMB47eHV[l(p]M*LaQiN9iiF@YMiE)lor,"rC/;G2Q)6Su11Ara[+OI3?J)Z%nP;:>869s5i%RSmZK-3.dS5<7.D$Y66
%hYWVhg:b!^9"@Um`B:Na12.t^a;\.[fJ-U/MAK")=N8cYEsOU)Y&Z9n@Wqk"!-<,,1rK(JW4`sRq_$Ku\-1NUFGI@=UE[jJbBCi^
%BAE<o]N&U9NL(2JQaS*Nh6F&r"jY]46k,(q&I-Umf9J9g]Mh/tJSo&2WYuiRUZuVk,qML0TLZ7%Xl?3_"*'*RDPZA,6TIiqZ>)V)
%OC.j4&(raI"FcEUTb:#Fn@eoC9H)"A3&]_V[?KRrKL9/>LWZL31a*5$Ek-E^q+kuODBiY1+KqMF0F>7/O^W6@T%!F,"/gmg>:D[;
%%at!)%'h]ZZb<Dks5.mDCc;1a>M8bX*aQJnJp?*!Y_gS2F/]1"TFUXa.7@)CpqEWO@^DQf:r]9i[^\AtZumLSeoT*q*J[:7?N^V*
%MqpTCNP,`9\E5?KG+"]M3io^B.3RY5fcE>REhHN6?kiGr*Y4g`>FP[*W.[VfehQ8_A:<!a]40qGQq(ffTaX[9Np?O/c1K*ZFL2Q0
%N08:=3ufm8>)0+U%3LNMdQH09mmb\]maZa\KD([KX,/f5J;lK;QYXD$ci%\KnpL4-L+M\>dda_UOTG_-:Z'D$YD`!$4^`JPr9CTN
%=B9k&/]Xef!T-i<4ZD-3#Ql5;8NaTpQ-2M+1$`KuVq>Z<r9ds?,@/1])0O?$<:;B(S%+COhWj%8E2uYPDZB^B_=bkLj7F`!2okst
%lbD]6%S^L_k80n6>fW=K?Bp"K>O914*4`\Ma5QODB6>eBHfN%I#aYc@'Sf[M]Ni+U8+'Q.N;$P;(BPZuRsrbRFWs2&d(LIt7M@Wm
%K*KZ8qg?lQ+"cPU4dTFr_]ah^KG<["=g^!p?*WP0\nigC62&2((kY:Nd=K*u]6jZ7*kPc;g\nFsOCE0`JBSTJ'0U_GK,NpB8[WE=
%a(r_eN-)62rY$gB&j^qBb$G\NC8+gDQ^BM9DuFo91DMMlh\Hac0$2.\aQCQVI$,a]o/!GIDDSaOOrD3d2OH8(M0[b9%?AkURK@\&
%ka*:T!FUO7ngft#7'fBbQ)Lq_B4fNhN7+Vtk+*H8-u^(!4j<,h"Ktr3/fl_gEK%d/*=DWU^+qjVc\';9hrqI3QuqlK"a$H.F;tT)
%Zgoqe5ag_E<=,_q7CAjf0J5MMeILPQe2<@):9hq&P*o<S"InRH$P*R-Yu@<:i2$kSeg?[R/#nHd6Q(?Vk^+jd<45$TC2ie\<d"3?
%=.`@(Qp:H#X*D7s7t1%+pjFJjP7UcO\e:9%@]mMJ_irBEX!@l6YUf3qM%P2V<I&(?%(cRf>hlEP:fhYuZQEl^U3f*4FbTQ$31lio
%:u"p1)KZ,qUi:&eF![]G6<o)\KWQlJQ&0/E@[/d0M7<Uu(D!7KP0Ak4n&`'Z#r^oQSPW"(CD;V`=GG':5"i'eEJ70W*nq6-+LE<i
%c]BY2^;P.Y+]lKp'DL,`\UmYoAjWYPHj\'MLoY+VWmCcJi/XP\7t<+o6nsEI]G4PC@U^86.LF61-C+M,#$f-o7dg_'KbgYJb\"jC
%nJ'T5T%E0nfN8lr/'-78,[[K)SVCAe`6])tE!oMN3XUgWV+K9Kou[KL_VSadbg'B/](DBrEWs2]gXOS&GtUcN<Vf-Fj=5(UM7Hg9
%nH=gO2"cYUIg=fYa-X<14G#ZS.e,8`>bs5)"5(per0\lD8fu,3=dU]nob%HD0GlM>12^RB'mPA+Tnt2uSmO*%!j8h*TRC&Vcr\j"
%=%F&;cp7;0dZM_!_i&(_']KH._ubC$A5GHV#WX'2?@2Bjf3L]Mn8hk='5j)1@'ioF(geMqI1dGWYSC\R#7<TOc13^VM\nRaU!QgO
%.Kjk(dUM2fKXQbaH"4Fh^uUbV]G8Fc%XjaJT\1.0WUNs1]jL)<10hjYDb0(+Cj<"Zg_(Y/"0TH:Y4?`;>iFmC$+p=E5q(BP@gS@O
%?+&+\9au',`?Z*uKJfH*'EM:G*Xck>7EbYq53I;3D:RdK8B8<#o2$'oXWS0eZd;a^[5$u[?9LULot8-_DcWDEj'f-%_cp^*MT!`3
%*f&Zu*g^B?ECj366Wq&>Li_7,KNi"VO:JbB\ePO\auYoA>@E>/@Zo[?ZL?690e?O'ZLCo"f['-n[gFVUnFml>"\Nd'oj__5]A]l,
%-@@%mKFf^96#)H=\.r>iK?/Qn8-EZC1'8/hX+n,NP@07bDhYrO`#<Po05A)g2"Jt;X."9?_+Wl:i$o(I&gaCLluGi*D@(99)(1`Z
%n5`X-M68&omBIE^:M]-=M*9^t40?P'"o'"m$B/df=6ZMTp:%tEi>LM5)VtfSUSGYM/$Q_75N1Y&8IBCdKYgsPrD]mg;Sb,!oXNk^
%^g5!G<KAT,gOAs04j.nVa;'R[-enmGi+ALk+]g)Z9B2`h='=QF+]kTf9[AhE='=UpA$0(A4<[d/F?2-XBE;7!&p/hBm%j5-l3bcO
%S4]`\AQp/$.+Aub_D_dDKt#P'\QXi@E$[C.<7[I4X9IHK7u]f9OO3F*rG]hLX=Fea>XD_jVAJA%Etd-%+]k%,StEr+/M"@q)WD+S
%&d6XFc(D35D1(#Y$?X3$as[h0,"m-hh`\su1Wadg&6I&(-.iP<b>[2(X!faLTMU3AQL1XD8*4.(Cb@u3@06E:[Yho93nPp[aB0t*
%.;i`,C6eJPo*U<]h`QH![R-CXpg%=1>_4GXCirL_s.Or+j=$rAoE]MC"ZSgp$6bI`ZpJ2COu*k<-qhcGmX`b%DGF"YCb@\/)UN6P
%(!n_]$A(fa'[/&h0QR(0bR-!q9G*1(m#(Wcc72J&GFV[aL/4=><ie"#$3HRr%;$?Y$GVR.<pa\]MS\2G+tArpg.9;]:fa^G\m:&r
%M,7(l7[;FtS5g9PMO[/PX=uqN9PQ73>6Tkh6D60+P#p3MP900PX/ns[3%NM:i\i^?$Jjaqcu<$!BZ<]EDiV4^[@APG^=mO,AIB@8
%JTEe5%<eefc;.Bi0WV9iQ8#?Vp.9LCd_M_`CcJIV*c)\RTV8M&cjEO*F:emo<@=N6+=;"acH6RC%;(<PHs![APiN&<"u3am`<ihB
%o(Y!.bb8sA.X9qh_hlg'RI,2RbUVl<'5.Q+Z:PF;[ERm?eV1Y-FQ8du)p/M)'S8r./^V\iE&>]eg%.;J$N5r,RP7c6Dk7fHANl[B
%<#DYa4q\n<A$"UZ&ZSM'Bs]=/=LQ64bsB>pqVP9<gSFm4g'qO,FS_?p)7WCq_OlQbATaFOZ%=opMa:e/EX!CiL%Re0U,i3]ol0RC
%@C<1PAU:Shb/sn<!*17("eF%$.cqQmX<=1r[/a6hn[LNn._`n*0CQV4EV0L?W^[kZe/f:E$Bde5fknI)U[V8TFIi3,nnJoR$D'CL
%@t_&&)Gk1.WN+FJfmkfE:gVS'YA-k$k'U38ftpg!IL4BIXs&4`DFD$TiG54JC'Z<qkn>ei$52&XL0/"IJCU1ZEnVC>'i$i"Yf%Rm
%*-:n<)oO3i'um:;hQD[!#V1iP]s.aF6J(G"1;F6d:<4t0X<?I2Y9C":6i,^MZ&4:n+BHV;hB>p-#?O=J<=I(VSIW5t$V3^)ZH.!Y
%X!#hJ7bIWao2RF!Xg1;T\dEB6qD>jbg_o?Ro1&)IW8&\R=/F6ikc/;g`$?;5$B@t$cI1CE58u]2:.1U^oHQ;6<RqjYE"u-Vkc(dd
%0]pSJ@VAc4ILTHqosZ-/e^1=<%_OOm$<`(GX,PR7=p:6$?Y!sf]KL@+1i-0<LD*mW1Q^7h\,t,_9l*h@.M>sN?8:?r;JUJm<UQ<o
%<]OuZcmn[XEQX$<_UTi8Y_FI^#/Fa!i$qt`dY'Kh$:==<#[`k+QGck@-mF&RiN(<3^<H@%1cXu"JlgoLnRiQK.No0+YC`<U;@aX?
%%O*cP<E`W6YJOE-or$gsnlg-_'n45o#mDI!E$G"NCEpZ,^/D@^)f5\h%kApa<U^OGKPp9/#^QA+^+,6]M6B5bM;;qAWWXdh?^2CT
%,-5`f@1ruW"dtNh1/UD]DA-RrGOr]`(;[(;8L2BA^&45C$mVksi@8bB/$t4ujsU9ZT/cW!L\VL70u6m^_-:k/o:QA."d2`g,;mQm
%[d)X,k%YVuKi(p=H,[K)Ga7&GklF8LRI:a[$7%$?lP:6[KX5J-dKJQkhQD$<CdJ#C6XO9(1"Kn5'j>_b@+>U$#V><L3h-Yq_Wk#7
%n0tLc`Xs-o.p?o:%>9E]U-b#U/o6_A'FY@9!JC+jT+qEE0a.#eqJq3tR3Oeu=R4q#)iV0OI(S@B<]cEVOJS[<M9(;6@$ITuZHt.K
%e-3tr*E`/?kj''HRMma#]N_B8;BZsD[9g<,)_*@@`"JB$2n=TQ_*eVp=$pP1Lcm!XC#Z%JM\*]6JG%$9U$T+>lQSC,KOr\B>c=_2
%f,9j-8`C2tW%;9b)CR-%L*id/>n#/f$Q?GW]%8'-lg0UK9NK*dj$ggqXcmZY%?q$igriI#89;i0(dsD%X=I,u3m2%j->T/T7E^do
%#ksK)V]],UpRPQ%SIZs-]I?O3f.gDG"O@qA3YS4F#f*d/p@nk\(;/MRAIXfV=@Cdt7V&?\@R*tY,%j`SPsm_\?^1c8$>5p6=A_qc
%iJRhK_/P:N8LtW>?nl%1-^9<$W2\Uo:(pG@MM2]8M8FT+dHA,Zr_O`c$o\WIPu[9/rYoiNXol3I&K@D9g+ZWB^TR'ibG^m:_8/EZ
%=g!^_4Fa^1ib[5*pnn;66BFLt&d?4R=ihf=Ch+<p,-Ti"Cd>(7$s&t<*JJVLP1OR)1Rg;8?HT9!-l1`?A42XU[uaF8$E&cs2MK.C
%C45-IP$^BR=fYf.%?Zo,dL"&OAb6Fr[>IDQg9M"0fn!9tL7ZaC["YUS`b$MqA4L:/7lK=/[uo]Rr\D9Z%^\qAU]P84G((C.Q#,1Z
%e0K0W6eDP3Dd5]4g/0ON!F6D0IO+GeTRE(KT_n%u(h)@Q"fg$e^EL%oF"8I[:6b.i)h"Eg^a@2EX&+7Eb(4QfO^$aZPp<7_)tQg?
%8#'5>DtpGWs-Gk;>Z!AI7W:MOn#+@n(5ciA/cHQ?nmBeT5;'9<LbTCX=GQIX>YfI3\eOSF$mJ]/H?qeE^dObJ*7h!A395h03?Q4I
%&*FABJ44o+NTqrc=<\.@^7N=k'E`/b([2h7iT,5(,KS'&YBlYD.a#OqO:0[t]Y$L)Z4PV9m@sB'YQA[/.*d7S*1gKU`V2F'*;B;@
%+7lNq:EFTQ>r^uiV!:'jd,BGMeY,iq[j6td%6FLN_QH`ha0%lp4IoCip$d8N*N"h-i-dWJ=]V\d3P::h@?#OH.d&A4R%kFt,*FtK
%=/#%Bjr1&MO=-5gNO`<N3Ta+IqtZ;<]DfkN7mNSfr%8uIQOkE^^"sLlZ>#L[Vc8/;/=lY^XL$]=G`#QBa/D9;DiSp!_SS]!R<7AX
%aAoB&h-W#$iX"4opipZ>0>cFt$0?B!#6AX^"F!p!G.=ng59XisoCs\Oft2a6gcFD.n<%ZJ+PINaVi,qNng6u7l[A@.\MZ!=1O?9f
%=#rrSKe<>Q<-;V6h2XAun0q(ERf_pjpW7L7H`O'[AR]Zans7a;TM@aJ_)AX@5bER"'sTn(YK^VLZOT]K_]L/[`!NS=?c!Rp;.W.S
%oK:<F228ikRVo087EL(pXj4,&99gQRld$jNs'u^n)uDVoWUaR,S>lbomuZ:,XQd?7.kV#AZJjLZB4Fi+7hL33&"Zt)Y98?ak?u%4
%`DjM;!a^[4S5'6$2)Ej6)jf8U=u%7#8bX4]qi_B>h;9(Ma8<>mD*#.HQOE95T.\>_bF#f!c7Ug6D&C7^s3\k+5G#gGT/-SfkkD(O
%UJIM_!Q5,Qi*@&gnIk?:WFb'ie8!^(/;I&;cAeuLWFBqPbP1OeD=`5[jM].\VQ)Ms(CbCg[haGJT%ja>Zl=!dGSZIpG"5sc:;Lh2
%`dTpJ'^H<A29q\4<Y5@,&FLid:E75DrF?Rt`]1n2QdOu%*-V]nK-Z31_>?oZBld/HL/s<)MiK90IKo!n.j*b37HJHO1&ta!O-lph
%L&ZhM7/D0B_bV/\4@Rtl'cG@"k.JRM]Gk'tMFZb>542GAMpMdap4mFmUXe=S5"$\4j!XO*#if7Q$QI*:E3)FV&!4;gb,b#aQT`l9
%bct6"Y"au7moJYXbdGXj'T8tf`'1uHW/2IYj+FDm0)XY'`Y9I$+XC;%mq(kNOA@4DlG5cB/(cQq`]/>kc7Wi5TM(eU7sILS1!siI
%b%dA1mHAn%1D!5bMdcW=].XgZN>^\MDR'eqF:qp"E%*([-Yg--E.nih2Sqh\3h.%(L'S:N/[ZbTbh.9+`ALSXWMrh!1Icm6$)8A8
%-KqJ[UNpTi)7fqo"8b04a!pdP+A3^7=>Nh#3C.Bsd"<VJ!MeW`d<cog.,oo#T5OA4mYZc^#`Q>&5:C&rZ^d*DPiC)<D)N?gLef4;
%\:#+C.6(0WZl0k-C&;-+WS(5#Pj#mJW).[Vi0D4PhuJEO%3a;.(ITK%R%%+TO_?H]n)X3B8`1RIXnQ.QflDR[-=sYqN)n#FPJRh;
%R>,l5YltahU7A@ZrWMHE7VtRacd=)[\gu)X]5PZuefJQp(TM^m9d%8a(^Y(,`9qRgUBrd121c>K">B(lp;W_E/(WUm$7k>70aSSR
%n\e"ZnQ^9f9KF<441Run<CiB'6j'-K(4Q0Y23r#-f$.Ah4$8'0fnrS";Src9*Oc?0?]2$UAM<uJMboV;.AUr)!teK8a!uc.k!Hn*
%_Br<M.EKE\fTJ?=1@uWb!<+96@bBVi7HK.g[K0u#Hmp5/FZdi[<!(eq/!3T2:b[$:rF-#`^)B!S9Xmfq-#uOiA`e9B-t=/+`UE=Q
%=fAoSi6JE\h9/O*S2T@0b=9$[WZ7@7!]VPoS(>!!0$jke7"bl'k$E<bBS%#a<>ft9i.YP-<5*u`W_c561\5jUS9)MMiUDaOEf)3?
%0(Z"#MEnmp;Z6$&0J%6,!C7bDV8XM';qtk")QdPT'$J<\gH\8D2*I5p+sP,,8-XB^LDCZH_MO?l]"n1-P/*M;VY4CbH,4_#[KU3<
%VnA"/hk%2<ncjs.9reX*MAZLFHCViP#9+qg8a0-72(gM,S#@(/MT:HeYbu^:P<'u+m&nrE.W]GD/9-D\jn:VYITqac>=:B2'ks"'
%L$f`Qiu`bM!ao'3W3s)_Q_rL$R/U`NDrH&ucs)eM1!X^DLO#F?H#T7#V,cFc$B%peSnIG8ms'm[Hnie[Wqaau<8BV:A;ZUh;<c\W
%D,/tHgH6=eJu_-Ic6&(E9.PJ^TZq*6PZImH<E)sXe/?lIX'VYR\(;N\=LaI>Vn=e;(P7i^8*mZf%RDjTeMO!hEIbBK.m>8/s-A?E
%J^L;-8bJ759ah>2<>f)k<gYZiMX_2JCK&.U,HCn0@_i7tPR%,pB2%(UZVc`:be:9^]V=tN1(i)9oUlRi2:+H[#(BPS$qA3A3L-Ln
%B'HsI/o%mp!5M&n@!ljYorf*)p)\#=>/,D2rXR`jFn:"Q"(_a9lXsh3AhUWAC+$L:)!,D>")R\1S`eduJC)gaqiZAH"09&#5a)9F
%\q^*f.S4[8p;5@^VsEfSdaQrU[C_:Nh,ZUq7Q)Eo&Lk9DDjuW8[#O;jVa>jY3WQ#)"(Q!MB9^NM#fKE/;4N0BG;dH'6D8hs<BT.s
%\_JCh7KrOrQ4]4c;_1_e<O)F?Nnoj_0M6LKB#Y:5]NoHU9b^V&TN;&,K;+HG>S(KNA!D"DL[R,6NSS0&J(k)1Bo6/giGI%D4H->!
%D-)FrR"SQnH((S3SKkJ?"Cd\7PY'/Ea[]/sXI%6[esph3I^U:>:9Za,9JZY6(V?DI]fW4So]`73r/8HX9t.6"Wb@ZK_eM(`5@(UV
%5Q998:_tCVE^>G"ldEi[HA#<iD=nD#\@^Kuc88%G+U+2Keb-/)1kBtbi*oNdET>rDMP3qJU3HCFNPH]Rn=E(OQ-8ZT(ZH,5?=;[W
%VVT]=h1eA?EsX@9BFsq1f^a<tl11uO4#5Ej4>F7**?\!$m.?T<Y-?7,1ft"O=Z>'PP%cUP-R^8f-\ch`aDR@$<#9]\GXoZ0_V9d8
%VOt>[d-6)Kd%^/`oo"7Z'j#Nn.lg/\r7>e-jC3_)Lo:"p\3`2-?2dn8VA.%Z5J#In$iEi_LG\6N7Ab:m&D(Oe45FO01riSM2_I6(
%q-`2neqrXYneQ2Q<U.KJ>Gi>i#Y-(=]kV-XU*Gd1Qa?gSdjGGloIl3A-+t)WjLMk7Z$b8nf:8\Ojmu/Sb_hp^1f:r\;0[3Wpb<<0
%R*HKGB]Dk4)3[%e=Z%si2_2;5S@nKZ=P00teecAp8supYj0IWm,_iZ8K?ds$XJL0M/-;AURbUm;+g9)$])&c2aKR@TN:r^qL!gGj
%FVqm)V`ncOl4Q_Ba%\HKU8hOi7anp&rB8cGnN:WL.(GEHaCR26Zf;>9C3!3q$6c+k=+Cd4*jCQ0jib&VC3_5o&iah?5te^V\E?b?
%:,$hr!VVi3FUqPeW:%N'%k$tmE(c7i^*od!5R;q1+Kf..[Rj(4:I!%#T&4Vhg>cHPfY5Jpb7B:9V=l?UCY+/HplI0orn-Sp<"qZk
%H@G5:X6s>B]PGN(%%fcW-/kri@eP?#GT_fPi?lCLHgk[O:VFF):!]DbAj(*(hM%0D[Zr'$g\b9[1r7O:o!nXs*dW.SrC`2qT>/Wf
%rsTU.(`@SE+h(G8Dhf(N6[r>$G4*Q6(&D=FE2J+WUEN!F]a_4Q5M<9FM#)pK$JIhlAYX(!A<+1%_<a>006e-(Fjqbh&+@@G$5MA[
%Ummi=CArMV*q';5$NZiq?+VX-%:9h?$E)\*O*;-6:<9nFkMh1&%&ITWGA1OP[Tt=Yh)1V?;4G5B>L(?k=(uBEA&,h+:UZKh=&6\^
%)6>"S!f?P$_*S\39O<,t06JjQN)(n.bh5ft6_;[DBaB!Jp,;/pPg.k#m-uoe*`aR9HX=E7j/H8]=<(`BZJ5W;];amNO1fnjm=UHY
%NH!XD^[X`9mE\b,HUd@C,)/8Z9lI^nm.F@sHM&iU)L3EJ85"l@NJcj*A$cbM*j:(Ik'Zd=o,I,TH+a$!f6R7tSs#<;Mg$Q&]=SRP
%\lS:B"G0%eqG*o-=q+'unOJKNk*C([]E&i5c;QqkDkloA#3hTC.k/\/FZ63U=(1gM_^*Gp4&;B[T#-OQMGp59Q>.nkBO40tnSVI:
%=>pgC8kje,1i)Wf>B#n0l4t%DEG7I'gE7%+nFa'<=7u#F?COb#]73+@@pgmRd&)[4\S%3.le`N6gP9*BoX786Tc;#ti7nZHPR2rK
%$hU$^[9TKhEk/C$ft]?dG<c'tg6,^8E!re*+NYM-q+N1P)#)hoX`lS2_tk'-IHEFMR^_QhSF;qDP\J>i,a^of/eB)P#[EA&RI[RE
%%Gp-iJ9G5+\a8uAAF7tj`FY3!89>oQCOa+rmDj-u5r`EIE45hubD3*aE0kORf#t5YFum:KmGg.B<.4(D)nHmqU7%uOVL=oDW7KF`
%Xk$9qrU@sp0Y&EsA1`UAY/YU2[L#Z4<8)?*o%F`28[/t<.",VMEYa*h=V7e-)KuXSm]LDS,JKe>FhOlp[AY.mK/Lc7oeM-6'5G,3
%Mg!JFp'&KBFhX'Y3u;bgZdNNUN/S/%!hErl,^F:?II-&i\'I4o1ne(gOX5KC/^%*!c;51m[p*O['_^:Z?=23sp3>&<C)A`aXgQY6
%JJYG\1PD1:DjR8t46&$*G_QZKl*?8jZif=D6Vjn2qm!VIH>3,eH]NB!meY3KB6Q5_Ic6J=U-`A'm5`4D8iJoJmIBTX2`:4a5[T$=
%%V=%Af=2:WoA=tpDmHs/;i*O&o@5LQ)oJCm?eiRgcn9`Fn`3.Lk+?TodI/R*.#<g+#R83Z]ANNt^="o`=^HjSLN;1I"0HI</adh!
%5$oY3,6(LQ7\kMnjGlklB\caD'2PL=$jOEShW*FJek"\fr:M<L_R0j>2ZC?H,CsoS*dW7ZgB"knT:A@#hsY:FrYTo0gRf=E^Y_9'
%?h2g<(Uo[M0]#fuYn%n2fT*4AMKWr(i-k:peB<31^\2p(K\M4EZKM096[6?c@Ci7dGKp8,Tt5MFam5>LBAOD\$$DC8g^KUe&fr=S
%icRJPn:NBX%HOWg&j(rn-.%tQIMth\T_QPl#jEbaPhL&<>Q88B*q)SaG3aQodFXSDHaAdiX!Cd:qo<#Mokk3+69>[K^[cLhL2B$`
%%/8C9_*9lfD7Wt_MYXVRODZ0oZB$AAXQ\D7?NbW\IMS6U6ufc<H#i6onAFYiC9l-r*EPQl0(M%L[Dk!`SSR#sgtNIfGP*7Gf--jT
%Ociu/H#K<)(g+Yc@]]G\gANYRAY/0C>n!4T94!D:nSZQc/FT_:](Knq34sZ>X0bH5]tA^Yoi;%As4Y`t^:>@[\:,*RZcin*rVb@:
%*pR\?qt9(D8\&.A:U;R3DO\d5\ilGhm/GbShnAO4kNA91H4ih]ffrFDgR^n%SsqsM0E:2o4b)tkXqg%k;5!IE?63GLo9Gf/b\]t[
%)nn.e5U"9FoH"r0rc=,H!aKGlFr*+T(r?ft9J2M+D+_I_H7KWL:r:n1npLIAM#enoB%q@KRZkT<FPD4'H9FA$ioA;!Q@%iPiif7u
%E'L2JUO=ucen/@(54e2"s"lo<+qi%nErV/dKDQV.D)m;dG'6HSp:PnAq+WNU\r6DV<%][1r)Y!'ZuFGLQ`;fH>@,Z8#@;oHoi:`>
%5&/]^CPe5L.SoR],ctq`mAn04GnlW\6D,g!]^edYXsmSHSe@*4\M'hS>[C31gYPf1AC</m7bG*f;1D2sO2?Wt#<175gZSr)bWT5q
%.q9F1)lbmh>eHn-Q:SRD$0cj-(+A@0L\kWc+7FrlL0L6!:$Pf0\>f>V-\!NApU`B>rJ=*-r`2?UflV;"r?jhBJ+<&uNg-jnI;;`9
%?Va!8VE@T)?giI>nJgH%D[qOd_G-t395damk\t7jk3ZZ^YI]5ROd%L^Q'Frh+i_NrIo.Ts[k_Z]n2&GbiF#1O^UT0)F-/>L0G\T%
%b<'.Xi7U2MNSt)i+&aT,77^+bS,6kr;A-^i$#cVc=n?8FVUdK2-/MC=.Inp"iQfnFP1_EVW(.1[J=4XP<I#j*Z(4-NOLet.^ns%V
%g's^ONCa3m;uekm\/8/Oa@ZtRH!G,^BjdpI'jb,\1&^gDLc%srqJmnf).$+kga]mM5f,O1CXSgB"<5[`/p!0h>\[kXJCp6n1bT%R
%:;s*83!3UKh1$bA-3!'!c"9o,m`Z^$N?[\>5i*MEL#:"Q0P(EeH)]9sYm.DSoaepl--C.#F5[h`[ff>.66I'KJC0L4k=SR5aY4)I
%\EqN(:g$hXGhg:T+f1;]V#9c98OMK7S.mjU?Jf"d?G3aDQH]h#9,+$;0t/F9!jPn@37lFL`Xp&4S3.,A)NTDKZ"!',Ndr3UE:<Ci
%<#_SGW/)+PWm&Ur?H7AIGr.ab(]qU[S4./8WF#di%[,S6T&hG(+P?R1CcMm\<4M]e!@u&-O?FuRqf=KsWD0%QaFr%gGPrg$Am2<s
%8_!?#R0#"Hhl##o126W"0q,#.rSZut>6IU7Rrfr>@,j<7&E]HG_:>i\i'<!%+CXDun=:+%H"iY;IRidp\Srn05mef[mlWU-2Gu8>
%q+S/^SaZuD)-VQf$\3mGTZNebGI(4+>sDhj6QJ7X*e;L/$9M3VCRGZr64Idj8SS'`Qio4.a$T<h)Il#j;#r:+etKBCO:[.VM6mB@
%`0mY6QG&2RB(E#N/P1#6Ma>"]al_!,B0rq#,4SAgX_=X'#:i=.>Jba[.^!SY3:6%"M$_WSI;euEl1BP%1oU,BZOl2]BH@%(#T.tp
%0C]g7&,;H>261P$_:(hs<+0FchT,a%PA>c>!sI-WWEGauNWmW0*@F1o9&,q)Y$_ed15BNpj*-p2A$YuBb=W"%p5j/:#'*LT)=1S1
%(%"e87qWmO%84$WA56uYFBeC9Y\ksr9?m^epSAX-2MiD&pcB]?gb.&0L839cW-:6&C0GH6M`(\N_>WMG<AQLOMP!lJV&`lAf&Jt;
%DF+fd]Y9afBLY;Zn0NoG-u/s0`h7ULm<^/]Gt)N\h,hbUSX31rG&ml4lf<U0P76:^ol<-0&BZ3G(/mon[Ad[GRWmkT2qfSmA"K$X
%9o87!08KL%`S6'?og0ZJ]6Tt\'<6E4Q$`m0gN98.>-(GC:E7'-ZtW"h)r\4\k[,7.p5d[AZSi!Y.(i3s!K*mKpNm*Lf\I4FgMBO.
%VC3+,,Aaqn7Q&6cS32XFkU-sbB]NN)aHg=PkI,9CgPs0cMBO9Hs6HKTem(p#*Ih^:JpHp"nMJ&bB_b0akle]B<C#:$flA`RLdY]G
%d57u6,)`72@7G5k1bD`GNM$Rd]S$#Nq!0JG.ANMT$/$'0Z>9rcn]N#*q@oI;]%qg>`&fV[Fj6BX?sM`:H`U>;l?+Fbb&8%A;`:b?
%04bs29V!^qVAtK5`h`,S.OL3j,@^5b(Ca<gNF=J#JXqWhP?^4D>Qi0cUik*FQuXX4JuKNT(mpm2jJrJ9rhV@H1iE4a=dciK1uLqW
%?"jV0X&_9]$o!qD:)'m->?%k.?UUW?@btfMR=Y``PPl\/#Lqo`9mYi-68KJ50lod!XU$N`b!E*CfS]cu@Zt79a\(Hm>uraeLkQ.p
%?qA@$9MnqTU?q#N)Ume+'bAbfBHef$QG,0h0qm@7N1,P/X[q"c'/?38U,c%F$m[$&.3^)Q)Q10S!J4M:49HK6dhl;p9gtcG@8:"t
%0L<RVI,eX]'n/tM=AFnU/dt=sODCV8)CC\Kk>!62'=pm[LUif+ckI;FX72l!D,603$j;Op':#6:a_tb]N=\jU;[=#,FNMNZL>=GW
%@iEN9MP4Kh)N-a=>!(dAe<ddIPS7P0MAo6:9J<[^b';!aNX;n`#L;qKN+*8P*>;UF=1\0o0^MuS;JI$`2)=upg.2r#;k$.D[MT)Z
%\;6g[NM*,upm<`DU*(&Od&R9o\u<&/1,=jN./k)?16"^ZR8s:iZkKbMQ$[\bCe5Bc'830=/3YE%OpFhSEVUgA.D(K!b(NFjPSK*7
%BFGqCY*GKWm8?#'V"JAJ3N#Z=34aV&@mWs/CMJ5j&2Mf^p)=:UW`FL@@l8D9ms&>JMAjTa9OkJOcC8dSgTr@5a3^g%1`t2In:O'5
%R)sNibE;sbF1#mS^1KDQ1em^Fd4o(Vknl)r;]D:eA%Duc`tT1HZuiQ_0GKGe@,b]<X!pSsO9m\I_o/rIr[-6h)4:[1'8K%@BQU^4
%\\$),1cCV`83JZ8@HF;E\et`TKM4&)&'FJ&aJmf]0pKWmLVug>FA)e1K=dRV2_S5c2Y_*L-U+Cc;T6\0hs-:H+&a*_nhHi],eZi3
%VQh",R-40TD@%Bu@l'H=9?XjPNIf&eARlTR&5OdX<@HuVYq`Pdc>(J.Vm2e97#@$T.%eO_([ldUlY7IJHOD;.QbpOtk1JulJbKG\
%=bKIVO5::R-;jE4J<t[\GXSR)#akl`XFZHg+k,)gZ=-'HHr(0V#as%9*gn?L!`q7_RV$(K^e4(]NK@io7PL3kBgb82U15*4Q/;A,
%n[%\r.,AI3@mYD'g+XPrfTXaaka9_AH+A0sU>]g4;&A[=<\HY6@c"OL@3"D0oM#K_ha4U`*tqfr=*N+JI6VK;>:/EjW9&t]2EI^T
%RD.9p9T[0qRZ2#d:+C109JnM!59EB.Xil?OTop)'pm@^SFR^!)8*OOt11Aq\WEc\LXENl0'/F!udskgnVQlV@Y8E[B-HsPa`>:Vi
%KM9qC7`\R*ab3>t'iVF6Qlnpa],cJ_-Fcjra+Q'H0I#5=41F`7NGUUe0\Kn(PV?BPqSAYag-`Gb2'n]:']K[%S->eqc6'Xab8gl;
%KDXJ@9K6j%rg8]P7lotf'H9u=emr9B7F#sCCeQ"F(UN=mE1p+\9_9-GO8SOaa#&OGI>s9o7NoH4ia[QlOIj^aVsIW_@i>s>*HSbP
%Tp'_7RYbJ>X,(tWNX8oc`$RgD@S)L>7]>Tl,iqK.17@ce1B^T[;Bknra&:.0WAb>4`U'?:qb[q.-sihWqVmBj$#=fl]'^&VD`E=!
%LtTujX["s1kQ#HqaW"B`XWcD-Tc3\pX];:LlsndM0oD&!1-1S]NsS#rf*5)V3(1aVUETrRlPgiX-Bko/dkQPn(/lS=-CjBG]1OuY
%(RaX!AD5Dg9uYf&*B-[=nY?9RI>3Dh%jGO&gJVo5VtT#$#*S_I.ibq@VFhHD#$Rf>AT9J6%)hES)@LA$`K?%A#staCOU+7i!(,^V
%)Sr@0EI5X,Lhjl,kj9A`WVs@rb&igb<DjWl;W^WW$IOr;*??_4VD]/QdrJJP2CQ-L$ac$O[<IIS#U]O^<hWVa:ajNdBBLs`X$M[h
%@l\[8-7]`tg=l*CL*R%PMNk(LK1ME'V+?P3U6mZ?G-GsA]aFY5f26U&AYBr0a].DOn'5s=71an@h60:ZZMQd6R9jF5gP!\(lFI^C
%_I9mb,%YL6+AsOkp)&p*UeDpoC4u,$EoPd0*5aOG"0r19$L39H9FNiKR:qWs-W:Zo-W>8$a;1',GUgEb.c\Lqi^V'io3bj_.6U(=
%V.!MAV`HI96Bqg);Ps-kX,LW`H)*T_G4>Xk8;u8)ka[017bXbBRE!lQj[^R0#c*TGPmQK7A8/E6LY_#8AV*j[pk+5e^'P7"/2q%@
%n>2MZ_QF:(aUf1jF_EH%0(p701cj8H1iPp2pH#Re^!'Z"Ct>-1"gB(nQYWs%D,i8H!$>@66B.80b@h7,=.03MA89#TJirWK3\sVg
%+XA?;<g69$9V*a\.?%Dl#;'SM^@Kd[p.\%`$Z\K\l7f0\o^::d9Y!kR@Js2No+P;1U_D:JH3@>?K5'C8)ZuYNE+)Dm(EjGSh;%/H
%:Z2h.c@l"\b+ic0A$/=W=s4HA3oQ=^IodDS'$MI2BROPZG8F#9h)(TBWT]^'1GhT9<#O.^E,1n:PA=`PZYA,58!X^IOc4t&V#/KZ
%`Y:(u'laYI>:W'<(Gq<20/=l5*4:eU>:LP!PfIS+6Gmm]2RMH\Z[oPR$34Mro#LEM(uaF)9Lpq$h\gJ'++&FdrJQ_\c"I+>gS[`d
%"C^HKe$UmlU.,EPi%>W?a8<n`?ZlD.j'=In`d$Iq^^ORU`p?e)/LG9[BgP.AC_AJ9J*?\c[nf0DI,:tDp(S2KdnM5*CH.9d%$2_l
%OI7o]5PF5>[kBr%2<2.?qPV9O1]igX2[JiJdb>6aQ@ln)o/mhHd0Ji"!XSGI`UF.'k^(j>A&Ftfc1a8MD&qf>;>*=NC+cX>IG/";
%'Nn>FElTT&--)g"_GJK1_tEc91%bAc`KB/MB*a^b`d(<&2!IU<D\@@A?JbC#pBc=1_n*gu!;f4#"a_fLkdAu_OJ)D"1JlFFp"Nje
%`Do[uV7Ws5b\:]nYr"bF.rA%AJ<ADC&/<gAd+"TZoqtEg1W"'c7./HuC:_O8SNI=eWbp7S8mCjtoH*IU[-PcO^sKd)RiiEaTR-q)
%Z0=B\KS,rqM,Ng@A$<)IJ+<'3)-RM'?W$Dg"%JR1"Iu#o/cMqQG42#KIF#Mhh1],B!O5;DFf"9YKQ3+b!rZiI$"UCWlcRt[?Jfi$
%g>cHP4ETs0B%4U*9,rllF@)]8?48.m)cDqZo8qlgQNSXIDT[3upYbeHKPB(eIC&+?R%%9+hb5+L"r9ogSge=F2Q'__I2"P&nmSrd
%k=,/3U%/f.FjSX3bnM]%FT<NP7TH4C1@o/-kSS,H.[[r4*Eug*1"Bj%UdanKZ0,1OIIQd(&T6?.CliA/X`Mll;E(`L1U7YOm:C`M
%Df6_EIF\:SO*AjIjp<;4r(Z[]Cp(\lrt:oh;hu;D<.s8.VhOD,C1D16,=`S//Q<:?W#uCp2JBt$FXm)3a>3b5p"'!XeM-k_3UJWB
%7t`l_GM0a8#>h7dVLS+pKlGTu[BTh-N\E-/hGQ@ESqle)DG7[f7nA13BG3?k6l9@[e3Kn;;Sjd.:S2"eG^[1Oq=&sk9SujC<4YNg
%o&/tiWIk4d4uAdD1.:DkBTd$aUq=+ecRJ1hR$u09CEYg>68PKL.I:7k]WGr&-rteBYcJ;cZgKV]C8rCL*fqcWFR<d57-BstgIM)/
%SMh5"=k=e`b<@UhC3gVD]Gn`F$#:!@^9+flj`doM-adEUJ,AuP(M_ns2(Vl7cK0fMnkP/DqG+?mW,%10J+UYA00\5M_p*Q-b*ReE
%;77SM68=CnWC?JQID:3qj[F)Kodm2Qae;R::(cf.`_=?8/'OU4RNbgbnBQdAi\sbN?'(u'];JtBo_*X8c$F:&]m#N]?*9l_C!tL,
%J(P!(`fb@(2?ELHbI\ha5#<?PXf31ompR+$8VV`o8T5X,S++Ne_sg=H35tQT*b&a'f0.T^g?nT9=Y.)]hAC#8eRmAM>j=-Oj_1^L
%E-^1&,+ZJRZBQ/2o:srh11Jmi_H"=8csp^?QY4^dmG]W!Gr=&*`93h@]G]"8QeWPWFh<2TD<poCD;>.dXPKA$?=3<M6h<u!e%?C:
%iH1E+"Oc*Ka^;f2XM=,j2]qh>&kr7kDR;=SaVMZL3>YUZq$c+Bp%"^/`u].;:lYaFA%8!!1<Ye/-,!U:Q2KGjkK2k>W(WmFKBGNI
%Z>ql8ccNg8'A^%mHP,'jcUR=3HRS5hmObA;If<!a'P;X,%gCDL_Yg@&g?I@jmJf:*O*BVaj*5Ldf99&.nu]j\'l"chLHg1<rO]9k
%n+N$MV_QiDPBS>Iffr)H/\VPW_[HbBFak0lN#<-mGhj/*)o:oAO#O7lp6RT;-O:U!f!F`VX2L0E+"mO>gul*5\>gRgY#Tn8DU2<g
%p[,DhbKH!^9o53ZrNPLD+;Ej$0f=[S>[M#&NMnhcc![]:f<KV6)mGfQm(#PlcU%]UgYd(.p;Z/cH2H7[X58lQ?!&-h\L^G5FIUt#
%C>YY10D]ls.#fCF\QpZkl/fb=aIZIDg@+8R9V%A"T3A&VS]OR3p%m2(S*hAGT&sY!lN4%HU;b/P:6'^=h5D]2p?!RsE+8NCQeF-M
%N6Xk1-qY^tJMVoR#t;e^Hl`#Uj%OL*oZnn2Tj.u3OlW\YJ$=0b?=\9CK,%e)7'&>=L@4RmRcWV@\+].P$eu>BPk1BdZ]eG<gW*W-
%omV:+_V:XTq,;$<p,UFAnpf=<8rlbfS%O79j[F*7Fr*%YSk+%KIWUe$)e0C_lFcac2&`@dO1i9,J*uj(#u=brY-E?NDWC<XoO+VS
%s,Wt*r@TYAP-@qTc3.d3(p2;YZRDM()sO@NDC2l0Or9+G$qUb_aU8177"TU$Bb/16="mM?l#JZSNLp][guLrb-'mNeG7#$21Xf'a
%E4Ih6BAS>6BVeFC(*/bHqg&)\mfrHn9o^Jb1O2gqTX83mjHkn/#p+$Ap$l?hlg3jV?[%p&;L/`.8t$.Tos'iB]kd15p>ct;W[e"F
%QT=tgpYbLng%05<ZsbU@OpAOF8FIh7S)-@&qPsE/+2?uT!YkIaDi@Bj1_\q%_Bu&tE#4tI#nm(Y)IX:uc?DU?:gi@!_LEic97u[T
%k0c+i',!"eA52(qB"X<bNSX7u9\+lM$PM\PJHE(>Ug-Mn8/G0p+;<nWePmtENN3AR0?O,[7"(E+mJCAJHdO]:.%1[omR.[^b`:qV
%!dGd6k!ms%ff,X@\iiJ1H:a!sl..#0\.'?8>8&.GZo&e0'4t4J:ErZ1@']:$b\0&Dnm_/I6)G%oZ7:iT28bCZRioi,djAlLVjY.c
%fS$0`hU5>aa@hVJ9orq$"1S-;(aBoW:&%r>`+!P_<MXI2=p\eWMNf+a1E0a9A2ILbfRtt\?#VMV+gX_p7N+g_1GWAP<dA;?&3>ml
%V$NP7JVW#b@Vin[,$sigl+>5g#nUjXdd_=EIG,4*77s@(dO#7a0bJ2"4;DN3ZSp@')Jde]>as6M9p,GU'k5`@["reQ=IX&RRC9)/
%(%F1^-:Q7O5p#ZmL.\MJ:W.4u8rWTV=\DZ98_\oO-\Yo<lX,Q%$nD(sFm><GCTBM(@Vn0,P-e>\0)K^R[Ag*EMO,W)3@]Xg&uBsj
%D%hSrJhpp))A7iI@%=i-kY0\5&OVLPMhQfgUDX8&Ef:rOdnLUtbIK^<>,h7Xd(6V1IWlS'&s:o"<%4[!03=7dF;?6G-1m<kSFB5C
%5nX-C-"0?,3'h&UB1q\V?$]P1']V#K8TT?Q_bMt"TV7*Rda3Ze5;fF2_[42i'k^^tWEbIZE.UJWHqE92,ERjY&\^B2,'=7N7_P`K
%SFAOFRe<h'\gFI+S0/pg[-)6GAg=M/U8%e2N',^.-ArNA=QBfuE@QRF@WCsjDCeOj/BXn=96q;W&In&;RO\'0=I`,f%$q>CHV0VB
%,JPlJEo#""KXF.1d[P<&qn-b&A9!2PBmXOk?gAA`'-omX(5iipPk7`WAmAOE2n44KIjLUSOZ9aM3Gn%bI6eG=#b"/?TK/N/bp4B1
%I&q$40t][6YK&kJ3'B!cXK-"U\&GV)'j$?%UlJD5E3\c48ac0%5JJ:%9Q^NK,]qO^A8T8UI0HCkiNdC%fneObT!1uhGaUHKKOIra
%LO$.1=F&^U(U@:$5nHahh.CNVFa&7@f.TE?G#rLh&1fZM$O3[$E6)/Qf,Q&\-8nI1#/:"&QZt^[Z<D0fV.%.,jI4O.8_J9E#)^`_
%=RahW![#]?RNRjT%J@:"dNcpaSA7oa7],9?,RbO!+G.=ldJf'!99uf?fa-p&@_\oK*)kd1J*6&F:oHS4&F[20]XWQnOHC=M/CpFl
%RJ=rSI"[/-QRFd5>:kM;`.1ZL:<5s7#k`W21T+sec=/bbO<s>l>^T<JO3L%@OWP:sohiLB#9Z4I\hZ$9@h_nSmEd2qY\6%rk50J7
%i+JS_=QLf.`R9R/k>P!@rl+:1aW-V_]LN(FS%,N%qG0#5bd(=ed'`0gU7A=N!!t)1h'fYh>eQYMRc-!h>Hdnr<*hi@m>`8Xap?!:
%rnI:_QCpc&U2^E(e$$jsYq&1P]h%OD#9B%[N'*Y$-B#"XTf#aYmdI"7U-_q9o!e'TJYfE.o&E%rYo7j8O:WjjWdSEIL<E?XR9aqK
%>dms)Y1/)\5!L1%>%R0,N93]*Nir$anu6p.nCl$QGEl;q.a)RrL[(N_X*th_$F>?+a/c(9r/t2dIM/DIlG%So_uh3+BCt-/^&n*6
%1k`H5_D&Pc:T%9[$k.QMk2gJ=\k/TN/.2!,A#'_O#OPZRGa?\ccY!O83"kT0hI)BKHg"26GkL>]q8#'kK6@3qorp)@)M5r(HDA&^
%XB/4mipR^;XBf]mOV#HW5$[q_ATG"4@`i/,@R@?maLLH?lB@]E_m.0H]H5MB&B#L'ksZTq/rar&mfm\UBGMp8^Jh`\X6!YaG1-+[
%R7pJ^,]q3iqb@&4Wirc$W.kgIoI-Z0`HlB$6K8m&:&UXC$Eai9;SmKm\Fh&TeH/rIBX.4k?..\@*e]!el56".Gp0h"Pi>6`0_RPQ
%WjhK]BEOI6eJ1+;'qY2nU6r-3P$;p1&mgAATq55Zo*<$'ZKP"F%$6.b=q@4<5P<\h)-2+%^*PU!P3@9+j5L.?ZS%qRYuI3N;2189
%;p02,Pn:YY_XEEV*X7J!0`i1JBpmOF$&;*JNnF_;4).(l:KU^jX4#";E0=3-5e]<N`::SgQPMD6[lW^t^'=uHr3O*8'Hc&7DE\q9
%E\Me#-Q``hS6Yg@8T>Z[3^LF&KYT.)M8*1tH5!dK:Hh0=>NC@q)A>Wl_ucAeKn&X.$<<8.(3&u$B78H&fnQEG<O#HAb,;0S9t%73
%Q-'pMjWK*GhK%;)T6uHLOI(.WbHS<Xj1#SHQe'R[^:6X/$lnt'XVUC$4fcQ'2tJk^K6OjRem6DTfXmZ2I<(&%Eg!SplA];cd@OH?
%8(j4)hlk$]rQ4OqBpDJ1oG<3d9Tejnd5r$WU_]m)YO^?lGs(d%QqP;n&+6i`(L,1/o"a!G\1C$aj*+6?"qA43<6G/EL7#o.nZg`U
%6O+HmJCD/tZ'>n$9O6l<YpCU2M7;Ck2b>;Z__YuM*5WeD0R>H8IED*dbH+t/T6uSu*"j`,nVt`0m+6aIZ"N%_]:c3s`R#f0m$6-o
%Ht$blegDfZm@\<JENtQ*c#`.k(f%U>B46*Q8AA@-3b38CK*=I*W=YMuh7ptFXO?uj;GP,$eC,a.8#qP9h,JL<igrj9([[f*:0nXU
%\<Xdp$;h"1<T"M!hTKAVE3ZE@b/=kO42K+drb\g`n,G%B;M6].#%1q*>pj_Lc2!b9cF0ZInrA5?gVdN?[>5_TZgElRFO@Ej]2MtE
%O<fh_.IPUqNjpmE3'mPGU'%;B1olVBo"&dkil0+MrfDg,MUE9G$#h>f6Ln*Q6(]qCF#fc`=HY"bnEh#Tf&^^KjTRH>0;kje:IXf%
%M7aau*'ShB.L._kn8+XX>i2;l!h4>Dm,Sk3kW4Xs+R%D(]G9NKidraCIf+(a%N/;Lgn*Z]"Y!2MCQhI`Ya:/+F.L6[M3DfYkq=PG
%i#LaABG.a/:V@!^-+%2`9SO\ldWcOVh;dLNY&MJ@7)rV"Rs9!V[Tj#M3VUZ>>BdMI4R3/qPDJ]u*07RpJ"-Ac&D'q[he_/m1B1l:
%!rF)oKqZr/\;[Db@H#6^392YJV`\^sMJHRsHn:B4o=F0C'48E.eB=O.9%'rac\B)PngF3)"9Nem,lH6PUqN#IWh5D&!S.rj3t0f0
%00\je=TSUge'4f)#/G=/o>r$T=&[=cXj>B)rOs<6I8Q7%ig.Q<i;WNnVH<lQDd(1CQ!4[nXh"Kp)HffY'^4T5gjHbZm.+2/<>u]n
%PdjZM@u59AfcF:c33NeIT$?RB%X.-,K8^:C'F&E;H,/pY1m+dV:HC!ZHY$5$gp-j'@G`DMeE'SrL3-1h6nmCeSA7kHh;u/PU'o8m
%\E7"0JbL?hh*Jb##ilR[CMdsIlh%2M#^!9HRI&AP^;Vn]o!4,iKKK:OOE$5V,Bjq2;$0!B0=4.Y\`[c,fP;>\J9]HiL\R:f'Q$Vd
%='_cg@6@*QOeWTIdnYNmbA*e)YHs'#0M=pQVN&h?^[kl@s"\u&hn0sfT#H$gV_-lGPc$HXQm*iWn(OD!Ke_V#??Z3^,M9HIDL95Z
%oJC:BLN5--[[=c=m[_T<lf"R"TXVI2FQ9V(eu"GUD:_&LBqg'[kPYth@/I,7]V\=Q-9bbtB0KIk9l"p;$+$U1/o_G2r#R>s()-Pd
%H;PZ:7ANm:Kjlol$7E48b07.B1)(fL2ZJO)J<J>WCI@4A(>EmSaG:paA)`a/oN7LVZab8NM@#-KqC6[(Ge:-c;*2rKp`a5\/-ct8
%8`OFqkq1+H+!]QH\^Sle7>D@[GYV,'Uc7**!,=s:-*ofg&J)OC9*NUW/Xb9en3t("I<)VVr8;t3=3lI8(3f\V0tOIM2hgR?r3AAs
%m_8#"]+Ubbn^\l5B&7Ru]A\mH"(WF=SRO\\?E@2inc[3D-Q0pkLY[ps8]!q&9>C@O-fk>mCNr`H6^FAt/&bi*pn0c%^9-CI%+H\C
%*_+e`307iKf6Qt9=X\oFhGf?ad@sc/k]BVB#3*)bk!BHSIMAADb>Y1TL?C+PK#3cAU]o!rNgOs`Ds/T)bd%lm`DnTdEoDr$BcR?A
%i]T<ZMmt[o!K!5o.TYA"]SW,$S+?nPIsJ&sb12*'aUc6b%#[8"Q*^Bl3[ZqP\-.S%^;NRl<i-:<8/rqp17(AH8)tsWI'bC>m3Vc1
%AXhs]\4.4+P[U=p%^6[HO3><KaSI],/M)'6b-)-Y/Lmru]A;F%,?7`8kc;kY@Fh]r*=As&Qk"'OUVt*me3CLUA>cFoje473b;##O
%43V0qKL\[\ME59j79Edrps^Tu.:\O$?n5>"Q7LjpFh@MtZ-t7NZ/YU3eb4"6'`;DVB]Jk+%7s7@ihcDJ1Th0kEt?"N0)XYN[ZU4`
%d<.NuA6;tH03db,MF/tN4jcHTIFYJiY&dU0neD/f$PtN[A>+i\d8seHnhdR=:"NmU@l%YR__B(p%ruK@F4[7Q*1=&r0uHPe,%=-7
%XRdI*I,C&lXZ4qM.1AdahD"uA,jU$Djk@H00^ZDkj\*TB`[P+^EWOe>[Lu#64op"ilPS,7p;*BWA08RMmCF\N/`jrr0t.KbC^*?D
%dd137'\@h6+?U?<k#TSsK&aZ(]:<`Lb0@tZiF459qu-#.ep`Ra7p:\;EKD^c[g4uD%W6eq&/(?@Z)_elOKghRXWhRkomMbg@ap[e
%'$7&mbJP%Q[.nB7^U)D0AJ;I.AA]rr\ILSO,GU6m%)g?\*dB[45BcKGY>'5fJOOh,?n4FJJ@d?jD#,b?aJZ/5LL,)B6g/([DiXkr
%f72g\Z;Ob%nUFESD'TSo#ZP0Z9/.An0Ca[sU+b6;+++r=2&G,3*oA3O/anEHB_e>"SQ/QF>#lVK02]85HXc&Z_+\nb07g&akl,!L
%XPhmMqjB-"AF:6.W-TL8\PS<e]KK['hHVJpVR<JO2q3@1KU3Gq*:2p"oBg''9lJl$jjB%/QkVV3V(0tE</N6!CqVG!6Zfk>Q_0d'
%:+/Bs%&f)Xe7GI`]3!h>TqH4Y0+,6-/\F[G7SLM#..Q9doJWkR_p7jl$("Z[1JHl:SG*%g:;_dEoN;=`NuL$C+8F1X4Y`TrPd,L?
%']F@%F?c[pDT`Ci2J^EgbmFd'DBFmQLhG7=D2ut/WCIE*\GZol_7SWh]8+u3+s-M+3B^mJ+u,'Jg$fEKFX1GB-@)1KqZLcjq0`%u
%TgHr+SPR`FMlL@HGJ%R6I\^VQ.CAu$d'FHGiB5f[2_4dRW%J;TZq+`O9th0NNGShs'0;:XA*If)1AkKAZNQ"5O4[+/^!9niGc2t7
%=4^4-[$r2u:8dR\N[9Z@.mi5(M#/t\HZA6jU9fP!['%+/bETYmF`]/DE2(aPm3hH+S'sITe9'P`eg_D.>IL,+1ECX!<kBS%/.M2&
%Oo>tK5$m=pTSLUdnO4LMLMNA3P7N`;&UgH.RU`'Zlq9)P"fHoX>WY;QI#OMH_"EjsA3[R.\Ainak1U]-]B"][Ve2olRVM_J_/h>l
%VK!UKP%%>-9F7f.VSDMOR,ZS6]:4524n]?]<5B7c%Qm^^7nQGI16h3RW)G"?dBkU:'8Bk!r>#EqN4X_X_3[!H(?I2%Vr5'+RP:C0
%`[WbAAK>2H$f=jDciBe=gbd4,oC@oro2[W*`=h#]BCN<I'u5nU8k`Z#:I;422a:$b*)mB"*:>RMg/CrarC&h\r&ohb\2e*XSh@gI
%K0Io$^_774#b%0le/@^oZRmglJ!VV38*0P!D.(HJ1-Jo`,^=DmAI2tOqqjT<o/1g8cC!`j*O"3m@^f.nR]P)IKQqB=Z^n--WnGeI
%kK3=k3o4RhBM@\gQCVuf\T7(0X$c-mb!WQfOZS;Wr^6F^6_E;\A7X9ci+h_D]NOd1A))6g0L30\NeVo%leO""cOoSgCJn#`f3['S
%be6Poq26FS9jOdr9T;dga+oRph+hI>=AFG7VqN"\=M+gBHli19N5+g3mVJ6Y1sTq&gB^rVJkRsdeta-S9IIi;g*9[hf*U0+9*EGE
%I,5&rY4J0ac$JtFP!7jRcK!dZlF3p-G1[qG"[a3YloFAdV,,fhg>u9<AK8g3l=Y4ZVrOQP:<EKDq49o?.)'(gqY)\3a0`nLkVPrU
%5sUtRm.=9@37FJPlcpB7d'?>hqsq3A!D2<nFj+apH:p3idkEuB<Clf]PQ-R\kUC,XgI3="+!<Z_>0c*m=h%:WE`!1k-4`eL=h*>+
%i_qr?f,=Im9<3!2f7_I)#&M'5\L.a/VbM^]m%l39A4PW42E`[-Fu\U/6k^mKALb-X0$$0(;(lg*Wf6F02*dd<UnLm,2hF4g!f/^B
%j7bjQW>j[?[Q)tm[(W1Xf%(fYb=_eQqTLL(ma:YAV1\3Kli>N<rLtbUpi/*M7,2\U[\%BEgkfh28"P(h8[DIj.XC[(_Z@+-n!*Ei
%?Yn;uD\o*.R4ceUL1s0VjAXl]HDt^h3P-'=7@M2Go(>?t+)T&]Gl(h5dh28p0NDFOKr/iDb88c;4dqY6Mc)UkcCaa=kq9Lp)DDu5
%O"0?KB'9'QL<>`BNs?%^5k."p8NeE3]#uTpe'>Ei]LFg,.>OP%4r._FgF[ZM-f!dLdi=[sOZGjgj<TT>)'PQ;`G64p@`gag'eRX6
%X?qenpJ8M\GE;+J2*4?D+'H$X/+(a8:HHEi"'Xt(ID6j'+VP7*=GoPQa-h5Hlf*=:[D-29M)^S`LP0iZ?#C2NmTBf$e$;&p6Pm`W
%B-r0@N]_pfH.Uk2"qa-R$uU1.Nk[IL<#tnC$=dR:%Xu<Z&#>ZH%$2m"lr9Bkbg.H6If'SB%PF#<WFb%S=V3>q9Mr&c4;1n:?dc%X
%):'k\^FX_R7<i8b&MX7obtNs#^dpmF8m'.O@-du+-:7Z?$Fn*<ktN4hFidaJj-NRN6m+2[N/45)<Z0En#KM:9'8JK&OST]6FJ?R'
%1$-%:6\4Aun^8&m+u=H]ThaIn*@5(5C5bW%*Zur7poK8Y&F7hN3CRH1hD'[/RPng2QkM9'mF[7h7;SI*WrYrG=TtOY6:#^a<`LJ`
%bg&RAVTYrDV>2gX8,`b+?GSi%b0^2L,Ska]+eor0rW<d=ZEudSGI&<5g9^"7]P;KN@&*ps,:mLKl0(5#@XqmRrt-ht*_YJqF7/DA
%]?RX8+'^I>SB?JBAL1l;*2fudj*+o4m.O*eo!Q&.5\?N<[U,I?KRLagm?pDt].C*U5:E;ok27F/8p4Yh1NjE@d]+Cs0(Poe&sig3
%M8l5`FJQ%(GQ[.#HIkcQ@l<gHL$#,MC9HZ)MF^SI]LoG@ARN95'm9;_*(HZA$\(#KdPQ^J>%7;X7/3f?iE]0_3/9EhSa_WX[[FE*
%eSd&@LW\4kpAWn#\u#lPAJ7GLC`b0_77DIKPuu5UI<1`dQo`+_7@B=8Lhg-/X6BIc=]k4'FCm]LH)P![=0S/>G4DIo+80)S=4Ull
%A8Njc<u,[k5KmiMg,AR*&g\_s)1@2-Ei_?=hOB2O3*i6copAQA*c&#2W*KIu(h`Gu@eC"tORM%sSp'?Do>05u@r3fm$Lr<),,=O3
%VTq!_E1!!Yf*qeVHFfeu\G-8t5;%Sk"N,O^7nMf8pk(4u8usgSQJiQmW6jP.Q2uY&=iY4^@L\]TFu?)okg*E(3LVu`QhGK]4VGcg
%3Lo`\iQ33]SE7Y3A=Wh%R.k\<5_U^,9"03in$]&8:p_uCYo:>=MO=%FfX=dn'((eoP6_-(Q4$b;Po,u5;rf;X><2P67eJ7u8.,^a
%>$*rM)ugQ)^D*-S+$!&@VS*B`:S@d$dG6P*lN\S-4<mq]\LL!!,RSj0H.KS9:LU43,@'$i3g+o;N!`1(e;8:e9SHEP*`3\LHV;m9
%XDc2c<gYQCJ0E>"kpp8H3,]Yj,P-alFRjRIZpN6YnL<usMh[.%(M-@Xgl1j*62"`]%S1_K>1u"+eofMo3IsKk?m[Z#A=YMjRA^6*
%B=q4c8]:f_Ni2i)`<15W)0Gc02t_H45!W[aHr3Fi?^`:^#32]:,W\i"-m/A\)BgGlRbPKEPbEJ91-u$GpIhrd8p$h`0oB'jMD@og
%0jQ#SF>]8["L_LS;.CClo96qQSN(G+H]^eJDZ$J9<ASLjLls4@>In?[qn;a*$t<QOdZ2UhJ\DJ3YtVa4paMiIY>aU5?016(Er>5]
%1P7._NRa`b<(ls^#Jd*qP[m#T>cmEk2T40H/Kend#M[5hk"lh.p+]W_h2_2&Zb\7#5?*%anWA_efQ3BB'Sk0/Kq&"Oh<1:Z3_k=k
%=(.3^[O<@uf*49BnlW"mHdu)%FXQb^a<N;<^NF()[!X%=OYERXK\*0e`LGrISo"BQ<,bJ0IlmI*?Ttp;-.>N\L-Z`)OsRL^@UjWK
%Fa7Lb?O!m]*+=4sO&]5@6L-fnX(>b+WKFr4:Bsr@%>SI<=btXH?L+I6-a*8b*`Y!C/6NUud=.GuMtbrB0ol3eBomAMdRdUH<F*?P
%QR&_j-CO+$P5Re]7$<>TELsVWdpW01Oao>MapufM`-GIVR9A^O1IciM%/=qi0___hjCp*==R^/(h:L"J9TLl8\Fi^[jI#gE5cI7W
%gYjlhT6W[H,<I[*AK3_<Te:>`p'jg7:R^otK"=rn6#C)H_n2>l;[G2;1LdqIdXp$ne6So&%n!L]LqKVpajYMsD8!=6;6MQpC80Fk
%c%3O4<'u?BEb\TkO7+\/nIg_8M-i>g8ua4K<j1Ki8BVd`UlI8iBO`CY:Mn1*6cG;6[%a*+"GoH,U:&LjRasYTr#7KXi>-]AG;%[Z
%XiF>iH1smL47>?tWUjhZn)?Wd=d6KUGQ;>#=S?2.KbYkS6V7:M(t,ji1Fs\lnZ$-QFJ`cPbNo>)rPd+khPJbOah5`C&mog2dZ2i=
%?B2d@MqNe$.4qH\C.n\ZZ-hC]^<ShsV`OI<%5l]'He>ZCLM2[P[eMnB6h9\0]<ff)CTZ4#m<LX).lPnac"eJf+Fa?kHTE;iCU91$
%Zi/BUV%'Y7G1kP4_ILYO*fP5gq)t/Qi`*QGr-#@+rbbU4/i%qsC'!tfTYb0/ef1"]Ed,GM@Y0[0"ihI6>RNIuhAH]dMr]gpoRJ99
%K8&Fl23]/^;^"66m=+a*^4V#p2e50"PhlXFNl$SB2h]OT#IlJ+q@F^f+^kf:%m%K#+[bMPbnEn]JZ5$O<J`D<qI873h*=0$P`%cd
%-N!S5"ZhD'FeWGPHp``S5F_,j0_;l7O57/nl0g=sr'T%/S/)=@>=\npP$D"pkeI#Q3Z,@adRActJ1^DGqk&$G%&5LE^hRiqF<=[4
%pA\m'NO0NJ!cf]ZLm8[pZ=0;t]TfDWkVLd8!s-^$H!R6W/mTbk>fs[).s^sLF#*Bhi\/JOi>i&@;:qH_raE249]XnQ7%7-Fk:;b6
%iXP)mL*BGWZYEYeo9&;SM0Er+ot3oXcqR-I'Oc[$#dO,5=(,)'_mP:aSL'G4_'qa1L:5Bc2pP=c&+fX^JV:*ca3>JMq3LN8\)2$S
%QRVJh[h`)<=!sOkWSPrJjom095+RrQL0^E7/U1"NZP.ZPHh;CcY*)&HkqJ''\(:>AH)*4Q-LmGUb/K]`"+9UU7)4.<(BXS_VNm%&
%6Sf'MQ`,Tu3?;r,bd4Y;;_fYrf;%%tBiunq&+PCcg8:C<b`L&mJ9eY)d`Ip9>8^qAL;R5idd._a]g,U?[qW!>@k;(ASG]k=Jd*l[
%kc,D^VHuahM:Eo$W-COk"\qXQ'J-NJVqYOFg(YT(]sdc2U73HdNQ%8l3M+,f>M,iId?.bWN166gSGrDLH_4W4H:Y/,I$-R$QOVmi
%CRrkr24WkkS"+70=.$OKP(c9\is!q9"91[mcS1>]r[1)B%6j>U6LQ&44.E#S2;^qgoW6)>FWEFF"iAd*!qN5a./cnApt<]pOMVQB
%S._+$c&7ZoY)4tPC`PHc+>sn=fpLsK@.b1=M$m@:qi>Ge9G*#0]AJ$qT;a^\p-#tJLD:(<.\Pb`^#aUu3=lU-,b!&l3H%8U/a'["
%@+&MkLN"3h/@,`J%Df@4+l_W-JsV_?mhhtoEo)NkjsIi/UNo71ji9o`+t^N.=_qWc]QCtJlqXeg^KV\)'WhbAgkD\t?,Bu,Y,J#/
%W-"\C4B=K\%Sf'K2B!Y1Y<csO]2;fl5pSR7_fV1q>,fa,!l1Kc8h/5$n<c3$:/Ml>B6AYrZC/V%"B*'Q_tl;![)=4\)>7)`]".Td
%a[uiLeM)2HC"&=e)JBi2-aB+lC6QgP1mWArE.3N^27"djBBKH;(?'R79dJ0gCR7*D8B6(>F:)fCmDKYTk#2i_ch9`RmekR8N@gI7
%=L6@RK,-KHV?&BZ9KmCLhBfC<"2&I6D6kiN/ZSkgU7&&#l]JN'*Qc6M+)uiN]-"fYX_VU_n29;]*2;Pddj3`_$A`<6M*W'sIrap'
%/_H!X;@I5&S>d`$%W4#%Qi<j;$g[5^)/uLA9CUBB_21E\mp**Oc5UV>f28jpRI,pg(WV]Fl+qNl8sl/-`*_E*haKo'pUZ^"rZ\Q&
%k1gsRH+liH-A7L#[rq*H1aQmJb]5Q9:'HA2ZJ(,V%$^2Es&)8p1W)5SMVi8GNjL;TP]Fn@5lTK^\V0'5X\&Z?mfA,h&g":JK,ON<
%1.S6.QN_=,6#s.S++SkhT-a"`o;hT*;Sq/&?",lKb6oT[6;[L$c_FBN6m;D!*PFNBe"gHpH:WL=pm]*Makr6,A>kZa/*n$YW67au
%;qXNn_,Uuq=Ygl'nY?OeKk?80PGES(N`=.e^dqCKQs+KQ:?G*_=I-!Y1b^2[FOoDc!-24RmenO/rfW5)qJnFsd&O--WkVMb*`HFN
%U4iSK?o,tV6t0L;^,es$ZE9rW;(L_O!'CIUK83@J/;H?P`&qT2*gKc8O4s%CoiW7tMMg`P.&#)5b7U:DE%a@P=ms.$b,eFggq-_h
%!:=CSSB^8@4;A*H1.0d%q8p<G-m.0d?0=mT&.l*5JWju@HSn:!q0^Qk\MiR,Kg^C)Wm:cUP/slO4I4fbmSX3.mrEb[of^QYoucDb
%<qkcWO\n]rRfRJ.$t*CX>W]GP_\og:md+*W1Cem),V.;$%mtPF/V#/^T*KgY4qI7ucGSGB?5#,(X9LD4Pr?Oi]*.u:m66TSiFbGZ
%+UNI^WWW;6%HUUs!.@IiSgjd!60/JU3<204XjP8li(54@'ErouZBYNJGER+nCBEE[YrYo[J8/Yr#uI19.agH'\CbNt@'iJ!,dLV[
%W#f,:J/LlN#WOlIo6D0k?8VcG0tV;#Vda\aW[>OU67p=c(Bo=cB`9Oi0[ImOBJff5UOHu9!TnZKC/*7^QtN<g[$h!d[j`Q?Fk$W1
%YK]_4o.dGoNcRL:GrD"uZ\%ZQTa.VD_"Z=pKI`!,$pl=N_Cu;'=![ki'S2.%jn;g,"@2\pUObn0nOZF:U&\kA>X/^4QuT+9&O/RU
%?u#4!6"p0]k\1;.Ema0E-YI"uM?*742)LP]3)?EkD++KpQi`LP'O[N`.`c""niSM`Y"HG-H()BZW[\"%K'--6J87*8[u(5lLB1:Q
%(#T]:>CGNe.hT=40:eT7+M]iBc'.5h^6c'[GI/dDjIrV`!9^4feKOG<L#W)1-%PHL/#W_f09O.>]N>pN36g^Sf^*n>:IDcanVpiX
%i%h3:Wr[120"sYfj?1,7WWE1Ans@%DmP!<?NW9$IN6*UHs(dnF0Co-9!O0lBIut;A93*^p,6,DOJS8G:bka=!m*u&;7Qg-5rJr6Q
%Yc8Q>k38s0!OMgPZ]]0b,KGtn.N:*nf]F*-,6,\A(XA-'s#@-6rtRL*.P`_[`ZX:I'@)^@^c:G1J<*[Fo2TI3;neq;MR:K9`Qm))
%r5%&k7#h*dj.MeT^Y1g3%A7G9@*<,S8MpM18Rt`$"9<m%9NK[D\BM)'8c[AtCaB'6flk%3^h'O3X8m3Rg%5=GQYFAWs8QYrX[`>?
%S].i]rr5X5,>%obRHh3-s'LQ0ojl9VeK)oXHu5`T.E4+rEuX]%@ZH)8r<LGaX<"WP?sFBS/(T3/r_Qp2QnDLee,!^>o#CgHPR;-M
%s*:oTB$PnM[K7_nq%'0$V&4po_'':L^Yd/0p-1p]M.rdc+hSYAd<8+LN?\>)Kh+uMr`8]H,5m:YmL[hjesTL=s#A/c&1Q1[87WAM
%lT`\\)s_tni9"`3l[N^pY)Zoga5>i#C8ClkdF.Po`dSU19L3Qgk`,/JD.CQTZ."E<pJ*rC"&u4o0`1ugB,K75W(`5&d.;;Q!c-B.
%H'R"6dH#S\ql0Ai?OV#h#Oc^h$(:3'<KGP",l<@H7`fg!qZkXCcPt@5jD1mQ>jJA*^r6JU^<[]P,`(P(hFL-d(s\W4d4^B,KMbDZ
%@#Fu,2U=fHr3&Iu?H)AoSJg^cnbXO8aV]WOrDsfSYWj4JT>d@>CB$.2^;[[E*;F=)B`/P*F]cP_rq`'4r=Mtt'Xofls14*%<Gu2"
%3`:)!R*5H@PPL,RZW$Z]OP-W2c*,N_r67U_M>Z>@g\;b,LKJ"u$i'XYLD7&V<SJs)l)Fl62q2-nn;mTMr!'csX.8Ib,?93kZP2jf
%&_?pHT=<qY\23l?aVK;7mN7WKFNo1sTHDB0cU+G6$^!:2r\;%CQ'lI/m".9qY8srJ;&a`ZR-0D@JUDjV**US$)%0.#rbA3rqsf]N
%857kM!Fn]\\0!jGJXkk?+R!s;@7]J3Y))&(IG]2:@_dR$(V*k/&(:G,ir1[#2oET4hbS!PM7A&LegcU9:u$H@c"5c2q/kj-dItoL
%iW*'.p-TU2?`a4t.Fr3q(s\I>gPW=e^<AK'cMmW3)DoETk%f$W[7L0<'Y^D7qr_b'&!+NBq)f'l&8=@t,d*(Mm74dr42fj6mW'j!
%lGJG)qC1"pBRAA?B'l3De!/tJI9GRJ!+@0-?rj*%=MUr0.FS2M-69*1m2s7=KGnS)(j=\j[!rK#JM:m>(n.qZg-:2:#J7i@qKP.>
%PBm$1+qRVI[.3iWaGR[nm2n]Uqdf,M,l@b8\UP"k&_e*T?(F^GO2c602!TNHQ-.n3r>;!-]$/rjc-DeVA+%AiTa>AorYg%5c(4+B
%Cpa-oPOlrN5F*aT9$QQ\!$J+T.Yq)g#]gB1_L#jPU<@P0$X\tN0!Z0;E1i>fW(YQf.&"R[`M+2JZ:bHVJ`S7LAWlbJaeU9W*n72F
%D?!_WHr-pC&1K8(Ne4M_P6_Uj#jBcU[/Dple?*!s>]X3\,fu5/<:-rZ@`UB2@nGg!=gnJV+S5Pi[sot#'5r@P*kV.NgbV=^2\%lX
%ql)W?DQT!G%PY7`DMQNm?e`iaNj4B]bfp#q0l_;FmN7?_GCptB!-*hbq9k,FE;j$-oiOnc*EdI96E9_A!q0Hc/JXrpT#$4m0akKr
%$oN&7V2TUI`[-0'(pXqES]4\ho[6T`N3KtK,jc[n%$%pHO(&''j6XfY<(T[;I&"#hkNn7$T:8=T^Y8m%<Y?FQ\Z8=,4[ij>4+3mj
%+1iOBVJ@(e_AbOSCn%Ib'komc#6)QL*1IPt`\KfBa<P3<`oaW9"-(<4k`JI6nO$cVMR7lKHQT/[8c-PO<XgMs4.?n2)^arCi`+>!
%O(2._%[KFf?-JsdqZje'@GdH.(tOD(]r;TO>0'-2bl+5Qk0a)MO=2,<0e,^^P+TtsA$Y"395%"r!HLU&gOp4!TeZ<%a;7FKDQko6
%q2AD:@=G:1(K],boBt##k@3;)9jn)ZINlI'`;T;deWMYBF3VA7394LeW4G99bb!ur9ijl19m(>O==UXt\rALt:g8+N'sa+&/Bgf?
%/f,1bN(TR8LEt.!O"nb&Fc>[WXsDGOqsc:V;<;$+VqnTf]sX.BEW7"9\@!#[dplREcQS=))MH,fT*D(Tq_@Nt3`aaF5)b53m/?Nn
%mO%fB0psLCU-LJ?V!<HKhHug3HU"T++Z,Hj%JuMVnj_Mt'2o2`U@014=N0jYo#)/AKY-IFZ.9Ya;eUPPo'VFL5B]Cr[uJ'CHYY@N
%&riA0)3H8<9hTKDA``G;*#@:I`i>FY'P_!f>g3??JS!1?"LM_$FrC`3[uJ&8NWt,mTJmR.-F=.NK*'q!hN.8qjYfLi&_>tfZm;hR
%^o#<W@N(D-QD)FtUNa@&#Wmr&h'&OK#m:LhHlaYqPU%t:p0>A4VP2f@qoe9u'cI\skRF$#[QGIZs/YXAD\HX9.SG7EE^;=K<6C3<
%+(HL<-R!CO8K&hF%,'(K2k;mZ";6)T$D.;cLM6u^hp2N1Ymj>S!ZL'm*b/.Q"OdV8OCs,B3X'N6]s3[<S``uNN4LA)#.Jk@b^2XM
%C&`C6\bk]AD-*sDHb4mg!2)@"3.c.[Z'D[?dNN#5n!M'BQ)sp[P)o>Mf-rRs3_X_b%l<oH_M-jUnT7g>"r:F4c<;:%,D:h2FuiFG
%U4fA"4!fY.9mKtRK]=])IV9W7i$;es"S,BNd!c,9F8X\tqpQd!^4$J-pS$%X0H/*C.)u87=b_mc]r$7gdY$8HDrL+mG(l$oi?XiP
%o*Y43<a%Ij)INL]%a:EG5M)ZW2^X/6PHMZl8[eUQL7*'r-4UjgeMFBIipdsk*k[@W;UP0HXeW6d84`F9'f\Z[KU].E<VV1nZrk\g
%l@s_T6M3^-%!8B48"UL_8;1Og;%fr$i_tV9&p9^FE9QO0Jo_jJWQZ8f5@1Nc01p[^':9*"PNcY_lo[:Vo.@\*//"O([*A-M?8(MW
%ptCmG]Qr)FkV8o=g^Q=Y?-L9aTMMO_2c[Bq210]DY/^LVf"P_9QK1SS:S@aHDR^Ql#+:Scq,g7c&Kp!5dR%+FNDbBA5`nBsU;4NF
%RCeltT;q$]`7B\0ML4n/:Npl$o<Sj@U?3*Sa5bX1TNM6GDl[g=Q6]TS2"<h=UUO;Rog_B:4ADgTjZ4TeU74^A%kZY;Ut"kI&fiU]
%50PQhJtRf(*>7YXHD9m[KsJi]Phoj@M[E""@dOg%UNkc89OH0JL^%UfQVKdASSF/<4bqHOl9]&u1oYpT$VM#.03/I73O%o5-.P4L
%enFdlg7:^mQIjO5R(BkOan0*+U]mOB8.?1kN'hIB_'8\tSTIT%ImiXT15e99:9qgIJiIG_PY+.YBsheus/oDe,0lPR/Gl,!C8I1d
%V*CW[N+iV"qsr/$N5=^M'Bu\hV9GW:N"YBYoigSkZ12ak6kNGKnW6AoD4[%aJ"7C=ji5QupCuk1;m'*rgI=kFQ?l?]h)n&n7R*bO
%WZ/:h]8@=!a&%&dVU1B`P;tj\jNp4XJ(&]5WAi]C47g+o5_%#k$1su=Ba9gb7uL$m8>H3#j6q%.VHuBG`gud7V9rZ):HL'W^el=N
%J=#LM[F[6lIPdopTVT2gd$3`9?]5;@0%Kbf0WquJs-IW_']#S&gXQ%9+AjL-`fY$ajU51R[FG$B9^X.;[KsVO]*0dh&QDU[m05>I
%?tPj`T@7He7Cjr?LI%:s'G^IQ&MjBOj7i3KCSTm*/rBR^8SccO'5WBr(2EK:NH%De8t=>@P<s^mE>Q5[Xq"XB]/(,Rot/ZhX^<+G
%e<:9m>8bW;0To]qDp->'^mt.N>msD=M6t1N')aJ#ZQJAqd?bW\dU"3K8:"E.M3mWS+#ScO(mr^[2,+t1RXZ>=c"1n'Rm91VD9MH3
%Do0&41ET+5cp)^$I@EL:h(#&SNkWZXXk,.Qrj\<[1M?e8=3'oD/&$U_3(Ig#^;_X1OTjn!I/RYOD`K>Ecei'rd_=6C(O")$MZ$LG
%5oYjdGF1n9B%*Fd7&A4:TdlVO'p,(TJ"']>clY_[@$S%cX!(FMCjVC1IiRtB4OWtj?(ab%H[GSt<p+rMXbc`$81e\KT6aCJ]<Z?J
%TAON%jn[(4Q:?A1;bNn#/QTHfc%Md(D-Q!GdZ;C<>=r]Nc0Am<.?9Va>Y:jm,oW-.Qk(]eCg'I<ogeXtDr+B?Z459r3`%m9c!"\+
%X]_]pn6\6Km9cd;;bO+%&PD>N"FCQa$6Dg>^Pi3p0"'M-WdjA.ab6M@?RDGQqI=$V4E//j-;1^N`?I,EPH2s,M=oJt@Z8D5AuYGb
%Uhe3%7sp3ej#0XD?[`#>mbi77.<Xb8eCiU;qHk.^SOcSk>g]\=V,jg(gPJ>q"83c52TA2@dX]a%R-<=K/%qllq[FDlUO6mG37Tk_
%]sUJ<*uE=I(PK5R,i9mECMTcR5^`1Bkd8A)Aa4!urIl,'[+h6c+^ubPrrS(sphX"L#Fc'S1]q2+b4?<4>:j%#gNYlgijqLXNOd\O
%;e;JrfO(!A]M[6G.J<jOUJ#kd!oO\Nbhkf]#$IC(5>3l1Uukf9[]>90VJfY/<20>&T$gV,"20JZOItuHRf*Bu9!]T_&+U,h'4"AY
%MZ%35ha*9tn\cd-?XZ9J[$qGpQ>$<N>aWQ=kkZ;$b5CfVgA_d:Tb6@k"?p%>EAmg>UAatg@`hEPIm56.b_2_h**#`[*oC-nZlb9I
%j>P9^rG6U+A*3-Ujn0=0>cu7PRf3+5c-qWe/VsU$H$`o@i,-((BM=4cg6fC6eV@X@U*[4^9=>qo7H@4DrVKbEh&DJIZr!="[!Qd5
%jnr"uH=)gJUGa)UR*>>gm74oFKM(5bHB0h@<4tU+P8UIW^Rpf!<WM_j70Q/QpJ\Xj9t;@ni(]*GnX?AU$]neXOCJoO9=k-rg\8J1
%G$0rt*+ZuJWB\BNq$uN:V[I`<"F;OfJBIif[5;&ZYWsaC-/bWT^L(WQ9BPGC=)"'+&+EIP9OjOXpEgd@V",[lbT&pF>hiQ*&1U0d
%NMQ?2,)=pNf1j@a]MbaU>M^&g9Y[8tBkuZOWQRoD+)M^-A5;rLM8hhf&3AH9rc/l1%MZ7n!DT_i7#jEP9t1-qg\73h/;t=P1hK^m
%!gp1`Fkc[q_#[5Y-<HLFIr,53#Wjtb0CE"$Bs'DBrg-*Rp7mc7<0WB\ij*;_css.&Wru)'+,s6>joD!=X<`u43tmNfQ#8f%3%H"o
%CV!d/3'!u(Wj2Ysle9`3k8l_(hGsHfp=;<h>P0&6g>@&bmh]#e-XQqIR-^l:m>nse"]T'FqQnH&^kR5dCRY3HGHO6o<FOcXC'@O5
%U*97S8bSp9ff@b%Q;nE)&qBm5IdUp4oTJQ2,La>hd;iDoh1''`O;.Se,q1":f`,t`4SP[@MZ)p68q*j'H,@-^67MW;$T5lcB>sj`
%);1\HA$o1O\i4.D9l$D*5FN2nn0F>'<GQ")Z.8\*qTQ\FX`rlj4ZjTE+)2G>OqO%aes,aW^(-Wee+3Mbf+6.7-i^?@+^o*Sm3T9k
%`;7mVWo3pS]RNO).n/Q!ocUSn:)C,_Xo<L0#42tO]2$\t"q%lK"(+FSF&RFZ-M<_O<B$k`=OZQUO/]pCoCQ([&FKDLN(]2Ec>F!^
%[g$#4BZUmCP)RG@II^p#hW]&.aY?0c\#g;.&,TfX[0>.2QaUeVqkhgaSOZu_gg.&;44W*bS*^.._3Bh7(2*F5&Gt7BH1hBYD'.ZH
%:d<Z9&=Z#b3(GEU:C2KWOP+3=rms%8oqTog#P,Lm%+]u<6`B[i'Ha1%Nup)tQ?gT^&Sp<h=FWFdM2gR-j)_.25h[l-,>Ojh4g%^M
%cEaut6:n?[95eg1g8J_#rF*$;<3-RK8$"UGqs\eJcR%,&fB8`n;Z4jnd5G'E?R"mAj&fJjVs1%riljR*h[p/ETmiAAgl0[3b=XL"
%)h.`8II3]>h/rLg0i(Z7+tsq\j&:k8`$NmigL=@;m'%ks@;[Rn`<`85Il$)_5E;&bU._Aubr"k^f-]h&(@(%2P6+N9$Fs-jr!]!B
%r(Y%Kfs12hWq+2Y;ue+Hr%uUh2mT4'?TA-FRPd`EVLW;OIdbHbMUV:bd++6?IaN96CM5-F?RsLfOoE5Gl*%fNSc1NNZTa6;70_:2
%q:;Flhqj:5s7ML39t;U?:4H)g"'2Jcfk!4OK73`2*B9+]jV$hhHiKtqHtIVpd\r@+IiKiXOtEO03)Q8R!65?<j9C+K$MV=0j3@5Q
%3\Dk2O4/aPd\YER7T[IJXmTFo]n5s\X8eG]J%__4qV/lK%<gi]aXOFX+ku_Eb=UbVIdYA)VG0YSj0b9(i=f.F1%ekQb<IRQb31X6
%X=2oQkV$kVPkNiJ;ina7orWoXA\ZSF^Y+jFC(02Ud#o>pan1oO<W3aamSF/jJ$U=pM=fOd\!k??<RYVNI-Sq*AI+q<:._2#(WR\$
%3/kSSC%O?Jh)NVbl:cKi_N$_@\$"+c:8c&(bBB";J(^/7ie6KWGjXhHSJLIN>=gY(et8MAVUAiNX59m_8&_@2KNeLOfmQHo6>)Rf
%;gLS#(Rb9>O<i:n@oY#W`FNmB;WXn-MeZIX9YZobWUs\&WGY/+Vp*pCdiXe0!roMmg9i>sr`GDa5XeBsgl*N`0)7/(Pte.uNL%^r
%f<i,1KL7q!^b6XGS!^TfbON-?[R=p(__fM.&QC62=iAQCZM.oD24a_Y">MhW^IlCp3rP?6d<,3m3TF3X8C_hYE@F!/Ob%R0h5Y#^
%EA)Y17/:dXVf$?.*f8708j?'<WYu/pKRk>Cdq:kFoor39)D0.)Au>Hlb8g8RPJ8uR9])dJ[J&.KXEhKYe*/ME^b_t!8?(L%3JI=Q
%'kp#5jc)g0^C2@p3gQJgV##'rYm^Vrn*6!uYi+E-P^b2+J@'$roLc/+kp.o#(s(=NK>bVH\+TVjXZr]497B2R+=WQiYFHIK7165/
%.e7t;$CNh][=1489ru+<m3^Ck*dn^fYAciBlORM\lWTWW5>\Ooc')!05`;-bC%W]!OE3g!r=HP2#)fncUZirX>B42m#UNIZE/Y4s
%dd""P'>rT8\[D9LQZ$(+jg?qIrpiXL<e'ph9rgKdl2?fH5PC;^To`5<#+l7)-.S'XUpOr,<cB+GieT=KOuIHkm''F\@YUI!GQ+I[
%9DZq@B'EMp>t2E)XSg6n?S;8H!e&I=lWX8IU)&g^G/n_t(-aTk`^MhrMtNj-\dV1_^SMep[Jk/%#4RdQGnY=Ej*5b1B#ZYIka&m,
%M35m!V_GZ+K?l!WA2.?XKBoBkpX/[`iTM=T[o(;i4Xc!=Y8]'9C#ih6O"7;\O!5BRUEB4[_=n59hiIIAL=I@l8f$FkD+m&(ht^;V
%S%22d,:\17p7p)D-2WfKlO<K7c]];F;s[$".ap+3Z,[L6.E-aH\gG/F'`6;!EWm`%6jnN!$21-FZ5seJ7pDXD4cPc6KbB;gJT*-/
%?N4--F!Z6SZip/tjBa)EVoD@ChjCE7jK,qVU2X#rYIW?9qD%M>D'A"i[nU@DZ2U6*^XDD&?iit$A6sBfVo8GlEVKF+eW6t.McsIM
%XsmY'C=lp^Z1<UfqU(V[X>KUTA92C']$2O4Y,9g3jPgSOqIfQ*dK:3M7nYlO9s>_!e@VScJ'>O'@$,d6\975Z9s7nm#*P'q;5$BM
%rFcHMY6jl31J12i6N(oS760k5F+;l]^2A&fWha*i:B)mJ68JKu<s8oJ\$2nWV;G3.1(qVl<ZpW9Pj!U]\m,U@O/5Emloe;1?tSjl
%dU?kdr6GWR;r[_A4D]oHT?gSUr_mA2--d$^Agl[Zr<`6CX!Nugs*:['!i>]gS]MN(LK?8"f'mYoE4t$43.%iNLa?nZaX_,3r0Q1L
%amrf:l;hl??ZM<u-pPAu;!uGA.[YCC,#e<K`s_))P^n'Pnb_X:'RL//D\Dfr.fC8:p.H,cPjj!1)1k=o]AufRCqWRNa:Uu.pX$NX
%!XVbimF#Srq0bO%R5WRUp[A$-M=5Km=aU1M;?miN\-*aBH/I&9'&J-!2O3_01Smj^,h?V5/e<ql8"p)[FT5BU!0X6uH2pju^KJA-
%HMb,2W*shjA>e5^9o6Zg[dUh)CEG"`kM>L3>M_nD&\&S%T[`rm^Oo/U[n8P8U&A2%PB?NeTf`J#m,,b+R`PI[GVkE/^<sl5rFP.h
%nE*SgG"M&hlhG(7I43PjGI"466P>Pn#q97(_1QYPXab"O.V8QWojk2BYRTgtQEi\bmW+r/,PLpJs2sU,69IkB*sU>"0*Oi+S0\pW
%H,TSa(Y#'Y<FO*taEM&m0fcA[f&ZIckrnIOMs%+%2&,:!6t;VUaD<=Tk`;Jq#;Tcur4%E`,RPka%'&J8HST`^Q2<3a>SGF*-c%S:
%VZ'=:RJP[XQ<8,>4+M\J&@G.0ZZqU,2Lghc.0\/r%DD\j^oq0d8cn_-0\@dTameE4;PFP%2(eiB'K^_PT:&:B9=9075[>pJZ?Oa>
%VuKapq/O9#HP+DUWEUq/Fm@MQP-9af9d>.MqeCh4ArBh7s5U#P-^l5Bm3KZ>;D:*c-&k,?>?T,D_r<")m<jI=<_r[],uh6J\9f]0
%9lT\d.pR`&#U4=>'9t16>W%[3Z;0FS=[6GJP6q0#ip"L'_tT/&e7,3r^?$&u*r[Et?#'.U=!c.n%3LFr0*p\S>M[h*PmH\BV_Lo7
%#X2Lbq_!uOHN6@/3D.q1VqW3VIdI3\%X"2fc[3ni,37*p=:C2I5N5`5AC'&7iU6oCpq5[]d%2.g!e>;K_W#+"LG>,8-pE"uBaIt@
%B,l%2N[5"8K,In?`0+;)r]e^tGUUB<NnMFX@F-UKA\F=$I8T`_S:ni-U)>nm6[D!K3<>nF05R88Z7^A^-Z.`Qp;DS^..3f<3Y\`[
%g3t'jnE@=XU!.d?6AR%d<)WX17#3W3/0Fbof:dk+S,IGCT[uKAT+DrFS4dp%p)EIg4Q2cedeLIK&!@RR\@*##4)%'t#7?N#13MVd
%0Q^!"=E7a+W^@YH;tOPn&,bgQmV`TQd;fg^2M_5C%GO0j$([/AmQ>pI>blAVnP6+[[?]t+39bjMEtea#>q+!_4DUhBo@Ki=+Rk/#
%,e5o6V]Hq3=>;4&aa3A3aOM]pn2rOi8bjAS,<b6:G+i4ZP"q/?4,MNXO2]5I(g4;6Nu#ImW3KRLO][bW=H#`!',So)ZuD0[._n_(
%_lr`IhP2A1fI/Pqmc:@mjH-e)5I&EsmjX39m$%L$_@HDWVV@ab/`%YEe#@1LI2`4Ck]T5#bQJ+S\7qU7-kQ752d_KB-7KXdrPrm3
%cAE0HA9&Um-6k>7S#%Mf%E%(Ls.Ns_6AR9.fd&aB.9Gkh:WnX/-fULc'IUBT@*NQ!rFAag+P*gC<obKZ9JK>,VR99%&Fqt5\@"Jb
%B5YB^9B5bRh["M9SN9OaIiSZ5+FfZBnM):l8sT]gk+sfo7/jnY<P1;i2Mf?u+Q,5=YXXH>?TEP%c*A(:G?Gh2dXLo?En*29VUEX#
%LPbb$ZPaF/'f"niNe=&UR*rMO%@Z+_DP*("V#3TfnG0)HJM\6W7BiN.rc"gp=laWGP,J%G,ss&>i4:?t!)6&W8jr8%OgH3^La>k1
%hq&eh#!Mt27R[C`',T%>R=$_;=<%Yt,HKeaehgEVGP_EaY:r%8HAd#Ig)[^%b,iUdNSf56j#j.G9'P>`5*a=6WA8L2=Q&m9]tb%u
%4JEpl*_fHUSh"F_Q;*69L*1A/Q!NX,'MR5)-4!0SiQJC'c1I)K#:6OWRnAND)@3i;og>[CLaAW*VIR*Ha[7ia.iab&-'D>eafnE1
%]-NDF<"WoCc^DQa[f#X=.!,q1S^d-T+HeG8RC1Q7G@DIp(qr0s'/$ofm)ik\Mqhb^3.fdPAh=Ye$<%(p(NZN&Z^=PB1K`oeQg2]Z
%Gm#5:a#GsNZ](;.jd[o&q&YmlSPgI<[dqCi3HcOT"!KpNDPiu--R$G@*r*4`GgK#sa5gDAB=Ur^PbjIqN]p,BT'U"f!:YfYLhkka
%@0t`r%g(Q.94l&&#rI$8:8"=N]=pcV-1$Pka=+<I=k[XA5aekL!aba`Qe*Xl*g'Zu])koC<X0J(TD+>:Q#/r>lJiJN!QbScn-KMk
%K9ej8@jbXCEgT5`#hiZX]4340_WI\UR3#5=mEF)J\jr"kT^d34P*Ao`i^Jd%JFT9`\]-7aC%WOT#K"HEf`\].*&!4<2]*/.SfGc>
%%a$\h@'*'WplS(F%_:Z`*]fskMG(-02IqZQ^TeR2:m!c=)haE@fjL5<Gu1DE@jUM+I#0&&)[fRMTX6Q@F#+PsRio/\NG@TV4G%.,
%UCkQj[R_.6Jl`N_nlp!SRD0'D3ijJ?MXo?sFZ4\hMJZtQSg8>3a#;t'o9@7$MFV*5V/a"&8T'A1X^)879Z2,T8NOZI@je+VFBFeg
%@afN0;qe,[dp<c/;^cI`-3X+bZ<5PuqY1er!_"N0<5,[AD\%Aa+*Ni:D&m/'b1'TV7?#6u:f&OYB@%GL<N&#kOTKaT3tpgFU;KdU
%P]2"k6r:%6T_Hn&JBLHf+%ZH>QaFi>!eCDn\B5HLn5.$SoG;cqb*tLCJJc0`2P7<i=m&FaaT]!>!1ZX7qfs@iL[/[f(tc3*4a`Z$
%n!nFC<KPE9=5EDFoDs(8i&k,n.UQSL6m:p2>k3j(JnpL@\Mb&c.$"eo\oKcqJh.jm$+DPD?p7F)TXQ]u'@2d%]\ee$q4Jo.&4ad6
%;QO\a#$'gj20\@V9=5!A0=>1V4R].h%JA;F.@dQS,UMC0V+W*P#]'`)BuQGr6#jLIM6(Z%8tFV/%.Q<?0;oY@^FcQQM.+4Z+!5,G
%o:DQWK"ttkT6qm[CgINR`"bJ4[jme=B;eAu.X9;pk)qcT00UJ<_T[($W<MYcH0-M@]cTc`&Bpc6le\Cs;eT+FQa*]sa/WJq!BW/&
%Vke>:hL(d;^Bc)c[Wt4P9Bq.KOkETd&PM)\E($&40ofAY?GmEnV!KL=M-C6S/9t^ALao[Z;++>KN?XYgL#=@naYXD<dBW$P@>Ic$
%j;A+EU*92@)MAAS!oY>@Q`,=qfUj^/LZ^^S=;mm7QOkX:iOh9&@gOah-2n2g(-=gD+i9BF>733.@+gX8_rHI[0e+UPdicO@$RB6g
%;Fk[K_@4DbD31I>heZh5&?aRG>j.8[0nBB7?+.[U]EniJ%+-Y`(`P+Z2O<i!oC#:#?V6+p1j$PhK8*E0&S>/1/;4rGCN6*qQuXAp
%<=(L`DJPnR.Gi]V4,uYrJe/.pV87kZCql#t$]EtS:6=Q^)Hmup%sMH9>#+`A6?.\nRO`*!p'B,8=icIa23b=I;kc.oU!nt5JBs]S
%*hX1ji0`g6'2Edu@J^<WS1qrNb)1)-#Gk-V9K9kbMJj)#kjks4$)>p`(69l6&<52_-;NbcWrre"G=%W*.)]]-lNen,D1NZ@!JRJ;
%S)@W3KQCXra>i-@aQbHU3):E4%4Rf<oa;-o:uT&cWmjSu]W%IPOhteMKPF'8s&7[q%AT%CW!j>K+HrKNQuJWpnn9`9CLb52IpX.'
%_RZ%(.$S['Ag\HB`9^(5Z_<%n1,qgh%Y$]U@>&\NE`<n74?'7CdnQEr*W"Op'$cDtcjg]6Rl!fkKP9??Sr\r^f)#Uq`&^Es7j&s]
%+ERPc'$_f@VLaDA4qnJP7Yj7Mkp;:-Su5!*$R:%9,kC^(2A.7Q8'pP!HTnW=4e!;I]N>o$(h*>M*sE8-L-UP+:SLHq6%iSa^]4/M
%[8Wq$&MA'iN$TjoUeXbfKG^U\[1GS_0@gsu5_p#u*R"NB]N5F>A`Ob?g!q@C^[.<B7T%6BI0'[o46oU2Gl<rE-\)bdRh066KPR=q
%W;sef'IH2#+"L\68YLh',]giRc+8)KH6G`m"l@.ADG]:kE(=<p3ge?(\8VnK)BCM:K-W&mL23<4`"Fe0j-C.CF:)\[L>,AJE#iJ;
%))b_)O-:%nY(P),6&,\dJS`r>6S+K,+3+7hP7cYp/-j3/5<Kcen+\&fZrfg$&>pKm6&5oId)Sh+_%>#'H2J=D>YEIQ5ODElVr<I,
%fb.'D;51%2MpSaG5[c3`Z6G=D%d;;#Ns6t,-M+n.M/t(U8jq&_5Xmr/QS7&h7D'D:7>5rk(+[>W^g8]QE``ZQ6mLYPJr=DUR^']J
%G[.s[_2H^_cS3"6SM#;0X\E/(!$`ERO:YUZq[d4Ao2aAT@>qE5?U2W1S_Y\=E4gi5)U:<rU!W@6CFBh1oU;\ZiW:&8kSa8H`S+Fl
%[Ud46lQ#78_i8?PZVGaTZog`!A'785*]/R2U+NiuJW?+PN,kl(VdJrtGa,6^QtbrS6>;)okJID(K9,U1$#2hgYZ@\a:$<20Dcl`C
%H&T1E2<8c6$M*IQpq"eKMi@L0,cDFLGhc(l"&b<KH;ksSW6.X[^0f6^auYgk-oU5s'<qVl7`El34G*7M\M$sS9n>f%O,oTV`u\fr
%'_]W%h@4h-eoM'<UQT")@--8Y(j-9G90=$akc^3<okE06]Vb"DJK9gKADBY8GnOV/:;qX=TM_X4m-ZuM"?TXm28P<=o'4#cMTm)a
%ZoC`j&?$:F`uV4HSUe`l;i'8%^a$3MniTP&&cP/W!<O='Rq9M@4FWi'n!n@Aogn!Q^./[BO@Sq/AuQ&]`;Srf(%QT3oH=K&c68@'
%JB*Lh)K&LV*p7NS=[$"9a&7U>if4Zh`F(DKif8(]\J:RmF1\j$\TQ-`/C@>3NcS,*:Z7?(Wu*qWNch7S43gQZ.KPSD,l&.q-5&(X
%7d(cY3;5e:3>+3=HP9`34_,Y786`kS>Ykb\#4REjjb=r:&N?F"E<2,?YCmc"4O.5GR=Id99A[718%?ALpuKkp#8=:s43iufImY7>
%OIX$m7s&YfL4UEVi4K't[57*X<@sKGUPn1>G&67K$[B%ONFrc6D[r%0TMP1T/+WHAKuDDd:.nt`8feWS,6^9Fk&U/Z1Hr(jW#%9:
%IcZ`LQDsog12/\/5ha:.V!,s4.t:gp1at#Og`5KA#2/L?HD$26.dtL312=ZQR''[iKTT/#:,UM\66;q99Y:--X\o]J&q!,[9o'5%
%X!1\3k^uD^\b6^p6:2fc]u>+\+*,3l-&qSQ=S0=,.-I;H/(/'9p["<r;<.Y,Q;#e5['.i>l1NJdj-tdfcX^l;f6%36-sg3?eGX'V
%99_=C4c[XSW'IgY;SYEtm9f?[<`s1?fXe6hI4*"<6W>n>-Sf./Pjb\uete%ILl1W$`JQ6'C0M4@(IRk]/67V''oZjP/YAK*TV<D]
%Q/P!J\$VQuO&#L/)u95q4;LR+N.>^NX4?WHh%k2EjHc0`&_NdkK!*B8/%uf-(njc9`%kNZ,@hGZO\)2]H+k0>#eN*#:.`$70$Y.)
%MVg(QPs^?U2-gtj7A,`#F.e@ij$HeuhA>;&>n.f*9F'F,GQhT#jW;pTb2;"(<DjHQ4T:qSjZSHUOl4OOD+C_4"B/@\:6i>7(+"o.
%`'H0eBZcr.GJ0ZfC*qC5q22A8hg]bnNnNcg+H8U0UR,E#KRSZU?WtQ05+M0D=>5<u+k%a*9p8t_[QT"NeXikNP\6)b.U"U'elkt[
%5\k]6=d1c!f0'uGf40(F0\m^fP?bmc,o%%P1Bo<[*F+gXhWoD`6;@9g`U\&SX<N.CV0'+tV>E==X)ni=>H#U`AgW5$k_]0GhL?rm
%3:p@<L;+3i?LB<Aagf:TFh>'m<n";J;"afVU]OKB8dYKe.2q6Cdqo;ND'?=>l>J,pVKQ,pL?l"54p.6Oi:X7nr_1o2HDHiN!=10+
%>5lpMqE5Q1;MAg>,uj&PXXaQOnXb=^E3bZHH0+:oaLI8P3/8QHJC5BJ=N"Q?]hol$fVHVCA[LYQo?>E3NVgaBGP,S9Ed`8YV9bk[
%6p8D*qU#aOf5^EcpTVdO[AYC.+AlAs:;"5kH"c8LAbm<KElL[^'bf=TV'u?6\`TNjRYV+q0\+&E$`.[]`%LmoBM>+oPo*8EZM3su
%X?5SCF8;WU3%^^7-BgYR@TRlE#'1g5*)6t:)R5R<S^me$bG[EO9oN7E&poMT+>$j)bbqj*aSjf0C=r+NA/oAl>I9VL<D6)hTD:&4
%XZ#EZ<cANr/&.!6$XgkERlJGuS9j+m#sD#o-<SF$En,YWW;9`q+HA`T#E31'*g&#C:32it1LR\'TpnP0V\kGQp$BVV?4Q2D"QkJs
%3LdBE`NP78bu)+9a4!R'_g@0Nrpb3ZRQ]PJ%G-78YXm4'qBFpTB;K>l]6W:5A6G)(ESW(s-B/kb7ci&+LFIZalVuWZHa;?R"0_C+
%8\S-#4'j&UeX$Z)R]i^i[S]C^1=>tG)7\dQ[Qe@Y@iK@^klBIK[qR;+-T*lb:-:.'j.5^5BnkSA<0s1O\O:X>rfIVIkL+7eD>]Nt
%YNA'(DX!'>H(NMl?7\\<80G7lIh0pA9Sr7e*_KN<-B!!GS=&oRiVdTJZmJ^#Dd+L:1iU>uYQ*WK\(&A,<\;%`B^uI7:sf8m7Yc@R
%l!dE2a85^W1&hE#EQn*6b5-@_\/l_5DYEg83GIUKj'?.U?a=+;\1aRRHBV3l[-Yg/qs_P;D$COa]H3mM&CuB"2S6s&?E+'MOQo=T
%HM^I":3RWu`#A4Am',L<WR&j_ApU'!#IfB;7'"(6g#u,EDNX4@D7i@_5+U.ai4t8BH5LfI)klj$Ac05qL-mT(ZklM@.'aXXdVed<
%H=Whl%^L26bN8m!qn?DIo.uEA>%lQ^o6a1unYCT^beu;b]eU4Om@HEQ@r*8AIa\n7(]u^;>);@i`YeZ#dOOW#^f%0g%>)au[58;S
%4+#6hZgad>CTHs;\CeYF4@Au1`?MrchloNT?@j__k\acRWja-u&/k;L"AqnRVX#5<\5OIr.hG4<N80@IOj2to_j'A&!lBFOVp)c<
%ZrNTF,\!,1[lE@FD=IR7YEEIOINS1#oF(G&gWTL^9p_&"3JGeN9LA.\"q\a_LZG!bl@fU7'gL0%+%U<b_,d4NITq4V@?5<ti>#fk
%n-&;XB^^fMhTS,6a>=o_6qhKP2YNg+PJ^\7hIQ"dRsG'%KQ?,Y*]1mZcr1R/%6`?CBgW:5Y[ob[SYo>KQ1sfES84#)m[5-CXZS:F
%d[j&U%g@ht"[2<J-LW9&_R>ZJG671<Ul<"R!76-H(3u!i#6h'dBu\#P[Cb`W_!cNX3_f5*`[0(D5]TJDb-\eR-sLj22YuX,R+;dr
%,(j!>e?t@NLYb=5&5&`\==#NL&-<-9]I(si6;IhbP732*i5gC(b(\c>C^Ql39BM>=q3Wr!2Ujr5Q6M,a07OBYhYFS;(!?L-/ZDQ`
%@S*2DK/P$WC0uH_qWM>5$gSZt>Pg&2>ou-Z#n9%pB@N@fJX1_*iJA_2p2nD('[aR^a*C@i4f[)<oX7E#(oh:@fq%F?>P42Z<f+$e
%.Z4Ra#*@-+QdfOd=8Y9(4^"'L/b3OpnkTTjV:Gn^oWUueqZ22aiL?6Vm@ZGd9Q"Pi-9`lAP%N+=2"`05nt<u7N6>>Ha!k=c:.FGT
%>RKJF`=RHN+\?T8""l)T$!8%-5FT^%6@rK\<%6_$jNNu0A]a&bTaucYKhV_WV33:Z6,TR*EH!WS$n:EL_4npt@C0DM+HUX>.7B`G
%%SKY+r#Kk/],HQIc<L0Y-t)i/fOWH-;1+dP(\SqX%P/+i8o5XI*B;gu6>ofo/Mk]C:m9fN2\6jK9YZL:a_8C>!6!r</tPDR%l0]Y
%N#CYe<F/6k#Bc<7]KWb4(_#qSfODCp?^"83L5jJDS`]Ou9mI+jk^+65Z+D#%-f'gg-;KFg\=mO)>PJ?cTPO0@1.?VX7oaJf;%<sa
%Ol1*9nD(=j"9)&2FN`q_\?/"7`8Rpl3;HK%:5,h(6_2-BeVF(@=JG%!"VN#Dp6!YtEUslhKX*D*q5=E2P\>%5k9_sZ=38K:_44Ho
%ETi(6ESi$iIb^g)ift/WP'_hIKHcqK>e`:)`3I$VIac44&bLHQ]Cm8MP'C_kpiS78f<a'jji9E.YT&:GVS&t6+eOL7Q=E'2fBLqb
%i4Vfhhdun>\V&GZSV9pXWk0u'c"ooTIg0iGW+:#%>:.eaS5/t3%>'Z79pY0DkgloHS2S02-]u5$4EAJdooEk4%%87CG=Oq_`hpa(
%X1,7c"^T:Jfl)G\oZ)-R,AaY>=;tqgjDo9bhllTLo@Njk:N'8;Mk,QZA#"p&:s$t%Op.@12L0f>_QfF`SK@?0?-s!7m4@1SBqc'4
%IEtBAHp8!e@htd?Q8:=]3=n>YZTC;3DHR$LBiOS9Nf[f0ALM8?Z-Fu;3u^%.5Gc;JqRbC##Siu>;-=mV3r(a'#(Mq;l$29-h`N1Q
%N.@.d=,U6_)t&o=]kfj6`+J=\mqe="+c+!llSiDFToniK%\P-?o#O%5@Gm<>Y=:ru%Qb^=%NKRIRc0#h`L(,sM+S/Y&ErZJo?6h0
%_J0=4lYlf&fF>$G,qa'7`Bh$J1#t6t$Oh--iR"(K#]+@b!c>F"%'6#"fn"KHr5Z8^<)@O'L7je`\gb_"AkTA",%JtR>W2m</g5ko
%NkJ.RQhtMeU#A@CKo""8F(?%Ul-PA@QXTZ@N&+M*2)8_aRMsO)7!kl@&M"P]/$U:fc0Vc$-W:TdZo<*Pah)r2c64(YMq6anc/A_P
%h.FT0E*eQ#3oMt9$Wq=j,=XPQn&'&>YV!kpH;'CbQ=BsWShUs4U[dQRT\XnsfXoB`*aS*Pk+di02$;:W-u3C!W\4C%5\ut"8e-CJ
%i5iZj(\mlFg.3t5p8?+fb69tlXapK4SjUYgm2En@o0B:4!=+L'0h7X9+/b3YA:&ZN:[/+]dD7q+k25RH=`RPJAAt>]#K,L-)N(P5
%.'_i2)Kt6mj&&6(X0cec&!noUF3"U$ja4^"IfKGp3&q4d^>b\tgWoSH-[F)\XP^ndW"`RhY0;bPMFI.6LB_&U^3"Z8D%%c[I2@2H
%O4/Q1?Tfq^cXeC3\T'$V4^=-X=XHiVkZ%IedN4g7mbJX[*3prhdq^Tg5k4dWX^7XC0rC+fJa8r9j>H\U<DjQET*"Ia@+o&H<))!k
%_kajmPlRr7^@+abcVeY>'T=K4N%^]Y-EZ6g7jCAUVg(u0bU-p_3E/>6hsrNhbI?-_`oA_7b*OZqe,G5'.I8R9\"![6C5qD7[dDJb
%I""qg!!_L?O#j\=eqt4H)9*gm%O7D;>*PWOZ.3$H,l2Lqj5\-U]Ie%C8gNck(hnrfZ<aG_P%WQi.T9QF:n<bs:Yoh8bt#db/?'4n
%hNdQoMXLd%UY;b>dDW5/<?Y=or*\FH4h5D$WD@(W%%VUA=#a4A!frGYr/pUZmHWoIS5FB"bhlG+]Mk3Vk)0J<qiJREr8^g=jHP5W
%B)^d(*D@YMOY!)E;idfC9ngJRg8@aE<0ruX';gStb,fi]9.IQiTuWhpkF0(7"+h$)XdW3TT>0hUgaOBq>H(_eMDPGKX6i/"!EtXF
%_jDHHT.Hg_3h?bJa1qsub--]NNl*_'jeBH#\5+6Q,6+Tl*%:CeTO3p4,3gA0:-c.g.]tUBWER/$MU[7$jkl*Hig",PfKEn=[`4I]
%VeS_n/L05C<O+&&p"*&ZR:gc,IF"@Jf2/;KVpbu[W$eSHdFiV@/sf%nCr:C7(pn"knr;OiKs*'*7RNK/[TU[B5u5Ltb0CF,I`4U-
%p+@4..[N)cWhPp',K#bKiZK=15-i=8WcC?>@A-jjk9,,;=l/.Hp0s;VfjkaR$8NOkPS43\Z9\*nV4]+B>IIOSJ?C!l%$H^C4lS_3
%]2OiRnNbOt84!M`Re=(6XIt88jWYiigJH.!+nj[\M1kfT@eGFLG*lCQODWpAT<Yi)r6pJ+Tr=J4c`Il`d[sC_XAP(1V$C8l/BKo<
%^buQ<iYM@f`^5^*YQqg^:lj?VA2GP4[ulcSAtE"g]s(Ms(X]Sf'+$Z+$9tW"(&:?l">C5Z!/!D\LE[l`cQQc^OZs]3Yut`%GLQA4
%aF4cUKu=+(^6oePb8+lAO)0et9EbtNb9DppHIS(E5pict&_no66APY_8E).EjNR";$-2)#c"8O:/%!ZFU8<MYqE7857O(F\5J+ku
%UTo[=PG2/)A@uMl"_?"@KuJU`Zn-p4STVXW"j@V4MS=Fo'?'XeNYN0%CZG.rh0;&fKE[Ydl\Mn=QB(W-/&+&WF#Wq]*qJ*sHcc[a
%8s)D-7:4G5hhahB9++[7W[3:26r&>71<1*Y94#`Y^:dj0--hH)=GN+\Z^ij21ut#_[_NlYIE<q.@u2V'S.DDk&NhV%a[]j7=`Y"V
%_+68r2+ai"^'NF*Z6R<k?Y5oXVDXs90o_Occ<']b)VAE^qJckP.^DWoLtF%q&.M>24qa8S\Zj6RDD&)X!q>6>60M!Z)EK.5gPf3Y
%'$Z8E4V&,*aZDdTPeU8K'/Y"eVHDhd^9Q8=+\Hd[:QXY'Cn94s+PW"q*KS9egc:),5FKP:]U9k"(+roJ:_7(DbIhmmVC:USU!-#W
%)1@*n?su<'D-j@C'*fE,j`t*!PXQC_;,JZ9%s(Sp2,oHl13[_k)]`MXR\_4(eB^NSRH"YYGu!tt77rt<!IEFgEu%'RBIQS:8b#]U
%.Y6.u/&'Z8.J)%I.W3C.XUgOmr6:4l&n;j-66Y1+I,rd&5m>#3g-K5I9G.%f;4/u7BoWNiMcG[nUb\:]=@/g)g"P8XBqdB/NMf\&
%-hT8;kJ#Im3c&e9k",l,P>ra9_-4TaX&ug*kUL8OpO[BR"3D>NgfmGAOlpiui*Fbpan`\&gj'R:lpnlD$c4j;AW;S/%##)/)qp-s
%l_G+9H%K@kX--faL\4KC7\V.Q\_Jh[kP9Lsipk"s_hD>BAgL7*2S%hW)'L5q2/_+5o@[]1'eO\p_VRG+;!Uh>9@/jb_kLe7?&X-l
%_5SaUN)-NcI.7SOKs/UI-RfobggTer_IX/>R$:k5,$$I*MNJ&_B(rD0V-(jd,N3W2<\b<Z4oIa.p"<:U]NE:#X)o)p9#`Q<[4,/I
%g4W`j>4UA]/^u>gc^7PEP7p=-ZlrS+CGQ-He7@?j+eKI?fU0_5fu[&b+_@)6jL*g,PpZ'QQ3<;-T=d)&Y6]o5S5s5I@n*U!XJ!,n
%\i#i]ENF(oYY(5AI1&R,:394Ofc%.iKT>(>\J^4#]QW$h-7Xf9_VU^'GU%qTd^!Zu`DoAPm0,u%E$o9>`[YcM/%RJSZV0@OTnNbg
%E/*@AgXSV)EER<p`E6HY^b&ifjK78fqd*/"0JdYe-iG;"FaoW3<Q&Hj0g451e-2DYA$=fNoP(i(R(EbuRZ+qVPmOFZjR:L;PX8%k
%0->BUpW6c+<8^jORcS1n/HGU79:Y+6>/tS#Cl!cb3hi(&$(2c:Yj='NKE8!q&Ig)Ma^DK!NXSWEm59B7*J]U/I[s16>+0\Ug6K$%
%nJf?aASM!VA8!S0Dpi$r'EDT\Q`5gMiB]q3'=pIn=`P"2VtN9ARWp>p!K,ob4R*-6S>T2mc>uG`"]?j>FEWS?f\@ta:g@WJa!TPd
%cD#8'hc\)^NU]-%=WtrZ,b[a5-Q;1cQGEm`(sZ/#S.Gl;]/gu@fr*X"qBT8ZKsLB*l^1kMU/O%DPP]*I':M#YEO%QtSAWg+(+5o!
%QtfnB-Q5][Nn)d2G"Ou4X-]R"M$KnbW\Z)'NNTSr:@nRb7N%_@H"K7gi.MY=\8M<(=g!Y+:!59Egr/"Tfqc08pO:3X2&FskC,Y\u
%*,7P,'S!5fRoU8e[>>\2fG]MZL+c9oAo(rO@L^FEKK.:m('q9uLd%*##u.$Sn`sfm2tFPB+N7r,/lX*W=XHd_>q&'W6ZZO/_-NS[
%[q]]?=0bZm1qbbUCC:m7$+="4ku:]Q82KR:"_sn7^*:RV2M4K\U4npN2c;Cup*JYiM\[d.>dPd]VTYVBR#]:^DpqL>1p\fS]_laV
%orTG[c-<M&VX]T2,45E^-9EPuR*0GQEG!dE<74cI6G/UCp+V<MOIoj<)0@dGE@nB;a;u3TGWp1$9pn:+IbG#,JWIE?Ah^h&GaU>9
%g).ki3LPsAaXih&4PPcL!u38FY/mqb(+1;AkUj>+NAH3ZdGSC@*26l;!g-\pl+50/WJsXB7k@#o"<i?JSB%@%:Z\mM97;W`.PA,.
%dU(VV7tm#1"*)a8>E#@m*$AZA1tE'Ro3bPIZH`GiX/.TG6C%gR&BZ7B=AK*:9X11qkVmXT.%=gO:Wbd7c[%'%e="ne*3j+M6^)W1
%^fm9BNAZ?N84p=lB^b%lbuhdKKl:8;V$Ya;F[`i)Qlb-6f>mh]e,bjS^Q:?fkSTc_6kqR`(1LT;gFr_b%,G.>Y]I"K;=&)*ON'Ts
%G$-__KFR*p*/%V;[%`mY`eFfDOEn+9iKc0,9ql")1Du&s5n>T/'gfj[?CSI1*pCk57Gl8XimHO=3G2l6cUZJMdB__WRNj6=l4JM7
%iV/F`MrRYu760UlQjqZ.mKq^]k4oV"7LOS%G".lbFA\@_NAC9&Nf7!&3[J/t,0bq<NL!*1WektK]]^/l2Yqup9=f=\iV()ffR?a=
%mJ:WZNd.foq8C\#]9>rc,jbaa\M,>jJSsce9cG^(``J%pNQVT(-I2MD'dZYCm$Y4/:"BNc?oXD,GnaeXE)>iqFg<oU!bF&4H?bXr
%Y9*dL&:?"*2VMt*`0<Xtq())Sd6\UgEOC?JV6d'oFl%E%C?>W:@d\4j[/kAhDC/`l3/hZ\Kd@;e,oBsTSZdeB]Um9)ACfZ#c_^Gg
%-I]pXJ8d<c/"SY:6dN4)f"g#;]bsk4`iOI>BT];f?"\'JU$Tba>6Wq;j`<;6G5I:o'odDECM_F6<%tceg&R/WF,`H9mGO]8@u/$,
%'Q&5d]\Uf%JtB'&le#C6b?M^D/_O]*!huh/W"COk[_`A#+mNZU6ElrMX1>X@;C@=K?[$RmBl$,ORZJi?`k%A8bm>/;j?5?T?k9%b
%jm-HraP92,:cbHYm^1>+g7(?W$%j>iLF!sGm^O/MdlQk1.=gDj22`-Baon)FEM>60Zc\[$.9!D&S/;AjE%EefM@rFK'5qH%(##2A
%@PP>Jec>pODKtE)W;,0Xc>')e$,$5Aeks@4f2e!*;tViIPEnPtl:i&bX^o+*Q!E6X]kP;-Aa<&.'2I2tXsLZ"V<ed5EmEO;C9W[l
%7&86>ZE8sC(<n/ZRKudQ(s(@"3$;\Q2.I<o@NpOBkAa-r/WJ##1i(*&HrJ/l:?-DKMoOmA*p,GIc%qk(0XU!d_aoR<EU'dnQ^u*W
%bHT883(F_imZ_++1H"K.SCIkS1!`#Eof4/eP1XD7:RQV@<&q@)$MnMGAd\f(\'km3D,%r%l.D6*M't.l5R$S2ac\J=&_5-n8K""=
%m,\V.of./-'o8SIG=rqCN>Nh@/q;iWC7MRC:rL/k&gD$kQsYIH&dX[1346R*+c99,#d%@kHfS^&eWkd'=Tg``Su0KTL:Cd>,SD2)
%J_VgDOD@S[\5>uG6Toq*_"cD#4&sK%@JX",!?kF1EDj*L_1g";OX+eV;.cjC8,Gs6pKu\;Zo=SZd'BL)46+T73\*)og.Y/#b]&A^
%XcR?A5MLdtIIBCPpdPa95l72V(%XI#H*8MVTEs8f)B(&eQ84f*k.D^OT1'-=Zf5WX/M+>r2,p`l1rSCeXPDQEg<`_mSC;5K9bK+e
%I/PdZV2a1MU`#Amr@t/aHbe,>Pd'\a+cjd`Qi(Yn"&c,>(^tE6j;o($]4Ru9fuH-B<7?O$'b[GrIWhKC;1!FC.%LP$75&EZD)<a"
%/.QJQAAj%B0cKV]D=hWYpW4:@LZt1%i<=VRTs\4nCqNaP6,_%Q$]T$R:T^@a22_+4a@%jRq`o;mR%HFK>"_`"d?mMgg_>ci/*A>D
%_0VIQI^K\c:k]>>@laRV4>$KL=WsMQf=gBe*UB[-+cbcg4JH:uj7\<cGb\FLfncA^g.4>.MPBLd<i0QjB0>^i51C4G[o'O&>-s^.
%Y9-#XLKtL.JG)i/6Tkn#UuR4Pn_p9WUNc*iS)*=)&OdZ1-hgA5Zn[+k^nte?aASpL+,`HR@VDOQSBuR#'q5nc70=F*T&aI*^L\!&
%+8%(9]sB,[%&MsA2L>(AY1ieH[o_'q0NJkQCXd0be"Ss:EjLfm'Z]!F0R;8p@:g=P<6T/TJr/Y<1E3^[S/mTX%<=2P6:f@Eoe97L
%M^$rTfr1.#F.:BbBZu[V64aGf8V=WpZ_PCg-&"%#'lKWZ2f5W=5c8:%;6s+t/68a;fk=deMP%ArUhCtD6b/4dB"Jsbm?aGJfPeN(
%[dG7:GNa@loKMMcr6J4-Jj"5H#e]qY.#7kSX=MQ[ZddDV_J(BgPq.9DP7//82b2"Z7:1PWMtEr#;?\:UJib@6a,*NAYkLtm#kaI0
%d#ARTKLNp(leq?k_AWlSWk5'MV"TKgK*1+BOg6Yds!_Kg=IL_!!st)uhtpN'f2Zl0!#u-fEnXjib_s.-R0X59+#g)idO">((6U*_
%D--'cnN*-G2R(P1krHrgm.:!&?Y="I<p9".bj^_NMA\eXp.9s2(!So+rk@J1I(6[)%D[_n,7fYV<JA_$[Jh"E3=hC-Mn+6cT.E^M
%F"=A.mKne3Dp7<HN6`!b9iqhC^0sf/Ee(!q)4=Bn\rRfhO8-Nb&CH&&$^F`3_8&*QH5=E`6r)W,V[(,EP"I7HS>F`U"I?iH=W,>^
%Q<;DH7fl@Z%gkrqhEN#pMYXH;=ICa4lGND7djN7)&FRA#3XIi>q.EUlnh&CFU.M2T6NHBoa>U?^_a29>I*623eW,#i\/948L7*"@
%&c!DD:\WV4(82($YER1jPBs9BPC%XC8EQ_eFg:'g#mjcZX0BNh$&/tco,1T1#q06:Eq)?M3\A0-Q(]oj"_K&'^mp4EKbN=)Y!*Q`
%iO4O0*^RiK8;Tr,pVd)*)GqoFQlmkN@Metn'$Tsl2<X?>*jfeaP-P1($]/S1c^<^(G4FSmJ'Zl(os9Gc/&>S@B9Vo!9\f_3&gMOe
%OHa))[239fVUWSLju7%$5<7[^d9)2;3A=='3LB2_Q8&/&1]:>pYL(2dkgq2m[.kSQaE&3\ES6S3Q+d7Z56KUcR4In@l?r0<a!EZA
%/o=ol:_Z"<g8_/K_VI_R1q3lmQd_TNXFmm_TO(P58KmlpnED.RiPbkRNh]YXWH?bNI;Zf5o4p,m_<6l-j'nEIfIF-jSL!C5V\o9+
%L`nhTIW?i3V0>+6OIQGThm-R-9Z3-b2LtZaa0_\SDVr!+#5.\7;ItFH,I-1KY_VOGY@<up=B:0cT%s/p.cO^5FaYX.jZZ\'">0/O
%2c72J\'Ab1)S$siK:/ILaLJ2gK>K,.@Q3WG?K;BQ/$$]q/UL5M.k*;TV&GUI\=NF1MjE+Ep04+VlkZY!bD)/Krc=HY#VGm\I!f`o
%)0]%/k*!MW;8eR3)(Ie?lNM-ncahkR>rTd4>t.!LAdQ/E0eKh5:dNYfj]P^"!i6+LhqemI5n#am"ioLOIMF&"b%&BSo@tYIERE1^
%JAAr1"7VHi+eeju<NP%T8fd6ohOB`?U:X9)HB`IgWq2J3TMH\'"Hjo_+&CH4Kpr`O4te!T]e,AWOnKFe%[A(V:OUt:X?:rtRWH^'
%PF:!S3I#2cU>MkXP;/+?1;"j8%Q^_6^t3GM!A4OB@OKX?0$81t<4f+fIm8Z;DgJGp9-0ct'`JEh$c=@EaG+ptQ\WE,LgA+pYYn-*
%0$_Yu9jQgO^8Kn.^l"G+Pt70`3:+>_#qfh0]U*a0`>ZK%Mg!9_IE65dSbjJn=P0l3\tIK;^5;:CNl]kD\H!p@Ho$QGfd%7_O^UiZ
%U:47/:T!On2'G_OZYtfcaDPQrV&PQ9jY3^FZV)oX_gLo10DClM(?e\)5uO>@f[hAJIG;Edhmi_4&-blBhXMrL,2kG+3q&pD9$:OZ
%FHUeHfnk%Pl;rBE#7S_fWV^l"r/2a^*#oZajA4/=hEE-lYp$+ef1kJm0<FSoFaK+JB6[UJJ13u91%=oOD$WF5Q.06Md@8*+YmjpF
%9k!-UAD_&e\7Wq0>$?FCC&5I-(g.t4@tfESHVpMAKc(C*a<(TjIJ7A6blOYhn_W\mR4%/\Wl"=l?C@WW:(gK$lK*N[q7jq"r54"U
%2`S>-d=:6_UFk=oShSgViB#@"?@tP=jpQh4*-4Hl0Xr[m8&u\T;&IkUF,._RQ91%/RPCl1&PpF#RS,b!6:\L$S=hi>jV>CXA,4*H
%K6T?;V-IM,Lk:03Ht*`#@YD.-J/T;`aOWS-MD5@Z7<V[!H-&ono=iAS!\5k"GBq>?f#goL@oaNS)H')<S7U(,@[,t,K?P1Iei<oN
%?%gn"bD`kL2Jt^OA]>lHYM$l:S(m9jNZ,B7m_KBto8MG"rcEG3l_G[TpDL'JR&%%]ck-)&F.l;K>bYcW6Pd`<j(jgh=&(U+da8i,
%)4uigPol!?r4MTs6&Hq=2lG'B\d1&96.h-VCCW5U_HH#HCM'DjlJQRb4hA:@[&%tKIPl#]ZBB4[j6<WfbcD.7WVP,T&[Uc`J[.r1
%?(3G"ghXYLrG+MF$b=a(G#'q:]@t]Vp34X)%aHRKA`[R"QfGjBBq%OD<u[r\Hu3r4Yt9VZ/S@/N<<BZBs'Kn4S%jsLNL8LC\A^_-
%_[S4uZ7a;[G']95DD5&NCcaGT3SWJI6ju?+[PQ_"CkLg\@-i1_E($TF*f*+eT5qA+6c]W)oX7%b#Y:_\D,cK).$hTUSjc^"cXA.A
%?#>juVPbFcNIA=cnB>`mHZLfc[;rUE;^t!NZ0h%mbKY4e\oAMH[=insYSnsgAFm.TQM-O@C][nucc5g/EO8Zgg3tpf8sc=OjDe4\
%p9?FH9NrRCFh-1]6R5i<DDhiQ#-tBt6pbo@&#Yn6-:2d[5q7\.PZnU>6oYA#0]L9ERuLD20ZoBC.]HR"2O"RN@4X?amSk-kUHQ*@
%CFX,DWu>SkZp3:*A'^-C-geKYaE+&&Cr@i6da5s&kU/.il!pbhCNH`mUkkQb4mZZ+p*1+FfU8gC/p9'[3Qf<)TPtHp8f.@)d<&$6
%<.=P]/-aNF0,k6FBb8Y7L<)qKW4CU%619PGG'm+c$5G\sB_O/=)a/JPAjl8"o$F_cLJeR-/^aK4N)7MdjCh'Nd8ZF.XZ&2d;OaEj
%I>^ciOJdN^T07$m%ITfG)DeI`Si5TSXQr2K)gWFe'fSp8DUMRLVi=c-osA#W[(4muM<(UT9Y_9t(RM1>l&=b>A%'F*OKT,A'\k=P
%g7Z^0-JD^Ad(s1Ob(]p9/4N.D2Ag`m35MB4'Ku9GrC=u9gg''[S);2"];LgW8&f`#f/?^:q:[4s*HltYrf(K[jD;#j=j>4G`b?2F
%F1L%6-%?ag2BtFI1J=a4^C@bsqU9PrkJM@7*]HWol&qCRNATCGPf_r$l'2`;W3g7^QHK`70S1/4\4o!7AnTh8F1KPSQHtP^8>DKJ
%E2;R#aG[]KSB8$CbO<H3@Q<FnqnC>HG'9umDpZ_WP"u<f=gZES8,%`%A-7-fJuP8ZHtFq[k(KN,0JN.81"n9E\;.ipi+SUh4`H?P
%/7a%aG]<3\RL>.?dT@B-_OVSp0,tE5BJ2="Cju3i+S(;E.nBMq)u'%6Y$JWuqmV'1=DFS/boOho)Pbm=EO<\OP6ZsF2J.I1`Z8SZ
%r8:uVpt9m?!IU.gI[j(aOZ*bbc9m`g4?H;5r9fRMAKdEpFN6[(8Fh1Ma$Fi=G+m^]j-2*B\`:2$d!2obKCBWA;r5$&hRmh^'VZ8r
%)2n$1q;]M+@(JAZa$I;=*:hE]?iG;2;Le_U5Q'ZQs5lPIs8(&kpi#&>r9I-Cs5Q=m2#R&3rV4!srq"H#rf>t:o^`U.q;%Zlr6%mn
%If.)*rqPXus8:@GqY6t,^\di)5Q1D=5QCBC:]LBSrs(-ca;=dJ\,Z@Js8<JCq7gsHOM(~>
%AI9_PrivateDataEnd
