%!PS-Adobe-3.1 EPSF-3.0
%%Title: Floral scroll III [Converted].eps
%%Creator: Adobe Illustrator(R) 11
%%AI8_CreatorVersion: 11.0.0%AI9_PrintingDataBegin%%For: pingwin pingwin
%%CreationDate: 3/31/2015
%%BoundingBox: 0 0 562 611
%%HiResBoundingBox: 0 0 561.2303 610.7796
%%CropBox: 0 0 561.2303 610.7796
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image (1.0 0)
%%+ procset Adobe_CoolType_Utility_T42 (1.0 0)
%%+ procset Adobe_CoolType_Utility_MAKEOCF (1.19 0)
%%+ procset Adobe_CoolType_Core (2.23 0)
%%+ procset Adobe_AGM_Core (2.0 0)
%%+ procset Adobe_AGM_Utils (1.0 0)
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%ADO_ContainsXMP: MainFirst
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Utils 68 dict dup begin put
/bdf
{
	bind def
} bind def
/nd{
	null def
}bdf
/xdf
{
	exch def
}bdf
/ldf 
{
	load def
}bdf
/ddf
{
	put
}bdf	
/xddf
{
	3 -1 roll put
}bdf	
/xpt
{
	exch put
}bdf
/ndf
{ 
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/bdict
{
	mark
}bdf
/edict
{
	counttomark 2 idiv dup dict begin {def} repeat pop currentdict end
}def
/ps_level
	/languagelevel where{
		pop systemdict /languagelevel get exec
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr} stopped {
		-1
	}if
def
/makereadonlyarray
{
	/packedarray where{
		pop packedarray
	}{
		array astore readonly
	}ifelse
}bdf
/map_reserved_ink_name
{
	dup type /stringtype eq{
		dup /Red eq{
			pop (_Red_)
		}{
			dup /Green eq{
				pop (_Green_)
			}{
				dup /Blue eq{
					pop (_Blue_)
				}{
					dup () cvn eq{
						pop (Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def} repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash /AGMUTIL_GSTATE_do xdf /AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit /AGMUTIL_GSTATE_gy_xfer xdf cvlit /AGMUTIL_GSTATE_b_xfer xdf
		cvlit /AGMUTIL_GSTATE_g_xfer xdf cvlit /AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx {AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def} repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht /HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone /HalftoneType get AGMUTIL_GSTATE_ht /HalftoneType get ne
			{
			  mark AGMUTIL_GSTATE_ht {sethalftone} stopped cleartomark
			} if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		} ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/agm_sethalftone
{ 
	dup
	begin
		/_Data load
		/Thresholds xdf
	end
	level3 
	{ sethalftone }{
		dup /HalftoneType get 3 eq {
			sethalftone
		} {pop} ifelse
	}ifelse
} def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%) anchorsearch {pop} if
} bdf
/filter_cmyk
{	
	dup type /filetype ne{
		exch () /SubFileDecode filter
	}
	{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length /AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	] cvx
} bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
} bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type /filetype ne{
		0 () /SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict /AGMCORE_gget cvx /begin cvx
			currentdict /srcStr get /readstring cvx /pop cvx
			/dup cvx /length cvx 0 /gt cvx [
				Adobe_AGM_Utils /AGMUTIL_ndx 0 /ddf cvx
				names_index Names length currentdict /srcStr get length 1 sub {
					1 /index cvx /exch cvx /get cvx
					currentdict /dstStr get /AGMUTIL_ndx /load cvx 3 -1 /roll cvx /put cvx
					Adobe_AGM_Utils /AGMUTIL_ndx /AGMUTIL_ndx /load cvx 1 /add cvx /ddf cvx
				} for
				currentdict /dstStr get 0 /AGMUTIL_ndx /load cvx /getinterval cvx
			] cvx /if cvx
			/end cvx
		] cvx
		bind
		/exec cvx
	] cvx
	end
} bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict /DataSource get def
	/origMultipleDataSources imageDict /MultipleDataSources get def
	/origDecode imageDict /Decode get def
	/dstDataStr imageDict /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ imageDict begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	imageDict /MultipleDataSources known {MultipleDataSources}{false} ifelse
	{
		/imbufCnt imageDict /DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub {
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict /DataSource get imbufIdx [ AGMUTIL_imagefile imbufs imbufIdx get /readstring cvx /pop cvx ] cvx put
		} for
		DeviceN_PS2 {
			imageDict begin
		 	/DataSource [ DataSource /devn_sep_datasource cvx ] cvx def
			/MultipleDataSources false def
			/Decode [0 1] def
			end
		} if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or {
			imageDict begin
		 	/DataSource [AGMUTIL_imagefile Decode BitsPerComponent false 1 /filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource /exec cvx] cvx def
			/Decode [0 1] def
			end
		}{
			imageDict /DataSource {AGMUTIL_imagefile imbuf readstring pop} put
		} ifelse
	} ifelse
	imageDict exch
	load exec
	imageDict /DataSource origDataSource put
	imageDict /MultipleDataSources origMultipleDataSources put
	imageDict /Decode origDecode put	
	end
} bdf
/write_image_file
{
	begin
	{ (AGMUTIL_imagefile) (w+) file } stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources {DataSource 0 get}{DataSource}ifelse type /filetype eq {
			/imbuf imbufLen string def
		}if
		1 1 Height { 
			pop
			MultipleDataSources {
			 	0 1 DataSource length 1 sub {
					DataSource type dup
					/arraytype eq {
						pop DataSource exch get exec
					}{
						/filetype eq {
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						} ifelse
					} ifelse
					AGMUTIL_imagefile exch writestring
				} for
			}{
				DataSource type dup
				/arraytype eq {
					pop DataSource exec
				}{
					/filetype eq {
						DataSource imbuf readstring pop
					}{
						DataSource
					} ifelse
				} ifelse
				AGMUTIL_imagefile exch writestring
			} ifelse
		}for
		end
		true
	}ifelse
	end
} bdf
/close_image_file
{
	AGMUTIL_imagefile closefile (AGMUTIL_imagefile) deletefile
}def
statusdict /product known userdict /AGMP_current_show known not and{
	/pstr statusdict /product get def
	pstr (HP LaserJet 2200) eq 	
	pstr (HP LaserJet 4000 Series) eq or
	pstr (HP LaserJet 4050 Series ) eq or
	pstr (HP LaserJet 8000 Series) eq or
	pstr (HP LaserJet 8100 Series) eq or
	pstr (HP LaserJet 8150 Series) eq or
	pstr (HP LaserJet 5000 Series) eq or
	pstr (HP LaserJet 5100 Series) eq or
	pstr (HP Color LaserJet 4500) eq or
	pstr (HP Color LaserJet 4600) eq or
	pstr (HP LaserJet 5Si) eq or
	pstr (HP LaserJet 1200 Series) eq or
	pstr (HP LaserJet 1300 Series) eq or
	pstr (HP LaserJet 4100 Series) eq or 
	{
 		userdict /AGMP_current_show /show load put
		userdict /show {
		  currentcolorspace 0 get
		  /Pattern eq
		  {false charpath f}
		  {AGMP_current_show} ifelse
		} put
	}if
	currentdict /pstr undef
} if
/consumeimagedata
{
	begin
	currentdict /MultipleDataSources known not
		{/MultipleDataSources false def} if
	MultipleDataSources
		{
		1 dict begin
		/flushbuffer Width cvi string def
		1 1 Height cvi
			{
			pop
			0 1 DataSource length 1 sub
				{
				DataSource exch get
				dup type dup 
				/filetype eq
					{
					exch flushbuffer readstring pop pop
					}if
				/arraytype eq
					{
					exec pop
					}if
				}for
			}for
		end
		}
		{
		/DataSource load type dup 
		/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 div mul cvi string def
			1 1 Height { pop DataSource flushbuffer readstring pop pop} for
			end
			}if
		/arraytype eq
			{
			1 1 Height { pop DataSource pop } for
			}if
		}ifelse
	end
}bdf
/addprocs
{
	  2{/exec load}repeat
	  3 1 roll
	  [ 5 1 roll ] bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs /TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{ 
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs /TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp AGMCORE_tmp 1 add ddf 
	dup type /dicttype eq
		{
			AGMCORE_tmp
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	dup type /arraytype eq
		{
			AGMCORE_tmp exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		} if
	exch dup
	AGMCORE_tmp 4 -1 roll put
	}forall
	exch {cvx} if
}bdf
/clonedict
{
	dup length dict
	begin
		{
		dup type /dicttype eq
			{
				clonedict
			} if
		dup type /arraytype eq
			{
				clonearray
			} if
		def
		}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get /DeviceN eq level3 not and
} bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne {
		/CSD known
	}{
		pop false
	} ifelse
} bdf
/DeviceN_NoneName
{	
	/Names where {
		pop
		false Names
		{
			(None) eq or
		} forall
	}{
		false
	}ifelse
} bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup /arraytype eq exch /packedarraytype eq or
		{
			dup 0 get /DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}
			{
				true
			}ifelse
		}
		{
			true
		} ifelse
	}
	{
		true
	} ifelse
} bdf
/base_colorspace_type
{
	dup type /arraytype eq {0 get} if
} bdf
/doc_setup{
	Adobe_AGM_Utils begin
}bdf
/doc_trailer{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright (C) 1997-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Core 216 dict dup begin put
/nd{
	null def
}bind def
/Adobe_AGM_Core_Id /Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen [currentscreen] cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSA_cache 0 dict def
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_pattern_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_ovp nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_gradientcache 32 dict def
/AGMCORE_in_pattern false def
/knockout_unitsq nd
/AGMCORE_CRD_cache where{
	pop
}{
	/AGMCORE_CRD_cache 0 dict def
}ifelse
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer {readline} stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type /dicttype eq{
		dup /HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup /HalftoneType get 2 eq{
				/GraySpotFunction get
			}{ 
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
} def
/clp_npth
{
	clip newpath
} def
/eoclp_npth
{
	eoclip newpath
} def
/npth_clp
{
	newpath clip
} def
/add_grad
{
	AGMCORE_gradientcache 3 1 roll put
}bdf
/exec_grad
{
	AGMCORE_gradientcache exch get exec
}bdf
/graphic_setup
{
	/AGMCORE_graphicsave save def
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[] 0 setdash
	10 setmiterlimit
	newpath
	false setoverprint
	false setstrokeadjust
	Adobe_AGM_Core/spot_alias get exec
	/Adobe_AGM_Image where {
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			get exec
		}{
			pop pop
		}ifelse
	} if
	100 dict begin
	/dictstackcount countdictstack def
	/showpage {} def
	mark
} def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub {end}for
	end
	AGMCORE_graphicsave restore
} def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox newpath pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				} if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show ( ) show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}
			{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			} ifelse
		} forall
} bdf
/doc_setup{
	Adobe_AGM_Core begin
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict /AGM_handleerror known not{
		errordict /AGM_handleerror errordict /handleerror get put
		errordict /handleerror {
			Adobe_AGM_Core begin
			$error /newerror get AGMCORE_cur_err null ne and{
				$error /newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error /newerror true put
			end
			errordict /AGM_handleerror get exec
			} bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err /AGMCORE_bad_environ def} if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product (Adobe PostScript Parser) ne and
		}{
			false
		}ifelse
	def
	level2 not{
		/xput{
			dup load dup length exch maxlength eq{
				dup dup load dup
				length dup 0 eq {pop 1} if 2 mul dict copy def
			}if
			load begin
				def
 			end
		}def
	}{
		/xput{
			load 3 1 roll put
		}def
	}ifelse
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 10 def
		/AGMCORE_&gsave /gsave ldf
		/AGMCORE_&grestore /grestore ldf
		/AGMCORE_&grestoreall /grestoreall ldf
		/AGMCORE_&save /save ldf
		/AGMCORE_gdictcopy {
			begin
			{ def } forall
			end
		}def
		/AGMCORE_gput {
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget {
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave {
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore {
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt {1 add} if
			Adobe_AGM_Core exch
			/AGMCORE_gstackptr xpt
		}def
		/grestoreall {
			AGMCORE_&grestoreall
			Adobe_AGM_Core
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr put 
		}def
		/save {
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge {limitcheck} if
			Adobe_AGM_Core begin
				/AGMCORE_gstackptr exch def
				/AGMCORE_gstacksaveptr AGMCORE_gstackptr def
			end
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		0 1 AGMCORE_gstack length 1 sub {
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		} for
	}if
	level3 /AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&usrshfill /shfill load def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern /makepattern load def
	}if
	/currentcmykcolor [0 0 0 0] AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace [/DeviceGray] AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0] AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent () AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	<<
	/MaxPatternItem currentsystemparams /MaxPatternCache get
	>>
	setuserparams
	end
}def
/page_setup
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor /setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore /currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3 {
			3 index add neg dup 0 lt {
				pop 0
			} if
			3 1 roll
		} repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{
		pop
	}ndf
	/currentoverprint
	{
		false
	}ndf
	/AGMCORE_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{ 
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.) ==
			Adobe_AGM_Core /AGMCORE_have_reported_unsupported_color_space true ddf
		} if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/LeaveColorUnchanged eq
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where {pop}{
		/convert_spot_to_process
		{
			dup map_alias {
				/Name get exch pop
			} if
			dup dup (None) eq exch (All) eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
						currentgray 0 eq
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						Adobe_AGM_Core/AGMCORE_name xddf
						false
						Adobe_AGM_Core/AGMCORE_in_pattern known {Adobe_AGM_Core/AGMCORE_in_pattern get}{false} ifelse
						not currentpagedevice/OverrideSeparations known and
							{
							currentpagedevice/OverrideSeparations get
								{
								/HqnSpots /ProcSet resourcestatus
									{
									pop pop pop true
									}if
								}if
							}if					
							{
							AGMCORE_name /HqnSpots /ProcSet findresource /TestSpot get exec not
							}{
							gsave
							[/Separation AGMCORE_name /DeviceGray {}]setcolorspace
							false
							currentpagedevice/SeparationColorNames 2 copy known
							{
								get
								{ AGMCORE_name eq or}forall
							not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		}def
	}ifelse
	/convert_to_process where {pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{ 
				dup true exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup (Cyan) eq exch
						dup (Magenta) eq 3 -1 roll or exch
						dup (Yellow) eq 3 -1 roll or exch
						(Black) eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					dup (Cyan) eq exch
					dup (Magenta) eq 3 -1 roll or exch
					dup (Yellow) eq 3 -1 roll or exch
					dup (Black) eq 3 -1 roll or
					{pop}
					{convert_spot_to_process or}ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space  
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	AGMCORE_host_sep{
		/setcolortransfer
		{ 
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			  	AGMCORE_magenta_plate{
			  		4 3 roll pop pop pop
			  	}{
			  		AGMCORE_yellow_plate{
			  			4 2 roll pop pop pop
			  		}{
			  			4 1 roll pop pop pop
			  		}ifelse
			  	}ifelse
			}ifelse
			settransfer  
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			  	AGMCORE_magenta_plate{
			  		{4 3 roll pop pop pop}
			  	}{
			  		AGMCORE_yellow_plate{
			  			{4 2 roll pop pop pop}
			  		}{
			  			{4 1 roll pop pop pop}
			  		}ifelse
			  	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup /Cyan eq 1 index (Cyan) eq or
					{pop (_cyan_)}if
				dup /Magenta eq 1 index (Magenta) eq or
					{pop (_magenta_)}if
				dup /Yellow eq 1 index (Yellow) eq or
					{pop (_yellow_)}if
				dup /Black eq 1 index (Black) eq or
					{pop (_black_)}if
				}def
			dup type /arraytype eq
				{[exch {filtername}forall]}
				{filtername}ifelse
			end
			}def
		/AGMCORE_IsSeparationAProcessColor
			{
			dup (Cyan) eq exch dup (Magenta) eq exch dup (Yellow) eq exch (Black) eq or or or
			}def
		level3 {
			/AGMCORE_IsCurrentColor
				{
				gsave
				false setoverprint
				1 1 1 1 5 -1 roll findcmykcustomcolor 1 setcustomcolor
				currentgray 0 eq 
				grestore
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type /stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string /string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in /readstring cvx
						[component /get cvx 255 /exch cvx /sub cvx string_out /exch cvx 0 /exch cvx /put cvx string_out]cvx
						[/pop cvx ()]cvx /ifelse cvx
					]cvx /ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict /Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode [1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0 [C0 channel get 1 exch sub] def
							/C1 [C1 channel get 1 exch sub] def
							}{
							/C0 [1] def
							/C1 [1] def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions [Functions {channel paint? AGMCORE_separateShadingFunction} forall] def			
						}if
					currentdict /Range known
						{/Range [0 1] def}if
					currentdict
					end
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict /Function known
					{
					currentdict /Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction /Function xdf
					/ColorSpace [/DeviceGray] def
					}{
					ColorSpace dup type /arraytype eq {0 get}if /DeviceCMYK eq
						{
						/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}] def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get /Separation eq
						{
							{
								[1 /exch cvx /sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub /index cvx 1 /exch cvx /sub cvx ColorSpace 1 get length 1 add 1 /roll cvx ColorSpace 1 get length{/pop cvx} repeat]cvx
							}{
								pop [ColorSpace 1 get length {/pop cvx} repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2 /DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup /ColorSpace get
				dup type /arraytype ne
					{[exch]}if
				dup 0 get /DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get /Separation eq
					{
					exch begin
					ColorSpace 1 get dup /None ne exch /All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get /exec cvx
										4 AGMCORE_plate_ndx sub -1 /roll cvx
										4 1 /roll cvx
										3 [/pop cvx]cvx /repeat cvx
										1 /exch cvx /sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get /DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type /arraytype eq {0 get}if /DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get /exec cvx
									4 AGMCORE_plate_ndx sub -1 /roll cvx
									4 1 /roll cvx
									3 [/pop cvx]cvx /repeat cvx
									1 /exch cvx /sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace [/DeviceGray] def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup /DeviceCMYK eq exch dup /Separation eq exch /DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type /arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get /CIEBasedA eq
								{
								/ColorSpace [/Separation /_ciebaseda_ /DeviceGray {}] def
								}if
							ColorSpace 0 get dup /CIEBasedABC eq exch dup /CIEBasedDEF eq exch /DeviceRGB eq or or
								{
								/ColorSpace [/DeviceN [/_red_ /_green_ /_blue_] /DeviceRGB {}] def
								}if
							ColorSpace 0 get /CIEBasedDEFG eq
								{
								/ColorSpace [/DeviceN [/_cyan_ /_magenta_ /_yellow_ /_black_] /DeviceCMYK {}]
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup /AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace [/Separation (None) /DeviceGray {}] def
					currentdict end
					}if
				}def
			/shfill
				{
				clonedict
				AGMCORE_separateShadingDict 
				dup /AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup /PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					currentdict end
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{ 
				4 {4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{ 
				Adobe_AGM_Core begin
					/AGMCORE_k xdf /AGMCORE_y xdf /AGMCORE_m xdf /AGMCORE_c xdf
				end
				[/Separation 4 -1 roll /DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation (All) /DeviceGray {}] setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4 {4 index mul 4 1 roll} repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval {255 div} forall
	} bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	} bdf
	/n_color_components
	{
		base_colorspace_type
		dup /DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo /moveto ldf
		/li /lineto ldf
		/cv /curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		/level2ScreenFreq{
			begin
			60
			HalftoneType 1 eq{
				pop Frequency
			}if
			HalftoneType 2 eq{
				pop GrayFrequency
			}if
			HalftoneType 5 eq{
				pop Default level2ScreenFreq
			}if
			 end
		}def
		/currentScreenFreq{
			currenthalftone level2ScreenFreq
		}def
		level2 /setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace /setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get dup /Separation eq
					{
						pop
						dup length array copy
						dup dup 1 get
						current_spot_alias
						{
							dup map_alias
							{
								begin
								/sep_colorspace_dict currentdict AGMCORE_gput
								pop pop	pop
								[ 
									/Separation Name 
									CSA map_csa
									dup /MappedCSA xdf 
									/sep_colorspace_proc load
								]
								dup Name
								end
							}if
						}if
						map_reserved_ink_name 1 xpt
					}{
						/DeviceN eq 
						{
							dup length array copy
							dup dup 1 get [ 
								exch {
									current_spot_alias{
										dup map_alias{
											/Name get exch pop
										}if
									}if
									map_reserved_ink_name
								} forall 
							] 1 xpt
						}if
					}ifelse
				}if
			}def
			/setcolorspace
			{
				dup type dup /arraytype eq exch /packedarraytype eq or
				{
					dup 0 get /Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps {AGMCORE_&&&setcolorspace} if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1 [8 0 0 8 0 0] {<ffffffffffffffff>} image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/currentScreenFreq{
			currentscreen pop pop
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		} def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		} def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup /DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup /DeviceGray ne{
				dup /DeviceCMYK ne{
					dup /DeviceRGB ne{
						dup /Separation eq{
							pop
							currentcolorspace 3 get exec
							currentcolorspace 2 get
						}{
							dup /Indexed eq{
								pop
								currentcolorspace 3 get dup type /stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err /AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		} def
	}ifelse
	/sop /setoverprint ldf
	/lw /setlinewidth ldf
	/lc /setlinecap ldf
	/lj /setlinejoin ldf
	/ml /setmiterlimit ldf
	/dsh /setdash ldf
	/sadj /setstrokeadjust ldf
	/gry /setgray ldf
	/rgb /setrgbcolor ldf
	/cmyk /setcmykcolor ldf
	/sep /setsepcolor ldf
	/devn /setdevicencolor ldf
	/idx /setindexedcolor ldf
	/colr /setcolor ldf
	/csacrd /set_csa_crd ldf
	/sepcs /setsepcolorspace ldf
	/devncs /setdevicencolorspace ldf
	/idxcs /setindexedcolorspace ldf
	/cp /closepath ldf
	/clp /clp_npth ldf
	/eclp /eoclp_npth ldf
	/f /fill ldf
	/ef /eofill ldf
	/@ /stroke ldf
	/nclp /npth_clp ldf
	/gset /graphic_setup ldf
	/gcln /graphic_cleanup ldf
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and {
			bind
		}if
		def
	}forall
	/currentpagedevice currentpagedevice def
/getrampcolor {
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
ColorSpaceFamily /Separation eq
	{
	sep
	}
	{
	ColorSpaceFamily /DeviceN eq
		{
		devn
		}
		{
		setcolor
		}ifelse
	}ifelse
} bind def
/sssetbackground { aload pop setcolor } bind def
/RadialShade {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
/theta AA 1 AA dup mul sub sqrt div 1 atan def
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bind def
/GenStrips {
40 dict begin
/ColorSpaceFamily exch def
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
/setinkoverprint where {pop /setinkoverprint{pop}def}if
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round cvi } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bind def
}def
/page_trailer
{
	end
}def
/doc_trailer{
}def
systemdict /findcolorrendering known{
	/findcolorrendering systemdict /findcolorrendering get def
}if
systemdict /setcolorrendering known{
	/setcolorrendering systemdict /setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA map_csa setcolorspace_opt
		set_crd
	end
}
def
/setsepcolor
{ 
	/sep_colorspace_dict AGMCORE_gget begin
		dup /sep_tint exch AGMCORE_gput
		TintProc
	end
} def
/setdevicencolor
{ 
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		} for
		TintProc
	end
} def
/sep_colorspace_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2 {AGMCORE_tmp mul NComponents 1 roll} repeat
			LMax sub AGMCORE_tmp mul LMax add  NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add  NComponents 1 roll
				} repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
} def
/sep_colorspace_gray_proc
{
	Adobe_AGM_Core/AGMCORE_tmp xddf
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
} def
/sep_proc_name
{
	dup 0 get 
	dup /DeviceRGB eq exch /DeviceCMYK eq or level2 not and has_color not and{
		pop [/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
} def
/setsepcolorspace
{ 
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup /sep_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	Adobe_AGM_Core/AGMCORE_sep_special Name dup () eq exch (All) eq or ddf
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{ 255 div } /exec cvx 3 -1 roll [ 4 1 roll load /exec cvx ] cvx 
		] setcolorspace_opt
		/TintProc {
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get /DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc [
				Components aload pop Name findcmykcustomcolor 
				/exch cvx /setcustomcolor cvx
			] cvx bdf
		}{
 			AGMCORE_host_sep Name (All) eq and{
 				/TintProc { 
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get /DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name () eq and{
					/TintProc [
						MappedCSA sep_proc_name exch 0 get /DeviceCMYK eq{
							cvx /setcmykcolor cvx
						}{
							cvx /setgray cvx
						}ifelse
					] cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup /DeviceCMYK eq exch /DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc [
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get /DeviceGray eq{
								1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx
							}if
							/Name cvx /findcmykcustomcolor cvx /exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load /exec cvx
								/not cvx /and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							] cvx /if cvx
							/setcustomcolor cvx
						] cvx bdf
 					}{ 
						/TintProc /setcolor ldf
						[/Separation Name MappedCSA sep_proc_name load ] setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
} def
/additive_blend
{
  	3 dict begin
  	/numarrays xdf
  	/numcolors xdf
  	0 1 numcolors 1 sub
  		{
  		/c1 xdf
  		1
  		0 1 numarrays 1 sub
  			{
			1 exch add /index cvx
  			c1 /get cvx /mul cvx
  			}for
 		numarrays 1 add 1 /roll cvx 
  		}for
 	numarrays [/pop cvx] cvx /repeat cvx
  	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add /index cvx  
			c1 /get cvx /sub cvx /mul cvx
			}for
		/sub cvx
		numarrays 1 add 1 /roll cvx
		}for
	numarrays [/pop cvx] cvx /repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc [
		/TintTransform cvx /setcolor cvx
	] cvx bdf
	MappedCSA setcolorspace_opt
} bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length {pop} repeat
	end
} bdf
/setdevicencolorspace
{ 
	dup /AliasedColorants known {false}{true}ifelse 
	current_spot_alias and {
		6 dict begin
		/names_index 0 def
		dup /names_len exch /Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup /Names get
		{
			dup map_alias {
				exch pop
				dup /ColorLookup known {
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup /Components known {
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index [null null null null] put
						end
					} ifelse
				} ifelse
				new_names names_index 3 -1 roll /Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup /LookupTables known {
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index [null null null null] put
					end
				} ifelse
			} ifelse
			/names_index names_index 1 add def 
		} forall
		alias_cnt 0 gt {
			/AliasedColorants true def
			0 1 names_len 1 sub {
				/names_index xdf
				new_LookupTables names_index get 0 get null eq {
					dup /Names get names_index get /name xdf
					name (Cyan) eq name (Magenta) eq name (Yellow) eq name (Black) eq
					or or or not {
						/AliasedColorants false def
						exit
					} if
				} if
			} for
			AliasedColorants {
				dup begin
				/Names new_names def
				/AliasedColorants true def
				/LookupTables new_LookupTables def
				currentdict /TTTablesIdx known not {
					/TTTablesIdx -1 def
				} if
				currentdict /NComponents known not {
					/NComponents TintMethod /Subtractive eq {4}{3}ifelse def
				} if
				end
			} if
		}if
		end
	} if
	dup /devicen_colorspace_dict exch AGMCORE_gput
	begin
	/MappedCSA CSA map_csa def
	currentdict /AliasedColorants known {
		AliasedColorants
	}{
		false
	} ifelse
	/TintTransform load type /nulltype eq or {
		/TintTransform [
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup (Cyan) eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup (Magenta) eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0 /exch cvx 0 0
							}
							{
							(Yellow) eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1 /roll cvx 0
								}
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1 /roll cvx
								} ifelse
							} ifelse
						} ifelse
					5 -1 /roll cvx /astore cvx
					}
					{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx /mul cvx /round cvx /cvi cvx /get cvx
					} ifelse
					Names length TTTablesIdx add 1 add 1 /roll cvx
				} for
			Names length [/pop cvx] cvx /repeat cvx
			NComponents Names length
  			TintMethod /Subtractive eq
  				{
  				subtractive_blend
  				}
  				{
  				additive_blend
  				} ifelse
		] cvx bdf
	} if
	AGMCORE_host_sep {
		Names convert_to_process {
			exec_tint_transform
		}
		{	
			currentdict /AliasedColorants known {
				AliasedColorants not
			}{
				false
			} ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			Names {
				AvoidAliasedColorants {
					/currentspotalias current_spot_alias def
					false set_spot_alias
				} if
				AGMCORE_is_cmyk_sep {
					dup (Cyan) eq AGMCORE_cyan_plate and exch
					dup (Magenta) eq AGMCORE_magenta_plate and exch
					dup (Yellow) eq AGMCORE_yellow_plate and exch
					(Black) eq AGMCORE_black_plate and or or or {
						/devicen_colorspace_dict AGMCORE_gget /TintProc [
							Names names_index /devn_makecustomcolor cvx
						] cvx ddf
						/painted? true def
					} if
					painted? {exit} if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq {
					/devicen_colorspace_dict AGMCORE_gget /TintProc [
						Names names_index /devn_makecustomcolor cvx
					] cvx ddf
					/painted? true def
					exit
					} if
				} ifelse
				AvoidAliasedColorants {
					currentspotalias set_spot_alias
				} if
				/names_index names_index 1 add def
			} forall
			painted? {
				/devicen_colorspace_dict AGMCORE_gget /names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget /TintProc [
					names_len [/pop cvx] cvx /repeat cvx 1 /setseparationgray cvx
					0 0 0 0 () /findcmykcustomcolor cvx 0 /setcustomcolor cvx
				] cvx ddf
			} ifelse
			end
		} ifelse
	}
	{
		AGMCORE_in_rip_sep {
			Names convert_to_process not
		}{
			level3
		} ifelse
		{
			[/DeviceN Names MappedCSA /TintTransform load] setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and {
				[
					Names /length cvx [/pop cvx] cvx /repeat cvx
				] cvx bdf
			}{
				/setcolor ldf
			} ifelse
		}{
			exec_tint_transform
		} ifelse
	} ifelse
	set_crd
	/AliasedColorants false def
	end
} def
/setindexedcolorspace
{
	dup /indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict /CSD known {
			CSD get_csd /Names known {
				CSD get_csd begin
				currentdict devncs
				AGMCORE_host_sep{
					4 dict begin
					/devnCompCnt Names length def
					/NewLookup HiVal 1 add string def
					0 1 HiVal {
						/tableIndex xdf
						Lookup dup type /stringtype eq {
							devnCompCnt tableIndex map_index
						}{
							exec
						} ifelse
						setdevicencolor
						currentgray
						tableIndex exch
						HiVal mul cvi 
						NewLookup 3 1 roll put
					} for
					[/Indexed currentcolorspace HiVal NewLookup] setcolorspace_opt
					end
				}{
					level3
					{
					[/Indexed [/DeviceN Names MappedCSA /TintTransform load] HiVal Lookup] setcolorspace_opt
					}{
					[/Indexed MappedCSA HiVal
						[
						Lookup dup type /stringtype eq
							{/exch cvx CSD get_csd /Names get length dup /mul cvx exch /getinterval cvx {255 div} /forall cvx}
							{/exec cvx}ifelse
							/TintTransform load /exec cvx
						]cvx
					]setcolorspace_opt
					}ifelse
				} ifelse
				end
			}{
			} ifelse
			set_crd
		}
		{
			/MappedCSA CSA map_csa def
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or{
						pop [/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{ 
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval {} forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						} bind
					}{
						Lookup
					}ifelse
				}ifelse
				] setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep {
		/indexed_colorspace_dict AGMCORE_gget dup /CSD known {
			begin
			CSD get_csd begin
			map_indexed_devn
			devn
			end
			end
		}{
			AGMCORE_gget/Lookup get 4 3 -1 roll map_index
			pop setcmykcolor
		} ifelse
	}{
		level3 not AGMCORE_in_rip_sep and /indexed_colorspace_dict AGMCORE_gget /CSD known and {
			/indexed_colorspace_dict AGMCORE_gget /CSD get get_csd begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		} ifelse
	}ifelse
} def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode [0 1] def
		/DataSource <FF> def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict /image get exec
		grestore
		}if
	consumeimagedata
}def
/add_csa
{
	Adobe_AGM_Core begin
			/AGMCORE_CSA_cache xput
	end
}def
/get_csa_by_name
{
	dup type dup /nametype eq exch /stringtype eq or{
		Adobe_AGM_Core begin
		1 dict begin
		/name xdf
		AGMCORE_CSA_cache
		{
			0 get name eq {
				exit
			}{
				pop
			} ifelse
		}forall
		end
		end
	}{
		pop
	} ifelse
}def
/map_csa
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSA_cache get exch get
	}if
}def
/add_csd
{
	Adobe_AGM_Core begin
		/AGMCORE_CSD_cache xput
	end
}def
/get_csd
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_CSD_cache get exch get
	}if
}def
/pattern_buf_init
{
	/count get 0 0 put
} def
/pattern_buf_next
{
	dup /count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
} def
/cachepattern_compress
{
	5 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq {
			pop
		}{
			patarray dup length 1 sub 3 -1 roll put
		} ifelse
		{string_size}{0}ifelse string
	} /LZWEncode filter def
	{ 		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not {exit} if
	} loop
	LZWFilter closefile
	patarray				
	end
}def
/cachepattern
{
	2 dict begin
	currentfile exch 0 exch /SubFileDecode filter /ReadFilter exch def
	/patarray 20 dict def
	currentglobal true setglobal 
	patarray 1 array dup 0 1 put /count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		patarray dup length 1 sub 3 -1 roll put
		not {exit} if
	} loop
	patarray dup dup length 1 sub () put					
	end	
}def
/add_pattern
{
	Adobe_AGM_Core begin
		/AGMCORE_pattern_cache xput
	end
}def
/get_pattern
{
	dup type /nametype eq{
		Adobe_AGM_Core/AGMCORE_pattern_cache get exch get
		dup wrap_paintproc
	}if
}def
/wrap_paintproc
{ 
  statusdict /currentfilenameextend known{
	  begin
		/OldPaintProc /PaintProc load def
		/PaintProc
		{
		  mark exch
		  dup /OldPaintProc get stopped
		  {closefile restore end} if
		  cleartomark
		}  def
	  end
  } {pop} ifelse
} def
/make_pattern
{
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index /XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index /YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			  1 index begin
		BBox 0 get XStep div cvi XStep mul /xshift exch neg def
		BBox 1 get YStep div cvi YStep mul /yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[ xshift yshift /translate load null /exec load ] dup
		3 /PaintProc load put cvx /PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup /PatternType get 1 eq{
		dup /PaintType get 1 eq{
			currentoverprint sop [/DeviceGray] setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{
		pop
	}{
		setcolorspace
	}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/Intent known{
		currentcolorrendering/Intent get
	}{
		null
	}ifelse
	Intent ne{
		false  
		Intent
		AGMCORE_CRD_cache {
			exch pop 
			begin
				dup Intent eq{
					currentdict setcolorrendering_opt
					end 
					exch pop true exch	
					exit
				}if
			end
		} forall
		pop
		not{
			systemdict /findcolorrendering known{
				Intent findcolorrendering pop
				/ColorRendering findresource 
				dup length dict copy
				setcolorrendering_opt
			}if
		}if
	}if
} def
/add_crd
{
	AGMCORE_CRD_cache 3 1 roll put
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/CRD known{
			AGMCORE_CRD_cache CRD get dup null ne{
				setcolorrendering_opt
			}{
				pop
			}ifelse
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type /arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp) flushinput
	}if
}def
/cpaint_gsep
{
	Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep) flushinput
	}if
}def
/cpaint_gend
{
	newpath
}def
/path_rez
{
	dup 0 ne{
		AGMCORE_deviceDPI exch div 
		dup 1 lt{
			pop 1
		}if
		setflat
	}{
		pop
	}ifelse 	
}def
/set_spot_alias_ary
{
	/AGMCORE_SpotAliasAry where{
		pop pop
	}{
		Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
		true set_spot_alias
	}ifelse
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry{
				dup/Name get AGMCORE_name eq{
					save exch
					/Adobe_AGM_Core currentdict def
					/CSD get get_csd
					exch restore
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not {
		Adobe_AGM_Core/AGMCORE_&setcustomcolor /setcustomcolor load put
	} if
	/customcolor_tint 1 AGMCORE_gput
	Adobe_AGM_Core begin
	/setcustomcolor
	{
		dup /customcolor_tint exch AGMCORE_gput
		current_spot_alias{
			1 index 4 get map_alias{
				mark 3 1 roll
				setsepcolorspace
				counttomark 0 ne{
					setsepcolor
				}if
				pop
				pop
			}{
				AGMCORE_&setcustomcolor
			}ifelse
		}{
			AGMCORE_&setcustomcolor
		}ifelse
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd /setpagedevice load def
	/setpagedevice { get_gstate spd set_gstate } def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known{
			currentpagedevice/NegativePrint get Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						bdict /NegativePrint Adobe_AGM_Core/AGMCORE_inverting get edict setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
		gsave newpath clippath 1 /setseparationgray where{pop setseparationgray}{setgray}ifelse 
		/AGMIRS_&fill where {pop AGMIRS_&fill}{fill} ifelse grestore
	}if
	end
}def
/lw_save_restore_override {
	/md where {
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{} def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage /showpage load def}
		ifelse
		/showpage {orig_showpage gR} def
		end
	}if
}def
/pscript_showpage_override {
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage /restore load def
		/restore {exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where {
		pop
		md /initializepage known {
			md /initializepage {} put
		} if
		md /rC known {
			md /rC {4{pop}repeat} put
		} if
	}if
	/mysetup where {
		/mysetup [1 0 0 1 0 0] put
	}if
	Adobe_AGM_Core /AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core /AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
	/PrepsDict where
		{pop}
		{
		Adobe_AGM_Core /AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core /AGMCORE_Default_PageSize get type /arraytype eq
			{
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core /AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core /AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ (Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. ) def
	/AGMCORE_color_space_onhost_seps (This job contains colors that will not separate with on-host methods. ) def
	/AGMCORE_invalid_color_space (This job contains an invalid color space. ) def
end
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.23 0
%%Copyright: Copyright 1997-2003 Adobe Systems Incorporated.  All Rights Reserved.
%%Version: 2.23 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict /Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{ /Adobe_CoolType_Core userdict /Adobe_CoolType_Core get def }
if
userdict /Adobe_CoolType_Core 60 dict dup begin put
/Adobe_CoolType_Version 2.23 def
/Level2?
	systemdict /languagelevel known dup
		{ pop systemdict /languagelevel get 2 ge }
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal /pop load def
	/gcheck { pop false } bind def
	/currentpacking false def
	/setpacking /pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel
		2 copy known not
			{ 2 copy 3 dict dup /args 7 index 5 add array put put get }
			{
			get dup /args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch /args exch put
				}
				{ pop }
			ifelse
			}
		ifelse
			begin
			count 2 sub 1 index lt
				{ pop count 1 sub }
			if
			dup /argCount exch def
			dup 0 gt
				{
				exch 1 index 2 add 1 roll
				args exch 0 exch getinterval 
			astore pop
				}
				{ pop }
			ifelse
			count 1 sub /restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		end
	} bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{ { pop } repeat }
				{ pop }
			ifelse
			args 0 argCount getinterval {} forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{ { end } repeat }
		{ pop }
	ifelse
	} bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	} bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	} bind def
/@ReRaise
	{
	cvx $error /errorname get errordict exch get exec
	stop
	} bind def
/@Stopped
	{
	0 @#Stopped
	} bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{ @_RestoreStackLevels true }
		{ @_PopStackLevels false }
	ifelse
	} bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get /args get exch get
		end
	} bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup begin
		mark
			{
				(*) { pop stop } 128 string /Category
			resourceforall
			}
		stopped
		cleartomark
		currentdict eq dup
			{ end }
		if
		not
		}
		{ false }
	ifelse
	def
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{ /steveamerige /Category resourcestatus }
		stopped
			{ cleartomark true }
			{ cleartomark currentglobal not }
		ifelse
		}
		{ false }
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
				{ cleartomark false }
				{ { 3 2 roll pop true } { cleartomark false } ifelse }
			ifelse
			end
		} bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad /ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup /CMap CTHasResourceStatusBug
						{ CTResourceStatus }
						{ resourcestatus }
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup /CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{ exit }
								{ stop }
							ifelse
							}
						ifelse
						}
						{ pop }
					ifelse
					}
				128 string /CMap resourceforall
				}
			stopped
				{ cleartomark }
			stopped pop
			setglobal
			}
		if
		}
	if
	} bind def
/doc_setup
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mov /moveto load def
		/nfnt /newencodedfont load def
		/mfnt /makefont load def
		/sfnt /setfont load def
		/ufnt /undefinefont load def
		/chp /charpath load def
		/awsh /awidthshow load def
		/wsh /widthshow load def
		/ash /ashow load def
		/sh /show load def
		end
	userdict /Adobe_CoolType_Data 10 dict dup
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end put
	} bind def
/doc_trailer
	{
	currentdict Adobe_CoolType_Core eq
		{ end }
	if
	} bind def
/page_setup
	{
	Adobe_CoolType_Core begin
	} bind def
/page_trailer
	{
	end
	} bind def
/unload
	{
	systemdict /languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{ undef }
				{ pop pop }
			ifelse
			}
		if
		}
	if
	} bind def
/ndf
	{
	1 index where
		{ pop pop pop }
		{ dup xcheck { bind } if def }
	ifelse
	} def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where { /globaldict get begin } if
			dup where pop exch get
		/globaldict where { pop end } if
		end
	end
Adobe_CoolType_Core_Defined
	{ /systemfindfont exch def }
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{ pop } ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq { 0 } { dup length } ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index /FID eq
				{ pop pop }
				{ def }
			ifelse
			}
		forall
		dup null eq
			{ pop }
			{ { def } forall }
		ifelse
		currentdict
		end
	exch setglobal
	} bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	} bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index  known
			{ SharedFontDirectory 3 index get /FontReferenced known }
			{ false }
		ifelse
		}
		{
		FontDirectory 3 index known
			{ FontDirectory 3 index get /FontReferenced known }
			{
			SharedFontDirectory 3 index known
				{ SharedFontDirectory 3 index get /FontReferenced known }
				{ false }
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont /FontReferenced get
		2 index dup type /nametype eq
			{findfont}
		if ne
			{ pop false }
		if
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{ 2 copy get 3 index 3 1 roll put }
		for
		pop pop pop
		}
		{
		dup type /nametype eq
		  { findfont }
	  if
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index /FID ne
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type /stringtype eq { cvn } if def dup
			currentdict
			end
		definefont def
		}
	ifelse
	} bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type /dicttype ne
			{ 0 dict }
		if
		currentdict /$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{ def } forall
					{ def } forall
					currentdict
					dup /$Init known
						{ dup /$Init get exec }
					if
					end
				/$Strategy exch def
				}
				{ pop pop pop }
			ifelse
			}
			{ pop pop }
		ifelse
		end
	} bind def
/scff
	{
	$SubstituteFont
		begin
		dup type /stringtype eq
			{ dup length exch }
			{ null }
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{ $sname }
			ifelse def
		end
		{ findfont }
	@Stopped
		{
		dup length 8 add string exch
		1 index 0 (BadFont:) putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{ findfont }
		@Stopped
			{ pop /Courier findfont }
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	} bind def
/isWidthsOnlyFont
	{
	dup /WidthsOnly known
		{ pop pop true }
		{
		dup /FDepVector known
			{ /FDepVector get { isWidthsOnlyFont dup { exit } if } forall }
			{
			dup /FDArray known
				{ /FDArray get { isWidthsOnlyFont dup { exit } if } forall }
				{ pop }
			ifelse
			}
		ifelse
		}
	ifelse
	} bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 4 index def
		/$doSmartSub false def
		end
	3 index
	currentglobal false setglobal exch
	/CompatibleFonts /ProcSet resourcestatus
		{
		pop pop
		/CompatibleFonts /ProcSet findresource
			begin
			dup /CompatibleFont currentexception
			1 index /CompatibleFont true setexception
			1 index /Font resourcestatus
				{
				pop pop
				3 2 roll setglobal
				end
				exch
				dup findfont
				/CompatibleFonts /ProcSet findresource
					begin
					3 1 roll exch /CompatibleFont exch setexception
					end
				}
				{
				3 2 roll setglobal
				1 index exch /CompatibleFont exch setexception
				end
				findfont
				$SubstituteFont /$substituteFound true put
				}
			ifelse
		}
		{ exch setglobal findfont }
	ifelse
	$SubstituteFont
		begin
		$substituteFound
			{
		 false
		 (%%[Using embedded font ) print
		 5 index ?str1 cvs print
		 ( to avoid the font substitution problem noted earlier.]%%\n) print
		 }
			{
			dup /FontName known
				{
				dup /FontName get $fontname eq
				1 index /DistillerFauxFont known not and
				/currentdistillerparams where
					{ pop false 2 index isWidthsOnlyFont not and }
				if
				}
				{ false }
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		exch pop exch pop exch
		2 dict dup /Found 3 index put
		exch findfont exch
		}
		{
		exch exec
		exch dup findfont
		dup /FontType get 3 eq
	  {
		  exch ?str1 cvs
		  dup length 1 sub
		  -1 0
		{
			  exch dup 2 index get 42 eq
			{
				 exch 0 exch getinterval cvn 4 1 roll 3 2 roll pop
				 exit
			  }
			  {exch pop} ifelse
		  }for
		}
		{
		 exch pop
	  } ifelse
		2 dict dup /Downloaded 6 5 roll put
		}
	ifelse
	dup /FontName 4 index put copyfont definefont pop
	} bind def
/?str2 256 string def
/?add
	{
	1 index type /integertype eq
		{ exch true 4 2 }
		{ false 3 1 }
	ifelse
	roll
	1 index findfont
	dup /Widths known
		{
		Adobe_CoolType_Data /AddWidths? true put
		gsave dup 1000 scalefont setfont
		}
	if
	/Downloaded known
		{
		exec
		exch
			{
			exch ?str2 cvs exch
			findfont /Downloaded get 1 dict begin /Downloaded 1 index def ?str1 cvs length
			?str1 1 index 1 add 3 index putinterval
			exch length 1 add 1 index add
			?str1 2 index (*) putinterval
			?str1 0 2 index getinterval cvn findfont 
			?str1 3 index (+) putinterval
			2 dict dup /FontName ?str1 0 6 index getinterval cvn put
			dup /Downloaded Downloaded put end copyfont
			dup /FontName get exch definefont pop pop pop
			}
			{
			pop
			}
		ifelse
		}
		{
		pop
		exch
			{
			findfont
			dup /Found get
			dup length exch ?str1 cvs pop
			?str1 1 index (+) putinterval
			?str1 1 index 1 add 4 index ?str2 cvs putinterval
			?str1 exch 0 exch 5 4 roll ?str2 cvs length 1 add add getinterval cvn
			1 dict exch 1 index exch /FontName exch put copyfont
			dup /FontName get exch definefont pop
			}
			{
			pop
			}
		ifelse
		}
	ifelse
	Adobe_CoolType_Data /AddWidths? get
		{ grestore Adobe_CoolType_Data /AddWidths? false put }
	if
	} bind def
/?sh
	{
	currentfont /Downloaded known { exch } if pop
	} bind def
/?chp
	{
	currentfont /Downloaded known { pop } { false chp } ifelse
	} bind def
/?mv 
	{
	currentfont /Downloaded known { moveto pop pop } { pop pop moveto } ifelse
	} bind def
setpacking
userdict /$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{ get }
			{ pop pop { pop /Courier } bind }
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams /CannotEmbedFontPolicy 2 copy known
			{ get /Error eq }
			{ pop pop false }
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup /WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type /stringtype eq { cvn } if def
								/FontType 3 def
								/FontMatrix [ .001 0 0 .001 0 0 ] def
								/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
								/FontBBox [ 0 0 0 0 ] def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth /y exch def /x exch def
											x y setcharwidth
											$SubstituteFont /$Strategy get /$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									} bind def
								currentdict
								end
							exch setglobal
							} bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup /WMode known
										{ dup /WMode get }
										{ 0 }
									ifelse
									/$WMode exch def
									$fontname exch
									dup /FontName known
										{
										dup /FontName get
										dup type /stringtype eq { cvn } if
										}
										{ /unnamedfont }
									ifelse
									exch
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
									1 index /FontName get known
										{
										pop
										Adobe_CoolType_Data /InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{ $deepcopyfont }
									ifelse
									exch 1 index exch /FontBasedOn exch put
									dup /FontName $fontname dup type /stringtype eq { cvn } if put
									definefont
									Adobe_CoolType_Data /InVMDeepCopiedFonts get
										begin
										dup /FontBasedOn get 1 index def
										end
									} bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{ /y 1000 def }
										{ /x -1000 def 500 120 translate }
									ifelse
									Level2?
										{
										[ /Separation (All) /DeviceCMYK { 0 0 0 1 pop } ]
										setcolorspace
										}
										{ 0 setgray }
									ifelse
									10 setlinewidth
									x .8 mul
									[ 7 3 ]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{ .2 setcolor }
											{ .8 setgray }
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									} bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict /FontName known
											{
											FontName
											dup type /stringtype eq { cvn } if
											}
											{ /unnamedfont }
										ifelse
										def
										/FontName $fontname dup type /stringtype eq { cvn } if def
										/currentdistillerparams where
											{ pop }
											{
											/FontInfo currentdict /FontInfo known
												{ FontInfo null copyfont }
												{ 2 dict }
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[ 1 0 ItalicAngle dup sin exch cos div 1 0 0 ]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									} bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont {} bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type /stringtype eq { cvn } if
						dup /$fontname exch def
						$sname null eq
							{ $str cvs dup length $slen sub $slen getinterval }
							{ pop $sname }
						ifelse
						$fontpat dup 0 (fonts/*) putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont /$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{ /$match exch def exit }
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont /$dstack get
								{
								exch
									{
									1 index eq
										{ pop false }
										{ true }
									ifelse
									}
									{ begin false }
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{ $match (fonts/) anchorsearch pop pop cvn }
							{ /Courier }
						ifelse
						} bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1  [ /Ryumin-Light /HeiseiMin-W3
										  /GothicBBB-Medium /HeiseiKakuGo-W5
										  /HeiseiMaruGo-W4 /Jun101-Light ] def
							/Korea1  [ /HYSMyeongJo-Medium /HYGoThic-Medium ] def
							/GB1	  [ /STSong-Light /STHeiti-Regular ] def
							/CNS1	 [ /MKai-Medium /MHei-Medium ] def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup /FontType get 0 eq
							{
							1 dict dup /FontName /copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup /FontName /copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{ $Strategies /$Type3Underprint get exec }
						ifelse
						} bind def
					/$buildfontname
						{
						dup /CIDFont findresource /CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index (-) putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy (-) putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{ pop pop 3 2 roll putinterval cvn /$cmapname exch def }
							{ pop pop pop pop pop }
						ifelse
						length
						$str 1 index (-) putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						} bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{ get }
								{ pop pop [] }
							ifelse
							}
							{ pop pop [] }
						ifelse
						false exch
							{
							dup /CIDFont resourcestatus
								{
								pop pop
								save
								1 index /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get }
									{ false }
								ifelse
								exch pop
								exch restore
									{ pop }
									{ exch pop true exit }
								ifelse
								}
								{ pop }
							ifelse
							}
						forall
							{ $str cvs $buildfontname }
							{
							false (*)
								{
								save exch
								dup /CIDFont findresource
								dup /WidthsOnly known
									{ dup /WidthsOnly get not }
									{ true }
								ifelse
								exch /CIDSystemInfo get
								dup /Registry get Registry eq
								exch /Ordering get Ordering eq and and
									{ exch restore exch pop true exit }
									{ pop restore }
								ifelse
								}
							$str /CIDFont resourceforall
								{ $buildfontname }
								{ $fontname $findfontByEnum }
							ifelse
							}
						ifelse
						} bind def
					end
				end
				currentdict /$error known currentdict /languagelevel known and dup
					{ pop $error /SubstituteFont known }
				if
				dup
					{ $error }
					{ Adobe_CoolType_Core }
				ifelse
				begin
					{
					/SubstituteFont
					/CMap /Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{ dup $str cvs dup length $slen sub $slen getinterval cvn }
									{ $sname }
								ifelse
								Adobe_CoolType_Data /InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{ exch pop true exit }
												{ pop }
											ifelse
											}
											{
											FontDirectory 1 index known
												{ exch pop true exit }
												{
												GlobalFontDirectory 1 index known
													{ exch pop true exit }
													{ pop }
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{ pop pop false }
								ifelse
									{
									exch pop exch pop
									}
									{
									dup /CMap resourcestatus
										{
										pop pop
										dup /$cmapname exch def
										/CMap findresource /CIDSystemInfo get { def } forall
										$findfontByROS
										}
										{
										128 string cvs
										dup (-) search
											{
											3 1 roll search
												{
												3 1 roll pop
													{ dup cvi }
												stopped
													{ pop pop pop pop pop $findfontByEnum }
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup /CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup /$cmapname exch def
															/CMap findresource /CIDSystemInfo get { def } forall
															$findfontByROS
															true exit
															}
															{ pop }
														ifelse
														}
													for
													dup type /booleantype eq
														{ pop }
														{ pop pop pop $findfontByEnum }
													ifelse
													}
												ifelse
												}
												{ pop pop pop $findfontByEnum }
											ifelse
											}
											{ pop pop $findfontByEnum }
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{ //SubstituteFont exec }
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{ $findfontByEnum }
								{ //SubstituteFont exec }
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core /scfindfont /systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup /FontName known
								{ dup /FontName get dup 3 index ne }
								{ /noname true }
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def /$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{ 1 index /FID eq { pop pop } { def } ifelse }
										forall
										currentdict
										end
									definefont
									dup /FontName known { dup /FontName get } { null } ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using ) print
										dup /FontName known
											{ dup /FontName get } { (unspecified font) }
										ifelse
										$str cvs print (.\n) print
										}
									if
									}
									{ exch pop }
								ifelse
								}
								{ exch pop }
							ifelse
							end
						} bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core /findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type /stringtype ne { $str cvs } if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{ dup $inVMIndex $AddInVMFont }
						if
						$doSmartSub
							{
							currentdict /$Strategy known
								{ $Strategy /$BuildFont get exec }
							if
							}
						if
						}
					if
					end
				} bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch /FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data /InVMFontsByCMap get exch
		$DictAdd
		}
		{ pop pop pop }
	ifelse
	} bind def
/$DictAdd
	{
	2 copy known not
		{ 2 copy 4 index length dict put }
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get { forall } def
				2 copy currentdict put
				end
			}
			{ pop }
		ifelse
		}
	if
	get
		begin
			{ def }
		forall
		end
	} bind def
end
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright (C) 2000-2003 Adobe Systems, Inc.  All Rights Reserved.
systemdict /setpacking known
{
	currentpacking
	true setpacking
} if
userdict /Adobe_AGM_Image 75 dict dup begin put
/Adobe_AGM_Image_Id /Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf () def
/AGMIMG_ybuf () def
/AGMIMG_kbuf () def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/doc_setup
{ 
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage /colorimage ldf
	}if
	end
	end
}def
/page_setup
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists {/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				 }ifelse
			 }ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode [ Decode 1 get Decode 0 get] def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode [1 1] def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub} currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{ pop 1 } currenttransfer addprocs settransfer
		}def
	}ifelse
	/img /imageormask ldf
	/sepimg /sep_imageormask ldf
	/devnimg /devn_imageormask ldf
	/idximg /indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup /arraytype eq exch /packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/page_trailer
{
	end
}def
/doc_trailer
{
}def
/imageormask_sys
{
	begin
		save mark
		level2{
			currentdict
			Operator /imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask {
					level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator /imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix /DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix /DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint {
		0 get dup type /nametype eq {
			dup /DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			} forall
			not
		} ifelse
	}{
		pop false
	}ifelse
}def
/process_mask_L3
{
	dup begin
	/ImageType 1 def
	end
	4 dict begin
		/DataDict exch def
		/ImageType 3 def
		/InterleaveType 3 def
		/MaskDict 9 dict begin
			/ImageType 1 def
			/Width DataDict dup /MaskWidth known {/MaskWidth}{/Width} ifelse get def
			/Height DataDict dup /MaskHeight known {/MaskHeight}{/Height} ifelse get def
			/ImageMatrix [Width 0 0 Height neg 0 Height] def
			/NComponents 1 def
			/BitsPerComponent 1 def
			/Decode [0 1] def
			/DataSource AGMIMG_maskSource def
		currentdict end def
	currentdict end
}def
/use_mask
{
	dup type /dicttype eq
	{
		dup /Mask known	{
			dup /Mask get {
				level3
				{true}
				{
					dup /MaskWidth known {dup /MaskWidth get 1 index /Width get eq}{true}ifelse exch
					dup /MaskHeight known {dup /MaskHeight get 1 index /Height get eq}{true}ifelse
					3 -1 roll and
				} ifelse
			}
			{false} ifelse
		}
		{false} ifelse
	}
	{false} ifelse
}def
/make_line_source
{
	begin
	MultipleDataSources {
		[
		Decode length 2 div cvi {Width string} repeat
		]
	}{
		Width Decode length 2 div mul cvi string
	}ifelse
	end
}def
/datasource_to_str
{
	exch dup type
	dup /filetype eq {
		pop exch readstring
	}{
		/arraytype eq {
			exec exch copy
		}{
			pop
		}ifelse
	}ifelse
	pop
}def
/masked_image_simulation
{
	3 dict begin
	dup make_line_source /line_source xdf
	/mask_source AGMIMG_maskSource /LZWDecode filter def
	dup /Width get 8 div ceiling cvi string /mask_str xdf
	begin
	gsave
	0 1 translate 1 -1 Height div scale
	1 1 Height {
		pop
		gsave
		MultipleDataSources {
			0 1 DataSource length 1 sub {
				dup DataSource exch get
				exch line_source exch get
				datasource_to_str
			} for
		}{
			DataSource line_source datasource_to_str
		} ifelse
		<<
			/PatternType 1
			/PaintProc [
				/pop cvx
				<<
					/ImageType 1
					/Width Width
					/Height 1
					/ImageMatrix Width 1.0 sub 1 matrix scale 0.5 0 matrix translate matrix concatmatrix
					/MultipleDataSources MultipleDataSources
					/DataSource line_source
					/BitsPerComponent BitsPerComponent
					/Decode Decode
				>>
				/image cvx
			] cvx
			/BBox [0 0 Width 1]
			/XStep Width
			/YStep 1
			/PaintType 1
			/TilingType 2
		>>
		matrix makepattern set_pattern
		<<
			/ImageType 1
			/Width Width
			/Height 1
			/ImageMatrix Width 1 matrix scale
			/MultipleDataSources false
			/DataSource mask_source mask_str readstring pop
			/BitsPerComponent 1
			/Decode [0 1]
		>>
		imagemask
		grestore
		0 1 translate
	} for
	grestore
	end
	end
}def
/imageormask
{
	begin
		SkipImageProc {
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator /imagemask eq DeviceN_PS2 not and {
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get /DeviceGray eq and{
						[/Separation /Black /DeviceGray {}] setcolorspace
						/Decode [ Decode 1 get Decode 0 get ] def
					}if
					use_mask {
						level3 {process_mask_L3 image}{masked_image_simulation}ifelse
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not {
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file {
									Names {
										dup (None) ne {
											[/Separation 3 -1 roll /DeviceGray {1 exch sub}] setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq {true setoverprint} if
											/names_index names_index 1 add def
										}{
											pop
										} ifelse
									} forall
									close_image_file
								} if
								grestore
								end
							}{
								Operator /imagemask eq {
									imagemask
								}{
									image
								} ifelse
							} ifelse
						}{
							Operator /imagemask eq {
								imagemask
							}{
								image
							} ifelse
						} ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator /imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix /DataSource load
					/Adobe_AGM_OnHost_Seps where {
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator /colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource [
											DataSource 0 get /exec cvx
											DataSource 1 get /exec cvx
											DataSource 2 get /exec cvx
											DataSource 3 get /exec cvx
											/AGMCORE_get_ink_data cvx
										] cvx def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0 () /SubFileDecode filter def
									}ifelse
									/Decode [ Decode 0 get Decode 1 get ] def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator /image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
  			 							1 AGMCORE_&setgray
  			 							currentdict imageormask_sys
  			 						}{
  			 							currentdict ignoreimagedata
  			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator /image eq{
							AGMCORE_host_sep{
								/DoImage true def
								HostSepColorImage{
									invert_image_samples
								}{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}ifelse
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys} if
							}{
								use_mask {
									level3 {process_mask_L3 image}{masked_image_simulation}ifelse
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get /DeviceCMYK eq and
		currentdict/Components known and 
		Name () ne and 
		Name (All) ne and 
		Operator /image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load /exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			} /exec cvx
			] cvx bind
			MappedCSA 0 get /DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
					AGMCORE_avoid_L2_sep_space not currentcolorspace 0 get /Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{ 
					currentdict
					Operator /imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name (All) ne and{
 								level2{
	 								[ /Separation Name [/DeviceGray]
	 								{ 
	 									sep_colorspace_proc AGMCORE_get_ink_data
										1 exch sub
	 								} bind
									] AGMCORE_&setcolorspace
									/sep_tint AGMCORE_gget AGMCORE_&setcolor
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator /imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name (All) eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					currentcolorspace 0 get /Separation ne{
						[/Separation Name MappedCSA sep_proc_name exch 0 get exch load ] setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentoverprint 
					MappedCSA 0 get /DeviceCMYK eq and 
					Name inRip_spot_has_ink not and 
					Name (All) ne and {
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
}def
/decode_image_sample
{
	4 1 roll exch dup 5 1 roll
	sub 2 4 -1 roll exp 1 sub div mul add
} bdf
/colorSpaceElemCnt
{
	currentcolorspace 0 get dup /DeviceCMYK eq {
		pop 4
	}
	{
		/DeviceRGB eq {
			pop 3
		}{
			1
		} ifelse
	} ifelse
} bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub {
			dup currentdict /dataSource get /exch cvx /get cvx /exec cvx
			/exch cvx names_index /ne cvx [ /pop cvx ] cvx /if cvx
		} for
	] cvx bind
	end
} bdf		
/devn_alt_datasource
{
	11 dict begin
	/srcDataStrs xdf
	/dstDataStr xdf
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources {origDataSource length}{1}ifelse def
	/samplesNeedDecoding
		0 0 1 origDecode length 1 sub {
			origDecode exch get add
		} for
		origDecode length 2 div div
		dup 1 eq {
			/decodeDivisor 2 origBitsPerComponent exp 1 sub def
		} if
		2 origBitsPerComponent exp 1 sub ne
	def
	[
		0 1 dsCnt 1 sub [
			currentdict /origMultipleDataSources get {
				dup currentdict /origDataSource get exch get dup type
			}{
				currentdict /origDataSource get dup type
			} ifelse
			dup /filetype eq {
				pop currentdict /srcDataStrs get 3 -1 /roll cvx /get cvx /readstring cvx /pop cvx
			}{
				/stringtype ne {
					/exec cvx
				} if
				currentdict /srcDataStrs get /exch cvx 3 -1 /roll cvx /xpt cvx
			} ifelse
		] cvx /for cvx
		currentdict /srcDataStrs get 0 /get cvx /length cvx 0 /ne cvx [
			0 1 Width 1 sub [
				Adobe_AGM_Utils /AGMUTIL_ndx /xddf cvx
				currentdict /origMultipleDataSources get {
					0 1 dsCnt 1 sub [
						Adobe_AGM_Utils /AGMUTIL_ndx1 /xddf cvx
						currentdict /srcDataStrs get /AGMUTIL_ndx1 /load cvx /get cvx /AGMUTIL_ndx /load cvx /get cvx
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvxs
								BitsPerComponent /decode_image_sample load /exec cvx
							} ifelse
						} if
					] cvx /for cvx
				}{
					Adobe_AGM_Utils /AGMUTIL_ndx1 0 /ddf cvx
					currentdict /srcDataStrs get 0 /get cvx /AGMUTIL_ndx /load cvx		
					currentdict /origDecode get length 2 idiv dup 3 1 /roll cvx /mul cvx /exch cvx /getinterval cvx 
					[
						samplesNeedDecoding {
							currentdict /decodeDivisor known {
								currentdict /decodeDivisor get /div cvx
							}{
								currentdict /origDecode get /AGMUTIL_ndx1 /load cvx 2 /mul cvx 2 /getinterval cvx /aload cvx /pop cvx
								BitsPerComponent /decode_image_sample load /exec cvx
								Adobe_AGM_Utils /AGMUTIL_ndx1 /AGMUTIL_ndx1 /load cvx 1 /add cvx /ddf cvx
							} ifelse
						} if
					] cvx /forall cvx
				} ifelse
				currentdict /convProc get /exec cvx
				currentdict /origcolorSpaceElemCnt get 1 sub -1 0 [
					currentdict /dstDataStr get 3 1 /roll cvx /AGMUTIL_ndx /load cvx currentdict /origcolorSpaceElemCnt get /mul cvx /add cvx /exch cvx
					currentdict /convProc get /filter_indexed_devn load ne {
						255 /mul cvx /cvi cvx 
					} if
					/put cvx 
				] cvx /for cvx
			] cvx /for cvx
			currentdict /dstDataStr get
		] cvx /if cvx
	] cvx bind
	end
} bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	/MappedCSA CSA map_csa def
	2 dict begin
	dup dup
	/dstDataStr exch /Width get colorSpaceElemCnt mul string def
	/srcDataStrs [ 3 -1 roll begin
		currentdict /MultipleDataSources known {MultipleDataSources {DataSource length}{1}ifelse}{1} ifelse
		{
			Width Decode length 2 div mul cvi string
		} repeat
		end ] def
	begin
	SkipImageProc {
		currentdict consumeimagedata
	}
	{
		save mark 
		AGMCORE_producing_seps not {
			level3 not {
				Operator /imagemask ne {
					/DataSource [
						DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
						colorSpaceElemCnt /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
						dstDataStr srcDataStrs devn_alt_datasource /exec cvx
						] cvx 0 () /SubFileDecode filter def
					/MultipleDataSources false def
					/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				} if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process {
					CSA map_csa 0 get /DeviceCMYK eq {
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							[
							DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
							4 /devicen_colorspace_dict AGMCORE_gget /TintTransform get 
							dstDataStr srcDataStrs devn_alt_datasource /exec cvx
							] cvx
						filter_cmyk 0 () /SubFileDecode filter def
						/MultipleDataSources false def
						/Decode [1 0] def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate {
							/DataSource [
								DataSource Decode BitsPerComponent currentdict /MultipleDataSources known {MultipleDataSources}{false} ifelse
								CSA map_csa 0 get /DeviceRGB eq{3}{1}ifelse /devicen_colorspace_dict AGMCORE_gget /TintTransform get
								dstDataStr srcDataStrs devn_alt_datasource /exec cvx
								] cvx 0 () /SubFileDecode filter def
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt [ exch {0 1} repeat ] def
				 			currentdict imageormask_sys
				 		}
						{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						} ifelse
 					} ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
	 					Operator/imagemask ne{
	 						MultipleDataSources {
		 						/DataSource [ DataSource devn_sep_datasource /exec cvx ] cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource /DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						} ifelse
							invert_image_samples
	 					} if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{ 			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN [
				AGMIMG_c 0 ne {/Cyan} if
				AGMIMG_m 0 ne {/Magenta} if
				AGMIMG_y 0 ne {/Yellow} if
				AGMIMG_k 0 ne {/Black} if
				] /DeviceCMYK {}] setcolorspace
				AGMIMG_c 0 ne {AGMIMG_c} if
				AGMIMG_m 0 ne {AGMIMG_m} if
				AGMIMG_y 0 ne {AGMIMG_y} if
				AGMIMG_k 0 ne {AGMIMG_k} if
				setcolor			
			}{	
				/Decode [ Decode 0 get 255 mul Decode 1 get 255 mul ] def
				[/Indexed 				
					[
						/DeviceN [
							AGMIMG_c 0 ne {/Cyan} if
							AGMIMG_m 0 ne {/Magenta} if
							AGMIMG_y 0 ne {/Yellow} if
							AGMIMG_k 0 ne {/Black} if
						] 
						/DeviceCMYK {
							AGMIMG_k 0 eq {0} if
							AGMIMG_y 0 eq {0 exch} if
							AGMIMG_m 0 eq {0 3 1 roll} if
							AGMIMG_c 0 eq {0 4 1 roll} if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				] setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation /Black /DeviceGray {}] setcolorspace
			gsave
			/Black
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 1 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Yellow /DeviceGray {}] setcolorspace
			gsave
			/Yellow
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 2 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Magenta /DeviceGray {}] setcolorspace
			gsave
			/Magenta
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {4 3 roll pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation /Cyan /DeviceGray {}] setcolorspace
			gsave
			/Cyan 
			[{1 exch sub /sep_tint AGMCORE_gget mul} /exec cvx MappedCSA sep_proc_name cvx exch pop {pop pop pop 1 exch sub} /exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		} if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
} def
/indexed_imageormask
{
	begin
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup /CSA known {
					/CSA get map_csa
				}{
					/CSD get get_csd /Names get
				} ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN {
					/devicen_colorspace_dict AGMCORE_gget /names_index known {
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					} ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator /imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN {
					/indexed_colorspace_dict AGMCORE_gget begin
					CSD get_csd begin
				}{
					/indexed_colorspace_dict AGMCORE_gget begin
					CSA map_csa 0 get /DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and {
						[/Indexed [/DeviceN [/Cyan /Magenta /Yellow /Black] /DeviceCMYK {}] HiVal Lookup]
						setcolorspace
					} if
					end
				} ifelse
				imageormask
				Indexed_DeviceN {
					end
					end
				} if
			}{ 
				Operator /imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not {
			currentcolorspace 
			dup 1 /DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		} if
		currentdict 
		Operator /imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask {
				level3 {process_mask_L3 AGMIMG_&image}{masked_image_simulation}ifelse
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
  /OPIimage
  {
  	dup type /dicttype ne{
  		10 dict begin
  			/DataSource xdf
  			/ImageMatrix xdf
  			/BitsPerComponent xdf
  			/Height xdf
  			/Width xdf
  			/ImageType 1 def
  			/Decode [0 1 def]
  			currentdict
  		end
  	}if
  	dup begin
  		/NComponents 1 cdndf
  		/MultipleDataSources false cdndf
  		/SkipImageProc {false} cdndf
  		/HostSepColorImage false cdndf
  		/Decode [
  				0 
  				currentcolorspace 0 get /Indexed eq{
  					2 BitsPerComponent exp 1 sub
  				}{
  					1
  				}ifelse
  		] cdndf
  		/Operator /image cdndf
  	end
  	/sep_colorspace_dict AGMCORE_gget null eq{
  		imageormask
  	}{
  		gsave
  		dup begin invert_image_samples end
  		sep_imageormask
  		grestore
  	}ifelse
  }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter /WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0 (%EndMask) /SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not {exit} if
	}loop
	WriteFilter closefile
	end
}def
/cachemask_level3
{
	currentfile
	<<
		/Filter [ /SubFileDecode /ASCII85Decode /RunLengthDecode ]
		/DecodeParms [ << /EODCount 0 /EODString (%EndMask) >> null null ]
		/Intent 1
	>>
	/ReusableStreamDecode filter
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type /dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode [/customcolor_tint AGMCORE_gget 0] def
				/Operator /image def
				/HostSepColorImage false def
				/SkipImageProc {false} def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		bdict
			/Name AGMIMG_colorAry 4 get
			/CSA [ /DeviceCMYK ] 
			/TintMethod /Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components [ AGMIMG_colorAry aload pop pop ] 
		edict
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage /customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		dup 4 get map_alias{
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
		}{
			AGMIMG_&customcolorimage
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt /AGMIMG_xSign? exch def /AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		AGMIMG_xSign? {floor 0.1 sub}{ceiling 0.1 add} ifelse exch
		itransform /AGMIMG_llY exch def /AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		AGMIMG_xSign? {ceiling 0.1 add}{floor 0.1 sub} ifelse exch
		itransform /AGMIMG_urY exch def /AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub  AGMIMG_llX AGMIMG_llY] concat
	}{
	}ifelse
	end
} def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					} if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf} true 4 colorimage	
		end
	} def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				} currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get /DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub} currenttransfer addprocs settransfer
						currentdict imageormask
					}{ 
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub} exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get /DeviceGray eq {
						{255 mul round cvi ColorLookup exch get 0 get} currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get /DeviceCMYK eq {
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{ 
							currentcolortransfer
							{pop 1} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get} exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get} exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{ 
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup /DeviceRGB eq exch /DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div} currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get /DeviceGray eq {
					{HiVal mul round cvi Lookup exch get HiVal div} currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get /DeviceCMYK eq {
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{ 
						currentcolortransfer
						{pop 1} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div} exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div} exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict /setpacking known
{
	setpacking
} if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/doc_setup get exec
Adobe_CoolType_Core/doc_setup get exec
Adobe_AGM_Image/doc_setup get exec
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Floral scroll III [Converted].eps) 1
%%EndPageComments
%%BeginPageSetup
/currentdistillerparams where
{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse
{ userdict /AI11_PDFMark5 /cleartomark load put
userdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}
{ userdict /AI11_PDFMark5 /pdfmark load put
userdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse
[/NamespacePush AI11_PDFMark5
[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5
[{ai_metadata_stream_123}
currentfile 0 (%  &&end XMP packet marker&&)
/SubFileDecode filter AI11_ReadMetadata_PDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?><x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 3.0-29, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:tiff='http://ns.adobe.com/tiff/1.0/'>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:xap='http://ns.adobe.com/xap/1.0/'
  xmlns:xapGImg='http://ns.adobe.com/xap/1.0/g/img/'>
  <xap:CreateDate>2015-03-31T08:48:17Z</xap:CreateDate>
  <xap:ModifyDate>2015-03-31T08:48:17Z</xap:ModifyDate>
  <xap:CreatorTool>Illustrator</xap:CreatorTool>
  <xap:Thumbnails>
   <rdf:Alt>
    <rdf:li rdf:parseType='Resource'>
     <xapGImg:format>JPEG</xapGImg:format>
     <xapGImg:width>236</xapGImg:width>
     <xapGImg:height>256</xapGImg:height>
     <xapGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADsAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqo3kD3FnPbpK&#xA;0DzRvGs6fbQspAdfdeoxV8/flxfWfkCfXfKun3rX15NJcueWoCa6H1MSRzz6bp0kHF1ikSXnHJNz&#xA;JjIHqABmVZ55K84WWjalceW9Y8z3HmBpb1INN1a4tHVPWniSUWkl3DGLUvWQcFLBt+NPsgqvS8Vd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiry/wA3fln5&#xA;Qt/NMPmDSrJLLzdrrzWTayZJGW1ikt5Xu7tIWf0hL6KuqnjTm4LA/FVVLfy//J6Ox1q5s/MML6np&#xA;3lK8hbyXqUzelKYpES5kSZYBDHP6Vxxfm6GsgrWoxV7FirsVdirzb85/zcbyBDo1pZ2sVzq+vTyR&#xA;Wj3T+lawRQBDPPO9V+GMSqaVG1TUUxVnmiXbXmk2l4buC/W6iSaO9tEMcEscihkeNWkmPFlII+M4&#xA;qjcVY35389ad5Rsra5u7O7v5LuSSOC1sUjeU+jBJcyufVeJAqRQsx+Ku2wOKpzo+pJqmkWOpxxvC&#xA;l9bxXKQyijoJkDhXA/aHKhxVA+ZPOXlby1Csuu6nBY+oCYYpGrNJTr6UK8pJP9ipxVJ9M/M7TtZm&#xA;eLQ9LvtUKLzb0zZW78K05eheXNtOFr3MeKpl/iq7iHO98varaQftS8La6p/zzsZ7qY/QmKpppmr6&#xA;Zqlt9Z0+5juYQxRyhqUdftI6/aR1/aVgCO+KovFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;qkHnPQzqmmIyFfVtGkkKMwRZIZYJLeeIv+xyimbi3QOFJ2GKvOvy4/NvzL5n83Wmg1sPRsrYDV1c&#xA;/wCkz8UfjfWciyGKWKV1UFEVuFft4qr/APOS/m7zf5Z8lWVx5ekmtYru/jtdU1C0QPcQwOrUEXL4&#xA;UaRwFDnoaDqcVek+VvUby5ps0tvcWc9xbRTz2d5NJc3EMkkYZ4pJZSzMyMeJxVj/APys+wb8yD5I&#xA;TTbt5E/dzaqFH1ZLn6st56JoS39xIhL9OTBepxVIfz88rflz5n8vQWvmvXLLQr2wk+saZe3UkYKs&#xA;ac0aFnjaWOQKOSqQdhQ7YqkHlj88rr6hY6L5b8oyeYIbONLOC60M3EWmgQpwiRZr+3tlQfCBx5vQ&#xA;dGbFU303Wfzp833N1DaX2ieU7e0kMVylusmtXkEo+1DJLWGy9RQRyUEsO4xVg/50aVqPlqTQG80e&#xA;c/MGpWtxLNcvcWkdpA4ubcxLFFYpElukFw6XErq7y0KIyKGZgMVTCW+8zDzCnlL8ufOuualqqTTQ&#xA;atdayLO/tbRYWaJmLNbpKX5xnpJQU3qzKrqo/wAqflVoTX+paT51tpbzz1dwyzwapdXVzPaXkOye&#xA;pAUe3c+kzL6sT/GtRRuJBxVhP5ZeWvP/AJN85S+WvNPmD0bXTdOg1W1vHc3cNtey3Jjit7cNxkcX&#xA;NvHKkkKcSwqRuqtir2qw8yxaNoPmO8bU59b8yRwXer/o27gm092WCH93DaWU4WRIR6arUcqsasxJ&#xA;xV4NKv5hec7611bWLe3t9fu4rG78v69oH1ixllF4x52Hrjitw0NsDPUFxDwozbsmKsu/J/zp/wA5&#xA;M6npLNd6TY6rZwym3jvNVMun3DAIrLKrpHxmiIbZwhJ8cVe2+V9J121FxfeYL2O81e9K+olsrJaW&#xA;0SD4ILdHJYgEktI3xOT2AVVVT3FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqpXlpbXlpPZ3UYltr&#xA;mNoZ4m6NHIpVlPzBxViaflJ5G/QVvos9lJdW9nPLdWVzPcTNeW8sr8y1vdBxPFQ0pwYdN6mpxVL9&#xA;S/K/zBNYz6dZ+ddRbTLlDHLYavbWOrRFT+yWnhWZh/ryHFUgi/LTzn5T0qe8b8z7yx0fTreSSblZ&#xA;QypDbxKXbgtzJcoqqF2omw2WmKvL7vy/rUfm+yvfNOteZJbXzJaWc4trGVbe5uI5Lgwot09ssMf+&#xA;jx8Hlj4sy+oqoTxLYq970D8lvyr0GT1tO8tWf1gHkLm6U3kwbxEtyZnB+RxVOPOGm6ncaJy0UAap&#xA;YulxYxghAxQFHjFSqgtE7qvI8QaV2xV83/8AOPPnfXvJOuX/AJT863X6K0WygmkWCe3maSW9ln5m&#xA;cyrExT90CCkjL1BArXFXtt1+Zltr+mXaeS3kmEayC58wyQOtjZRxqTLNWQJ60iUPCJRu1OXFDyKq&#xA;V/kH5Tg0fRLm6aJkvLn0Xn9Vucge6gjvW5Mf2xHcxQuf2vSBNeuKvQPMGijUorWaEiPUdNuEvNPm&#xA;O3GRAVZCwDEJNE7xPsfhY96YqlWj2MF1rvmDVYooxeW0zWFg3EARgQRySv0PxyzSHm37SqgP2cVe&#xA;deR/Mf5neYrfS9E84+WL6082aNq8dxNr7wLDYi0Ry0rxTLxjZ3hZ7bhFyqG5E9aKvU9J8j+TdHv5&#xA;NR0rRLGxvpeQe5t7eOOSjnk4DKAQGO7U698VVPKiBNEjjT+5Sa5S28PQW5kENKdvSC09sVTfFXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYqx/zj5+8n+TbAX3mTVIdPievoxuS00pHURRIGkc7/srtirAZ/wDn&#xA;IZpIXudJ/L/zZqNklKXa6cY43B/aT4mYrTetPnTFUw8tf85G/lhrZuYpLu40e+tCfrGn6nbvFcKF&#xA;+0xWP1Vovf4tsVZxoXm7ytr9tFdaLq1pqMExKxtbzJJVgpYrQGoYKCSp3xVNsVdirEfzb8s6p5o/&#xA;LbzBoOlEDUb61ZbVSwQO6sHEfI0A9Tjwqdt98VYB/wA44f430rS73RvM2ja/HqEl409xqGrzxzWy&#xA;r6YWsMjlJWLMn2VVh35dcVe24qxq5vZtU1B4TqJ0vSY7g2ULRskc99dKCZI45HqVSPiyfuxzLK24&#xA;VfiVYH5Z8+eWPOFldeYNAiub7QtFv4rO/t9Yi+sRypKVBuLSef1ZkkhEgcoWpx24gsrBVmf5sTG3&#xA;/LLzHHDSN7iwlsoKfDR7sfVkpSlPilFMVRUc8Wi+bJLaVVg0/XViazloFT6/BH6UkJO1Gkt4ojGO&#xA;/B/DFU08w65YaDoWoa3qDFbLTLeW7uCtC3CFC5Cg0qxpQDucVYF5K86QGIeYHgmg0HzNGurc5VrJ&#xA;btIqj1XCcqw8Asblf7soJGoktVVej297Z3Nqt3bTxzWrryW4jdXjK+IcEimKsUv/ADnLq98uieTm&#xA;S+uS3HUdaX95ZWMX7R9QfBNcdkiU9d3oBuqyuxs7exsreytl429rGkMKkkkJGoVRU7nYYqrYq7FX&#xA;YqlWsanexXdrpmmojajeB5PUmBaKCCLiJJpFVkZ/idVVAw5E9QASFUJZSeaLTzBDYXXLUtLuLeWa&#xA;TU/SihEE6OgSGivVg6sxHwbcd2NdlU6N5aCFZ/Xj9B2VEl5DiWdxGqg9Ks5Cj3xVJpf8TXuuX9qr&#xA;yaVptpFC1heIkEwupJQxk5cy7KIioUpwUmtQ5rRVUVouqXc811p2oqi6pYemZmhBWKaKbl6U8SsX&#xA;ZVcxuvFmJVlIqRRiqmuKuxV2KsO/NP8AMO38keXBepEl1q97ILXR7F24LLcMK8pG/ZiiUF5G2oB1&#xA;3xV8qaj5k1a+1w6hoesQ6t5xueJl10y2puXlY19DTba4LyW0MfLiixQ+u5rtvwCr0DTvz2js/wAs&#xA;7jy7aabr7eedZtpxpN7JW7kvrq6rF9ahu41iLeixoB6alOITqMVZJ+fv5fif8rbfzjclLTz75Ztb&#xA;WebVouIeZ0CR3EUjAUdSWYrUddujHFV35GazoMXmi8sH8s2uiarqNlZ6lBew26RvJBqUAuxH6gAb&#xA;gH5rQ/ZZKVaoCqvdsVdirsVdirsVeM+atB4ecPK3mW9jlms/Jur6u+sW0KtI0UOrF7i0vRGgZmjj&#xA;JT1Co237I2Kpr5f8teQNC0tEsvNduvkkXn1+00xZbJbf13m9dEa5VRLLGstCiFq7BSWX4cVa/MzW&#xA;rjUPKl/qC28qWEMMraJaOjR3N9diJm9ZoX4slvBFzejjk1C9F4qXVej3tjpmr6e9reRRXljcAFkc&#xA;B0YV5Kw9wQCCOh3GKsa1L8rvL+q2y2GrXmpajo6uHOk3N7NJbvxIZVlJPqyqpAIWR2GKsnfTNOez&#xA;jsmtYjaRKqxW/BfTRUFFCLSi8R0p0xVJJvy48kXFy9zc6TFcTylWleYvLzK1ILc2YN174qn9raWt&#xA;pbpbWkKW9vGKRwxKERR1oqqABiqrirsVdirsVSSIiLztdCQUN3ptv9VNSS31Wef16L0HH61FU9+X&#xA;tirEvz1/MK68peU4rPSGH+KPMcy6XoKVIKzTEI0+3++g4p/lFcVTTUvLOjy/l4/kKz1COO6i01bC&#xA;xZZVWZJ7ePjBMAG5c1liD/MYqhfyS/MgeffI1vqNzSPWrJjY63BsON1EBycL2WQEOPCpHbFWSQsJ&#xA;POd16f8Ax76fAs5HQtLNKY1+aCNjT/K98VTrFXYq7FXjGpeUIvzK/OC/m1mI3HlDyeiadFbVIjnv&#xA;pEjuZ0cftLSWMPT/AH2FPwsaqsj/ADH/ACN8lecvLR0mGzttEvYWR9P1Szto1ktyjAkBU9LkjLsV&#xA;5U79QMVVPJNnqHkc3/l/UYLq902a9uL/AEvV7aB7hWF45nmhnjgV5InSZnoSvBlK0blUYqmPmby7&#xA;YfmDo8mjanDeWuhLeQS3COpgN/FBSX0ircZo4/W48uSqTx+HYhsVRuveX9Lgt9Q1mCFI9Ris4Uil&#xA;NFRI9Oka6gjH7KoJSS39gxVkWKuxV2KuxV2KpbqeiLdXEd9azvY6nEvBLqMBg8YJIinjbaSOpJps&#xA;y1PFlJJxVLItF1+K6a4ii0aO9dfj1RbSQSFjtvEJOVOP/F+Ko228s23O4udSlbUr67ha2mnlAVFg&#xA;f7UMMQ+GONj16s23Jm4iirwfXfPn5r+UfyytYfLdhLqyvKPqfmW2iF4sQSZ1vILmEByoSZWEUoBV&#xA;oyBswqVXo/5K+YPOfme01rzL5i0xtGtdSukGj6fIjxyehDEE9d1c1rJtvQV47bUxV6TirsVdirsV&#xA;dirsVUrn6s6G2nZaXCtH6ZbiWBFGC0IPTwxV5J5r8y+d7fzRZaNoFxpWrT6dNyW6u2ure5TggM9v&#xA;KYIp4bhvQflIsQ5KCrmMEK2KvPvzx1b6z+dX5YXepRNb2MF1bpPbuQ8cbyXaN6ySoeDxuvEq67/A&#xA;agMCoVei6f8AlP5Yg/Ma6T61eTxy6TDFJC0sfpkQSoskbRoiovKL0d1UHqwYMScVebf840a/ND5j&#xA;/Mm+02H6zZXt79Ys4ifTtkVJbhzNNMFdYkVJV+ypZv2VbiaKvSPI+u+brjXLnQfMd9penXt7O81y&#xA;2nLePc3MpiWT0FmuEgS2dLYJ+7KmURUICn4wq9ZtzbBPStynCGkfBCKJxFONB0oO2KqmKuxVhP5U&#xA;p/uN8wTkfvZ/MmtmQ+PpX8kCf8k4lGKs2xVgWqaXq/mD8yZbKfUHtdA0fT7ac6fE08T3Et69yhlE&#xA;0E8JQxm3XjyVv8mlTiqYaVqOteW4dL0nzVe/paS6MkMfmCOEQIZFJaOO5iDMEZo/supo3E8gv7Sq&#xA;Z+Yphcva6FEaz6g4a4UbhbKFla4L/wCTIKQ/N/Y4qnWKuxV2KuxV2KuxVLfM1zqtr5d1O50iD6zq&#xA;kFrNJZW46ySohKItQRyYigr3xV4VZ/8AOVV3r/mptA8reWp7ya9tmj0uOUcLmG/B4EXsYLJHBGau&#xA;7qx+H3qFVeoeT4LHybLJ5WursLbQ2Nvf2lzN+6jKQxx2l3Rj8A4yokr79ZsVZsrKyhlIZWFVYbgg&#xA;9xireKsT/MDz7P5QgsZYfLer+YjdyOrpo1s1yYUjAJeWn2a8vhB67+GKpv5X8z6P5m0WDWNJlMlr&#xA;NVSjqY5YpEPGSKWNviSRGFGU4qmuKuxV2KsM1Pylpev69crqJ4XdpfWd7bv6cbTPZ20cUkcUcsis&#xA;0cX1xGZvSIavcct1Ur13zHBofmCz07V5IdC0/wCsT3Vpq8ojW3aa5+ts7GWVkiXjEwDAjl6jj9j7&#xA;ar58/OP84vJfniaLynpGi3d7p+hI66f5jt35zqY0VfWSD0+XpK0alj6gLL/LirINQ/NLVP8AAp87&#xA;CT09T1m+vdKkljPOONp9Ctk5KUFSiXFqkmw64qgPyX/OvyP5SmbyDf6Lc6DpeokLJr15KFmDy2yI&#xA;sk8LR0iSR+TqQ7KnPuKtir3by1r669q91Y6aU1TTVu0u5dbt1j+rrNEyOfTkR5EdXUCNQDzG5NVo&#xA;xVTDQPKek+W9TsLDSjzuka5lu5uESyCxlLtHFO6Kpk4zMnptJV24seR+PFWZ4q7FXln5C+etN81W&#xA;3mp7OCezMWszXH1G64ieJLtVZhIqlgp+sRz7V7Yq9PubiG2t5bmduEMCNJK9CaKg5MaDfYDFWMaz&#xA;ouv6m8Os2bR6Zq1oGWyC1aVoHoXhuGP7oh6KSnBuJHwuD8QVeU+YNS1zUfOE9sqajqOr6npvoaT/&#xA;ALj7s6SYtRt4w80StdtBBwVyssjluPxDi2wxV7L5R0yOy05meaS8vmkkhu9QuGLzTm2keFSxIHEf&#xA;DUIoCgk06klVPMVdirsVdirsVdirsVQ8Gm6db3Etzb2sMNzPvPPHGqu5rX42Aq2/jirz/wA+/l3p&#xA;00OreZLue41N7fnexaZeXDraJAsKLcwJxKsqyJCWpy48qV2xVm/lzUdJ1HRLK60lgdPaJBAoNSiq&#xA;AODbmjL0IriqzzL5m0by3pbanq0rRWwdYkEcck0kkshokcccSu7sx2AAxVF6ZqVjqmm2upWEonsb&#xA;2JLi2mAIDxyKGRqMARUHoRXFUg8q26r5l83XFuALOe+gqF+y1zHZQpO47HYIjU/aUjqDirKMVdir&#xA;sVS/XYLFtPlu7m0+tNYxvcQKgpMHRSf3Lj4kc0oCprir5t/5yR8peXNP8jaVqepeZri11W9DGe3h&#xA;RruTVpmVHVWaSaNlt7an7sszBAf2narKsI/JfTNf07R7vUrHTNKs7Bx6l3rmp83uYI1HINHOjIY6&#xA;b09FVblSrEqeCr1qbV9ATTP8Vc3i0i4leWxVrWRY4NQnt49OW+4rJ6wgDWv7oemH5yVDU4nFXj/5&#xA;46L5huY7W/1XR9NaKOETWuqaQjpJcWxXm0rS1dJUq/Ji6Fh1LjmvNV6N+Q3lzy2Pyt1PzJpPmK51&#xA;PUtMRpY1lVrGaw+rxtLLZMY5pWNvcA70fj+0vGQVCr6Ss7Czs0ZLWFIQ7c5OIoXcgDk56s23U74q&#xA;r4q7FXzpJf3P5Z/85D3V5quq2Umh+dHpJbq6R3Fv6rEwSzwhUJVJEKiUkqE5cjWmKvftbtZrvSLu&#xA;3g/v5ImEIrQFwKqrH+ViKN7Yq861zzXJq/5oaF5WvWjg8n6npk11xmUpJdapBOF+pF6ho5IFAkKA&#xA;gncGuKvQ72+tNLtYoYY1MrD0dPsIqKZGRarHGBsoAXc/ZUbmgGKqulWktpp8MEz+rcAFriUdHlcl&#xA;5GA7AuxIHbFUVirsVdirsVdirsVdiqhf3f1Oxubv03m+rxPL6MYq78FLcVH8xpQYq8d/MH/nJPyB&#xA;pwbR9PDeYP0rp8ptbuwMVzatcyI6xWcnBi4kduIZSuwYV70VTa30vXvJFxp8sRf6pqENvFdmNPrE&#xA;S6gqUkS4iQiQrMf7qWKrq/wFXX01CrCfzJa5gL+dni1fy7p8AZfMF9PLJd284d19CGy07UJbKVZF&#xA;kNY5BFH6ZHJVY7qqnXkCa71HWbSTQ9Qh8s2U+mJpUOlzXAmlnMSRXsd3aWkks1ZUsp0VvUZvSrRh&#xA;IFxV6Bca5Y+XY5NH0uKCKz0mITarqmoXPoWlt67Fv307CR5biVmMjA0rXkzgsvJVMLbzFexT2q6p&#xA;bRLZX5VbHVbSUy27NJ/dJKGVGiMtaRn4lY0XkGZVKqf4q7FXYq+XP+ci/IEVx+ZfkmOWCSDyWkL/&#xA;AF+RTI1vbw20huLsDcrCPq4+FVoNthtiqnZXXo+T7LS3laGfVdSV9UExPFH+sxTpJKqDifq8dqbe&#xA;U02kiI7iqrOtait38mNZafCtjZSaYLWOOdlQK8gEdugZhxRkai05fDT7XfFWAS6jbXHkbTLKS2am&#xA;mXwnltfTrK/qyyObbiw5EnTZBKqUp6rRqBUrVVMv+cXfy/uNM8yeera6ikn8vwXVvFp9wxcW956E&#xA;kzQyrQhJl9NlfcEfEMVfTWKuxV2Kvn/8yPKUn5z+ap7LRdOs7aw8ryvY3Hm+8NwZGulPKW1tIreW&#xA;EOsLH4mkNA1ePuqyvyVrvnXyXqml+SPPZgvbO9Bt/Lnmi15rHLIgLLZXaPUpN6an02rRwKfE1Tir&#xA;OvMPknyr5ijMes6bFdqXSRuXJSzx/wB2zFCpJSnwk9O2Kq+ieV9B0RSNMs1hdlCPOxaWZkX7KtNI&#xA;XkYDsC2KppirsVdirsVdirsVdirsVdirDLH8mvywsPNX+KrPy9bQ67zMq3K+pwWRusiQFvRV+/JU&#xA;BrirLrq1tru2ktrmNZreZSksTiqsp2IIOKvPodQsdRGveTvOFvDrOi2DR1vmUyxm0mq0Bu1YuymJ&#xA;4nT1uR3jLPxO7KoHT/y9/JuH8xNEuNGb6prOm2X1/StNsZGSxeGUND9ZAQGNndVo1Hq4ALBgK4qj&#xA;PzG8jeZtb0rzLoumW9jeab5rjQzNeTyW72d4kUcKzqEhuBMgW3ifj8JDL1+KqqpnB5Wt/Kv5SL5c&#xA;EzXP6K0z0IrgijvcolUeMfssZ6GMdQad8VZrirsVSjzdPqUHly9l02Zre7VVpdJGJ3hjLqJZkiba&#xA;RooizqtDUilD0xVg/wCYn5aa1570ixSPz7c6do0UUUs5tIoPTuZIgGFyZYmiNCRzA5cAdwNsVYR5&#xA;C8iWUd2bPyvqD6jc21sZX1C8cR8oXV4rVLfgrLHCJLf43jiIZ1X7XpVxVDD8uddfzxdaPDfwN5cS&#xA;L6xZaM8hS2W9maeKWFJgrTrFH6LxCTgaOQ3Cu2Korzx+X+lXOqyaRrerSaRezpbSfpK1YFXiu34S&#xA;i85qE2vWklglcCmyD02EfJVmvlD8vNf8g+UtRsp/P9zNp6wv9Ru7u2gYWLN/uxDK0pffojNx8Bir&#xA;0LQpr6fRNPmv1KX8ttC92jLwYTNGDICn7J5V27YqjsVdiqQ+R/K6+WPL66QsglCXV7ceqK1YXV3L&#xA;cKWr+1xlAOKpd+benfXPy81qaMD67pcB1bTpNqpd6d/pUDKe3xxAV8CcVZXbzpPbxToCElRXUHrR&#xA;hUVpiqpiqnPcQQBDK4T1HWNK93Y0AGKpVq2qag9+mj6OI/r7Rie6upgXitYGYqrMilS8khVhGnID&#xA;4WJPw0ZVAa5BcaHot3q9x5muLf6lG00t3epbvbUUbCaKKGP4K9fS4v8A5WKp/pl419ptpetE0DXU&#xA;McxgfdkMiBuDe61piqJxV2KuxV2KuxV2KpZ5j0/WL/SJrfRtTOj6maG2vxClyqMP54ZKK6kbUqPG&#xA;uKsO/J78pf8AAEGrz3V/FqWr65NHNe3FtaRWMAWFWEaRwQ/AtDI7EgDr0xViulaXZaHq9zb6Fr8d&#xA;z5+LXkxtLe0e2sb6ODj61qqhXtoplKHdGPFzV1fjsqz/AEnV9du9PgvBa6rPHcxRzxSxPpLxOsi8&#xA;h6bMYHK0P7canFUxg03U9SuLabVEFrp9m6TWuneoZZXlTdJLqQEoeB+JY15AMA3ImgCqa6k2orYz&#xA;NpqQyXyrWCK4Zo4nYGvBnRXZOQ25BWp14npir5v8wfnR+dI1S303T10xtY124ktPL+kaapuAEhNJ&#xA;Lma4nADIDVQQqqwVm2UVKqc6f+VWp6p5nXQPOv5meYbnzc9j+mHs9IuDZWkMDzegTHyWRT+8qo4o&#xA;u3YYqxHWFb8vvNk2mQ6u17fRXJlTTvOGnrd296rNWKeHWYog0bspFWcBVeodqLXFXsHkvUvJXn+5&#xA;nvDa3mheatO4R61pMV5c2U6V/eIWNrLEs8DluaOPhavucVZ23lny+bs3n6PgF2bVbD6wqBZBao/q&#xA;JCGFCFVzyUDod8Vefecta8n+QLpYrGyuvMXnLU4m+oaXc3txdyegnLlJNPeSTC2tY+bku+wq1NuV&#xA;FXlHlayP5g+bLewbXbmzu43eSWLyfp66XZadGFYljqcsXrSsSBGKLRidiVqcVZPeflf5h03zBe6L&#xA;+X35ka8nmfTLaHUpNN1uc3dnMkzsiBmCqgqY6Gsbf0VQHlH86PzivtTa0uY9La/0y7TS/MGi6kGs&#xA;3imbmUniuYRIvpyCJtzGQtPdSyr6Frrf6H5cLb9M+ly9LlJ9W9aleHPj6nCu3PhXvx7Yq8k85ebv&#xA;+ckm80alH5L8qWT+XdOk9O3mvyFluyg+NlDzwHiWBC0Xp3OKplZ/mUnnb8nfM929k2ma/a2t5pWp&#xA;6PMSGh1B4jEke4DcZHkXjUe3UYq9TtoFt7eKBSSsSKik9SFFN8VYtq9jrmr6VqF1YXDJfetLBp0R&#xA;vJrCG3FvK0LTM8EcplYtGZOMiMpFF2FSVUm/Mjzlq1tosEml6VcCeaaOXRr6YwiGW4tq3fovEZPX&#xA;WOeCCReXCoB6A0xVMPKHmzTn8q3/AJz1xW0CO7uJJdQt9SZYnszbcbT0XJPjByX+blUD4sVSCy/5&#xA;yB0fzHqb6X+X+iah5ruYyBLexoLLT4q/7+urijJ02/dmvauKvSbG4u0tLVdWa3h1G4qphhcmMyUZ&#xA;zHEXCs/FFO/EVoTQdAqi+aczHyHMAMUruAagGn0Yq3irsVdirsVdirsVSXzjBLPoM8UNne307bQ2&#xA;2m3bafOzEEVFystvwUdTV/oJoMVfPH5ZeSvzS0TzmunagDpH+LV1K4u7qf0bnURFA6GeeeWKqNOz&#xA;XSJA/PioLtw+KjKvpy1tbe0tYbW3QR29uixQxjoqIAqgV8AMVVcVY952h1O/0iXRdKdY9Q1GGcJI&#xA;32VSOMmrVB+FpWjjb2Y4q8c8p/lvqXkn8wvy9125tpruyudGfSdVu5RzltdWu5Jrx5ZtyQJprhog&#xA;24B2J3GKvQfzI/Ka68061YeY9B8w3PlbzNY272Q1O2jEwktJDyMUkZeKvFiSp5bE160oq+bNW8ma&#xA;ld/mHJ5c0iKbzL5hu7+4sYtY1m4mIEenxxm6u5pYnWVh60joE5cFCU4SO1cVZlrnkz82/wAtbjR/&#xA;Nz/U9Vt9BEduJdOMwlWzYgS2VwJ+UksMtaIzO3CTiRwFaqvobUPOuhWXkmXzkZhJosdj+kklGxeI&#xA;x+ogX/KeoAHicVfPWgfl3+b/AJ9sdT8ySyWOnDzGTJdPftMZLmNGDQQRfV6SR2kPEKv7yj/bKt8J&#xA;xVh/lLydqLfmKnl68a48m+ZLW8OmXmqaXPMY/WntZrqxnjeV3kdZfqjI0TycWDLwCUYYq+lvy1/K&#xA;2Tyle6prWr65ceZfM+seml7q9wgh/cwCkcUcQaQIB3+Lfbpiry7zD+V+vec/NH5meZtPhmsBMLay&#xA;8tSCiNdahpjRhpqGg9IywekHbbixPbFXrvPWf0F/hz6wv6V9b9HfXamnpfV/rPOn2/7n91yrXl8V&#xA;cVZNq0+pwWEsmmWiXt8B+4t5ZfQjZv8ALl4yFR8kb5Yq8T8lak/nL8xdUI05tMkkk0+fzbZchKkV&#xA;/oFzdx+mJQFDGWb6o6NT4kjcdsVe36jf22n2M97dMVgt0LyEAsxA7Ko3Zj0VRuTsMVeZfmD59ufJ&#xA;GmS6rrNpaafoOtSG3+rXFxPJdLcTRmrCK2triJfgRmdBIVLb8gSaqsa8lfm3+W2o6Nbtq3nOG11K&#xA;6M0V1b3jzSSQmain05p5JY0JXl8aUj+KgRAOOKsP886Zd/m5+dEXkXS7l4/JWmsuqalPDshAgit2&#xA;ZK/C3L0gkLbj4y4qpxVnOka15g8m+boPLHlXR47jyPBK0M8kCEIkrF5RHC/FWlmEARWALEt8Rr8R&#xA;VVOfJvmpfO351+Ybqzf1dB8mWQ0m0kG8cl7eSh7qVT0PEWvp7dhX9rFWU6/5U0DS9O1rX7K39DVw&#xA;8urrfFnklF1HEoorMWZY5FhVHiSisu1N8VZfirsVdirsVdirsVdiq30YvVM3BfVK8DJQcuINeNet&#xA;K4quxV2KpTekR+ZtLkf4Ukt7y2Rj0MrtBKqfMxwSN/sTiqbYq8p8yebvL+iQ6lZ22vau+m6E6x62&#xA;1tPYkWfrklYGub1frLyEMSBHIzqB9pTQFV6F5WsdAsvL1hD5fVF0ZolmsmjJYOk3731S7Es7SF+b&#xA;MxqxNTviqM1HT7TUdPudPvE9W0vInguI6kco5FKsKjxBxV4jDp6XHk7Sfy6kZjZJ5yn0Z40Yh206&#xA;xkn1WNDx3oIIY026CmKvc7eCG3gjt4EWKCFVjijUUVUUUVQB0AAxVJvO1p5auPLN8/mWi6RaJ9bn&#xA;uAzpJCbf94s0Tx0kSRCtUKfFXpirDfLPmfSNbn0nT77WtWVdV/0zQo7mbT+N8lk6uwW401eVYnVf&#xA;URpAW6fGvLFXp2KsZ+sp/i71fST0/X/R3P8Aa9b6p9b59f5Pgr9FO+KpHf8A5jSaHq8OiKT5hmvj&#xA;cfoy5jKJJJNB6iyWjCGP02eOdVjLgKqqTzoY2JVRPlXSdE/L7Qbi+1+8t4NW1q7kv9bv6lUku7hj&#xA;IyR1q3pR8jxHQCrUFTiqH/PT8wdO8j+QLnVbqMzXc0scGlQK3EteA+rE5NGosRi9Q7b8ad8VfLmu&#xA;+avz98+QNpuvvCbLUlE1poN1bW0LSqP3i/VkZBOGC7q/qKxU7NxJxVX8i/kr5P1PUYtC80Wus6T5&#xA;lkfnHbJLD9Xnt6lJDGGhZopIB+8IaV14qatU4qy/yIb3yt5NXXvMd5Dp8uvxWkFnYyy8WvYtPto7&#xA;SG4vJ1IcadCic/Tj3m5casHRGVRvmz83fOevWEfkP8qtG1BI5YQLnzLcW8kE0sTGklxbxKoaNXNS&#xA;ZKVHRVU0xV6V+Sfl3yr+XXlEeXxqIvPMEj/XdZijimN0ZZVCilrw+sCJVTipKb0J2NRirNPT1PzB&#xA;dwNc2z6foNtIk6wT0FzdyxMHhLoCfRhRgH4t8bMAGCqCHVZHirsVdirsVdirsVdirsVdirsVQGt6&#xA;W2o2PpQzfVryF1nsrrjy9KePdGK1Xkp+y61HJSVqK4q8988efpjHPozxy2OoWUcdzqOnpNHFLfIs&#xA;0fq2thO5j9Xnb+o/wFX+wDxJYBVOZfzE8rReX1OmRRi+uI+EGiyhIWianpoL0Cq20Q40LPtx2Xka&#xA;KVWR+U9Lj0nyto2lRTi6j0+xtrRLlaUkEESxhxSo+LjXFU1xV45p9uI/MWm6zUtbt581RARSg9TT&#xA;brTya17XEXHFXseKpD570WPW/J+q6ZJNHbi4gbjNMeMSuhDp6h/k5KOXtiqR3H5k+ULny/JPe2zT&#xA;3ixMJvL6LHNeN2dYELBJ4+QoJI2KHxxVLPJPne/e0g8u23PVtbFjBdwtLOk/1YSs6PDf3MXJedsV&#xA;XluXflQBqFsVZp/hqP8AQH6L+sP9Y5fWP0hxX1Prnqev9Y4/Zr63x8Ps/s/Z2xV4TP5a8zeVtXu/&#xA;OenX11Lo14l/rDadZpALhdGa9aeeG2kuY7gxPS5SdhG0bScmAYGNcVez3WpaXLdaR5nZkl0G8sJI&#xA;xeuPgiS7ME8Mj8qcIpBHR2PQ8K7VOKvF/wA59C/NXT/Msd5pmpf4h8opKdTXTHgtLu/00sGBliac&#xA;JL6fIkRyLKCvTtUqoTR9S1rSHmh0vTZ08y3oDalq13FKkgLMio0/1yWW6LmSSMRxvMYixU+oic1Z&#xA;VkS6HfaBoGs6nr+vXuoxCyu5LixiClBC8LB1DOrH1GDMiOnpitPhptirEfNl95M1W5vIr+0kh1O7&#xA;0SS/0DWr65nM11ztTIsQ+rPaRWpjZeMUSwvHXlspejKq3/OJfnPUbzyt5ssdQ1P1byCa1ltWnlX6&#xA;yRMv1chZZTU7pGicjxViPHFXo83lBPMnmvQfMH1uRba4gmk0a5s5pVv7GKNVPqPctPcpOsjNxeMp&#xA;wHIBgx3xV6laWs8A/e3k118IWsoiG46t+6jj3Pft7YqiMVdirsVSi616R76bTdJtxfX9vx+tMz+n&#xA;b25cclWaUBzzZfiCIrNShbirA4qqJb+Z+DepfWXM048bOWg8Qa3XxfhirDp/zl8taR5pi8sa3fQt&#xA;fzMyQzwQ3MSM6niVAlRom4t8B9KeRuWxUb0VZZpPmrR9W1nVNKsJRPNpC2rXciFSlbyMzRBSDU/u&#xA;uLV6fFsetFU4xV2KuxV2KsK80eS08yzX0Vvql3oWrW83OC/sivNoLiCFHV45FZHika2A6fajqDti&#xA;qHFvaeQbO1vdYuGvNE021jiuNfvpA01vLJLJ60zoqE/vmliT4BsB8VFXFWS2cVrbazH+jyi2WpW8&#xA;t1IkQHpNJG8XGZOO1ZFmPI/tUB8aqqvmfX7Ty95e1HW7s/6Pp9vJOy1oXKLVUWv7TtRV9zir46Vv&#xA;MVj+Wujfma3m27uEXzIZV0IvdR6cZg5uFPpnmiv60bvIzLwJYitd2VfZuj6rZavpVnqti/q2V/DH&#xA;cW0nSscqh1qOxocVSy4fTpNRv9R1Vkjs9CAMZnIEUXGITy3e/wAOyvxDn7PFqEVbFWP3GlxefdKu&#xA;bnS7mXSNK1KOOax1uxkX1bl0kSSG4WN0+Gio0bcxV1anQDFUV5a8nx+XbnT7VtSudW1eVnuL/U7z&#xA;gZZYIITAsQChVijRp4yqIOtSakk4qzTFXnXlLSdN82aLPa6vWeDSov8ADlzaxTSw/vLQKt9z9J0Y&#xA;LNIFUoSQURTuGxVE6r5i1e08rHXPK0WnzeXNEguFvdMlSQzSppskkFzBbTJIsMRjEDKhZHVjt8I3&#xA;xVI4fL/l3VvMVxc6fcfUfK0sLJFLpSRfVmu+KRSx3J4yRxPDTZWTizMankpXFWC+a7698s+e9Ds9&#xA;KsLnV7CzNxMYLK3mg9GGasNsrRTSGIMeKCsSoZWQyUYmmKqvmrWtT18afohUWVjdSGW7mWWKchYJ&#xA;CjubgPwD+oEShA4sYyzemzUVea/nxrenw2q22kllttPSy0m0lqwZZrIm4fhzCsVjDrG3VldaMa4q&#xA;zXyB+Qj+WGs/OUdzFf6Zqa6Zc6fo6h0vOd3x9WJbjnHx9OOd+BDfFQF6AGqr2+7XyYbS3t7bUH0+&#xA;S3kg5WULuLySGAnjZNA1bj0mrT0lX5DFWQ+WrW7tdBsbe7MnrxxAFZn9WVF/Yjklq3qOi0VnqeRF&#xA;e+KpliqUXN3eX+ozabYS/V4bQL+kb1QGkWR15pBCGDIH4FXdmBopWgJbkirAfzU8xf4YvNF0nT2l&#xA;iu9Yh1O4Opz3F1K0UWlWn1t4oz6oo81AF5HiKE8W6Yqi/wAvNcnsNPMMcepanoMd5cWtxr17Fao3&#xA;1qOdkuZ6xSLLJAbgMvN4QV3LMV3Cr0O7vrS0WM3M0cJmkWG3EjqnqSv9iNORFXamwxV4z5r/ACs/&#xA;OrzkZb3VPNum6WqSGXTfLkWnx31nGB9j1p7gBnen2m9NhWtNsVY5+SF3q+l/nXrWi+a7SLSfNFxp&#xA;vC5itFCWd/6EiNDdQIoCg+l6laAD2U1UKvpDFXYq7FXYql2pafcvPHf6e6xahCpSklfSmiJr6UtN&#xA;xvujjdD4gsrKsF/Me1/MTzV5dvfKtnoMdjbakottQ1aS6gnVbdj+8NrDWNnYqKAyenSteuKsw8te&#xA;X20u1tkmKlrO1isbOFGZ0gt4VVeIdgpdnKAu/Fa0UU+HFXz1/wA5FfmtF5k1Oz8g+VJrDUoFuEOs&#xA;fWLuGC1nmUjhbNK01v8ACp3bi+7UFQV3Ve2av5Ngk/Kyby7FpekNPHpxENhJbhdMF4sfKoi5Dgnq&#xA;1IblVetScVeP/wDONn5twac0n5f+Z7mztJ453/QkkV5DcwVduRtFlWWau5/d1diTUcq8Rir3Hzp5&#xA;VOvaRqdlG1BqtjJp17EzcA8MiuFZXAYpJEZGKmhBqQw6FVWP+Qm/MjQ/L1j5c1Ly/DcHS4EsrLVY&#xA;7uGGCWC3URxNPEPWkhcoo5CMSD9WKs00zTp4JJru8mE9/c8RK6jjGiJXhFGu54ryJqTUkk+ACqPx&#xA;V8/eY/JV1F+afmN/q7y2Gppb3P1X65f2EN0JQRIZbvT25wsrpxT1kaNqGvA8SVUfr195pv8Ayvb+&#xA;QvLGg2Pliw1AXGnW8VzePG1xFCvO4itDHbyrSSNmJmatdx9o1CqZeRNQPleKH8vNIaLUvPE7Pe67&#xA;JHLNc2WnIwWMS3EknAkrEkapAgTk3QRqahVPbmy8ieV7a8s7qOa9sLsTfpKRPXvpvrlwwmlEyQ+p&#xA;JG9zwUpRVWqcRQlQVXjXn6y8zy+R/wDFmmvc6pd6aLyHzNZTRRxypBqEMcEgcJ6g9RUtbd5UFeAF&#xA;a0NSqqeX/wAh9U/Mu48t+Yta1KBPI6WkV5BZW7O13cT3h+tX4lPFVjZ7qR1dwxPFQB0qFX0XZ+WI&#xA;YLu1uJ724vFsFK2FtN6CQwEqYy6JBFDVvTPAFq8RXjSpqqnOKuxV2KvIZ/zBu/IPmjzLb63o2pap&#xA;pupXxvbHUdLtjdcZXgijFnKilSrelHGY3OzVYdVOKsl1ax1HWPKupavqsklpHPatdWemTIiPbW0l&#xA;kvrW9wCrFJ+TSqzo1VrsabYqhtS83+X9G8p3+j+cKadepazxXUEavbpfl0b1JLCSMfG1wSW4oTIj&#xA;H4hXcqoTyxqy6bpPli61mO5tNEEs9npsuqmk8BljX6mbl3oQQFmt45HoWDJX4n3VQX5s+Z/OZ8+e&#xA;UPI3l/Vl8uW/mJbmW410wJcOxtl5i3hWT4AxA3/1l+RVSbz75fv9I/Mb8obyfVX1LXo7670+61SR&#xA;I4Zrm1dOdHSEKtI0Zk2H7VTucVe54q7FXYq7FXYq7FWB/miNT1iXRvI+nXMlkfMckzaveQnjLHpV&#xA;oim7EbfstK8sUIam3PFU3X8s/wAvl8vf4dHl6x/QoTh9TMCEbCnLkRz59+deVd61xV4/FpGu3U9t&#xA;+Tt5eXMvlu21+4tbm+5t60mjW+nxalBYSTD4vi+srGxqDwFNumKvX9Q/LLyBqHl8+XrjQLL9E+mY&#xA;47eOBI/TBFOUTKAyP/lKa174ql/5X3WrW1rqnlTWbqS+1HyxdC0iv5t5bmxljWaymkb9p/Sf03Pd&#xA;kOKs2xV2KuxVL9V0S01F4Jy8ltfWvL6pfW5CzRh6c1BYMrI1ByR1ZTQEioFFWA/mjpP5ly2FjZ+V&#xA;J5L7WbuRoY9QlMNta6cjRtHLevwCyPNwkKxgVAqWC8gMVYGvli48p/lLf6V5etLiS78y/VJx5qa4&#xA;RbrU7q5v7eERtGayxLcRzsYhVqISXo5bFWS6d+V3mfyHoGo+YtL1pb3X4ree7u9MNkklnctye5kt&#xA;4gAbpTIzsgaN9/h+CgChV6H9R1LTNQk1LTrMT2eopGdS0pGjSVJ40EazQlykTVjVY5FZlFFUqagh&#xA;lVPy9p+qW+tSm3tTo3liK19ODRSlooN5JO00tzH9WMhUMHowL7tvxH2mVQXmv82PKnl+9/RnrfpD&#xA;Wd66fbMnJOIBPquzKqUBBK7vTcKcVSzy3501DzlNJFpPmrQ7SaLebTLBWv7yOmx5SXD221dt7X6c&#xA;VTp/K3nYLWDzrc+oOgnsbCSP/ZLHFCx+hxiqSX/n3zb5KurcefLW1uPLtxIsH+LNMEkUVvJIwSP6&#xA;9aStK0KOTT1UlZQaVpXFWcXul+vOt7azta3yp6YnQBkeOvIJLGdnUNuOjCp4svI1VUm0m+u2VdUu&#xA;0nt0dXW2t4jAjlW5L6vKSZnAIBoCoPcEbYqmmKoPWtNh1TSLzTpo4pY7qF4ilxGs0RLKQOcT1VwD&#xA;vQ4q+LtQ8t+ZPK3m0+WtSdIdf0O6tNV0q809WW3uoyxETLagenHKsoRR6ca1X1FPL4SFXp35HeXN&#xA;S1nzhpd7qA9aPyNbXK6nqLEySXfmLVPiuw8p5eq1rAywuSTxZRT4aYq+j8VdirsVdirsVdirFJI6&#xA;/mrBI4+xoUywE/5d5EZaf8BHX6MVTDzF548m+WmiTzBrdlpck4rDHdTxxO4H7SqxDEbdaUxVVk1X&#xA;ynBph8xSXdjHphpdnVy8IgPJBEJvXrxNYwE5cum2KrPLvnPyl5lSV/L+sWeqiA0mFpMkpSvTkFJI&#xA;r74qlulx8PzS8yFQQsmjaK7daF/rOqIT4V4oo+7FWV4q7FXYq7FXYq8W/MC+GhWmhWGpqIbvQwP0&#xA;Teyg+hcvZ3Nrc2oMpHFPXhs3imJI9N2FfgZWKqYflbrHljzHL5i88XGrNNL+kmSKaS7khitrBI0a&#xA;1haJZFhVeLVeoIL8q1IxVT17V/OGk6jc+cLfXL+40qGZ3l0CbTXXT2sI9uMc5iSaKYxj1BM59Mt8&#xA;JPDfFUts/wA29Z806TpFqLHUba0v4Q2v+YNNiWGztJWYB7YXs7BIkhDUlmTmwI4gBtwqyfUvyK8j&#xA;elZT+X7CPR9Zs7q3uYNagkkF0qxzLJNWQlzKXjDLxkqu+KsM/wCcsdO0vSfLOm+ebBxpvnDTNQgj&#xA;03U4AEnlDqxaF2G7qFUsAfAjoxqq9t0K7vLzRNPu72H6ve3FtDLcwHYxyvGGdP8AYsSMVYT+fPmH&#xA;RtO/LbWNLvKXGpeYLaXTNF0xBznuLy5X04vSj3J9N3Vye1PGmKvH/JP5j/mz+Vn6R0Hzno1xq3ln&#xA;y8kZN+qlZIrV2WNHtpCOE0aswXhX4dhVVU4q9s8p/nZ+WPmiFG07XraKdzxFpeOLabl3VVlKiSlf&#xA;91lh74qzdWVlDKQysKqw3BB7jFWOecvzE8oeTrP6xr2oR27MeMNsCDNI9KhVSo3PYtQe+KvDdL8t&#xA;fmX+ZnnrUPN0dtL5U0m+jS0tdVuFKXcNiiMhFlE4ST15UlcGZgqLzbhzopCr6B8r+WNE8r6FaaHo&#xA;lstrp1mvGKMbkkmrO7HdnZjVmPU4qmuKuxV2KuxV2KuxVivmiRNL80eX9elPG1pd6TdvQ0VbxUni&#xA;dqf8XWSRr7v74q8x/L/8k/K3njTD58/MKBtb1/zSi6glu88yRWlnOOVrDEsTRnaHjuenQdCSqzeX&#xA;8jPIkvka18jypdP5btLw30Vp65DFmZ29JpAA5j5Sluta98VYV5z/ACf8t/l9PY+f/IELaTqGgyxP&#xA;qmmxyySRXmnSSrHcqyyu5BCNyrWm3TlQhV6d5QAvdZ8y64KGG6vRYWbj9qDTU9B/uuzcD5YqyjFX&#xA;Yq7FXYq7FVO5tba6ge3uoknt5BSSGVQ6MPBlaoOKpBcflz5JmvI76LSYbHUIdo77T+VjcUpQAy2x&#xA;idlH8rEj2xVXm8n6XdQmC/mvL63ZfTe3uLqcxOlKFJYlZElVh9oSBq4q15e8i+UfLk9zPoelw6e9&#xA;3/fLDyCAbfDHGSUjU0FVQAGg8MVTXT7C10+wt7C0Upa2sawwIzNIVRBxUcnLMaAdziqjqmg6Jqxt&#xA;zqmn21/9Uk9a1+tRJMIpR0kjDhuLjsw3xVE3dpBd2strOC0MylJArMhofBkKsPmDirGPLn5VeQPL&#xA;mqNq2laQi6oRxF/cSz3dwikEFY5bp5njFDSikYqye8s7S9tZrS8gjubS4Rop7eZVkjkRhRkdGBVl&#xA;I2IOKsJvfyO/K661jTNWGg29vc6UCkEduoigeMkn05oAPSkWrHqv4Yqi5vye/K+U7eWbCAElittE&#xA;LdamgJ4w+mO2Kpjon5feRdCn+s6P5f06wuq1+s29rEkv/IwLz/HFU/xV2KuxV2KuxV2KuxV2Kpf5&#xA;g0WDWtGutMmYxidR6U6gFopkYPDMgO3OKVVdfcYq8n/5x/8AJ1ppsuuHWbVV84aLfDT/AFDIzSxa&#xA;dFaQxWccZqD9XaNSUqPi69sVeqJ5o0N7lIFuCTJM1skvpyiBplpVBPx9InkwUfFu3wj4gRiryj87&#xA;PJUN75k8s/4ahWHzbrN5Lb38/wATiXSzA31j62OSl4Y39Oinp0XegxV69oukWmj6TaaXaBvq1nEs&#xA;MZc8nYKKFnb9pmO7Hud8VRuKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksfj1TXdWupv0Mbe10&#xA;21leBr67je4NxLE3CVYYo5IOKIwK+oz7sDRaUYqrvK2u3+ozarZX8DJcaTdfVTdrBLbwXIMayepC&#xA;kpc0BYqaOw2ry3oFU+xVjepanr9x5oOgaerWEKWK3zatLaSXEEjNM0Rt0k5xRrInFXZTyJVug64q&#xA;ibDVtTg1VdI1pYjcTo0thfWyukNwE/vIzG7SGKVAQePNuS1ZTswVVO8VdirsVdirsVdiryn8+YdN&#xA;stCbVUu5tJ1eVVjg1GG1nnika2lS4ghne3jleFvUWsUm1PiFaEgqsQ1T86LmT8t1vINI9Hy/c6ld&#xA;eX7aFeJuY1j0wy20RHIqrLdq0TSdkTkNyGxVn35J22jzeXINUt55dRv1t47ObU5bW4tIyFrJJFbL&#xA;dRwSunquXkl4/vHJ32Coq9HxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVRvZJY7OeSEVlSN2j&#xA;FK1YKSNvniqX+UYbaHypo0Vq3O3SxthC/dlES0Y/PrirDPzn85T2Fppfk3R5inmbzlcLp1o8Z+O2&#xA;tXYLdXe26+nEx4nrXcfZOKsh/Mew1SbyFqsehsYdVs4FvNLEfe4sXW5hjoOod4QpHcGmKrvy389a&#xA;Z558m6d5ksCFW7jpc29amG4T4ZYm/wBVunitD3xVFeahGE0qatLmHU7U2pAqeUrGGX/p3lkr7Yqn&#xA;mKuxV2KuxV2KoLVtb0bR7ZbrV7+2062Z1jWe7mjgjLt9lA0hUcj2GKvPfzC8r+Y9Z82fX0tZdR0O&#xA;20K4GiJDLDwttakMnG7eJ5ImdhFwELry4GtKE1xV163loa5dWqrHL5el8vyalFZQim7xw2aeio6N&#xA;9WREQAV+Pbriqv5E8t6/5e8161dzw/ozyvNYWr3McssPoyarHzN3eW8cTssEUiUL8gpZviIxVnul&#xA;6xpOr2gvdKvbfULNiVW5tZUmiLLsQHjLLUd8VReKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKNa&#xA;8xWuhsbnViLfRyoLajQmOFwaEXBFfTRgRxkPw9QxHw8lWP8A5fecPKV1JN5X0nW7DU201S+nCyuo&#xA;bjlYE/ul/dM9Db1ETA70Ct+1irwuw1bX/M3/ADld5hu7JYZNS8tWl1BoltdAtCPqoW3ZNnQj1PWl&#xA;YHlszeGKvTfK2ufnbd+c9f06/wDqJ07TXthaoVj9VVuXBDTqhAI+rlnKxyVDKqgsCTirAP8AnGHU&#xA;pdG/Nr8wvIUJP6Lt7m7ubaP9mNrK8+qniP8ALSVK/wCqMVer6p+aH5ev5xjsrvzDYxDQXb/RhMjz&#xA;TahKhi4JEnJ29GKR1IAPJ3oN0IxVnOl3l3eRvcywG2t3P+iRSqVmKD/dkqn7HPshHID7VGJVVUbi&#xA;rsVdirsVeL6R5uTUvziksvN9tHD9RF7p2hSTKpg9WSaJlVX5yRmaaJCFPwvxXiVBPxqsi1jzb5j8&#xA;k6jrM+p6G9/5Zmkik0jULO5tIkt0FtFF9VlgupYGX95EzL6XPlyoF5bYq89t/MF9Z+RtN/M1rAvL&#xA;e69LNJpCMWA02Z6JbRuqciYprWKYfDu4IpQ0Cr0fQPMvmHznrGm31robWHlFYJjd3l5c2lx9c9VA&#xA;EhhhtJblCqyAMZHIOxWm5GKsXtvOBt/zsm07yjbxz6NqbWlrrDQoFga8tFuTdOkhaOPnHA8XMx82&#xA;Ji4FerKq9pxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVL9Z1Oeyihjs7dbvULuQw2du8hhjZwjSEyS&#xA;hJSiKqGrBG7AAkjFWNaN5m1jzTo00UKppk36Sm0uTUrR1u4WjgiMklxaNNGqv8amH40PFw1Q3HdV&#xA;IfLHkvyta6pPaGOxuNQ/SM9rLcW0IgvRDHD68U0joqSw3ETFU9WNgrghurLRV5RPpup/l5/zlNp2&#xA;qXspuNM8wyJZzXxUIXa+iMMTS8RwV2ni5MejsjkBRsqr1rSfPGlWHmLzHrV0Qlje2+pXSSgUDR+W&#xA;JhZXHEn7VTJyFMVeV/8AOLvkTV9Wv9e8364sltba3SdokJjN1HcSySFCwIYQl15Ov7Y4b8OSsq9V&#xA;0/yxY3Xmezn0i9s9Kv1sXuro2NtF9ZWf1UQQspj9OOCL4kZH/eOa7goTiqeXnnbW49d0vQrXTbWS&#xA;+vbWS5eS6untopJbd/Tnt7UrDOZHShfeg40/mqFWVabfw6hYw3kIZY5l5cHFHRujI4qaMjAqw7HF&#xA;UTirsVdirBPzE/LryzrEUmrnQ7G41hpLcXd+9jHd3LWqSKJQE2aQ+kCtK8uOy1NBirHH8i6CsjQ+&#xA;XPrF1fTGU2M720plslnJqgvrgGO1hRTxpEgn4/ZJapxVmFz+W+jv+XK+SIqJaRWyxQSAFAJo2Eiy&#xA;FY2UgGUcmVWGxIBGKsQh8j+V5JQ3mSC4t72N+WpQi1k9W+YChEs9mqQXyPsaiESHYPRqrirJPy1/&#xA;L7QdC0211JtFsbXzC0ckUuoQ2UVpO0JkIi5IhcxFognJOWx2OKs5xV2KuxV2KuxV2KuxV2KpbfeZ&#xA;fLlhcNb32q2dpcIAzwz3EUbhW6EqzA0OKphFNFNEksLrJFIAySIQysp3BBGxGKrsVdirsVS3WrW7&#xA;ZrS+sk9W5sJTIbeoUzROjRyRqzUVW+IOtdiygEqCSFUj8z6/5el0Zhc3N1pdwCfqrC0ufrKzShoq&#xA;RwCPnKX9RkogNa/Ca0IVfPPmT/nJe58oaHf+V9Dsbc6vx9C1v4ZIvSslCKpAt4o2SqPzZUaZ2DGs&#xA;m9VxViPkjyV+bnm/yzqGu6lrN6bPUDG2mwakZ5l1GeFyUMNxISlvKkjUgdiObnhupbFWd6/pOsav&#xA;5E8n6TZ26Jqc3+JI9RSZ/SiijTWIkvmnlBHGEMf3rK1eNSN8Vef+drr85Pys822WvJrt7e6ZMY1s&#xA;r1o5rWwuFgUVtGs2KokSioRQACnxJ7KvU/L3562H5i6xYymH9BvY8LidYwuoXEUkLcmnhhEMc/8A&#xA;dqUZo/UX02JkVeNcVe62uvaYdOt4tBhk1E+mFsvTjkEJHGqmS5ZfTRabkk8j2DGgKqZ6PYPYabDa&#xA;ySetOvJ7iYDiHmlYySuFqaBpGY0rtiqMxV2KuxVD3+padp1v9Y1C6hs7eoX1riRYk5HoOTkCpxVT&#xA;0/WdH1EyDT763vDDQSi3lSXgT05cCaV98VRmKuxV2KuxV2KuxV2KuxV2KuxV2Ksf8iWGp2Plm2tt&#xA;Uso7HUY2kF0sU31j1nDkfWXl4oWe4A9RqitWocVUb7T4/Lt4mr6Wgg06aVU1qwT4YSszBfriJ9lJ&#xA;ImPKUinJORarKtFW085aVBD5jvbi69S00e/WyYRqXb1TbW7fV4gtTJI00/AKN+Z49cVQlxceaZ4U&#xA;vNV1BvLsM7cLPStPihu79mILKsksqXMTPxUsyRRUSh/eMByxVJdX138z/K0DanJb2+uaE7xRGPUp&#xA;47PULZppViEs0ljbzWzQqWHLihZR8VaA4qj/AC3+a9pf6xeaDr2my+X9esOLXVpNIk0Yjk2jlWZK&#xA;con/AN+ceINFYqxC4qnkiJN55jF2PhtdP9XSVY7NLJK8d46j+aNBAtewkI/aOKviH8xJfI+u/mPc&#xA;6b+XuiRwQLcyetq00st19Yk5UkkjiuJDAqO5IjDfaJWhWoGKvT7LT9U8qaJp3mjXPM+s3HONZtJ0&#xA;23u5WNwkaeosn7wnjAkcZqFXdOPwIx9PFWYa1rEmi6RdeYzpk1ve6wFh1a2s7pluNPXUmWSdrXkS&#xA;qu83D1+IFX+KqgE4q8589eTtbl8qxappvmm91PQdU+KBb+ZpYecfI+jcQyEwH0irVcqTyDAFWVI5&#xA;VV//ADihqPkBfPK6Xqehfo7zxbJOunags9xwlKoy3EL27yMiyhOR6cSAdlIFVX055ans9Og18GRY&#xA;NFsNRm+qSE0iSMwxS3AVunFLp5lp+zTj2pirFNc/OySK61iDy9oEmqp5fhM+tXVzcCyhtxQssbcY&#xA;7mUyuB8MIj9SuzKuKplbn8y7kfpDX55NHtJgHh07QVt7yW2UgGl213byvM69D9XTr+yRuVUc2u63&#xA;oVtHqN/dRa95YcBpdWgRI7m1iNP38yxn0Z4RuXeIIUG/BhUhVH3nmvTrLWNRt5p+ZttLi1OK2Sha&#xA;SISTrI0O/wAZqqLt4r44qq6FoDRSDV9WC3OvzgmSZvjW2V9/q1tX7EaCikqAZCOTb4qp65Y6nP5k&#xA;0G4srGNobd5mvdUM3pywx8OIgEXBjMk3LccgFZVbqBRVkGKuxV2KuxV2KuxVJPPHmK28t+T9Y125&#xA;lMMen2kswkADNzCkRhQ2xZnIAB2rirybzB+d/mi40/y7baVZWemahq9pbXF9Pql7BpsUck0atIkf&#xA;1o+qyKxKqUjZn6rQAFlXqei+XrO40yCXWtNtJtQZT6zmV9RQjsY57pfVKMKGhG3TfriqtL5emtF9&#xA;XQbp7OZd1s5WeaycD9gxMSYh7wlaHchvslV2lebtM1CJwolF3byNBfWscclwYJ42CNHI0Kuo6hlr&#xA;9pSG6YqmNlqun3rOltMGmioZoGBSVK9OcThXSvbkMVQnm1gvlXWWJAC2NyST02hbrXFWN6B5L0rR&#xA;dU0nQLBXfTdFhn1S4knPOWfUbyQxx3Ez0AZ6fWCdqVK0A4jFU+0mGS+SfWvUInvkI01m+JYbb/dR&#xA;VTtWXaV9q7hTUKMVYTbeTPzBj8qSaJ5084Wd7pktxXUdTe39G5ktOSn6ushkSKP1OPEsVY0Y03oc&#xA;VSXV7fXPMv8Azklo01jpFxBoXljT7mDWNYngdLe8W8hbjbxswCTIGkWnvyPQAlV6Qmlx3+kX+jzI&#xA;k82myy29jcTqspjLwiS3cGQOeccVwqcjuaE98VfFH5c+V4bTyzr02qu+n395qCaJ6p2NtaWqmfWZ&#xA;JVoeQihMQAG/qMlNyMVexa/qNvqXmbS1eFbcaUzahNGF5fV+RtPXhpv8QfS7iJEFOVB/MAVWaeaI&#xA;bK40XzXZW8Jtpr2CO20tpN1rKpiROW3prJI4DMf2a18cVefPfWs/kvV9Gtnjs39SJbadiVFrIkov&#xA;rSRq0VFa7vbYNJt8Icn7LYqxPyx5UhuP+cifJ91pVowsdWtYdUu7aYFjC8MEkGoRz1H2xc28iuG/&#xA;aNO+KvrZ7K0k1az0uCJItO0qFbo2ka8IxIzlLSiLRSqelK3GmzBG6gYq8a/J/R7+38pedvIHnO1u&#xA;tFvhfXF1L5jljMcFz9aZRHdR3Eg9J5FkQMATuKdfioq9EPl781bnzJoeoT+aLKPRrEH9KWFlaNGt&#xA;7XoT6kkzJ9D4qyP6tHp2sqIxSw1guktt1RbsK0pkVegE0av6nYsAaVZiVWEXnk3SmTTJJC8N75M1&#xA;y3stMuEPBWsbu5tpI7NgRR4khuI41H80Y3rWqr1DFUDPremQ3DWxlMtzHvLBAjzyIKcgZEiV2So6&#xA;cqV7Yql195mjlvotF0l1/TVwryBLmORBBDGQrTyRN6bstWARRTmehADMqqvH5W05wG1JpNWmP23v&#xA;W9SMnxW3AW3T/YRjFWN/mHbahoehyaj5Xg0/T54QZJrm5vm0u3UgjjVVRreV3qQPWHEd+uKsJtv+&#xA;cg72Pynp+p6tYpbSfpS0stVv7WWG9tI7aWT97IJrZ5YuQUU+18QqyjYqqr3LFXYq8p/5yW8xy6V+&#xA;W5sLOAXWra9fWun6ZbfCxacyiZTwYHkP3NKeJGKpF5H/ACC/KW35Wfmq5tvNPnm5X1NZNxdmSVZW&#xA;FZFjhV1dVX+Zl5d9ugVejeXPLumeQbK00XSkvJdBubopCs84mi0/1BSONDJ++9KSWiqKtRm7A4q1&#xA;e6nF5o1m+8uaTqjWyaI8R194Y+Ts06s0Vskjgx/s8pevZD1airy250PzXpvmK0mjTTtJ1bTtU036&#xA;9qdv6GnWz6R9Y1JHeVfUUSNcW0MXKFQdwpHSoVe46jp8GpW6SwyCO6jHqWF8lGaNmAIZT+0jUHJe&#xA;jDY4qo6Dqdt5j8tWl/JCvo6jbAz2xIdQXXjLET0YBqrXviry/wDKrzl5ivNe1DQNehbTNbs4X0uK&#xA;C5BMp+qF5LKUyNUXHrRPMwkUAN6bbH7RVQHmPSvylvfLena3+amoenDqkQj8vWM1xPDHbWqqFia3&#xA;t4DvIYyskkrK1C3GvHiMVZx5Z0a28s6N5XjvdXfWtK0+C5ittauaHe5dXs5HYFlHC35QrLXetP26&#xA;Yqy671HStKtIg7rHHxCWltEOTyBQKJDEtWc06BRirGPL0nnefWfMLNJYQ2ykCK1kSV5476SGKWP1&#xA;XRxGYkt5I42CfaZS1d8VeN+aPyO/N/UfMU/mbX/NelxxyTRhYbaGQQo7ShbciFxGlEldZCXdviUM&#xA;3MgDFWR+V/JZi0y7S0sLvXNML2lul9AlvHNqMJk5TyyNdvGnog2tvGjREcY15RqOWKsY8u+WPP8A&#xA;ceaNa8tazLLqmieXbdjaW9sI+d48ytHRDO0UMj2vJuCSFVPEBq4qnfnXyVf6pe3MNxM+ialJF69r&#xA;PcQrJ9eWSL172xn4t9XmZGnnKIjbh3RXVA2Kov8AKv8AJ/8AOXyNrrTP5j0rUNHnPG6gnjuJZeA4&#xA;rWJiEZHKooP7wjYVBoMVeh2+peYrPzhqr6mLeewgjiZBYxy+tHZXDSiBp1YuZHikt5K+mOkhP7NM&#xA;VZPLf6LJZx6lJc272cLepFdl0MStQpyD149GI64q8z/MPyt5Mv8AyhpN15y1OXRPJenXtxeXelMX&#xA;hS7S4mdrSGUIRKgUNURKtR9n4abKq3lnT/LOlx6JL5FvmuvKOu3UcdlaLNJdQW1zb1nd7cyszxK9&#xA;vBOkiFqBuNFB5VVSzTPN+seYPze/QNhatd+Wo7uXU9Zuo1KxwNbQLBYrJKfhk9WS3juEjWhoUfky&#xA;1UKvTfMeovC+m6ZDIYrnWbr6okqmjJGkMlxMy035elAyqezMDiql5jT9FeT9Ti0ee30u8+qzpptx&#xA;O6xxLeSI3ou7uaEmZgWLbk9cVeUeQvJmu3k9ja3EFvZzR2sTeYtX4wXOo/Wo7CzaFoLsPLvPc3Nz&#xA;L661Pw0BG2KvUPL3ma3F/e+WNTv1uPMGiwxzXkpjMPrW0grHcgU4f5MnA0VvAEYqlOr/AJeeWfzC&#xA;/Rmtea7K6mghi52mg3E9LWJmYkTvHAV5yuhFebsANqDfFXjH5vfk95J07R9W8xflld28V/pcDt5k&#xA;8uW1ytxDPYg/vy0JaUxmP7VD8O1QAwGKvonyb5ktvM/lTSfMFtQRanaxXPAV+BnUF03/AJHqv0Yq&#xA;nOKvIfz7gSLXPy01adS1pZeZ7WKU7UVpxWMmuwHKLqeniMVYB+dmq/lpd32gan5ajttH83x+YHGq&#xA;6wkLW1zZ/USDem7WJecz85YwuzeoTRCa7qvXLLzgPPmpW1houn3kOiafdQ3Wr6nfwPZhmtmE9vb2&#xA;8UwWZnaZEZ2KhQgIqSwxVfoumfmZ5evb6yt4tP1jRZX56XJNcvZyQcmkeQzqtvOZHdnBZg3xNVtu&#xA;XEKpnoGjtpOvSzatOLvVdVjEn18rwjadSwlhgQlvSVYViCJyJZVLbkO2KsV80aD+ammO+l+XNf03&#xA;TfJs8MNpaGaKebWLUiII0dmeQjnlkKllMjVBPgK4qz7yjoa6F5Z03SFFBZQJFw5cwtBXgGPUL0B8&#xA;MVeK/wDOQ/liTyrqEP5r+XjfHXo5oILu3hKPalUX4JZI9pBvGqNxJHitOQKqd/kz5w8s+btWfUns&#xA;vql/Lp0drY290tGVEmnmvIIA3VUNwg+H7UfCu4NFXsiRRRxLFGipEihUjUAKFAoAANqUxVDWWkaT&#xA;Yu8llZQWry/3jwxJGW7/ABFQK4qhNS8uW93efpC2ubjTNSMYhe9tDGGeMVKrIkyTQycSx4l0JWp4&#xA;0qaqpD5x0PSodBvb3zJqWo6pYW6mVbU+hQOnxKVt4IoEuWVlBWOZZFJ/ZOKsT/J/X4r5b7Q9M12M&#xA;ma4vdUa2uLV11GNJ7xxP8frz27BJ2IVwX+EqSDyBKrINFPle584a1pmla3ctrFsLaulsOSab9QQw&#xA;qyh16XKT/FViXU7UoSFWGec/Mnly+8+2lr5h1BdStrKO80i4sdMs3ChpXtJLk3Ek0x/u2FvT0gxj&#xA;JJryUsir1S38uXSQKLLzDqUFqyqYYuVpc8F2NBNcwXEr16VeRvniqY6RotjpUMiWwd5Z39W6uZmM&#xA;k00hAHOR23JoAAOigBVAAAxVeNH0gXv14WNv9drX616SerWlK86cvxxVESwQTBRLGsgRg6cwG4uu&#xA;6sK9COxxV82fm1+aNj5Q1DW7XytaPJd392Xt5LZGaBbuS3S2u7tTGVAlVAYlCndi7NSillXpP5D/&#xA;AJd2Xlfyx+mC94+seY4oLvUhftEWiIQ8IkSIBI1UN9n6NqABVPfzN8u6nq+k2dxpN6+narpd0l3a&#xA;X6L6phIBUsYqgSIa0kXvGWoCaDFUL5K0j8wb+dNV896hpV59WlS50KDQhOtuhMEsDzPJKeUvqR3B&#xA;+A1UdRvSiqrb6PqY1e/8x+W3hrPN6Rs52aO1vbZY0IKyIsjQtHctMySKjK3JqqeSsqqhB5d8669r&#xA;8t75m+q6foscLRWWmWkpuZuUsEsExe49K3pG4m5FPiqyIfh4/EqxLz1+Yt3Y+Rta8o60LvQvNKad&#xA;LbRazHBNLp8p4FI7lLqAP6CTbVMvExlt/s1xVj35b6x+UulflSkOn6Xb2nmu48u37a0EhV7xYrUN&#xA;DeS3NwwBWFriKoRn3NAqmmKvSf8AnH+wuLH8mvKkFwCJGshOA3XhcO0yf8JIKYq9BxVjf5jeSrXz&#xA;p5N1Ly7PJ6D3cYa0uhWsNzERJBKKUPwyKCadRUYq+SfMtrq1nJ5g8wXES2nnOw9U65bVCy2l89v6&#xA;Jv4a8eUFyF9WKVCeMrKNiIyyr6e/Jr8tvLXkfyhbRaPWa41OGC61LUGdnNzMYweYqeKp8R4he3id&#xA;8VZ5iqldWlrdwNb3cMdxA9OcUqh0NDUVVgRiqHtNF0mzl9a3tY0noV9bjWTiTUrzNW4+1aYq821T&#xA;zlqnnzznN5L8laqdP0jSokuPM/mW04yS/vGZI7OyZgyB34MWloQKGm4oVWT6f+Un5dWdJJNDt9Ru&#xA;6fHf6oDqN0xPVmnuzM/xd6GmKsR/M6X8mPKcunWd15Utr/zLqUiro2maRaRR38jq1FZZYvSeJQx6&#xA;8/kDQ4qkuoeefzH8m3Ono2lSvJqPN7XyjJf3Gv6g8UQHqMskVp6sNCy1eW5lUdl64q9Q8l/mBpPm&#xA;mJolgudL1mBA97omoxPb3cIO3L05ArNGT0cDwrQ7Yqn2pappml2j3mp3cNjZx053NzIkMa16Vdyq&#xA;jFWFeZNL8qya3L5t8yiHW9AGnwR6Ra/VpNSEDq80l1cRW8MdxyEsbxcpFWoCdaYqw+Ty/wCXdH88&#xA;aLrvkS6/R+n+btOnht5tOgjnhgZruwkM8UEnwJHNGAkopRKcgAxOKrtM8hyaZ578961p2uT2GqwW&#xA;5e51OOCC4nlF3Ek6epA6el+59A0VFXkT1G4KrXlnQ/y3srfU/Ovm+0S6utf13ULbTrS7tjfSRsl5&#xA;PAsMNpCk5ad/Rd34oWH2TsuKs58tWnl7yfbatetqFppXlbULxJtItJXFrb2vKBFljVZvTWFpJ0kb&#xA;0l2HgCSAqzNHSRFkjYOjgMjqagg7ggjFXn3nv824tDln0zy7pF75o16CgubbTbea5itC3Q3Lwo/F&#xA;tiRGNzSnw1GKsDj81eatd8uP5n1fRrnzZ5eHqpf2ej6lLZtb+kSk8Umkm3spXK0PKOa4m8Rt0VZ3&#xA;+X+l/kt5t8tQa15Z8v6TLp0xKOpsLdZY5UADRzKUJEiildzUUIJFDiqL1H8n/KLc7jy9G/lPVusO&#xA;oaI31MB/+LLdKW8yn9pZIzX264qgfy4/Me6vdY1PyN5ulgh87aFKIpGjpHHqEDxiWG6gT9lnjPJ4&#xA;x9nr02VVmkvlvQJZGkk0+BjIS0qlBwdm6s6fZdvdhiqZABQABQDYAdAMVdirwj/nJzyNpsGkR/mR&#xA;pTGz846TPZwwShyFuo5JxCLd4yeB/viT4qCrVHRV5x5Z/LYax5ruvLWhEwxazb26eYJI6n9GaEsi&#xA;3C2sj0+G7vSkY9Pqqg8hu3FV9dWttb2ttFa28Yit4EWKGJdlVEHFVHsAMVVMVdirCvzG/Kfy553i&#xA;Sa5aTT9bt0MVprNrQTIjbmKRWBWWInco/wBFDirEvKVt+b/5dwxaNfaavm3yra1W0udLZFvYIh9l&#xA;PQupIfgXsivJToGAAUKstX81dLqFl0DzHDIeqHRNQelf8uKKSP7mxVj/AJ5/Py38rWdrL/hTWp5t&#xA;QlNtpsc8K2onmAqI1UmS5qe37jFWEalaf85Cfmi2t6TfW58maLDbFbWAhohdXEnELFLNSSR41Bfm&#xA;UHBthx74qmHlDyB5l/JS4tNSs7afzPouo2cdt5tWxRpLyG7imlmjvIIT8UsSi4aNlHxU+L2xV6/5&#xA;Y86+X/M8byaO9zIkY/eNPZ3dqAenGtxFEC3sN8VeZa55N80wf85N6J5xOmvqHlybT2sjepR/qUvp&#xA;Sr8SE8lBZvtAUo598VevS6TYSatb6s0Q/SFrDLbRTj7XoTtG8kZ8QXhRvmPnirBfzFsta1eZrvQ5&#xA;jYSeXSWn1IW31mZZSqS8bWJEaeThG/7wI3FgxTjIaqFXmvlG31fzRruoal51sodP0yC6N9paa9Y3&#xA;g0gTzRJFPPbQXAtVf1TAZE9d1MZdqK7MWxV6XpXm/RvKumrotpbJqqW4leytfLpF6/F3eUR/VFPq&#xA;QLVuKCrIoG7gDFWAeQ/K/wCajtYJc+XY9Ns7XmtsLqdRHbQS336Qnh9KjSN9YmVFZgCBFGsYALGQ&#xA;KvVNS8j3baVL9TvfU1m5huIdSuZR6a3qXQpIj8Q5i4begwDekAF+JeQKrzC3h/MfRfPGl6vrXlOe&#xA;50qzvLu7mOnUuzFNfQGK5uYIYyxCzOBN6VWdGaQAvzHFVmmt6l5Y84vA99Jo9vbaf6np2uvGK5cS&#xA;yqEZpdP9WEIwTkqs8vIVb4MVeYRr510PzZPougpe2nl+4t/qOj6nDY6jc2NosspmljsD6ZZZLhyA&#xA;GZxHGmwkPBWxV7j5DsrjRrJ/L98iC+tQs7TQIiW8sUhKI0fBI6ECKjhhyrvUgg4qnmnaVp+k206W&#xA;cPBZppry4pVnkmncyyue5LM36gNsVeR/840+S/NPl+081ajrmnPo0Gu6mbrTtJkI5xRDkalFJCV9&#xA;QKB1+HwpirO/NH5n+XfL1y9jPb6le6r/ALo06x068nknYioETiMQt8/Up74q8Y8w/wDOP/nvzzJN&#xA;56vLuPQPOeoahHcxaeZGItdOhjWOCAyxqwFwvAOSFpXrQ4qmf/Kwfzx/L7U9V0/XtBm81+V9JPqW&#xA;+uqrpM9mXVUdpkWRWaNXX1FZC5IY8uILBVn/AJc/OfTtc0O11qPy5r0dhdoZIJ4rE3iOFJUlPqbT&#xA;v9pTTkin2xVGt+alq4pY+WfMl7N2iGk3Nrv2+O9FrH/w2KsF178vfzX/ADOv7VvNk0HlXy3Zy+tb&#xA;6Zbsl1eFqUDvxMluJeLMocu4A6ICTir1Xyh5M8veUdJGmaJb+jCzma4mdjJPPM/25p5W+KSRu5P6&#xA;sVTvFXYq/wD/2Q==</xapGImg:image>
    </rdf:li>
   </rdf:Alt>
  </xap:Thumbnails>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:format>application/postscript</dc:format>
 </rdf:Description>

</rdf:RDF>
</x:xmpmeta>
xpacket end='w'?>
%  &&end XMP packet marker&&
[{ai_metadata_stream_123}
<</Type /Metadata /Subtype /XML>>
/PUT AI11_PDFMark5
[/Document
1 dict begin /Metadata {ai_metadata_stream_123} def
currentdict end /BDC AI11_PDFMark5
Adobe_AGM_Utils begin
Adobe_AGM_Core/page_setup get exec
Adobe_CoolType_Core/page_setup get exec
Adobe_AGM_Image/page_setup get exec
%%EndPageSetup
Adobe_AGM_Core/AGMCORE_save save ddf
1 -1 scale 0 -610.78 translate
[1 0 0 1 0 0 ]  concat
% page clip
gsave
newpath
gsave % PSGState
0 0 mo
0 610.78 li
561.23 610.78 li
561.23 0 li
clp
[1 0 0 1 0 0 ] concat
346.093 214.502 mo
337.957 215.294 329.821 216.949 321.829 215.365 cv
304.765 211.909 290.581 200.03 279.709 187.07 cv
270.421 175.838 263.005 162.878 257.389 149.413 cv
251.701 135.949 247.741 121.55 246.085 106.933 cv
245.149 98.0054 244.933 88.9333 246.229 80.0054 cv
247.381 72.0134 249.757 64.1655 253.501 56.9656 cv
255.805 52.5015 259.549 48.9014 263.365 45.6614 cv
271.501 38.8933 281.581 34.6455 291.877 32.6294 cv
299.581 31.0454 307.645 30.7576 315.349 32.1255 cv
322.477 33.3494 329.605 35.9414 335.149 40.6934 cv
338.749 43.7175 341.845 47.6055 343.717 51.9255 cv
347.605 60.7815 348.181 71.5813 344.293 80.5095 cv
340.333 89.4375 331.765 95.4856 322.549 97.8616 cv
317.293 99.2295 311.677 99.5173 306.349 98.2935 cv
299.869 96.8535 293.893 93.0374 291.157 86.7734 cv
290.437 85.1174 289.933 83.3894 289.717 81.6614 cv
289.645 79.6455 289.573 77.6294 289.501 75.6135 cv
289.573 77.6294 289.645 79.6455 289.717 81.6614 cv
290.221 85.0454 291.661 88.2854 293.821 90.9495 cv
298.069 96.1335 304.981 98.5095 311.605 98.7974 cv
320.749 99.2295 330.469 95.9895 337.165 89.5813 cv
343.069 83.9656 346.453 76.1895 346.309 67.9094 cv
346.237 62.5813 345.301 57.1094 343.141 52.2134 cv
340.261 45.8054 335.005 40.8374 328.885 37.5254 cv
322.405 34.0696 314.917 32.6294 307.645 32.4133 cv
297.277 32.0535 286.621 34.3574 277.189 38.8215 cv
270.637 41.9175 264.013 46.3816 259.405 52.2134 cv
250.189 63.7334 247.021 78.7095 246.733 93.1814 cv
246.445 107.365 248.965 121.621 253.141 135.157 cv
258.829 153.661 267.757 171.734 280.069 186.781 cv
290.797 199.741 304.909 211.694 321.829 215.221 cv
329.821 216.878 337.957 215.221 346.093 214.502 cv
false sop
/0 
[/DeviceCMYK] add_csa
0 0 0 1 cmyk
ef
326.293 51.0615 mo
324.997 54.3015 327.301 57.4695 330.613 58.1174 cv
334.573 58.7654 337.885 55.9575 338.965 52.2854 cv
339.541 49.9814 339.253 47.7495 338.317 45.8054 cv
337.021 43.1414 334.501 40.9814 332.053 39.3975 cv
331.261 38.9656 330.613 38.5334 330.325 38.3894 cv
333.997 38.3894 337.741 39.2534 340.981 40.6213 cv
350.125 44.2935 360.061 50.9895 367.333 44.5813 cv
371.365 41.0535 372.517 38.8933 372.517 38.8933 cv
372.517 38.8933 372.013 40.5496 370.861 42.4934 cv
367.621 48.2534 360.061 52.3574 353.293 50.6294 cv
350.701 49.9814 350.701 49.9814 350.701 49.9814 cv
350.701 49.9814 352.429 54.2295 349.549 55.0215 cv
346.669 55.8135 344.509 53.4375 344.077 49.8374 cv
343.717 46.2375 341.773 44.2214 339.469 43.0696 cv
338.101 42.4214 337.021 41.9175 336.373 41.6294 cv
336.445 41.7014 336.445 41.7734 336.517 41.7734 cv
340.765 45.6614 341.845 51.9255 338.245 56.6055 cv
334.933 60.7095 328.957 61.5015 325.141 57.7576 cv
321.469 54.1575 321.469 47.6775 326.221 45.0854 cv
330.037 42.9255 335.077 45.2295 335.581 49.6934 cv
335.869 52.2134 334.213 55.1655 331.405 54.8774 cv
330.613 54.7334 329.749 54.3015 329.605 53.4375 cv
329.389 52.3574 330.829 52.2854 331.621 52.2854 cv
333.421 52.1414 333.205 49.9094 332.125 48.9734 cv
330.109 47.3174 327.229 48.9734 326.293 51.0615 cv
ef
285.325 68.9895 mo
281.365 62.1494 278.413 55.3816 271.861 50.7734 cv
257.461 40.9094 236.869 44.1494 220.957 48.8293 cv
193.741 56.8215 134.197 77.4133 105.181 57.6135 cv
98.7009 53.2214 94.093 46.0215 93.8049 36.3015 cv
94.3811 39.3975 95.2449 42.1335 96.3972 44.5813 cv
113.893 81.6614 193.741 52.7893 220.093 45.5894 cv
237.157 40.9094 260.845 38.1736 274.957 50.9895 cv
280.501 55.9575 282.661 62.1494 285.325 68.9895 cv
ef
265.597 182.893 mo
265.237 183.902 264.805 184.909 264.301 185.845 cv
263.365 186.422 261.709 186.71 261.709 185.342 cv
261.781 184.406 261.709 183.614 260.845 182.893 cv
258.973 181.238 256.165 182.101 255.517 183.973 cv
254.509 186.71 257.677 189.229 260.989 189.373 cv
261.133 189.373 261.277 189.373 261.493 189.373 cv
261.133 189.661 260.701 189.805 260.341 189.878 cv
255.661 190.957 255.877 187.933 252.493 188.581 cv
249.109 189.229 247.741 186.926 247.381 185.63 cv
246.949 184.333 247.093 182.966 247.093 182.966 cv
247.093 182.966 246.445 185.63 247.597 188.581 cv
249.397 193.333 255.661 197.149 260.557 194.413 cv
268.117 190.238 270.637 177.781 266.317 170.581 cv
265.813 169.789 265.309 169.141 264.877 168.997 cv
265.093 169.645 265.381 170.294 265.669 170.942 cv
267.469 175.333 267.253 178.429 265.597 182.893 cv
ef
330.541 157.406 mo
333.061 167.917 325.573 177.493 316.645 181.957 cv
300.445 189.661 282.085 183.037 270.997 170.006 cv
268.549 167.053 266.605 163.885 264.805 160.573 cv
264.229 159.565 265.237 161.725 265.309 161.869 cv
269.917 171.446 278.053 178.933 287.845 183.11 cv
300.445 187.862 314.341 186.71 324.637 177.493 cv
330.757 171.446 334.429 162.661 331.189 154.238 cv
329.173 149.269 324.349 144.446 318.661 144.949 cv
317.221 145.094 315.205 145.813 315.061 147.541 cv
314.917 151.141 320.749 150.061 322.765 150.134 cv
327.085 150.493 329.461 153.302 330.541 157.406 cv
ef
274.453 99.7334 mo
263.725 99.0854 256.741 89.1494 255.013 79.2854 cv
252.709 64.0215 260.917 50.3416 273.229 42.4214 cv
277.765 39.4695 282.517 37.5974 287.773 36.3735 cv
289.645 36.0854 291.373 36.1575 293.245 36.5173 cv
296.269 37.4534 298.429 39.0374 299.941 41.8455 cv
300.373 42.8535 300.589 44.0774 301.165 45.0134 cv
304.477 49.4055 312.037 46.3093 313.045 41.4133 cv
313.189 40.6934 312.973 39.1094 312.037 40.2615 cv
311.821 40.6213 311.533 40.9814 311.317 41.3416 cv
309.589 43.7893 306.637 47.1736 303.325 45.4456 cv
301.741 44.5095 301.525 42.8535 300.733 41.2695 cv
298.213 36.7334 293.245 35.1494 288.205 35.6536 cv
282.445 36.5173 275.965 39.8293 271.213 43.0696 cv
267.829 45.3735 264.805 48.1814 262.213 51.4214 cv
253.861 62.0054 251.125 75.7576 256.957 88.2134 cv
261.061 95.8455 268.333 101.893 277.333 101.245 cv
282.589 100.741 288.565 97.5015 289.789 91.8855 cv
290.077 90.5173 290.005 88.3574 288.349 87.7815 cv
284.893 86.5574 284.317 92.4614 283.669 94.3335 cv
282.085 98.4375 278.701 99.8774 274.453 99.7334 cv
ef
252.421 51.1335 mo
249.613 63.8774 239.533 74.3894 226.285 75.8293 cv
220.021 76.2615 213.973 74.5334 209.581 69.9973 cv
206.053 66.1094 204.469 61.1414 205.405 55.9575 cv
205.693 54.3015 204.829 56.7495 204.757 57.1094 cv
203.821 61.6455 205.189 66.1094 207.925 69.7095 cv
209.293 71.3655 210.949 72.8054 212.821 74.0295 cv
214.765 75.1094 216.925 75.9734 219.157 76.5496 cv
221.533 76.9814 223.981 77.1975 226.429 77.0535 cv
228.949 76.7654 231.397 76.2615 233.845 75.3975 cv
236.293 74.3894 238.669 73.1655 240.901 71.6536 cv
247.381 66.8293 251.989 60.1335 254.005 52.4294 cv
253.429 51.9973 252.925 51.5654 252.421 51.1335 cv
ef
222.541 72.4456 mo
221.461 72.1575 220.381 71.7974 219.445 71.4375 cv
218.797 70.5735 218.365 68.9175 219.733 68.7734 cv
220.597 68.7734 221.389 68.6294 222.109 67.6934 cv
223.549 65.6775 222.397 62.9414 220.525 62.4375 cv
217.717 61.7175 215.485 65.1013 215.629 68.4133 cv
215.629 68.5574 215.629 68.7014 215.629 68.9175 cv
215.341 68.5574 215.197 68.1975 215.053 67.8374 cv
213.541 63.2295 216.565 63.2295 215.629 59.9175 cv
214.693 56.6055 216.853 55.0215 218.149 54.5173 cv
219.373 54.0134 220.741 54.0134 220.741 54.0134 cv
220.741 54.0134 218.005 53.5813 215.197 54.9495 cv
210.661 57.2534 207.421 63.8054 210.589 68.4856 cv
215.413 75.6135 228.013 76.9814 234.853 72.0134 cv
235.573 71.4375 236.149 70.9333 236.293 70.4294 cv
235.645 70.7175 234.997 71.0774 234.421 71.3655 cv
230.245 73.6694 227.149 73.6694 222.541 72.4456 cv
ef
340.765 84.5415 mo
332.557 95.9895 317.221 100.382 304.405 94.1174 cv
294.325 88.8616 288.709 77.9895 291.733 66.8293 cv
294.325 58.6213 301.669 52.5015 310.597 53.6536 cv
316.141 54.5173 320.965 58.4773 321.397 64.3093 cv
321.685 71.5095 314.989 75.4695 308.797 72.5894 cv
305.989 71.4375 304.189 68.7734 305.269 65.7495 cv
305.557 65.0295 306.133 64.4534 306.493 63.7334 cv
307.213 62.4375 305.341 62.9414 304.693 63.1575 cv
306.133 62.3655 308.005 61.8616 309.517 62.6536 cv
311.533 63.5894 309.517 64.8135 310.453 66.2534 cv
310.669 66.6135 311.101 66.9734 311.461 67.2615 cv
310.093 69.0615 312.613 70.5735 314.125 70.7893 cv
318.373 71.2935 320.461 66.4695 319.813 62.8694 cv
318.373 56.3894 311.389 53.7253 305.341 54.8054 cv
295.477 56.9656 290.509 66.9014 291.949 76.4055 cv
293.101 82.7415 296.701 87.9973 301.957 91.7415 cv
314.053 99.7334 329.749 96.4934 338.605 85.6213 cv
339.325 85.3335 340.045 84.9734 340.765 84.5415 cv
ef
79.3333 16.9333 mo
79.5491 15.0615 80.4128 13.4773 81.7092 12.3254 cv
79.3333 12.0374 77.1731 10.7415 76.0212 8.36548 cv
74.7249 5.41333 75.6609 1.95752 78.5413 .517334 cv
80.7009 -.490479 83.4373 -.0585938 84.5891 2.10132 cv
87.2532 6.85352 80.053 9.87744 78.5413 5.34155 cv
78.1091 4.04541 79.1169 2.67749 80.2693 2.3894 cv
81.2048 2.10132 82.2131 2.60547 82.573 3.5415 cv
82.717 4.04541 82.6453 4.47729 82.429 4.90942 cv
82.717 4.69336 82.8611 4.40552 82.9329 4.11743 cv
82.8611 3.39746 82.5012 2.82153 81.9968 2.3894 cv
80.197 1.23755 78.1091 2.53345 77.3889 4.3335 cv
76.3811 7.14136 78.1809 9.87744 80.845 10.8135 cv
83.509 11.5334 85.4529 9.94946 88.1892 10.1655 cv
93.301 10.8855 96.6853 15.6375 96.0369 20.6775 cv
95.9651 21.4695 95.7493 22.1895 95.533 22.9094 cv
95.821 22.4773 96.2532 22.0454 96.613 21.6135 cv
97.4773 20.5334 98.4128 19.2375 99.4211 18.0854 cv
99.4929 18.0134 li
101.725 15.3494 104.029 11.8215 101.293 8.36548 cv
100.069 6.92554 98.197 6.13354 96.5413 7.35742 cv
95.9651 7.78931 95.4612 8.50952 94.6692 8.36548 cv
93.949 8.14941 93.5891 7.42944 93.5891 6.63745 cv
93.7332 4.69336 95.7493 3.61353 97.5491 3.61353 cv
100.645 3.6853 102.661 6.27759 103.309 9.08545 cv
103.669 11.4614 103.165 13.6934 101.941 15.6375 cv
102.589 15.1335 103.237 14.7734 104.029 14.4856 cv
107.125 13.5496 110.509 15.0615 111.517 18.2295 cv
112.165 20.7495 111.013 23.4133 108.493 24.2776 cv
106.477 24.7815 104.245 23.8455 103.741 21.6853 cv
103.453 20.3174 104.173 18.8054 105.685 18.5173 cv
106.621 18.3735 107.629 18.9495 107.629 19.9575 cv
107.485 20.6775 107.053 20.8933 106.477 20.8215 cv
105.901 20.7495 105.973 21.3254 106.117 21.6853 cv
106.765 22.6213 108.133 22.4055 108.925 21.8293 cv
110.509 20.4614 110.149 18.1575 108.781 16.8616 cv
107.773 15.9255 106.549 15.5654 105.325 15.7095 cv
102.085 15.9973 99.7092 20.1013 97.8372 22.2615 cv
97.405 22.7654 96.9729 23.1975 96.6853 23.5574 cv
97.9812 23.1255 99.2771 23.1255 100.645 23.7014 cv
104.173 25.1414 104.677 30.4695 103.093 33.4934 cv
102.085 35.3655 100.357 36.2295 100.357 36.2295 cv
100.357 36.2295 101.149 35.7253 101.653 34.9333 cv
102.157 34.1414 102.733 32.4133 100.933 30.9734 cv
99.0613 29.4614 100.717 28.3093 98.1252 26.2935 cv
97.1169 25.5735 96.0369 25.5735 95.1013 25.9333 cv
90.2771 29.3894 88.0452 35.5813 89.4851 41.6294 cv
90.8533 47.0295 94.4529 50.7014 99.3489 53.0774 cv
99.3489 53.0774 99.9968 53.3655 99.637 53.3655 cv
99.1331 53.2214 98.6292 53.0054 98.197 52.8616 cv
87.8289 48.5415 84.5891 34.7893 92.365 26.4375 cv
92.6531 26.1494 93.0129 25.8616 93.301 25.5015 cv
95.677 22.3335 96.1091 18.0134 93.5168 14.5574 cv
91.0691 11.4614 86.7493 10.3816 83.4373 12.7576 cv
80.989 14.6294 80.1252 18.1575 82.1409 20.6055 cv
83.509 22.1895 86.1013 22.7654 87.5413 20.9656 cv
87.9011 20.3894 88.1169 19.5974 87.9011 18.8774 cv
87.6853 18.5894 87.3972 18.3015 87.1091 18.2295 cv
87.469 18.5894 87.6853 19.0215 87.6853 19.5974 cv
87.6853 20.6775 86.821 21.5415 85.741 21.5415 cv
84.5168 21.6853 83.0051 20.6055 83.0051 19.1655 cv
82.9329 13.9814 91.3572 14.4856 90.3489 20.3174 cv
89.845 22.9814 87.2532 24.3494 84.7332 24.1335 cv
81.2048 23.6294 79.0452 20.3894 79.3333 16.9333 cv
ef
317.149 215.51 mo
318.373 216.157 319.525 216.878 320.533 217.741 cv
325.861 222.278 327.733 230.269 322.981 235.957 cv
321.325 237.973 318.013 239.269 318.301 242.581 cv
318.445 244.094 318.445 244.741 317.293 246.829 cv
316.213 248.917 314.125 249.926 314.125 249.926 cv
314.125 249.926 314.413 249.709 314.845 248.773 cv
315.349 247.838 315.421 246.829 314.989 244.309 cv
314.485 241.718 316.285 239.845 317.509 239.413 cv
317.725 239.269 317.941 239.198 318.157 239.125 cv
317.221 239.413 316.213 239.557 315.277 239.486 cv
314.269 239.773 312.469 240.493 311.461 241.789 cv
310.021 243.805 308.797 244.021 306.277 243.157 cv
303.757 242.221 301.957 242.437 300.949 243.086 cv
299.941 243.734 299.437 244.165 299.437 244.165 cv
299.437 244.165 301.309 240.997 303.973 240.205 cv
306.637 239.342 308.149 239.342 310.453 239.63 cv
311.605 239.773 312.757 239.557 313.549 239.269 cv
312.973 239.125 312.325 238.909 311.749 238.55 cv
310.885 238.694 308.725 238.765 307.429 237.541 cv
305.701 235.885 305.341 233.437 302.605 233.006 cv
299.869 232.573 298.789 232.862 298.789 232.862 cv
298.789 232.862 302.389 230.99 304.909 231.709 cv
306.277 232.07 307.357 232.862 308.077 233.581 cv
308.005 233.365 308.005 233.077 307.933 232.862 cv
307.717 230.269 308.365 227.822 310.165 225.878 cv
312.037 224.077 314.989 223.141 317.365 224.654 cv
318.661 225.517 319.669 227.389 318.805 228.973 cv
318.445 229.55 317.797 229.909 317.077 229.694 cv
316.429 229.406 316.429 228.614 316.213 227.966 cv
315.565 226.238 313.765 225.878 312.037 226.382 cv
310.453 226.885 309.373 228.11 308.797 229.621 cv
308.293 230.845 308.221 232.07 308.293 233.221 cv
308.221 231.781 308.797 230.413 310.165 229.477 cv
311.101 228.902 312.181 228.829 313.189 229.333 cv
313.909 229.694 314.773 230.773 315.421 229.765 cv
315.205 230.917 314.269 231.781 313.045 231.493 cv
312.181 231.278 311.533 231.637 311.317 232.573 cv
309.877 232.645 310.381 234.878 310.813 235.67 cv
311.533 236.893 312.541 237.614 313.765 237.973 cv
313.189 237.397 312.757 236.605 312.685 235.741 cv
312.685 234.086 313.765 232.645 315.421 232.502 cv
316.789 232.502 317.941 233.365 317.941 234.734 cv
317.941 235.67 317.293 236.462 316.285 236.389 cv
315.709 236.318 315.133 235.885 315.349 235.238 cv
315.493 234.878 315.781 234.805 316.141 234.878 cv
316.501 235.021 316.573 234.661 316.501 234.446 cv
316.285 233.725 315.421 233.654 314.845 233.942 cv
313.693 234.517 313.549 235.957 314.197 236.966 cv
314.629 237.685 315.349 238.117 316.141 238.189 cv
316.213 238.189 316.285 238.189 316.357 238.189 cv
318.373 238.046 320.461 237.037 321.757 235.67 cv
326.149 231.134 325.357 224.006 321.181 219.614 cv
319.237 217.526 316.141 215.942 313.765 214.285 cv
312.829 213.637 312.469 213.278 311.389 212.557 cv
311.749 212.701 312.541 213.134 313.261 213.493 cv
314.557 214.141 315.925 214.718 317.149 215.51 cv
ef
307.213 215.077 mo
305.773 215.581 305.341 217.165 305.845 218.533 cv
306.637 220.261 308.581 220.909 310.309 220.189 cv
312.469 219.254 313.189 216.805 312.325 214.645 cv
311.317 212.557 308.581 211.333 306.781 210.11 cv
305.629 209.318 304.477 208.382 304.261 208.309 cv
304.765 208.885 305.773 209.677 306.781 210.397 cv
307.861 211.261 309.085 211.981 310.021 213.061 cv
310.741 213.926 311.461 214.933 311.605 215.654 cv
311.749 216.517 311.605 217.453 311.029 218.174 cv
310.237 219.254 308.653 219.685 307.573 218.677 cv
307.069 218.174 306.853 217.238 307.501 216.734 cv
307.717 216.59 308.077 216.517 308.077 216.878 cv
308.077 217.309 308.293 217.597 308.725 217.597 cv
309.517 217.597 309.805 216.805 309.661 216.157 cv
309.373 215.149 308.221 214.789 307.213 215.077 cv
ef
312.325 208.094 mo
312.109 206.581 313.189 205.357 314.629 205.07 cv
316.573 204.853 318.085 206.294 318.373 208.094 cv
318.589 210.397 316.933 212.342 314.629 212.63 cv
312.325 212.845 309.805 211.189 307.861 210.254 cv
306.565 209.605 305.197 209.101 305.053 208.957 cv
305.773 209.174 306.997 209.605 308.077 210.037 cv
309.373 210.541 310.669 211.189 312.037 211.477 cv
313.189 211.694 314.413 211.765 315.133 211.477 cv
315.925 211.189 316.645 210.614 317.005 209.749 cv
317.509 208.526 317.005 206.942 315.637 206.51 cv
314.989 206.365 313.981 206.581 313.909 207.446 cv
313.909 207.661 314.053 208.021 314.341 207.878 cv
314.701 207.661 315.061 207.661 315.349 208.094 cv
315.709 208.741 315.133 209.389 314.557 209.605 cv
313.477 209.822 312.613 209.101 312.325 208.094 cv
ef
257.245 125.149 mo
258.109 125.797 259.045 126.446 259.981 126.949 cv
261.061 126.877 262.573 126.229 261.853 125.077 cv
261.277 124.357 260.917 123.637 261.205 122.557 cv
261.925 120.109 264.733 119.389 266.317 120.542 cv
268.621 122.342 267.325 126.085 264.733 128.101 cv
264.589 128.174 264.445 128.245 264.301 128.389 cv
264.733 128.389 265.165 128.317 265.525 128.174 cv
269.989 126.517 268.189 124.141 271.357 122.773 cv
274.525 121.477 274.381 118.813 274.021 117.517 cv
273.661 116.221 272.869 115.141 272.869 115.141 cv
272.869 115.141 274.813 117.013 275.389 120.109 cv
276.397 125.077 273.301 131.701 267.757 132.061 cv
259.117 132.71 250.261 123.565 249.973 115.213 cv
249.973 114.278 250.045 113.486 250.333 113.053 cv
250.477 113.773 250.621 114.421 250.765 115.141 cv
251.557 119.822 253.429 122.27 257.245 125.149 cv
ef
191.365 45.8774 mo
190.501 45.2295 189.637 44.5095 188.845 43.7893 cv
188.557 42.7815 188.701 41.1255 189.997 41.4856 cv
190.861 41.7734 191.725 41.8455 192.661 41.2695 cv
194.749 39.9014 194.605 36.9495 193.021 35.7974 cv
190.573 34.1414 187.405 36.5173 186.325 39.6853 cv
186.253 39.8293 186.253 39.9734 186.181 40.1174 cv
186.037 39.7576 185.965 39.3254 185.965 38.8933 cv
186.181 34.1414 189.061 35.1494 189.349 31.6934 cv
189.565 28.2375 192.157 27.5894 193.525 27.5173 cv
194.893 27.4456 196.117 27.9495 196.117 27.9495 cv
196.117 27.9495 193.741 26.5813 190.645 26.9414 cv
185.605 27.5173 180.277 32.4856 181.573 37.9575 cv
183.589 46.3816 194.965 51.9973 203.101 49.7654 cv
203.965 49.4773 204.685 49.1895 204.973 48.7576 cv
204.253 48.8293 203.605 48.9014 202.885 49.0454 cv
198.205 49.6934 195.253 48.6135 191.365 45.8774 cv
ef
153.205 74.8933 mo
152.845 75.9734 152.557 77.0535 152.341 78.0615 cv
152.701 79.0696 153.781 80.3655 154.645 79.2854 cv
155.221 78.5654 155.797 77.9895 156.949 77.9175 cv
159.469 77.8455 160.981 80.3655 160.405 82.1655 cv
159.397 84.9014 155.365 84.8293 152.701 82.8855 cv
152.557 82.8135 152.413 82.6694 152.341 82.5974 cv
152.413 83.0295 152.629 83.3894 152.845 83.6775 cv
155.797 87.4934 157.525 85.0454 159.757 87.6375 cv
161.989 90.3015 164.437 89.3655 165.589 88.6455 cv
166.741 87.8535 167.533 86.7734 167.533 86.7734 cv
167.533 86.7734 166.309 89.2214 163.573 90.8054 cv
159.109 93.2534 151.909 92.2454 149.821 87.0615 cv
146.581 78.9973 152.629 67.8374 160.477 64.9575 cv
161.413 64.6694 162.205 64.5254 162.637 64.6694 cv
162.061 65.0295 161.413 65.3894 160.765 65.6775 cv
156.589 67.9094 154.789 70.4294 153.205 74.8933 cv
ef
283.309 41.7014 mo
284.461 41.7014 285.541 41.7734 286.549 41.9895 cv
287.413 42.6375 288.205 44.1494 286.909 44.5813 cv
286.045 44.7974 285.325 45.1575 284.821 46.1655 cv
283.885 48.5415 285.613 50.8455 287.629 50.9175 cv
290.509 50.9895 291.877 47.1736 291.013 44.0054 cv
290.941 43.8616 290.869 43.7175 290.797 43.5015 cv
291.157 43.7893 291.445 44.0774 291.661 44.4375 cv
294.181 48.5415 291.229 49.2615 292.957 52.2854 cv
294.613 55.3093 292.885 57.3254 291.805 58.1174 cv
290.653 58.9094 289.357 59.1975 289.357 59.1975 cv
289.357 59.1975 292.093 58.9814 294.469 56.9656 cv
298.357 53.7253 300.013 46.5974 295.909 42.7815 cv
289.501 36.9495 276.901 38.6055 271.501 44.9414 cv
270.925 45.6614 270.493 46.3093 270.493 46.8135 cv
271.069 46.3816 271.573 45.9495 272.077 45.4456 cv
275.533 42.2776 278.557 41.5574 283.309 41.7014 cv
ef
255.229 154.67 mo
253.789 154.238 252.421 155.174 251.989 156.614 cv
251.557 158.413 252.709 160.141 254.509 160.645 cv
256.813 161.221 258.901 159.71 259.477 157.477 cv
259.981 155.245 258.613 152.581 257.965 150.493 cv
257.533 149.125 257.173 147.758 257.029 147.541 cv
257.173 148.261 257.461 149.557 257.749 150.71 cv
258.109 152.077 258.541 153.373 258.685 154.813 cv
258.757 155.893 258.613 157.189 258.325 157.838 cv
257.893 158.63 257.245 159.205 256.309 159.493 cv
255.013 159.853 253.501 159.205 253.285 157.765 cv
253.213 157.046 253.573 156.181 254.437 156.181 cv
254.653 156.181 255.013 156.325 254.797 156.685 cv
254.509 156.973 254.509 157.333 254.869 157.621 cv
255.445 158.053 256.165 157.621 256.453 157.046 cv
256.885 156.037 256.237 155.03 255.229 154.67 cv
ef
263.581 152.365 mo
264.301 150.997 265.957 150.71 267.253 151.357 cv
268.837 152.365 269.197 154.382 268.333 156.037 cv
267.109 158.053 264.517 158.486 262.573 157.333 cv
260.557 156.037 259.693 153.229 258.685 151.285 cv
258.037 149.99 257.317 148.765 257.245 148.55 cv
257.749 149.125 258.397 150.205 259.045 151.285 cv
259.693 152.51 260.341 153.734 261.277 154.813 cv
261.997 155.677 262.933 156.469 263.653 156.758 cv
264.445 156.973 265.381 156.973 266.173 156.469 cv
267.397 155.822 267.973 154.309 267.109 153.157 cv
266.677 152.581 265.813 152.221 265.237 152.798 cv
265.021 152.942 264.949 153.373 265.309 153.373 cv
265.741 153.446 265.957 153.661 265.957 154.165 cv
265.813 154.885 265.021 155.101 264.373 154.885 cv
263.365 154.453 263.149 153.229 263.581 152.365 cv
ef
167.245 54.9495 mo
168.253 52.7175 167.029 50.3416 164.869 49.4773 cv
161.989 48.3975 159.181 49.9814 158.029 52.6455 cv
156.733 56.1736 158.677 59.7734 162.061 61.0696 cv
165.589 62.3655 170.053 60.6375 173.437 59.9895 cv
175.669 59.5574 177.901 59.1975 178.261 59.0535 cv
177.037 59.0535 175.021 59.3416 173.077 59.5574 cv
170.917 59.9175 168.757 60.4214 166.525 60.2776 cv
164.653 60.2053 162.709 59.8455 161.701 59.1975 cv
160.549 58.4055 159.685 57.2534 159.469 55.7415 cv
159.181 53.6536 160.477 51.3494 162.781 51.2776 cv
163.933 51.2776 165.301 51.9973 165.085 53.2935 cv
165.013 53.7253 164.653 54.2295 164.221 53.8694 cv
163.789 53.3655 163.213 53.2935 162.709 53.7974 cv
161.917 54.6614 162.421 55.8855 163.357 56.3894 cv
164.869 57.2534 166.525 56.3894 167.245 54.9495 cv
ef
169.477 68.5574 mo
171.493 69.9255 171.637 72.5894 170.269 74.4614 cv
168.469 76.8374 165.157 77.0535 162.781 75.3254 cv
159.829 73.0215 159.613 68.9175 161.773 66.0374 cv
164.149 63.0854 168.829 62.2214 172.069 60.9973 cv
174.157 60.2053 176.317 59.3416 176.605 59.2695 cv
175.597 59.8455 173.725 60.7095 171.997 61.5015 cv
169.981 62.4375 167.821 63.0854 166.021 64.3816 cv
164.509 65.3894 163.069 66.7576 162.493 67.8374 cv
161.917 69.0615 161.773 70.5015 162.421 71.9414 cv
163.213 73.8855 165.517 75.1094 167.605 74.0295 cv
168.541 73.4534 169.261 72.0854 168.469 71.0054 cv
168.181 70.7175 167.605 70.5015 167.461 71.0054 cv
167.317 71.7253 166.885 72.0854 166.165 71.9414 cv
165.013 71.5813 164.869 70.2854 165.373 69.3494 cv
166.237 67.8374 168.109 67.6934 169.477 68.5574 cv
ef
108.277 51.6375 mo
110.077 50.9895 110.797 49.0454 110.149 47.3174 cv
109.285 45.1575 106.837 44.2935 104.677 45.0854 cv
102.013 46.1655 100.933 49.1895 101.941 51.8535 cv
103.093 54.5173 106.405 56.2454 108.637 57.8293 cv
110.077 58.8374 111.445 59.9895 111.661 60.1335 cv
111.085 59.4856 109.861 58.4055 108.637 57.4695 cv
107.341 56.3174 105.901 55.3816 104.749 54.0134 cv
103.885 52.8616 103.021 51.5654 102.877 50.6294 cv
102.733 49.6213 102.949 48.4695 103.669 47.5334 cv
104.749 46.2375 106.765 45.8054 107.989 47.1013 cv
108.637 47.7495 108.925 48.9014 108.061 49.5496 cv
107.773 49.6934 107.269 49.7654 107.269 49.2615 cv
107.341 48.7576 107.053 48.3975 106.477 48.3254 cv
105.613 48.3975 105.181 49.3335 105.325 50.1255 cv
105.685 51.4214 107.053 51.9255 108.277 51.6375 cv
ef
101.581 60.0615 mo
101.869 62.0054 100.429 63.4456 98.5569 63.6614 cv
96.2532 63.8774 94.3811 62.0774 94.1653 59.8455 cv
93.8772 56.8933 96.1091 54.5894 98.989 54.3015 cv
101.869 54.1575 104.893 56.3894 107.341 57.6135 cv
108.853 58.4055 110.509 59.1255 110.725 59.3416 cv
109.861 59.0535 108.349 58.4055 106.981 57.8293 cv
105.397 57.1094 103.885 56.2454 102.157 55.8855 cv
100.789 55.5254 99.2048 55.4534 98.3411 55.6694 cv
97.261 56.0295 96.3972 56.6775 95.8933 57.7576 cv
95.1731 59.2695 95.677 61.2854 97.405 61.8616 cv
98.2693 62.0774 99.4929 61.8616 99.637 60.8535 cv
99.637 60.4934 99.4929 60.0615 99.0613 60.2776 cv
98.6292 60.4934 98.197 60.4934 97.9089 59.9895 cv
97.4773 59.1255 98.1252 58.3335 98.9172 58.1174 cv
100.285 57.8293 101.365 58.8374 101.581 60.0615 cv
ef
249.973 36.8054 mo
251.629 34.9333 251.125 32.3416 249.325 30.8293 cv
246.949 28.9575 243.709 29.6055 241.837 31.8374 cv
239.533 34.8616 240.325 38.8215 243.205 41.1255 cv
246.229 43.3574 250.981 43.0696 254.437 43.4294 cv
256.669 43.6455 258.901 44.0054 259.261 43.9333 cv
258.181 43.6455 256.093 43.2134 254.221 42.9255 cv
251.989 42.5654 249.757 42.4214 247.669 41.6294 cv
246.013 41.0535 244.213 40.1174 243.421 39.1814 cv
242.557 38.1736 242.053 36.8054 242.341 35.2935 cv
242.629 33.1335 244.573 31.3335 246.805 31.9814 cv
247.885 32.2695 248.965 33.4214 248.461 34.5735 cv
248.245 35.0054 247.741 35.3655 247.453 34.8616 cv
247.093 34.2854 246.589 33.9973 245.941 34.2854 cv
244.933 34.9333 245.149 36.2295 245.797 37.0215 cv
247.021 38.2454 248.893 37.9575 249.973 36.8054 cv
ef
248.101 50.4133 mo
249.613 52.3574 248.965 54.9495 247.165 56.3174 cv
244.645 58.0454 241.477 57.2534 239.749 54.9495 cv
237.589 51.8535 238.525 47.8933 241.477 45.7334 cv
244.573 43.6455 249.325 44.2214 252.781 44.0054 cv
255.085 43.8616 257.317 43.6455 257.677 43.6455 cv
256.525 43.9333 254.509 44.2214 252.565 44.4375 cv
250.405 44.7253 248.173 44.7253 246.013 45.4456 cv
244.285 45.9495 242.485 46.8135 241.693 47.6775 cv
240.757 48.6853 240.181 50.0535 240.325 51.5654 cv
240.541 53.7253 242.413 55.5974 244.717 55.0935 cv
245.797 54.8054 246.877 53.7253 246.445 52.5015 cv
246.229 52.1414 245.797 51.7095 245.437 52.2134 cv
245.077 52.7893 244.573 53.0774 243.925 52.7175 cv
242.989 51.9973 243.205 50.7014 243.925 49.9814 cv
245.221 48.8293 247.021 49.1895 248.101 50.4133 cv
ef
306.349 194.342 mo
307.933 194.053 309.301 193.261 310.237 192.11 cv
310.525 194.125 311.749 195.997 313.837 196.862 cv
316.357 197.869 319.309 197.006 320.533 194.413 cv
321.325 192.541 320.893 190.238 318.949 189.302 cv
314.773 187.141 312.397 193.477 316.357 194.63 cv
317.437 194.917 318.661 194.053 318.805 193.046 cv
319.093 192.181 318.589 191.389 317.797 191.101 cv
317.365 191.03 316.933 191.03 316.645 191.245 cv
316.789 191.03 317.005 190.885 317.293 190.813 cv
317.869 190.813 318.445 191.101 318.805 191.533 cv
319.813 193.046 318.733 194.917 317.293 195.565 cv
314.917 196.573 312.469 195.061 311.605 192.758 cv
310.813 190.526 312.181 188.798 311.893 186.493 cv
311.101 182.03 306.925 179.365 302.605 180.013 cv
301.957 180.086 301.309 180.302 300.661 180.59 cv
301.021 180.229 301.381 179.942 301.813 179.581 cv
302.677 178.789 303.757 177.926 304.765 176.99 cv
306.997 174.973 310.021 172.885 313.045 175.117 cv
314.341 176.125 315.061 177.71 314.053 179.221 cv
313.693 179.654 313.117 180.086 313.261 180.805 cv
313.477 181.453 314.125 181.741 314.773 181.67 cv
316.429 181.526 317.293 179.725 317.293 178.214 cv
317.077 175.55 314.773 173.822 312.325 173.389 cv
310.309 173.174 308.437 173.677 306.781 174.758 cv
307.141 174.254 307.501 173.605 307.645 172.957 cv
308.365 170.221 306.997 167.413 304.189 166.621 cv
302.029 166.117 299.797 167.198 299.149 169.429 cv
298.717 171.157 299.581 173.03 301.453 173.462 cv
302.677 173.605 303.973 172.957 304.189 171.661 cv
304.261 170.869 303.757 169.933 302.821 170.077 cv
302.245 170.149 302.101 170.581 302.173 171.086 cv
302.173 171.517 301.741 171.517 301.453 171.373 cv
300.589 170.869 300.733 169.645 301.237 168.997 cv
302.317 167.557 304.333 167.773 305.485 168.926 cv
306.349 169.789 306.709 170.869 306.637 171.878 cv
306.421 174.685 302.965 176.845 301.165 178.573 cv
300.733 178.933 300.373 179.294 300.085 179.51 cv
300.373 178.429 300.373 177.278 299.869 176.198 cv
298.501 173.174 293.893 172.885 291.301 174.397 cv
289.717 175.333 289.069 176.773 289.069 176.773 cv
289.069 176.773 289.501 176.125 290.149 175.694 cv
290.797 175.189 292.237 174.614 293.605 176.198 cv
294.901 177.71 295.909 176.198 297.709 178.429 cv
298.357 179.221 298.357 180.157 298.141 181.021 cv
295.261 185.269 290.005 187.357 284.749 186.349 cv
280.069 185.342 276.757 182.318 274.597 178.214 cv
274.525 178.141 274.309 177.637 274.381 177.926 cv
274.453 178.357 274.669 178.789 274.813 179.149 cv
278.845 188.006 290.797 190.309 297.709 183.397 cv
297.997 183.11 298.285 182.822 298.501 182.533 cv
301.165 180.373 304.909 179.869 308.005 181.957 cv
310.669 183.973 311.749 187.718 309.805 190.67 cv
308.293 192.758 305.269 193.694 303.109 191.966 cv
301.741 190.885 301.165 188.654 302.605 187.357 cv
303.109 186.997 303.757 186.853 304.405 186.997 cv
304.693 187.141 304.909 187.357 304.981 187.645 cv
304.693 187.357 304.261 187.141 303.829 187.214 cv
302.893 187.214 302.173 188.006 302.173 188.869 cv
302.101 190.021 303.037 191.245 304.261 191.245 cv
308.797 191.101 308.077 183.902 303.037 184.909 cv
300.805 185.413 299.725 187.718 300.013 189.878 cv
300.517 192.902 303.325 194.63 306.349 194.342 cv
ef
209.221 111.542 mo
218.365 117.229 229.813 113.125 236.941 105.997 cv
243.709 98.9414 246.589 89.8694 246.373 80.7253 cv
246.589 80.7253 246.805 80.7253 247.021 80.7253 cv
247.093 93.5415 241.621 105.637 230.173 112.189 cv
222.469 116.149 212.965 116.869 205.981 111.181 cv
201.949 107.725 198.853 101.605 201.085 96.3494 cv
201.661 95.0535 203.029 93.3254 204.613 93.7576 cv
208.141 94.7654 205.261 99.9495 204.757 101.893 cv
203.677 106.141 205.621 109.238 209.221 111.542 cv
ef
246.661 105.709 mo
242.269 116.941 231.397 124.789 218.869 124.718 cv
205.549 124.285 194.245 114.565 193.597 100.885 cv
193.525 90.8054 199.933 81.6614 210.157 80.1494 cv
218.293 79.1414 226.645 84.1094 227.293 92.8215 cv
227.437 98.4375 223.405 103.909 217.357 103.333 cv
212.389 102.685 209.221 96.9255 210.301 92.1736 cv
211.093 89.7253 213.037 89.0774 215.413 88.8616 cv
217.573 88.7175 214.981 87.4214 214.333 87.2053 cv
216.277 87.6375 218.293 88.8616 219.013 90.8054 cv
219.805 93.1814 217.645 92.1736 216.997 93.6853 cv
216.781 94.1174 216.709 94.5496 216.565 95.0535 cv
214.621 94.3335 213.829 96.9255 214.117 98.3655 cv
214.981 102.542 220.453 102.397 223.189 100.166 cv
227.581 96.2776 226.789 89.7974 223.333 85.6213 cv
216.997 78.4214 206.413 79.7175 200.005 86.0535 cv
191.365 95.1255 193.093 108.949 201.877 117.229 cv
210.517 125.077 222.973 125.941 233.125 120.397 cv
239.173 116.869 243.781 111.325 246.085 104.773 cv
246.157 104.629 246.229 104.557 246.301 104.413 cv
246.661 105.709 li
ef
320.389 218.533 mo
323.629 220.909 327.445 222.709 331.621 223.573 cv
344.725 226.021 357.901 219.037 361.429 205.862 cv
363.733 195.997 359.485 185.701 349.837 181.957 cv
342.061 179.294 332.845 182.245 330.325 190.597 cv
328.957 196.141 331.693 202.261 337.741 203.125 cv
342.781 203.486 347.029 198.59 347.029 193.694 cv
346.813 191.174 345.013 190.094 342.781 189.373 cv
340.693 188.725 343.501 188.006 344.221 188.006 cv
342.205 187.933 339.973 188.725 338.893 190.453 cv
337.597 192.614 339.901 192.11 340.189 193.694 cv
340.333 194.198 340.261 194.63 340.333 195.134 cv
342.421 194.917 342.565 197.581 341.917 198.949 cv
340.189 202.765 334.933 201.469 332.701 198.661 cv
329.317 193.909 331.477 187.789 335.797 184.477 cv
343.501 178.862 353.581 182.389 358.477 189.949 cv
364.885 200.749 360.205 213.781 349.837 220.046 cv
340.333 225.373 328.957 224.149 320.389 217.741 cv
320.389 218.533 li
ef
293.029 207.446 mo
293.101 208.309 293.173 209.174 293.173 209.966 cv
292.669 210.685 291.661 211.477 291.157 210.541 cv
290.869 209.893 290.581 209.318 289.717 209.101 cv
287.845 208.597 286.189 210.181 286.333 211.694 cv
286.621 213.926 289.717 214.573 292.021 213.637 cv
292.165 213.565 292.309 213.493 292.381 213.422 cv
292.237 213.709 292.021 213.997 291.805 214.214 cv
288.853 216.517 287.989 214.357 285.901 215.942 cv
283.741 217.597 282.013 216.446 281.293 215.725 cv
280.573 214.933 280.141 213.926 280.141 213.926 cv
280.141 213.926 280.645 216.013 282.445 217.67 cv
285.397 220.333 291.013 220.838 293.533 217.238 cv
297.349 211.694 294.757 202.189 289.213 198.661 cv
288.637 198.302 288.061 198.013 287.701 198.086 cv
288.061 198.446 288.493 198.805 288.925 199.165 cv
291.733 201.541 292.597 203.773 293.029 207.446 cv
ef
245.509 144.086 mo
244.861 144.949 244.141 145.813 243.349 146.533 cv
242.341 146.822 240.685 146.605 241.045 145.309 cv
241.405 144.446 241.549 143.654 240.973 142.718 cv
239.605 140.557 236.653 140.63 235.501 142.141 cv
233.773 144.517 236.077 147.829 239.173 148.981 cv
239.317 148.981 239.461 149.053 239.605 149.125 cv
239.173 149.269 238.813 149.269 238.381 149.269 cv
233.557 148.909 234.709 146.101 231.253 145.741 cv
227.869 145.382 227.221 142.789 227.221 141.422 cv
227.221 140.053 227.725 138.758 227.725 138.758 cv
227.725 138.758 226.357 141.134 226.573 144.302 cv
227.005 149.342 231.829 154.813 237.301 153.661 cv
245.797 151.862 251.773 140.63 249.757 132.493 cv
249.541 131.63 249.181 130.909 248.821 130.55 cv
248.821 131.269 248.893 131.99 248.965 132.71 cv
249.469 137.389 248.389 140.269 245.509 144.086 cv
ef
133.909 57.9014 mo
133.189 57.2534 132.469 56.6055 131.893 55.9575 cv
131.677 55.0215 131.893 53.5813 133.045 54.0134 cv
133.765 54.3015 134.485 54.4456 135.277 53.9414 cv
137.221 52.8616 137.293 50.3416 135.925 49.1895 cv
133.981 47.6775 131.029 49.5496 129.877 52.2134 cv
129.877 52.3574 129.805 52.4294 129.733 52.5735 cv
129.661 52.2134 129.589 51.8535 129.661 51.4934 cv
130.165 47.3174 132.541 48.3975 132.973 45.4456 cv
133.405 42.4214 135.709 41.9895 136.933 42.0615 cv
138.085 42.0615 139.165 42.5654 139.165 42.5654 cv
139.165 42.5654 137.149 41.2695 134.413 41.3416 cv
129.949 41.5574 125.053 45.5894 125.845 50.4133 cv
127.141 57.9014 136.717 63.5173 143.917 62.0054 cv
144.709 61.7893 145.357 61.5735 145.645 61.2134 cv
144.997 61.2134 144.421 61.2854 143.773 61.3574 cv
139.669 61.6455 137.149 60.5654 133.909 57.9014 cv
ef
274.525 555.853 mo
271.717 539.077 263.077 530.725 263.077 522.373 cv
263.077 513.949 265.957 505.597 274.525 505.597 cv
283.237 505.597 286.117 513.949 286.117 522.373 cv
286.117 530.725 277.405 539.077 274.525 555.853 cv
ef
281.797 420.205 mo
281.941 423.661 282.373 425.893 283.453 429.278 cv
286.333 438.134 289.429 446.99 288.925 455.845 cv
288.421 464.63 284.821 473.125 282.373 481.621 cv
280.645 487.957 279.565 497.605 279.781 497.605 cv
279.997 497.605 281.509 487.165 284.317 483.061 cv
290.149 474.637 297.349 465.349 297.853 455.701 cv
298.357 445.909 291.229 436.694 285.757 427.189 cv
284.389 424.885 282.949 422.581 281.797 420.205 cv
ef
282.445 500.269 mo
286.189 499.694 289.933 499.694 293.461 500.413 cv
304.117 502.789 309.805 518.557 312.037 527.701 cv
312.469 529.789 312.757 532.382 313.693 534.254 cv
315.061 536.99 317.149 534.685 318.085 533.03 cv
322.045 525.829 321.973 515.605 316.573 509.198 cv
308.365 499.765 294.973 496.741 282.877 499.117 cv
282.733 499.55 282.589 499.909 282.445 500.269 cv
ef
278.053 503.51 mo
278.053 503.51 291.373 507.614 290.005 523.813 cv
288.997 535.477 300.157 545.125 312.037 545.701 cv
316.141 545.917 318.373 545.269 323.557 543.758 cv
323.557 543.758 319.525 542.389 315.637 539.654 cv
305.485 532.526 307.213 519.493 298.717 510.278 cv
292.813 503.869 286.045 500.486 278.053 503.51 cv
ef
331.693 542.245 mo
334.933 545.125 334.501 550.094 332.197 553.694 cv
327.805 559.957 319.741 561.397 312.685 559.813 cv
298.501 556.429 289.645 543.254 288.061 529.285 cv
287.773 530.581 287.485 531.805 287.053 532.957 cv
286.981 532.957 li
287.197 532.165 287.341 531.373 287.485 530.581 cv
287.701 529.214 287.845 527.845 287.989 526.406 cv
288.349 522.229 288.061 517.981 286.621 514.021 cv
284.101 507.829 279.205 505.238 274.309 504.661 cv
274.381 504.517 274.381 504.446 274.381 504.302 cv
277.621 504.517 280.861 505.309 283.669 507.758 cv
288.205 511.718 289.501 519.565 288.493 526.694 cv
288.277 528.422 288.421 529.645 288.781 531.373 cv
291.301 544.117 300.445 556.214 313.477 559.094 cv
320.317 560.533 328.021 558.877 331.909 552.614 cv
333.565 549.59 333.853 545.845 331.981 543.11 cv
332.053 543.254 332.053 543.397 332.053 543.541 cv
332.053 544.838 330.973 545.917 329.677 545.917 cv
328.381 545.917 327.301 544.838 327.301 543.541 cv
327.301 542.245 328.381 541.165 329.677 541.165 cv
330.541 541.165 331.261 541.597 331.693 542.245 cv
ef
321.253 517.261 mo
326.437 518.557 330.181 514.165 331.045 509.486 cv
332.053 501.853 327.085 495.373 320.821 491.701 cv
307.501 484.214 291.229 488.605 280.645 498.614 cv
280.285 499.046 279.997 499.477 279.709 499.909 cv
290.149 489.541 307.717 485.221 320.965 492.781 cv
326.797 496.453 331.405 502.789 330.037 510.061 cv
329.029 514.165 325.717 517.694 321.253 517.261 cv
ef
286.045 533.605 mo
285.973 533.605 li
284.605 534.902 283.741 536.413 283.597 538.285 cv
283.597 539.869 284.173 541.382 285.541 542.245 cv
286.549 542.822 287.989 542.822 288.709 541.813 cv
288.925 541.597 289.069 541.309 288.925 541.021 cv
288.709 540.59 288.133 540.877 287.845 541.021 cv
286.621 541.382 285.613 540.949 284.821 539.942 cv
284.533 539.51 284.389 539.077 284.245 538.573 cv
283.885 536.63 284.821 534.902 286.189 533.605 cv
286.405 533.389 286.621 533.245 286.837 533.03 cv
287.485 532.67 288.061 532.309 288.637 532.021 cv
288.637 531.949 li
285.901 533.318 283.453 535.261 281.581 537.926 cv
278.125 542.893 277.333 549.013 279.709 554.701 cv
283.021 561.758 291.085 565.645 298.501 562.333 cv
303.109 560.03 306.061 555.205 304.981 550.021 cv
303.829 545.125 298.501 541.382 293.677 544.117 cv
291.517 545.486 290.005 548.654 292.021 550.885 cv
292.885 551.749 294.973 552.181 295.333 550.453 cv
294.901 551.822 293.245 551.677 292.381 550.957 cv
290.653 549.446 291.157 546.853 292.525 545.269 cv
295.765 541.885 300.949 543.397 303.397 546.853 cv
306.637 551.677 304.765 557.798 300.373 561.037 cv
296.629 563.63 292.165 563.99 288.205 562.477 cv
290.005 563.053 291.949 563.198 293.965 562.694 cv
296.341 561.973 298.573 560.389 299.221 557.798 cv
299.653 555.926 299.005 553.621 296.989 552.973 cv
296.629 552.829 296.053 552.758 295.693 553.046 cv
295.117 553.621 295.765 554.342 296.125 554.773 cv
297.349 556.501 297.133 558.373 295.909 560.03 cv
295.405 560.677 294.757 561.181 294.037 561.614 cv
291.229 563.125 288.061 562.55 285.325 561.037 cv
284.317 560.389 283.381 559.597 282.517 558.661 cv
277.405 552.902 277.333 544.838 281.293 538.573 cv
281.149 538.862 281.005 539.15 280.933 539.365 cv
280.141 541.597 280.141 543.829 281.077 545.917 cv
282.013 547.645 283.525 549.013 285.541 549.157 cv
286.981 549.157 288.637 548.293 288.853 546.781 cv
288.853 546.422 288.853 545.99 288.565 545.773 cv
288.061 545.413 287.629 546.061 287.341 546.349 cv
286.261 547.501 284.821 547.645 283.381 546.997 cv
282.805 546.709 282.373 546.349 281.941 545.845 cv
280.357 543.973 280.357 541.453 281.077 539.221 cv
281.221 538.862 281.365 538.501 281.581 538.141 cv
281.869 537.637 282.229 537.134 282.661 536.701 cv
283.669 535.477 284.821 534.469 286.045 533.605 cv
ef
307.573 522.157 mo
307.213 521.437 306.853 520.718 306.493 519.997 cv
304.261 513.805 300.949 506.749 294.541 504.013 cv
290.293 502.214 285.685 502.214 281.221 501.422 cv
281.437 501.205 281.653 500.917 281.797 500.557 cv
285.541 500.845 289.357 500.557 293.029 501.565 cv
297.997 502.862 301.453 506.605 303.757 511.07 cv
305.125 513.661 306.133 516.397 307.069 519.134 cv
307.213 520.141 307.357 521.15 307.573 522.157 cv
ef
281.365 497.749 mo
281.581 495.086 282.301 492.493 283.813 490.117 cv
285.541 487.67 288.925 485.15 291.589 487.885 cv
291.949 488.318 292.309 488.749 292.669 489.181 cv
296.557 494.437 301.309 499.189 307.861 500.845 cv
311.461 501.709 315.997 501.781 319.165 499.621 cv
321.325 498.11 320.821 496.094 318.733 494.798 cv
317.437 493.862 315.781 493.214 314.341 492.422 cv
310.741 490.477 307.645 488.245 304.837 485.293 cv
303.685 483.853 302.677 482.269 301.237 481.046 cv
298.501 479.174 295.549 478.885 292.381 479.677 cv
287.125 481.406 283.813 485.437 281.941 490.55 cv
281.149 492.997 280.789 495.446 280.789 497.822 cv
281.005 497.822 281.221 497.749 281.365 497.749 cv
ef
311.461 488.677 mo
311.461 488.677 li
313.117 488.533 314.557 487.885 315.637 486.661 cv
316.501 485.581 316.933 484.214 316.429 482.845 cv
315.997 481.981 314.989 481.117 313.909 481.477 cv
313.693 481.55 313.405 481.694 313.405 481.909 cv
313.333 482.342 313.837 482.413 314.125 482.557 cv
315.133 482.917 315.637 483.781 315.637 484.862 cv
315.637 485.293 315.493 485.725 315.349 486.157 cv
314.557 487.67 312.973 488.462 311.389 488.605 cv
311.101 488.605 310.813 488.605 310.597 488.605 cv
309.949 488.605 309.373 488.462 308.797 488.389 cv
308.797 488.462 li
311.389 488.966 314.125 488.822 316.861 488.03 cv
321.901 486.302 325.717 482.486 327.013 477.229 cv
328.453 470.462 324.853 463.477 317.869 461.893 cv
313.477 461.101 308.797 462.902 306.853 467.15 cv
305.125 471.181 306.853 476.654 311.677 477.229 cv
313.909 477.446 316.645 476.006 316.357 473.413 cv
316.285 472.333 314.989 470.893 313.909 471.902 cv
314.845 471.254 315.925 472.189 316.141 473.198 cv
316.573 475.141 314.845 476.654 313.117 477.013 cv
309.013 477.734 306.205 473.917 306.277 470.174 cv
306.565 465.134 311.101 461.822 315.925 461.822 cv
319.957 462.037 323.197 464.125 325.213 467.293 cv
324.205 465.853 322.909 464.773 321.325 464.053 cv
319.237 463.261 316.789 463.261 314.989 464.701 cv
313.765 465.781 312.973 467.798 313.981 469.309 cv
314.197 469.597 314.557 469.957 314.989 469.957 cv
315.637 469.813 315.565 468.949 315.565 468.517 cv
315.637 466.645 316.789 465.493 318.517 464.917 cv
319.237 464.773 319.885 464.701 320.605 464.773 cv
323.413 465.205 325.357 467.293 326.437 469.813 cv
326.797 470.822 327.085 471.829 327.157 472.981 cv
327.661 479.677 323.485 485.365 317.437 487.67 cv
317.653 487.597 317.869 487.453 318.085 487.309 cv
319.813 486.157 321.037 484.645 321.469 482.63 cv
321.685 480.973 321.397 479.174 320.029 478.021 cv
319.021 477.229 317.437 477.013 316.429 477.949 cv
316.285 478.165 316.069 478.526 316.141 478.813 cv
316.285 479.318 316.933 479.101 317.293 479.03 cv
318.661 478.813 319.741 479.462 320.389 480.685 cv
320.605 481.189 320.749 481.694 320.821 482.198 cv
320.893 484.357 319.597 486.157 317.941 487.309 cv
317.653 487.526 317.293 487.67 317.005 487.813 cv
316.501 488.03 315.997 488.174 315.421 488.318 cv
314.125 488.605 312.757 488.677 311.461 488.677 cv
ef
319.957 491.63 mo
320.101 491.701 320.173 491.701 320.245 491.773 cv
328.453 495.446 338.389 494.006 343.789 486.373 cv
347.173 481.261 347.461 473.917 342.349 469.885 cv
340.549 468.517 338.245 467.798 336.013 468.446 cv
333.853 469.238 332.125 471.614 333.997 473.557 cv
334.357 473.917 334.573 474.278 334.717 474.637 cv
335.077 474.134 335.653 473.773 336.301 473.773 cv
337.237 473.773 338.101 474.565 338.101 475.573 cv
338.101 476.581 337.237 477.373 336.301 477.373 cv
335.293 477.373 334.501 476.581 334.501 475.573 cv
334.213 474.205 332.917 473.845 332.485 472.55 cv
331.765 469.526 334.933 467.581 337.525 467.51 cv
342.997 467.51 346.453 472.621 346.813 477.661 cv
347.101 485.221 341.557 491.198 334.573 493.357 cv
329.461 494.725 324.421 494.077 320.029 491.917 cv
319.957 491.63 li
ef
266.821 500.269 mo
263.077 499.694 259.333 499.694 255.805 500.413 cv
245.149 502.789 239.461 518.557 237.301 527.701 cv
236.797 529.789 236.581 532.382 235.573 534.254 cv
234.205 536.99 232.117 534.685 231.181 533.03 cv
227.221 525.829 227.293 515.605 232.693 509.198 cv
240.901 499.765 254.293 496.741 266.461 499.117 cv
266.533 499.55 266.677 499.909 266.821 500.269 cv
ef
271.285 503.51 mo
271.285 503.51 257.893 507.614 259.261 523.813 cv
260.269 535.477 249.109 545.125 237.229 545.701 cv
233.125 545.917 230.965 545.269 225.781 543.758 cv
225.781 543.758 229.741 542.389 233.629 539.654 cv
243.781 532.526 242.053 519.493 250.621 510.278 cv
256.525 503.869 263.221 500.486 271.285 503.51 cv
ef
228.085 517.261 mo
222.901 518.557 219.157 514.165 218.293 509.486 cv
217.213 501.853 222.181 495.373 228.445 491.701 cv
241.765 484.214 258.037 488.605 268.693 498.614 cv
268.981 499.046 269.269 499.477 269.557 499.909 cv
259.117 489.541 241.621 485.221 228.373 492.781 cv
222.469 496.453 217.861 502.789 219.229 510.061 cv
220.237 514.165 223.549 517.694 228.085 517.261 cv
ef
263.005 533.605 mo
263.077 533.605 li
264.445 534.902 265.309 536.413 265.453 538.285 cv
265.453 539.869 264.877 541.382 263.509 542.245 cv
262.501 542.822 261.061 542.822 260.341 541.813 cv
260.125 541.597 259.981 541.309 260.125 541.021 cv
260.341 540.59 260.917 540.877 261.205 541.021 cv
262.429 541.382 263.437 540.949 264.229 539.942 cv
264.517 539.51 264.661 539.077 264.805 538.573 cv
265.165 536.63 264.229 534.902 262.861 533.605 cv
262.645 533.389 262.429 533.245 262.213 533.03 cv
261.637 532.67 260.989 532.309 260.413 532.021 cv
260.413 531.949 li
263.149 533.318 265.597 535.261 267.469 537.926 cv
270.925 542.893 271.717 549.013 269.341 554.701 cv
266.029 561.758 257.965 565.645 250.549 562.333 cv
245.941 560.03 242.989 555.205 244.069 550.021 cv
245.221 545.125 250.549 541.382 255.373 544.117 cv
257.533 545.486 259.045 548.654 257.029 550.885 cv
256.165 551.749 254.077 552.181 253.717 550.453 cv
254.149 551.822 255.805 551.677 256.669 550.957 cv
258.397 549.446 257.893 546.853 256.525 545.269 cv
253.285 541.885 248.101 543.397 245.653 546.853 cv
242.413 551.677 244.285 557.798 248.677 561.037 cv
252.493 563.63 256.885 563.99 260.845 562.477 cv
259.045 563.053 257.101 563.198 255.085 562.694 cv
252.709 561.973 250.477 560.389 249.829 557.798 cv
249.397 555.926 250.045 553.621 252.061 552.973 cv
252.493 552.829 252.997 552.758 253.357 553.046 cv
253.933 553.621 253.285 554.342 252.925 554.773 cv
251.701 556.501 251.917 558.373 253.141 560.03 cv
253.645 560.677 254.293 561.181 255.013 561.614 cv
257.821 563.125 260.989 562.55 263.725 561.037 cv
264.733 560.389 265.669 559.597 266.533 558.661 cv
271.645 552.902 271.717 544.838 267.757 538.573 cv
267.901 538.862 268.045 539.15 268.117 539.365 cv
268.909 541.597 268.909 543.829 267.973 545.917 cv
267.037 547.645 265.525 549.013 263.509 549.157 cv
262.069 549.157 260.413 548.293 260.197 546.781 cv
260.197 546.422 260.197 545.99 260.485 545.773 cv
260.989 545.413 261.421 546.061 261.709 546.349 cv
262.789 547.501 264.229 547.645 265.669 546.997 cv
266.245 546.709 266.677 546.349 267.109 545.845 cv
268.693 543.973 268.693 541.453 267.973 539.221 cv
267.829 538.862 267.685 538.501 267.469 538.141 cv
267.181 537.637 266.821 537.134 266.389 536.701 cv
265.381 535.477 264.229 534.469 263.005 533.605 cv
ef
241.765 522.157 mo
242.053 521.437 242.413 520.718 242.845 519.997 cv
245.005 513.805 248.317 506.749 254.797 504.013 cv
258.829 502.285 263.365 502.214 267.685 501.493 cv
267.397 501.205 267.181 500.917 267.109 500.63 cv
263.437 500.845 259.837 500.63 256.309 501.565 cv
251.269 502.862 247.813 506.605 245.509 511.07 cv
244.141 513.661 243.133 516.397 242.269 519.134 cv
242.053 520.141 241.909 521.15 241.765 522.157 cv
ef
267.901 497.749 mo
267.685 495.086 266.965 492.493 265.453 490.117 cv
263.725 487.67 260.413 485.15 257.749 487.885 cv
257.317 488.318 256.957 488.749 256.669 489.181 cv
252.709 494.437 247.957 499.189 241.405 500.845 cv
237.877 501.709 233.269 501.781 230.173 499.621 cv
227.941 498.11 228.445 496.094 230.533 494.798 cv
231.901 493.862 233.485 493.214 234.997 492.422 cv
238.597 490.477 241.621 488.245 244.429 485.293 cv
245.653 483.853 246.589 482.269 248.029 481.046 cv
250.765 479.174 253.717 478.885 256.885 479.677 cv
262.141 481.406 265.453 485.437 267.325 490.55 cv
268.117 492.997 268.477 495.446 268.477 497.822 cv
268.261 497.822 268.117 497.749 267.901 497.749 cv
ef
237.805 488.677 mo
237.805 488.677 li
236.149 488.533 234.709 487.885 233.629 486.661 cv
232.837 485.581 232.405 484.214 232.909 482.845 cv
233.269 481.981 234.277 481.117 235.357 481.477 cv
235.573 481.55 235.861 481.694 235.933 481.909 cv
236.005 482.342 235.501 482.413 235.213 482.557 cv
234.133 482.917 233.629 483.781 233.629 484.862 cv
233.629 485.293 233.773 485.725 233.917 486.157 cv
234.709 487.67 236.293 488.462 237.949 488.605 cv
238.165 488.605 238.453 488.605 238.669 488.605 cv
239.317 488.605 239.893 488.462 240.469 488.389 cv
240.541 488.462 li
237.877 488.966 235.141 488.822 232.405 488.03 cv
227.365 486.302 223.549 482.486 222.253 477.229 cv
220.813 470.462 224.413 463.477 231.397 461.893 cv
235.861 461.101 240.469 462.902 242.413 467.15 cv
244.213 471.181 242.485 476.654 237.661 477.229 cv
235.429 477.446 232.621 476.006 232.909 473.413 cv
233.053 472.333 234.277 470.893 235.429 471.902 cv
234.421 471.254 233.341 472.189 233.125 473.198 cv
232.693 475.141 234.421 476.654 236.221 477.013 cv
240.253 477.734 243.133 473.917 242.989 470.174 cv
242.701 465.134 238.165 461.822 233.341 461.822 cv
229.381 462.037 226.069 464.125 224.053 467.293 cv
225.061 465.853 226.357 464.773 228.013 464.053 cv
230.101 463.261 232.477 463.261 234.277 464.701 cv
235.573 465.781 236.293 467.798 235.285 469.309 cv
235.069 469.597 234.709 469.957 234.277 469.957 cv
233.629 469.813 233.701 468.949 233.701 468.517 cv
233.629 466.645 232.549 465.493 230.821 464.917 cv
230.101 464.773 229.381 464.701 228.661 464.773 cv
225.925 465.205 223.909 467.293 222.829 469.813 cv
222.469 470.822 222.253 471.829 222.109 472.981 cv
221.605 479.677 225.781 485.365 231.829 487.67 cv
231.613 487.597 231.397 487.453 231.181 487.309 cv
229.525 486.157 228.301 484.645 227.869 482.63 cv
227.581 480.973 227.941 479.174 229.237 478.021 cv
230.245 477.229 231.829 477.013 232.837 477.949 cv
233.053 478.165 233.269 478.526 233.125 478.813 cv
232.981 479.318 232.333 479.101 231.973 479.03 cv
230.605 478.813 229.525 479.462 228.877 480.685 cv
228.661 481.189 228.517 481.694 228.445 482.198 cv
228.373 484.357 229.669 486.157 231.397 487.309 cv
231.685 487.526 231.973 487.67 232.261 487.813 cv
232.765 488.03 233.269 488.174 233.845 488.318 cv
235.213 488.605 236.509 488.677 237.805 488.677 cv
ef
229.309 491.63 mo
229.237 491.701 229.093 491.701 229.021 491.773 cv
220.885 495.446 210.877 494.006 205.477 486.373 cv
202.165 481.261 201.805 473.917 206.989 469.885 cv
208.789 468.517 211.021 467.798 213.253 468.446 cv
215.413 469.238 217.141 471.614 215.269 473.557 cv
214.981 473.917 214.693 474.278 214.549 474.637 cv
214.261 474.134 213.685 473.773 213.037 473.773 cv
212.029 473.773 211.237 474.565 211.237 475.573 cv
211.237 476.581 212.029 477.373 213.037 477.373 cv
213.973 477.373 214.765 476.581 214.765 475.573 cv
215.053 474.205 216.421 473.845 216.781 472.55 cv
217.501 469.526 214.333 467.581 211.741 467.51 cv
206.269 467.51 202.813 472.621 202.525 477.661 cv
202.165 485.221 207.709 491.198 214.693 493.357 cv
219.805 494.725 224.845 494.077 229.237 491.917 cv
229.309 491.63 li
ef
217.069 542.245 mo
213.829 545.125 214.261 550.094 216.565 553.694 cv
220.957 559.957 229.021 561.397 236.077 559.813 cv
250.261 556.429 259.117 543.254 260.701 529.285 cv
260.989 530.581 261.277 531.805 261.709 532.957 cv
261.781 532.957 li
261.565 532.165 261.421 531.373 261.277 530.581 cv
261.061 529.214 260.917 527.845 260.773 526.406 cv
260.413 522.229 260.701 517.981 262.141 514.021 cv
264.661 507.829 269.557 505.238 274.309 504.661 cv
274.309 504.517 274.309 504.446 274.309 504.302 cv
271.141 504.517 267.901 505.309 265.093 507.758 cv
260.557 511.718 259.261 519.565 260.269 526.694 cv
260.485 528.422 260.341 529.645 259.981 531.373 cv
257.461 544.117 248.317 556.214 235.285 559.094 cv
228.445 560.533 220.741 558.877 216.853 552.614 cv
215.197 549.59 214.909 545.845 216.709 543.11 cv
216.709 543.254 216.709 543.397 216.709 543.541 cv
216.709 544.838 217.789 545.917 219.085 545.917 cv
220.381 545.917 221.461 544.838 221.461 543.541 cv
221.461 542.245 220.381 541.165 219.085 541.165 cv
218.221 541.165 217.501 541.597 217.069 542.245 cv
ef
276.253 540.949 mo
276.325 539.365 276.541 537.997 276.973 536.486 cv
278.413 531.734 279.925 526.981 279.709 522.229 cv
279.493 516.685 277.117 511.214 276.253 505.741 cv
276.541 505.741 276.757 505.813 276.973 505.813 cv
278.197 511.357 281.221 516.685 281.581 522.302 cv
281.869 527.198 279.925 532.094 278.053 536.99 cv
277.549 538.358 276.901 539.654 276.253 540.949 cv
0 0 0 0 cmyk
ef
279.493 536.99 mo
279.493 535.621 279.637 534.397 280.141 532.957 cv
280.933 530.725 281.869 528.565 282.445 526.333 cv
283.093 524.174 283.381 522.013 283.021 519.926 cv
282.517 517.406 281.221 515.101 279.853 512.725 cv
278.413 510.422 277.045 508.117 276.253 505.741 cv
276.469 505.741 276.613 505.741 276.829 505.813 cv
277.765 508.117 279.349 510.422 280.861 512.654 cv
282.445 514.957 283.813 517.333 284.245 519.853 cv
284.677 522.013 284.317 524.245 283.669 526.477 cv
283.021 528.781 281.941 531.013 281.077 533.318 cv
280.789 533.966 280.501 534.541 280.285 535.189 cv
279.997 535.765 279.781 536.413 279.493 536.99 cv
ef
274.957 540.661 mo
274.957 539.15 275.101 537.781 275.317 536.269 cv
275.749 533.893 276.181 531.517 276.541 529.214 cv
276.901 526.838 277.189 524.533 277.117 522.157 cv
277.045 519.349 276.541 516.541 276.181 513.734 cv
275.821 511.07 275.533 508.333 275.389 505.597 cv
275.533 505.597 275.677 505.67 275.821 505.67 cv
276.109 508.406 276.613 511.141 277.261 513.805 cv
277.909 516.614 278.773 519.349 278.917 522.157 cv
279.061 524.605 278.629 527.053 278.053 529.501 cv
277.549 531.878 276.829 534.254 276.253 536.701 cv
276.037 537.349 275.893 538.07 275.677 538.718 cv
275.461 539.365 275.173 540.013 274.957 540.661 cv
ef
272.869 540.949 mo
272.797 539.365 272.581 537.997 272.149 536.486 cv
270.781 531.734 269.197 526.981 269.413 522.229 cv
269.701 516.685 272.005 511.214 272.869 505.741 cv
272.653 505.741 272.437 505.813 272.221 505.813 cv
270.997 511.357 267.901 516.685 267.613 522.302 cv
267.325 527.198 269.269 532.094 271.069 536.99 cv
271.573 538.358 272.221 539.654 272.869 540.949 cv
ef
269.629 536.99 mo
269.629 535.621 269.485 534.397 268.981 532.957 cv
268.189 530.725 267.253 528.565 266.677 526.333 cv
266.101 524.174 265.741 522.013 266.173 519.926 cv
266.605 517.406 267.901 515.101 269.341 512.725 cv
270.709 510.422 272.077 508.117 272.941 505.741 cv
272.725 505.741 272.509 505.741 272.293 505.813 cv
271.357 508.117 269.773 510.422 268.261 512.654 cv
266.677 514.957 265.309 517.333 264.877 519.853 cv
264.445 522.013 264.805 524.245 265.453 526.477 cv
266.173 528.781 267.181 531.013 268.117 533.318 cv
268.333 533.966 268.621 534.541 268.909 535.189 cv
269.125 535.765 269.413 536.413 269.629 536.99 cv
ef
274.093 540.661 mo
274.093 539.15 274.021 537.781 273.733 536.269 cv
273.301 533.893 272.941 531.517 272.581 529.214 cv
272.221 526.838 271.933 524.533 272.005 522.157 cv
272.149 519.349 272.581 516.541 272.941 513.734 cv
273.229 511.07 273.517 508.333 273.733 505.597 cv
273.589 505.597 273.445 505.67 273.301 505.67 cv
273.085 508.406 272.509 511.141 271.861 513.805 cv
271.213 516.614 270.349 519.349 270.205 522.157 cv
270.061 524.605 270.493 527.053 271.069 529.501 cv
271.645 531.878 272.293 534.254 272.941 536.701 cv
273.085 537.349 273.229 538.07 273.445 538.718 cv
273.661 539.365 273.877 540.013 274.093 540.661 cv
ef
274.597 505.597 mo
274.741 507.254 275.965 520.933 275.461 526.406 cv
275.029 530.654 274.669 534.469 274.525 536.198 cv
274.381 534.469 274.093 530.654 273.661 526.406 cv
273.157 520.933 274.309 507.254 274.525 505.597 cv
274.597 505.597 li
ef
278.773 503.725 mo
279.277 504.013 280.141 504.373 281.077 504.949 cv
286.477 506.966 291.301 511.07 291.877 517.117 cv
291.949 518.198 291.949 519.349 291.949 520.429 cv
292.093 522.661 292.309 524.749 292.741 526.981 cv
293.677 530.437 294.973 533.318 297.277 536.125 cv
298.069 537.061 299.005 537.853 299.941 538.718 cv
298.861 537.278 297.925 535.765 296.989 534.181 cv
295.117 530.725 294.469 527.269 294.109 523.382 cv
294.037 522.446 294.037 521.51 294.037 520.573 cv
294.037 518.413 294.109 516.254 293.317 514.238 cv
291.013 508.333 284.749 505.021 278.773 503.725 cv
ef
279.565 503.006 mo
279.277 503.077 278.989 503.15 278.773 503.221 cv
279.925 503.51 281.581 503.942 282.517 504.302 cv
288.637 506.533 294.325 511.141 295.405 517.694 cv
295.549 518.845 295.621 519.997 295.765 521.221 cv
296.053 523.526 296.413 525.758 297.061 528.134 cv
298.285 531.805 299.941 534.902 302.533 537.926 cv
303.469 538.862 304.477 539.798 305.629 540.734 cv
304.333 539.15 303.253 537.565 302.173 535.838 cv
299.869 532.165 298.861 528.422 298.213 524.318 cv
298.141 523.382 298.069 522.373 297.925 521.365 cv
297.853 519.134 297.709 516.829 296.701 514.67 cv
294.109 508.909 288.133 505.382 282.229 503.654 cv
281.581 503.437 280.501 503.221 279.565 503.006 cv
ef
282.013 502.501 mo
281.653 502.501 281.365 502.573 281.005 502.645 cv
287.917 504.302 295.621 508.981 297.853 516.181 cv
298.069 517.261 298.357 518.413 298.573 519.493 cv
299.221 521.725 299.869 523.885 300.733 526.117 cv
302.389 529.573 304.405 532.526 307.285 535.406 cv
308.293 536.342 309.373 537.205 310.525 538.07 cv
309.157 536.557 307.861 535.046 306.637 533.462 cv
303.973 529.933 302.533 526.406 301.381 522.517 cv
301.165 521.581 300.949 520.645 300.661 519.709 cv
300.301 517.55 299.869 515.389 298.645 513.302 cv
295.117 507.397 288.277 503.942 282.013 502.501 cv
ef
270.565 503.725 mo
269.989 504.013 269.125 504.373 268.189 504.949 cv
262.789 506.966 257.965 511.07 257.389 517.117 cv
257.317 518.198 257.317 519.349 257.317 520.429 cv
257.173 522.661 256.957 524.749 256.525 526.981 cv
255.661 530.437 254.293 533.318 252.061 536.125 cv
251.197 537.061 250.333 537.853 249.325 538.718 cv
250.405 537.278 251.341 535.765 252.277 534.181 cv
254.149 530.725 254.869 527.269 255.229 523.382 cv
255.229 522.446 255.229 521.51 255.301 520.573 cv
255.229 518.413 255.229 516.254 255.949 514.238 cv
258.325 508.333 264.589 505.021 270.565 503.725 cv
ef
269.701 503.006 mo
269.989 503.077 270.277 503.15 270.565 503.221 cv
269.341 503.51 267.757 503.942 266.749 504.302 cv
260.701 506.533 254.941 511.141 253.861 517.694 cv
253.717 518.845 253.645 519.997 253.573 521.221 cv
253.213 523.526 252.853 525.758 252.205 528.134 cv
250.981 531.805 249.325 534.902 246.733 537.926 cv
245.797 538.862 244.789 539.798 243.709 540.734 cv
244.933 539.15 246.085 537.565 247.165 535.838 cv
249.397 532.165 250.405 528.422 251.053 524.318 cv
251.125 523.382 251.269 522.373 251.341 521.365 cv
251.485 519.134 251.557 516.829 252.565 514.67 cv
255.229 508.909 261.205 505.382 267.109 503.654 cv
267.757 503.437 268.837 503.221 269.701 503.006 cv
ef
267.253 502.501 mo
267.613 502.501 267.973 502.573 268.333 502.645 cv
261.421 504.302 253.645 508.981 251.485 516.181 cv
251.197 517.261 250.981 518.413 250.693 519.493 cv
250.117 521.725 249.469 523.885 248.533 526.117 cv
246.877 529.573 244.933 532.526 242.053 535.406 cv
241.045 536.342 239.893 537.205 238.741 538.07 cv
240.181 536.557 241.477 535.046 242.701 533.462 cv
245.293 529.933 246.733 526.406 247.957 522.517 cv
248.173 521.581 248.389 520.645 248.605 519.709 cv
248.965 517.55 249.397 515.389 250.621 513.302 cv
254.149 507.397 261.061 503.942 267.253 502.501 cv
ef
271.933 453.11 mo
271.933 453.11 li
271.141 453.973 267.325 454.694 266.461 453.254 cv
266.317 452.966 266.317 452.677 266.461 452.318 cv
266.749 451.526 266.749 451.021 266.461 450.661 cv
266.245 450.302 265.669 450.013 265.021 449.798 cv
262.789 449.006 262.861 446.557 265.381 446.342 cv
266.029 446.342 266.893 446.413 267.829 446.413 cv
268.765 446.413 269.053 446.269 269.053 445.981 cv
269.053 445.117 268.261 444.758 269.269 444.037 cv
270.277 443.318 272.941 442.67 273.517 444.037 cv
273.733 444.397 273.877 444.685 274.093 444.902 cv
274.381 445.261 274.381 445.261 274.669 444.902 cv
274.885 444.685 275.029 444.397 275.245 444.037 cv
275.965 442.526 280.645 443.533 280.069 445.117 cv
279.493 446.701 280.717 446.413 282.013 446.342 cv
283.453 446.342 284.605 446.269 285.181 447.278 cv
285.973 448.645 285.037 449.365 283.813 449.798 cv
283.165 450.013 282.661 450.302 282.373 450.661 cv
282.085 451.021 282.085 451.526 282.373 452.318 cv
282.517 452.677 282.517 452.966 282.373 453.254 cv
281.509 454.694 277.693 453.973 276.901 453.11 cv
275.533 451.597 273.229 451.67 271.933 453.11 cv
cp
277.261 452.749 mo
277.837 453.397 281.293 454.117 281.869 452.966 cv
281.941 452.893 281.941 452.749 281.869 452.533 cv
281.509 451.526 281.581 450.878 281.941 450.373 cv
282.301 449.869 282.877 449.581 283.597 449.293 cv
284.533 449.006 285.325 448.573 284.749 447.565 cv
284.317 446.773 283.309 446.845 282.013 446.845 cv
280.357 446.917 278.845 446.917 279.565 444.973 cv
279.565 444.902 li
279.853 444.254 276.253 443.101 275.677 444.254 cv
275.461 444.685 275.245 444.973 275.101 445.189 cv
274.453 445.981 274.309 445.981 273.661 445.189 cv
273.517 444.973 273.301 444.685 273.157 444.254 cv
272.653 443.245 270.277 443.966 269.557 444.469 cv
268.909 444.902 269.557 445.333 269.557 445.981 cv
269.557 446.557 269.125 446.917 267.829 446.917 cv
266.893 446.917 266.101 446.845 265.453 446.845 cv
263.437 447.061 263.437 448.718 265.237 449.293 cv
265.957 449.581 266.533 449.869 266.893 450.373 cv
267.253 450.878 267.325 451.526 266.965 452.533 cv
266.317 454.117 270.853 453.397 271.573 452.749 cv
273.085 451.021 275.677 451.021 277.261 452.749 cv
0 0 0 1 cmyk
f
274.381 450.157 mo
274.741 450.229 275.389 450.373 275.749 450.805 cv
276.253 451.309 278.629 451.453 278.269 450.517 cv
277.909 449.654 278.341 449.365 279.061 449.077 cv
279.709 448.862 279.997 448.573 279.709 447.997 cv
279.349 447.493 278.629 447.637 277.693 447.637 cv
276.829 447.637 276.901 447.349 277.117 446.845 cv
277.261 446.342 275.245 445.694 274.885 446.413 cv
274.741 446.773 274.525 446.99 274.381 447.061 cv
274.237 446.99 274.021 446.773 273.877 446.413 cv
273.517 445.694 271.573 446.342 271.717 446.845 cv
271.933 447.349 272.077 447.637 271.141 447.637 cv
270.205 447.637 269.485 447.493 269.197 447.997 cv
268.837 448.573 269.125 448.862 269.773 449.077 cv
270.493 449.365 270.925 449.654 270.565 450.517 cv
270.205 451.453 272.581 451.309 273.085 450.805 cv
273.373 450.373 274.093 450.229 274.381 450.157 cv
ef
267.397 420.349 mo
267.181 423.734 266.821 425.966 265.741 429.349 cv
262.861 438.278 259.693 447.134 260.197 455.99 cv
260.701 464.773 264.373 473.198 266.749 481.765 cv
268.549 488.101 269.629 497.677 269.413 497.677 cv
269.197 497.677 267.613 487.238 264.877 483.205 cv
259.045 474.781 251.773 465.493 251.341 455.845 cv
250.837 446.053 257.965 436.765 263.437 427.333 cv
264.733 425.03 266.173 422.725 267.397 420.349 cv
ef
255.949 415.238 mo
255.445 410.917 251.125 408.397 246.877 408.181 cv
239.245 408.11 233.413 413.942 230.605 420.565 cv
225.205 434.174 230.893 449.006 241.333 458.293 cv
241.189 458.221 241.045 458.221 240.901 458.15 cv
240.109 457.429 237.517 455.486 233.845 455.917 cv
229.453 456.349 225.421 455.413 222.397 453.254 cv
219.373 451.165 216.781 447.134 216.637 447.134 cv
216.421 447.134 226.861 462.758 238.885 459.446 cv
240.037 459.157 241.261 459.086 241.909 459.086 cv
242.485 459.373 243.061 459.734 243.709 460.021 cv
247.309 462.181 250.621 464.845 252.997 468.302 cv
256.597 473.99 255.877 479.462 253.573 483.781 cv
253.645 483.781 253.789 483.853 253.861 483.926 cv
255.589 481.117 256.813 478.021 256.453 474.349 cv
255.805 468.373 250.117 462.758 243.781 459.446 cv
242.269 458.654 241.261 457.862 240.109 456.565 cv
231.109 447.134 226.501 432.661 231.685 420.349 cv
234.421 413.942 240.253 408.614 247.597 409.046 cv
251.053 409.406 254.293 411.349 255.445 414.446 cv
255.301 414.373 255.229 414.229 255.085 414.157 cv
254.005 413.365 252.493 413.654 251.773 414.734 cv
250.981 415.813 251.269 417.325 252.349 418.046 cv
253.429 418.838 254.941 418.55 255.661 417.469 cv
256.165 416.822 256.237 415.957 255.949 415.238 cv
ef
293.461 414.734 mo
293.893 410.486 298.213 407.966 302.461 407.749 cv
310.165 407.677 315.925 413.437 318.733 420.134 cv
324.133 433.741 318.517 448.573 308.005 457.862 cv
308.149 457.789 308.293 457.718 308.437 457.718 cv
309.301 456.997 311.893 455.053 315.493 455.413 cv
319.957 455.917 323.989 454.981 327.013 452.822 cv
329.965 450.734 332.557 446.63 332.773 446.63 cv
332.917 446.63 322.477 462.325 310.525 459.013 cv
309.373 458.654 308.149 458.654 307.501 458.581 cv
306.925 458.942 306.277 459.229 305.701 459.59 cv
302.029 461.749 298.717 464.413 296.413 467.869 cv
292.813 473.557 293.533 479.03 295.765 483.278 cv
295.693 483.349 295.621 483.422 295.549 483.422 cv
293.821 480.685 292.597 477.59 292.957 473.917 cv
293.605 467.942 299.293 462.325 305.629 459.013 cv
307.141 458.221 308.077 457.357 309.301 456.134 cv
318.301 446.701 322.909 432.229 317.653 419.917 cv
314.917 413.51 309.157 408.181 301.813 408.614 cv
298.357 408.973 295.117 410.917 293.965 414.013 cv
294.037 413.942 294.181 413.798 294.253 413.725 cv
295.333 412.933 296.845 413.221 297.637 414.302 cv
298.357 415.382 298.141 416.893 297.061 417.614 cv
295.981 418.406 294.469 418.117 293.677 417.037 cv
293.245 416.389 293.173 415.526 293.461 414.734 cv
ef
274.381 489.254 mo
269.341 489.254 265.237 492.637 265.237 496.813 cv
265.237 500.917 269.341 504.302 274.381 504.302 cv
279.493 504.302 283.597 500.917 283.597 496.813 cv
283.597 492.637 279.493 489.254 274.381 489.254 cv
0 0 0 0 cmyk
ef
269.269 477.013 mo
268.837 479.462 268.549 482.198 268.549 485.15 cv
268.549 494.51 271.213 502.141 274.381 502.141 cv
277.621 502.141 280.285 494.51 280.285 485.15 cv
280.285 481.694 279.925 478.526 279.349 475.862 cv
277.693 468.734 275.893 466.573 275.893 458.51 cv
275.893 452.101 li
275.317 451.813 274.741 451.67 274.381 451.67 cv
274.021 451.67 273.445 451.813 272.941 452.101 cv
272.941 457.933 li
272.941 466.501 270.709 469.309 269.269 477.013 cv
0 0 0 1 cmyk
ef
274.381 453.397 mo
273.733 468.805 271.861 476.51 271.861 484.285 cv
271.861 491.99 272.509 499.694 274.381 499.694 cv
276.325 499.694 276.973 491.99 276.973 484.285 cv
276.973 476.51 275.029 468.805 274.381 453.397 cv
0 0 0 0 cmyk
ef
272.725 557.077 mo
273.733 555.926 275.533 555.926 276.613 557.077 cv
277.765 558.157 277.765 559.957 276.613 561.037 cv
275.533 562.189 273.733 562.189 272.725 561.037 cv
271.645 559.957 271.645 558.157 272.725 557.077 cv
0 0 0 1 cmyk
ef
354.445 588.758 mo
360.853 584.654 368.629 582.853 375.901 586.094 cv
381.661 588.973 385.837 595.309 383.029 601.645 cv
382.237 603.229 380.149 605.605 381.301 607.406 cv
382.597 609.422 385.765 607.406 386.989 606.397 cv
390.733 603.085 391.309 597.829 389.581 593.293 cv
386.269 585.446 377.701 582.205 369.637 582.493 cv
364.021 582.926 359.197 584.798 354.589 587.893 cv
354.517 588.11 354.517 588.397 354.445 588.758 cv
ef
503.197 541.309 mo
503.845 542.245 507.949 539.798 508.525 539.51 cv
518.965 534.254 528.469 541.526 532.285 551.462 cv
537.253 567.229 529.333 582.637 517.453 592.862 cv
494.053 611.221 462.733 608.845 438.181 594.085 cv
430.621 589.261 424.285 583.645 418.165 577.165 cv
416.365 575.293 418.021 577.453 418.597 578.174 cv
442.501 607.477 487.141 618.926 519.109 595.526 cv
533.149 584.293 542.149 566.798 536.461 548.798 cv
533.005 539.654 525.373 531.734 515.005 532.597 cv
509.461 533.318 506.869 536.125 503.701 540.157 cv
503.557 540.373 502.981 541.021 503.197 541.309 cv
ef
498.661 600.781 mo
503.629 599.198 507.877 596.03 509.965 590.917 cv
511.837 585.949 510.829 579.758 505.645 577.309 cv
504.781 576.949 503.917 576.805 503.125 576.517 cv
501.037 575.798 500.533 573.709 502.621 572.63 cv
505.429 571.117 508.957 572.269 511.261 574.141 cv
516.157 578.533 515.941 585.373 513.205 590.845 cv
510.181 596.101 505.501 599.413 499.741 601.285 cv
498.661 601.573 497.509 601.789 496.429 602.006 cv
497.149 601.573 497.941 601.214 498.661 600.781 cv
ef
538.477 557.869 mo
536.173 536.269 519.325 517.189 496.645 517.117 cv
481.381 517.189 466.261 527.342 464.677 543.325 cv
463.813 552.829 469.357 564.205 480.013 564.709 cv
484.261 564.853 489.445 562.406 489.517 557.581 cv
489.445 555.134 487.573 554.125 486.781 552.254 cv
486.349 552.902 485.557 553.261 484.765 553.261 cv
483.469 553.189 482.461 552.037 482.533 550.741 cv
482.605 549.446 483.685 548.437 484.981 548.51 cv
486.349 548.581 487.285 549.734 487.213 551.03 cv
487.213 551.174 487.213 551.245 487.213 551.389 cv
487.789 553.261 489.661 554.125 490.237 556.141 cv
491.893 562.046 485.413 565.933 480.373 565.933 cv
469.717 565.718 463.453 554.917 463.669 545.269 cv
464.245 528.278 479.941 516.973 495.997 516.614 cv
519.253 516.469 536.461 535.909 538.477 557.869 cv
ef
507.445 598.406 mo
513.853 593.654 519.109 585.661 516.733 577.382 cv
515.653 573.781 512.989 570.829 509.029 570.397 cv
506.293 570.11 503.989 569.677 501.613 568.094 cv
494.557 563.269 494.269 553.909 497.725 546.781 cv
497.725 546.709 497.725 546.709 497.725 546.637 cv
497.725 545.917 498.301 545.342 499.021 545.342 cv
499.813 545.342 500.389 545.917 500.389 546.637 cv
500.389 547.429 499.813 548.006 499.021 548.006 cv
498.517 548.006 498.085 547.718 497.869 547.358 cv
495.781 552.254 495.421 557.942 498.445 562.55 cv
500.893 566.077 504.349 567.302 508.381 567.59 cv
516.589 568.021 519.901 576.013 518.677 583.285 cv
517.381 589.909 513.205 595.165 507.445 598.406 cv
ef
519.829 585.734 mo
520.045 585.302 520.189 584.798 520.405 584.365 cv
521.917 579.541 521.989 574.789 520.405 569.966 cv
519.973 568.526 519.397 567.229 518.749 565.933 cv
517.741 564.205 516.589 562.838 516.805 560.749 cv
517.309 557.654 520.117 555.997 522.997 555.781 cv
524.365 555.637 525.877 555.853 527.245 555.493 cv
528.613 555.134 527.965 554.125 527.173 553.477 cv
523.789 551.101 518.965 551.677 515.797 553.981 cv
512.989 556.214 511.621 559.453 512.341 562.981 cv
512.917 565.214 514.213 566.942 515.653 568.597 cv
516.229 569.389 516.805 570.11 517.309 570.902 cv
519.973 575.006 520.765 579.469 519.469 584.221 cv
519.397 584.798 519.181 585.302 519.037 585.805 cv
519.325 585.805 519.613 585.734 519.829 585.734 cv
ef
523.357 581.917 mo
528.397 576.229 525.733 571.117 528.253 568.526 cv
529.117 567.59 531.133 567.013 531.133 567.013 cv
531.133 567.013 525.085 566.654 522.925 571.477 cv
521.053 575.581 523.285 578.677 521.917 582.349 cv
521.485 583.429 520.981 584.51 520.981 584.51 cv
523.357 581.917 li
ef
522.781 530.15 mo
516.445 531.302 512.413 525.973 508.813 526.406 cv
507.517 526.55 505.861 527.845 505.861 527.845 cv
505.861 527.845 509.245 522.805 514.357 523.957 cv
518.821 524.966 519.829 528.637 523.645 529.789 cv
524.797 530.077 525.877 530.365 525.877 530.365 cv
522.781 530.15 li
ef
533.869 537.853 mo
535.309 531.59 530.125 527.342 530.701 523.741 cv
530.917 522.446 532.213 520.862 532.213 520.862 cv
532.213 520.862 527.029 524.03 528.037 529.214 cv
528.829 533.677 532.429 534.902 533.437 538.718 cv
533.725 539.869 533.869 541.021 533.869 541.021 cv
533.869 537.853 li
ef
477.349 564.493 mo
479.005 564.997 480.805 564.997 482.389 563.99 cv
483.685 563.053 484.477 561.685 484.333 560.101 cv
484.261 559.67 484.117 559.309 484.045 558.949 cv
483.901 558.373 484.189 557.798 484.909 558.013 cv
485.701 558.229 486.205 559.309 486.349 560.101 cv
486.565 561.685 485.845 563.125 484.693 564.061 cv
482.821 565.501 480.589 565.645 478.429 565.141 cv
477.997 564.997 477.565 564.853 477.133 564.709 cv
477.205 564.637 477.277 564.565 477.349 564.493 cv
ef
404.773 606.973 mo
405.061 606.254 408.661 606.614 409.237 606.685 cv
418.165 606.973 424.285 600.709 425.437 594.302 cv
426.589 584.437 417.805 577.885 406.933 575.15 cv
385.621 570.685 361.789 579.541 345.445 593.654 cv
341.197 597.325 337.957 601.07 334.789 605.245 cv
334.501 605.389 334.141 605.605 333.997 605.677 cv
347.893 584.437 379.645 567.877 407.725 573.278 cv
420.541 575.725 430.477 583.501 429.181 594.805 cv
428.029 600.637 423.565 606.829 415.357 608.917 cv
410.965 609.853 408.517 608.917 405.349 607.477 cv
405.133 607.406 404.629 607.189 404.773 606.973 cv
ef
352.213 590.053 mo
352.933 589.765 353.653 589.477 354.301 589.261 cv
354.949 589.046 355.669 588.902 356.245 588.829 cv
359.629 588.397 363.445 588.758 365.965 591.349 cv
366.973 592.573 367.549 594.302 366.253 595.526 cv
365.677 596.03 365.173 596.605 364.669 597.181 cv
364.165 597.829 365.317 596.749 366.469 596.245 cv
368.485 595.309 369.493 593.437 369.061 591.205 cv
368.701 589.765 367.837 588.614 366.613 587.677 cv
361.717 584.221 355.021 586.885 350.773 590.269 cv
349.765 591.134 348.829 592.07 348.037 593.15 cv
349.189 591.853 350.629 590.773 352.213 590.053 cv
ef
310.453 584.293 mo
309.877 583.789 311.029 581.557 311.173 580.909 cv
312.253 575.798 306.133 573.349 301.741 573.926 cv
293.317 575.365 289.141 583.789 290.725 591.278 cv
293.461 603.373 307.069 609.709 319.165 609.278 cv
325.069 608.917 330.397 607.189 335.005 604.453 cv
334.501 605.389 li
333.349 606.037 332.125 606.685 330.829 607.261 cv
318.301 612.373 302.965 610.573 293.749 600.493 cv
287.701 593.725 286.333 583.789 292.885 576.805 cv
295.981 573.637 300.157 571.765 304.765 572.053 cv
310.741 572.701 316.141 578.318 311.461 583.358 cv
311.389 583.429 310.669 584.437 310.453 584.293 cv
ef
330.325 607.333 mo
330.757 606.973 331.405 606.11 331.765 605.677 cv
333.133 603.877 334.357 602.437 336.445 601.358 cv
342.853 598.406 349.549 602.077 353.149 607.477 cv
353.221 607.55 353.221 607.55 353.221 607.55 cv
353.797 607.838 353.941 608.557 353.653 609.061 cv
353.365 609.565 352.645 609.781 352.141 609.422 cv
351.637 609.134 351.421 608.486 351.709 607.909 cv
351.925 607.55 352.357 607.406 352.717 607.406 cv
350.125 603.877 346.237 601.214 341.701 601.429 cv
338.317 601.718 336.085 603.517 334.213 606.11 cv
333.421 606.397 332.053 606.973 330.325 607.333 cv
ef
481.813 544.909 mo
481.813 544.909 li
479.869 542.462 477.349 540.877 474.253 540.517 cv
471.661 540.302 468.997 541.094 467.485 543.325 cv
466.477 544.909 466.261 547.358 467.917 548.725 cv
468.277 549.013 468.781 549.229 469.213 549.085 cv
469.933 548.725 469.573 547.862 469.357 547.285 cv
468.853 545.269 469.717 543.541 471.445 542.389 cv
472.165 541.957 472.885 541.67 473.749 541.526 cv
476.917 541.094 479.797 542.749 481.885 545.125 cv
482.173 545.557 482.461 545.917 482.677 546.349 cv
483.253 547.358 483.757 548.365 484.189 549.446 cv
484.333 549.446 li
482.317 544.765 479.221 540.517 475.117 537.134 cv
467.053 531.013 456.901 529.07 447.325 532.597 cv
435.229 537.493 428.101 550.526 432.997 563.198 cv
436.381 571.046 444.157 576.373 452.869 575.006 cv
461.077 573.493 467.845 564.997 463.669 556.718 cv
461.653 552.973 456.397 550.238 452.653 553.333 cv
450.997 554.773 450.205 558.229 452.941 558.877 cv
450.781 558.085 451.213 555.349 452.509 553.981 cv
455.101 551.245 459.421 552.325 461.797 554.701 cv
467.197 560.318 464.245 568.885 458.269 572.701 cv
449.989 577.67 440.053 573.997 434.941 566.365 cv
430.909 559.885 430.765 552.469 433.573 546.061 cv
432.493 549.013 432.133 552.181 432.781 555.565 cv
433.717 559.67 436.237 563.486 440.413 564.781 cv
443.509 565.573 447.397 564.709 448.693 561.469 cv
448.981 560.822 449.125 559.885 448.621 559.238 cv
447.757 558.302 446.533 559.309 445.741 559.885 cv
442.789 561.685 439.765 561.181 437.029 559.021 cv
436.021 558.157 435.229 557.077 434.581 555.853 cv
432.349 551.03 433.573 545.773 436.237 541.382 cv
437.461 539.725 438.829 538.214 440.485 536.917 cv
450.565 528.926 463.885 529.501 473.965 536.557 cv
473.533 536.342 473.101 536.125 472.669 535.909 cv
469.069 534.469 465.397 534.181 461.725 535.621 cv
458.845 536.99 456.397 539.437 456.037 542.749 cv
455.893 545.125 457.117 547.933 459.709 548.437 cv
460.285 548.51 461.005 548.51 461.365 548.006 cv
461.941 547.214 461.005 546.493 460.501 545.99 cv
458.701 544.046 458.629 541.67 459.781 539.365 cv
460.285 538.429 461.005 537.709 461.797 537.061 cv
465.037 534.614 469.213 534.758 472.885 536.198 cv
473.533 536.413 474.109 536.773 474.613 537.061 cv
475.477 537.709 476.269 538.358 476.989 539.006 cv
478.861 540.877 480.517 542.822 481.813 544.909 cv
ef
285.037 577.813 mo
281.797 576.446 278.341 578.462 276.541 581.342 cv
273.517 586.741 275.317 593.077 278.917 597.614 cv
285.685 606.037 296.917 608.198 306.925 605.605 cv
307.789 605.389 308.581 605.174 309.373 604.885 cv
313.261 603.229 316.717 600.997 321.109 600.637 cv
326.437 600.278 330.037 602.942 332.125 606.254 cv
332.197 606.181 332.269 606.11 332.341 606.11 cv
331.045 603.805 329.389 601.718 326.653 600.565 cv
322.765 598.909 317.581 600.061 313.117 602.51 cv
310.813 603.734 308.869 604.885 306.277 605.389 cv
296.485 607.406 285.397 604.813 279.133 596.749 cv
275.749 592.358 274.237 586.238 277.405 581.198 cv
279.061 578.966 281.653 577.453 284.317 577.885 cv
284.173 577.885 284.029 577.957 283.957 577.957 cv
283.021 578.462 282.589 579.614 283.021 580.55 cv
283.525 581.486 284.677 581.917 285.613 581.413 cv
286.549 580.981 286.981 579.829 286.477 578.893 cv
286.189 578.245 285.613 577.885 285.037 577.813 cv
ef
303.469 606.829 mo
299.365 603.877 296.629 599.557 296.989 594.373 cv
297.421 590.99 299.509 587.389 303.181 587.03 cv
305.341 586.885 308.221 587.822 309.301 589.838 cv
309.373 589.909 309.517 590.198 309.373 590.053 cv
308.005 588.541 306.349 588.037 304.333 588.685 cv
299.365 590.486 298.357 596.749 299.941 601.214 cv
300.445 602.581 301.237 603.805 302.245 604.957 cv
302.893 605.605 303.613 606.254 304.405 606.758 cv
303.469 606.829 li
ef
299.149 604.885 mo
298.645 604.741 297.565 604.741 296.989 604.741 cv
294.757 604.813 292.813 604.741 290.725 603.734 cv
284.461 600.493 283.309 592.933 285.325 586.741 cv
285.325 586.67 285.325 586.67 285.325 586.597 cv
285.253 586.021 285.685 585.446 286.261 585.373 cv
286.837 585.302 287.413 585.734 287.485 586.309 cv
287.557 586.957 287.125 587.533 286.549 587.605 cv
286.117 587.605 285.757 587.462 285.541 587.174 cv
284.317 591.349 284.605 596.03 287.557 599.486 cv
289.861 602.006 292.597 602.725 295.837 602.581 cv
296.557 602.942 297.781 603.734 299.149 604.885 cv
ef
290.653 578.677 mo
294.109 574.285 291.877 570.685 293.677 568.67 cv
294.253 567.949 295.693 567.446 295.693 567.446 cv
295.693 567.446 291.229 567.446 289.861 571.046 cv
288.709 574.141 290.509 576.302 289.645 579.037 cv
289.357 579.902 289.069 580.694 289.069 580.694 cv
290.653 578.677 li
ef
295.621 573.709 mo
299.509 571.117 298.645 567.59 300.589 566.437 cv
301.237 566.006 302.533 566.006 302.533 566.006 cv
302.533 566.006 298.933 564.853 296.917 567.373 cv
295.189 569.605 296.125 571.765 294.685 573.781 cv
294.325 574.358 293.821 574.933 293.821 574.933 cv
295.621 573.709 li
ef
300.445 571.333 mo
303.541 570.397 303.685 567.949 305.197 567.517 cv
305.701 567.373 306.565 567.59 306.565 567.59 cv
306.565 567.59 304.405 566.15 302.605 567.446 cv
301.021 568.526 301.165 570.11 299.869 571.189 cv
299.437 571.477 299.077 571.765 299.077 571.765 cv
300.445 571.333 li
ef
330.973 601.214 mo
330.685 600.493 330.325 599.845 329.965 599.198 cv
329.533 598.621 329.173 598.117 328.741 597.541 cv
326.509 595.021 323.413 592.789 319.813 593.077 cv
318.301 593.293 316.645 594.229 316.861 595.957 cv
316.933 596.749 316.933 597.541 316.933 598.261 cv
316.933 599.053 316.717 597.541 316.213 596.389 cv
315.349 594.373 315.853 592.285 317.653 590.917 cv
318.877 590.053 320.245 589.765 321.757 589.838 cv
327.733 590.557 330.973 596.966 331.909 602.293 cv
332.125 603.59 332.197 604.957 332.125 606.254 cv
332.053 604.526 331.693 602.798 330.973 601.214 cv
ef
333.637 602.581 mo
336.157 598.55 333.853 595.741 335.149 593.869 cv
335.581 593.15 336.805 592.645 336.805 592.645 cv
336.805 592.645 332.989 593.077 332.197 596.245 cv
331.549 598.981 333.277 600.637 332.773 603.013 cv
332.701 603.734 332.485 604.453 332.485 604.453 cv
333.637 602.581 li
ef
332.629 606.181 mo
337.093 604.453 339.469 607.117 341.557 606.181 cv
342.277 605.893 343.069 604.813 343.069 604.813 cv
343.069 604.813 341.917 608.486 338.677 608.701 cv
335.869 608.845 334.573 606.902 332.125 606.902 cv
331.333 606.902 330.613 606.973 330.613 606.973 cv
332.629 606.181 li
ef
340.837 599.053 mo
344.221 596.749 346.669 598.55 348.253 597.397 cv
348.829 597.037 349.189 596.03 349.189 596.03 cv
349.189 596.03 348.973 599.198 346.309 599.99 cv
344.005 600.709 342.565 599.269 340.477 599.773 cv
339.901 599.917 339.325 600.061 339.325 600.061 cv
340.837 599.053 li
ef
438.685 596.605 mo
438.685 596.533 438.613 596.605 438.613 596.749 cv
438.685 598.477 439.909 602.942 437.677 603.949 cv
436.165 604.67 433.645 603.661 432.205 601.645 cv
430.117 598.838 429.757 593.798 429.829 590.342 cv
432.637 592.645 435.661 594.734 438.685 596.605 cv
cp
449.773 602.221 mo
446.029 600.637 442.285 598.765 438.757 596.605 cv
439.549 597.325 443.293 605.533 444.661 606.685 cv
446.461 608.342 449.125 608.845 450.493 607.838 cv
452.581 606.325 450.205 604.021 449.773 602.221 cv
cp
461.725 606.181 mo
462.589 607.406 462.877 609.349 461.653 610.214 cv
458.989 612.157 454.885 608.63 453.085 606.614 cv
450.925 604.094 450.133 602.869 449.845 602.293 cv
453.733 603.877 457.693 605.174 461.725 606.181 cv
ef
386.341 569.389 mo
386.413 569.318 li
388.789 565.789 389.869 561.902 389.149 557.654 cv
388.357 554.269 386.269 551.101 382.813 549.949 cv
380.293 549.229 376.981 549.949 375.901 552.614 cv
375.685 553.189 375.541 553.981 375.973 554.486 cv
376.693 555.349 377.701 554.413 378.349 553.981 cv
380.869 552.469 383.389 552.973 385.549 554.773 cv
386.485 555.493 387.133 556.358 387.637 557.437 cv
389.509 561.469 388.429 565.862 386.053 569.533 cv
385.693 570.037 385.261 570.541 384.829 571.046 cv
383.749 572.198 382.597 573.278 381.373 574.285 cv
381.445 574.429 li
386.773 569.966 391.093 564.278 393.901 557.51 cv
398.797 544.55 397.285 530.51 388.933 519.349 cv
377.701 505.453 357.829 501.205 343.213 512.581 cv
334.213 520.141 330.325 532.453 335.581 543.325 cv
340.765 553.477 354.589 559.021 363.733 550.309 cv
367.837 546.134 369.349 538.214 363.805 534.469 cv
361.357 532.885 356.461 533.174 356.677 537.061 cv
356.893 533.893 360.637 533.389 362.941 534.541 cv
367.549 536.917 367.837 542.893 365.677 547.07 cv
360.421 556.285 348.037 555.781 340.693 549.446 cv
330.973 540.59 331.837 526.117 339.829 516.397 cv
346.741 508.621 356.389 505.526 365.893 506.677 cv
361.573 506.389 357.253 507.181 353.149 509.269 cv
348.109 512.15 344.149 516.973 344.077 522.949 cv
344.149 527.269 346.885 532.094 351.637 532.526 cv
352.573 532.597 353.941 532.453 354.517 531.59 cv
355.453 530.077 353.581 528.853 352.573 527.99 cv
348.973 524.893 348.469 520.645 350.269 516.325 cv
350.989 514.597 352.069 513.157 353.437 511.789 cv
358.909 506.966 366.253 506.462 373.021 508.333 cv
375.685 509.269 378.205 510.493 380.581 512.077 cv
394.981 522.085 399.517 539.798 394.189 555.781 cv
394.333 555.134 394.477 554.486 394.549 553.838 cv
395.053 548.581 393.973 543.614 390.589 539.437 cv
387.709 536.125 383.533 533.893 379.069 534.758 cv
375.829 535.477 372.661 538.214 373.093 541.813 cv
373.165 542.533 373.453 543.469 374.245 543.758 cv
375.541 544.261 376.117 542.677 376.621 541.813 cv
378.421 538.718 381.445 537.709 384.973 538.358 cv
386.341 538.645 387.565 539.221 388.789 540.013 cv
393.253 543.397 394.693 548.869 394.261 554.198 cv
394.189 555.134 394.045 555.997 393.829 556.862 cv
393.325 558.157 392.821 559.453 392.173 560.749 cv
390.517 563.917 388.573 566.798 386.341 569.389 cv
ef
379.717 574.789 mo
379.933 574.718 380.149 574.645 380.365 574.501 cv
398.797 565.358 410.677 545.486 404.917 524.966 cv
400.741 511.573 388.213 500.342 373.525 503.51 cv
368.485 504.805 363.949 507.758 361.933 512.725 cv
360.061 517.694 361.789 524.101 367.981 523.741 cv
369.061 523.67 370.069 523.741 371.005 524.03 cv
370.501 522.661 370.717 521.15 371.653 519.997 cv
373.093 518.198 375.685 517.981 377.413 519.422 cv
379.141 520.789 379.429 523.382 377.989 525.181 cv
376.549 526.909 373.957 527.198 372.229 525.758 cv
372.229 525.685 372.229 525.685 372.157 525.685 cv
369.421 524.318 366.829 526.046 363.949 524.822 cv
357.541 521.798 358.765 513.373 362.365 508.621 cv
370.285 498.902 384.397 500.269 393.829 506.893 cv
407.653 517.406 410.317 535.909 403.909 551.389 cv
398.941 562.477 390.445 570.469 380.365 575.077 cv
379.717 574.789 li
ef
397.357 563.413 mo
397.285 563.486 397.357 563.557 397.501 563.557 cv
399.157 563.845 403.837 563.63 404.269 566.077 cv
404.629 567.734 403.045 569.893 400.813 570.902 cv
397.645 572.342 392.605 571.55 389.293 570.685 cv
392.101 568.453 394.837 566.006 397.357 563.413 cv
cp
405.349 553.909 mo
402.901 557.221 400.237 560.389 397.357 563.413 cv
398.221 562.765 407.077 560.966 408.517 559.885 cv
410.533 558.517 411.613 556.07 410.893 554.486 cv
409.885 552.11 407.149 553.909 405.349 553.909 cv
cp
410.317 551.677 mo
407.365 553.261 405.997 553.694 405.349 553.838 cv
406.069 552.902 407.941 547.862 410.461 544.909 cv
415.285 539.365 417.373 547.862 410.317 551.677 cv
ef
452.149 508.694 mo
454.741 506.101 454.093 501.853 451.933 498.973 cv
447.829 493.933 440.917 493.285 435.013 495.013 cv
423.133 498.758 416.509 510.493 416.005 522.373 cv
416.005 522.229 415.933 522.157 415.933 522.013 cv
415.933 521.077 415.789 518.342 413.557 516.181 cv
410.893 513.517 409.309 510.349 409.093 507.254 cv
408.877 504.157 410.101 500.198 410.029 500.125 cv
409.957 499.981 405.277 515.318 413.917 521.365 cv
414.781 521.942 415.429 522.734 415.789 523.165 cv
415.933 523.741 416.005 524.245 416.149 524.822 cv
416.725 528.349 416.725 532.021 415.717 535.406 cv
413.917 540.805 409.957 543.325 405.925 544.117 cv
405.925 544.189 405.925 544.333 405.997 544.406 cv
408.661 544.046 411.397 543.181 413.629 540.949 cv
417.229 537.278 417.805 530.51 416.581 524.533 cv
416.293 523.165 416.293 522.085 416.509 520.645 cv
417.805 509.63 424.861 498.829 435.733 495.59 cv
441.421 493.933 448.045 494.869 451.717 499.909 cv
453.301 502.357 453.805 505.526 452.365 507.973 cv
452.437 507.829 452.437 507.758 452.437 507.614 cv
452.293 506.462 451.357 505.67 450.205 505.741 cv
449.125 505.813 448.261 506.749 448.333 507.902 cv
448.405 508.981 449.413 509.845 450.493 509.773 cv
451.213 509.701 451.861 509.269 452.149 508.694 cv
ef
277.333 579.758 mo
279.709 574.501 276.613 571.406 277.837 568.957 cv
278.269 568.021 279.637 567.229 279.637 567.229 cv
279.637 567.229 275.101 568.309 274.669 572.269 cv
274.237 575.725 276.541 577.382 276.397 580.406 cv
276.325 581.342 276.181 582.205 276.181 582.205 cv
277.333 579.758 li
ef
194.893 588.758 mo
188.485 584.654 180.709 582.853 173.365 586.094 cv
167.677 588.973 163.429 595.309 166.309 601.645 cv
167.029 603.229 169.117 605.605 167.965 607.406 cv
166.741 609.422 163.573 607.406 162.349 606.397 cv
158.533 603.085 157.957 597.829 159.685 593.293 cv
162.997 585.446 171.637 582.205 179.701 582.493 cv
185.245 582.926 190.069 584.798 194.677 587.893 cv
194.749 588.11 194.821 588.397 194.893 588.758 cv
ef
46.1411 541.309 mo
45.4932 542.245 41.3892 539.798 40.741 539.51 cv
30.301 534.254 20.7971 541.526 17.053 551.462 cv
12.0132 567.229 19.9331 582.637 31.813 592.862 cv
55.2131 611.221 86.6052 608.845 111.085 594.085 cv
118.645 589.261 125.053 583.645 131.173 577.165 cv
132.901 575.293 131.245 577.453 130.669 578.174 cv
106.765 607.477 62.1252 618.926 30.157 595.526 cv
16.189 584.293 7.11719 566.798 12.8052 548.798 cv
16.261 539.654 23.8931 531.734 34.333 532.597 cv
39.8052 533.318 42.397 536.125 45.5652 540.157 cv
45.781 540.373 46.2852 541.021 46.1411 541.309 cv
ef
50.6052 600.781 mo
45.709 599.198 41.3892 596.03 39.301 590.917 cv
37.501 585.949 38.437 579.758 43.6931 577.309 cv
44.4851 576.949 45.3491 576.805 46.2131 576.517 cv
48.301 575.798 48.7332 573.709 46.717 572.63 cv
43.8372 571.117 40.3091 572.269 38.0051 574.141 cv
33.1091 578.533 33.325 585.373 36.1331 590.845 cv
39.085 596.101 43.8372 599.413 49.5251 601.285 cv
50.6052 601.573 51.7571 601.789 52.8372 602.006 cv
52.1169 601.573 51.3972 601.214 50.6052 600.781 cv
ef
10.8611 557.869 mo
13.093 536.269 29.9412 517.189 52.6208 517.117 cv
67.885 517.189 83.0051 527.342 84.6609 543.325 cv
85.4529 552.829 79.9089 564.205 69.2532 564.709 cv
65.0051 564.853 59.821 562.406 59.821 557.581 cv
59.821 555.134 61.6931 554.125 62.4851 552.254 cv
62.989 552.902 63.7092 553.261 64.573 553.261 cv
65.8689 553.189 66.8049 552.037 66.7332 550.741 cv
66.6609 549.446 65.5813 548.437 64.2849 548.51 cv
62.989 548.581 61.9812 549.734 62.053 551.03 cv
62.053 551.174 62.053 551.245 62.1252 551.389 cv
61.4773 553.261 59.6052 554.125 59.0291 556.141 cv
57.3733 562.046 63.8533 565.933 68.8933 565.933 cv
79.5491 565.718 85.8132 554.917 85.6692 545.269 cv
85.093 528.278 69.325 516.973 53.3411 516.614 cv
30.085 516.469 12.8052 535.909 10.8611 557.869 cv
ef
41.8931 598.406 mo
35.4131 593.654 30.157 585.661 32.533 577.382 cv
33.6851 573.781 36.3491 570.829 40.2371 570.397 cv
43.0452 570.11 45.2771 569.677 47.6531 568.094 cv
54.781 563.269 54.9973 553.909 51.613 546.781 cv
51.613 546.709 51.613 546.709 51.613 546.637 cv
51.613 545.917 50.9651 545.342 50.2449 545.342 cv
49.5251 545.342 48.8772 545.917 48.8772 546.637 cv
48.8772 547.429 49.5251 548.006 50.2449 548.006 cv
50.7493 548.006 51.1809 547.718 51.3972 547.358 cv
53.4851 552.254 53.845 557.942 50.821 562.55 cv
48.373 566.077 44.989 567.302 40.885 567.59 cv
32.749 568.021 29.437 576.013 30.5891 583.285 cv
31.885 589.909 36.1331 595.165 41.8931 598.406 cv
ef
29.437 585.734 mo
29.293 585.302 29.0771 584.798 28.9331 584.365 cv
27.3491 579.541 27.3491 574.789 28.8611 569.966 cv
29.365 568.526 29.8691 567.229 30.5171 565.933 cv
31.5251 564.205 32.677 562.838 32.4612 560.749 cv
31.957 557.654 29.1492 555.997 26.269 555.781 cv
24.9011 555.637 23.3892 555.853 22.093 555.493 cv
20.6531 555.134 21.301 554.125 22.165 553.477 cv
25.4771 551.101 30.301 551.677 33.541 553.981 cv
36.2771 556.214 37.717 559.453 36.925 562.981 cv
36.4211 565.214 35.053 566.942 33.613 568.597 cv
33.0371 569.389 32.533 570.11 31.957 570.902 cv
29.293 575.006 28.573 579.469 29.7971 584.221 cv
29.9412 584.798 30.085 585.302 30.229 585.805 cv
29.9412 585.805 29.7251 585.734 29.437 585.734 cv
ef
25.981 581.917 mo
20.8691 576.229 23.605 571.117 21.085 568.526 cv
20.1492 567.59 18.1331 567.013 18.1331 567.013 cv
18.1331 567.013 24.2532 566.654 26.3411 571.477 cv
28.2131 575.581 25.981 578.677 27.3491 582.349 cv
27.781 583.429 28.2852 584.51 28.2852 584.51 cv
25.981 581.917 li
ef
26.5571 530.15 mo
32.821 531.302 36.853 525.973 40.4531 526.406 cv
41.821 526.55 43.405 527.845 43.405 527.845 cv
43.405 527.845 40.021 522.805 34.9092 523.957 cv
30.5171 524.966 29.437 528.637 25.6931 529.789 cv
24.541 530.077 23.3892 530.365 23.3892 530.365 cv
26.5571 530.15 li
ef
15.397 537.853 mo
14.0291 531.59 19.2131 527.342 18.637 523.741 cv
18.4211 522.446 17.053 520.862 17.053 520.862 cv
17.053 520.862 22.2371 524.03 21.301 529.214 cv
20.437 533.677 16.8372 534.902 15.9011 538.718 cv
15.613 539.869 15.397 541.021 15.397 541.021 cv
15.397 537.853 li
ef
71.9172 564.493 mo
70.261 564.997 68.4612 564.997 66.949 563.99 cv
65.6531 563.053 64.7893 561.685 65.0051 560.101 cv
65.0051 559.67 65.1492 559.309 65.2209 558.949 cv
65.365 558.373 65.0769 557.798 64.429 558.013 cv
63.5652 558.229 63.0613 559.309 62.9172 560.101 cv
62.7009 561.685 63.4211 563.125 64.6453 564.061 cv
66.4451 565.501 68.677 565.645 70.9089 565.141 cv
71.3411 564.997 71.7732 564.853 72.1331 564.709 cv
72.0613 564.637 71.989 564.565 71.9172 564.493 cv
ef
144.565 606.973 mo
144.205 606.254 140.605 606.614 140.101 606.685 cv
131.101 606.973 125.053 600.709 123.829 594.302 cv
122.677 584.437 131.461 577.885 142.405 575.15 cv
163.645 570.685 187.477 579.541 203.821 593.654 cv
208.069 597.325 211.381 601.07 214.549 605.245 cv
214.765 605.389 215.197 605.605 215.269 605.677 cv
201.373 584.437 169.621 567.877 141.613 573.278 cv
128.725 575.725 118.789 583.501 120.157 594.805 cv
121.237 600.637 125.773 606.829 133.909 608.917 cv
138.301 609.853 140.749 608.917 143.989 607.477 cv
144.133 607.406 144.637 607.189 144.565 606.973 cv
ef
197.053 590.053 mo
196.333 589.765 195.685 589.477 194.965 589.261 cv
194.317 589.046 193.669 588.902 193.021 588.829 cv
189.637 588.397 185.821 588.758 183.373 591.349 cv
182.365 592.573 181.717 594.302 183.013 595.526 cv
183.589 596.03 184.093 596.605 184.597 597.181 cv
185.101 597.829 183.949 596.749 182.869 596.245 cv
180.781 595.309 179.845 593.437 180.277 591.205 cv
180.637 589.765 181.501 588.614 182.653 587.677 cv
187.549 584.221 194.317 586.885 198.493 590.269 cv
199.501 591.134 200.437 592.07 201.301 593.15 cv
200.077 591.853 198.709 590.773 197.053 590.053 cv
ef
238.813 584.293 mo
239.461 583.789 238.237 581.557 238.093 580.909 cv
237.013 575.798 243.133 573.349 247.597 573.926 cv
255.949 575.365 260.125 583.789 258.541 591.278 cv
255.805 603.373 242.197 609.709 230.101 609.278 cv
224.269 608.917 218.869 607.189 214.261 604.453 cv
214.837 605.389 li
215.989 606.037 217.213 606.685 218.437 607.261 cv
230.965 612.373 246.301 610.573 255.517 600.493 cv
261.637 593.725 262.933 583.789 256.381 576.805 cv
253.357 573.637 249.109 571.765 244.573 572.053 cv
238.525 572.701 233.125 578.318 237.805 583.358 cv
237.877 583.429 238.597 584.437 238.813 584.293 cv
ef
218.941 607.333 mo
218.581 606.973 217.861 606.11 217.573 605.677 cv
216.205 603.877 214.909 602.437 212.821 601.358 cv
206.485 598.406 199.789 602.077 196.117 607.477 cv
196.117 607.55 196.045 607.55 196.045 607.55 cv
195.541 607.838 195.325 608.557 195.613 609.061 cv
195.973 609.565 196.621 609.781 197.125 609.422 cv
197.701 609.134 197.845 608.486 197.557 607.909 cv
197.341 607.55 196.981 607.406 196.621 607.406 cv
199.213 603.877 203.101 601.214 207.565 601.429 cv
210.949 601.718 213.253 603.517 215.053 606.11 cv
215.845 606.397 217.213 606.973 218.941 607.333 cv
ef
67.4529 544.909 mo
67.5251 544.909 li
69.469 542.462 71.989 540.877 75.0852 540.517 cv
77.6052 540.302 80.2693 541.094 81.781 543.325 cv
82.8611 544.909 83.0051 547.358 81.3489 548.725 cv
81.0613 549.013 80.4851 549.229 80.053 549.085 cv
79.3333 548.725 79.7649 547.862 79.9089 547.285 cv
80.4128 545.269 79.6208 543.541 77.8933 542.389 cv
77.1731 541.957 76.3811 541.67 75.5891 541.526 cv
72.3489 541.094 69.469 542.749 67.4529 545.125 cv
67.093 545.557 66.8772 545.917 66.5891 546.349 cv
66.0129 547.358 65.509 548.365 65.0769 549.446 cv
65.0051 549.446 li
66.949 544.765 70.0452 540.517 74.2209 537.134 cv
82.2131 531.013 92.365 529.07 101.941 532.597 cv
114.037 537.493 121.237 550.526 116.341 563.198 cv
112.957 571.046 105.181 576.373 96.3972 575.006 cv
88.1892 573.493 81.4211 564.997 85.5969 556.718 cv
87.613 552.973 92.8689 550.238 96.6853 553.333 cv
98.2693 554.773 99.1331 558.229 96.325 558.877 cv
98.4851 558.085 98.1252 555.349 96.8289 553.981 cv
94.1653 551.245 89.9172 552.325 87.469 554.701 cv
82.0691 560.318 85.093 568.885 91.0691 572.701 cv
99.2771 577.67 109.285 573.997 114.397 566.365 cv
118.357 559.885 118.501 552.469 115.693 546.061 cv
116.773 549.013 117.133 552.181 116.557 555.565 cv
115.549 559.67 113.101 563.486 108.853 564.781 cv
105.829 565.573 101.869 564.709 100.573 561.469 cv
100.357 560.822 100.141 559.885 100.645 559.238 cv
101.509 558.302 102.733 559.309 103.525 559.885 cv
106.477 561.685 109.573 561.181 112.237 559.021 cv
113.317 558.157 114.109 557.077 114.685 555.853 cv
116.989 551.03 115.765 545.773 113.029 541.382 cv
111.805 539.725 110.437 538.214 108.853 536.917 cv
98.7732 528.926 85.3811 529.501 75.3733 536.557 cv
75.8049 536.342 76.2371 536.125 76.5969 535.909 cv
80.197 534.469 83.9412 534.181 87.5413 535.621 cv
90.4211 536.99 92.9412 539.437 93.2292 542.749 cv
93.4451 545.125 92.1492 547.933 89.5569 548.437 cv
89.053 548.51 88.3333 548.51 87.9011 548.006 cv
87.325 547.214 88.3333 546.493 88.8372 545.99 cv
90.637 544.046 90.7092 541.67 89.4851 539.365 cv
88.9812 538.429 88.3333 537.709 87.469 537.061 cv
84.2292 534.614 80.053 534.758 76.3811 536.198 cv
75.8049 536.413 75.2292 536.773 74.6531 537.061 cv
73.8611 537.709 73.0691 538.358 72.2771 539.006 cv
70.405 540.877 68.821 542.822 67.4529 544.909 cv
ef
264.301 577.813 mo
267.469 576.446 270.925 578.462 272.725 581.342 cv
275.677 586.741 273.877 593.077 270.421 597.614 cv
263.581 606.037 252.349 608.198 242.341 605.605 cv
241.549 605.389 240.685 605.174 239.893 604.885 cv
236.005 603.229 232.549 600.997 228.229 600.637 cv
222.829 600.278 219.301 602.942 217.141 606.254 cv
217.069 606.181 216.997 606.11 216.925 606.11 cv
218.221 603.805 219.949 601.718 222.613 600.565 cv
226.501 598.909 231.685 600.061 236.149 602.51 cv
238.453 603.734 240.469 604.885 242.989 605.389 cv
252.781 607.406 263.869 604.813 270.133 596.749 cv
273.517 592.358 274.957 586.238 271.861 581.198 cv
270.277 578.966 267.613 577.453 265.021 577.885 cv
265.093 577.885 265.237 577.957 265.309 577.957 cv
266.317 578.462 266.677 579.614 266.245 580.55 cv
265.813 581.486 264.661 581.917 263.653 581.413 cv
262.717 580.981 262.357 579.829 262.789 578.893 cv
263.077 578.245 263.653 577.885 264.301 577.813 cv
ef
245.797 606.829 mo
249.973 603.877 252.709 599.557 252.277 594.373 cv
251.845 590.99 249.829 587.389 246.085 587.03 cv
243.925 586.885 241.117 587.822 239.965 589.838 cv
239.965 589.909 239.749 590.198 239.893 590.053 cv
241.333 588.541 242.989 588.037 244.933 588.685 cv
249.901 590.486 250.909 596.749 249.325 601.214 cv
248.821 602.581 248.029 603.805 247.021 604.957 cv
246.373 605.605 245.653 606.254 244.933 606.758 cv
245.797 606.829 li
ef
250.117 604.885 mo
250.621 604.741 251.701 604.741 252.277 604.741 cv
254.581 604.813 256.453 604.741 258.541 603.734 cv
264.805 600.493 266.029 592.933 263.941 586.741 cv
264.013 586.67 264.013 586.67 264.013 586.597 cv
264.085 586.021 263.653 585.446 263.005 585.373 cv
262.429 585.302 261.853 585.734 261.781 586.309 cv
261.709 586.957 262.141 587.533 262.717 587.605 cv
263.149 587.605 263.509 587.462 263.797 587.174 cv
264.949 591.349 264.661 596.03 261.709 599.486 cv
259.477 602.006 256.669 602.725 253.429 602.581 cv
252.709 602.942 251.485 603.734 250.117 604.885 cv
ef
258.685 578.677 mo
255.157 574.285 257.389 570.685 255.661 568.67 cv
255.013 567.949 253.573 567.446 253.573 567.446 cv
253.573 567.446 258.037 567.446 259.405 571.046 cv
260.557 574.141 258.829 576.302 259.693 579.037 cv
259.909 579.902 260.269 580.694 260.269 580.694 cv
258.685 578.677 li
ef
253.645 573.709 mo
249.757 571.117 250.621 567.59 248.749 566.437 cv
248.029 566.006 246.733 566.006 246.733 566.006 cv
246.733 566.006 250.333 564.853 252.349 567.373 cv
254.077 569.605 253.213 571.765 254.581 573.781 cv
255.013 574.358 255.445 574.933 255.445 574.933 cv
253.645 573.709 li
ef
248.821 571.333 mo
245.725 570.397 245.581 567.949 244.141 567.517 cv
243.565 567.373 242.773 567.59 242.773 567.59 cv
242.773 567.59 244.861 566.15 246.661 567.446 cv
248.245 568.526 248.101 570.11 249.397 571.189 cv
249.829 571.477 250.261 571.765 250.261 571.765 cv
248.821 571.333 li
ef
218.293 601.214 mo
218.653 600.493 218.941 599.845 219.373 599.198 cv
219.733 598.621 220.093 598.117 220.525 597.541 cv
222.757 595.021 225.853 592.789 229.453 593.077 cv
231.037 593.293 232.621 594.229 232.477 595.957 cv
232.405 596.749 232.333 597.541 232.333 598.261 cv
232.405 599.053 232.621 597.541 233.053 596.389 cv
233.989 594.373 233.485 592.285 231.685 590.917 cv
230.389 590.053 229.021 589.765 227.509 589.838 cv
221.533 590.557 218.293 596.966 217.357 602.293 cv
217.213 603.59 217.069 604.957 217.213 606.254 cv
217.213 604.526 217.573 602.798 218.293 601.214 cv
ef
215.701 602.581 mo
213.181 598.55 215.413 595.741 214.117 593.869 cv
213.685 593.15 212.533 592.645 212.533 592.645 cv
212.533 592.645 216.277 593.077 217.069 596.245 cv
217.789 598.981 216.061 600.637 216.493 603.013 cv
216.637 603.734 216.853 604.453 216.853 604.453 cv
215.701 602.581 li
ef
216.637 606.181 mo
212.173 604.453 209.797 607.117 207.781 606.181 cv
206.989 605.893 206.269 604.813 206.269 604.813 cv
206.269 604.813 207.349 608.486 210.589 608.701 cv
213.469 608.845 214.765 606.902 217.213 606.902 cv
217.933 606.902 218.653 606.973 218.653 606.973 cv
216.637 606.181 li
ef
208.429 599.053 mo
205.117 596.749 202.597 598.55 201.085 597.397 cv
200.509 597.037 200.077 596.03 200.077 596.03 cv
200.077 596.03 200.293 599.198 202.957 599.99 cv
205.333 600.709 206.773 599.269 208.789 599.773 cv
209.437 599.917 210.013 600.061 210.013 600.061 cv
208.429 599.053 li
ef
110.581 596.605 mo
110.653 596.533 110.653 596.605 110.653 596.749 cv
110.581 598.477 109.357 602.942 111.589 603.949 cv
113.173 604.67 115.621 603.661 117.061 601.645 cv
119.221 598.838 119.509 593.798 119.437 590.342 cv
116.629 592.645 113.677 594.734 110.581 596.605 cv
cp
99.4929 602.221 mo
103.309 600.637 106.981 598.765 110.509 596.605 cv
109.717 597.325 105.973 605.533 104.605 606.685 cv
102.805 608.342 100.213 608.845 98.7732 607.838 cv
96.6853 606.325 99.0613 604.021 99.4929 602.221 cv
cp
87.5413 606.181 mo
86.677 607.406 86.3889 609.349 87.613 610.214 cv
90.3489 612.157 94.3811 608.63 96.1809 606.614 cv
98.4128 604.094 99.1331 602.869 99.4211 602.293 cv
95.533 603.877 91.573 605.174 87.5413 606.181 cv
ef
162.925 569.389 mo
162.853 569.318 li
160.549 565.789 159.397 561.902 160.189 557.654 cv
160.909 554.269 162.997 551.101 166.453 549.949 cv
168.973 549.229 172.285 549.949 173.365 552.614 cv
173.581 553.189 173.725 553.981 173.293 554.486 cv
172.645 555.349 171.565 554.413 170.917 553.981 cv
168.469 552.469 165.949 552.973 163.717 554.773 cv
162.853 555.493 162.205 556.358 161.701 557.437 cv
159.829 561.469 160.909 565.862 163.213 569.533 cv
163.645 570.037 164.005 570.541 164.437 571.046 cv
165.589 572.198 166.741 573.278 167.893 574.285 cv
167.821 574.429 li
162.565 569.966 158.173 564.278 155.365 557.51 cv
150.469 544.55 151.981 530.51 160.405 519.349 cv
171.565 505.453 191.437 501.205 206.053 512.581 cv
215.053 520.141 218.941 532.453 213.685 543.325 cv
208.501 553.477 194.677 559.021 185.533 550.309 cv
181.429 546.134 179.917 538.214 185.461 534.469 cv
187.909 532.885 192.805 533.174 192.589 537.061 cv
192.373 533.893 188.701 533.389 186.325 534.541 cv
181.789 536.917 181.501 542.893 183.589 547.07 cv
188.917 556.285 201.301 555.781 208.573 549.446 cv
218.293 540.59 217.429 526.117 209.509 516.397 cv
202.525 508.621 192.877 505.526 183.373 506.677 cv
187.765 506.389 192.013 507.181 196.189 509.269 cv
201.157 512.15 205.189 516.973 205.261 522.949 cv
205.117 527.269 202.381 532.094 197.701 532.526 cv
196.693 532.597 195.397 532.453 194.821 531.59 cv
193.813 530.077 195.685 528.853 196.693 527.99 cv
200.293 524.893 200.797 520.645 199.069 516.325 cv
198.277 514.597 197.197 513.157 195.829 511.789 cv
190.429 506.966 183.013 506.462 176.245 508.333 cv
173.653 509.269 171.133 510.493 168.685 512.077 cv
154.357 522.085 149.749 539.798 155.077 555.781 cv
154.933 555.134 154.861 554.486 154.717 553.838 cv
154.285 548.581 155.365 543.614 158.677 539.437 cv
161.557 536.125 165.733 533.893 170.197 534.758 cv
173.437 535.477 176.605 538.214 176.245 541.813 cv
176.101 542.533 175.813 543.469 175.021 543.758 cv
173.797 544.261 173.149 542.677 172.717 541.813 cv
170.917 538.718 167.821 537.709 164.365 538.358 cv
162.925 538.645 161.701 539.221 160.549 540.013 cv
156.085 543.397 154.573 548.869 155.005 554.198 cv
155.149 555.134 155.293 555.997 155.509 556.862 cv
155.941 558.157 156.517 559.453 157.093 560.749 cv
158.749 563.917 160.693 566.798 162.925 569.389 cv
ef
169.549 574.789 mo
169.333 574.718 169.117 574.645 168.901 574.501 cv
150.541 565.358 138.589 545.486 144.349 524.966 cv
148.525 511.573 161.125 500.342 175.813 503.51 cv
180.853 504.805 185.317 507.758 187.405 512.725 cv
189.277 517.694 187.549 524.101 181.285 523.741 cv
180.205 523.67 179.269 523.741 178.261 524.03 cv
178.765 522.661 178.621 521.15 177.613 519.997 cv
176.173 518.198 173.653 517.981 171.853 519.422 cv
170.125 520.789 169.837 523.382 171.277 525.181 cv
172.717 526.909 175.309 527.198 177.037 525.758 cv
177.037 525.685 177.109 525.685 177.109 525.685 cv
179.845 524.318 182.437 526.046 185.317 524.822 cv
191.725 521.798 190.501 513.373 186.901 508.621 cv
178.981 498.902 164.869 500.269 155.509 506.893 cv
141.613 517.406 138.949 535.909 145.357 551.389 cv
150.325 562.477 158.821 570.469 168.973 575.077 cv
169.549 574.789 li
ef
151.981 563.413 mo
151.981 563.486 151.981 563.557 151.837 563.557 cv
150.181 563.845 145.501 563.63 144.997 566.077 cv
144.709 567.734 146.221 569.893 148.453 570.902 cv
151.693 572.342 156.661 571.55 160.045 570.685 cv
157.165 568.453 154.501 566.006 151.981 563.413 cv
cp
143.989 553.909 mo
146.365 557.221 149.029 560.389 151.909 563.413 cv
151.117 562.765 142.261 560.966 140.749 559.885 cv
138.805 558.517 137.725 556.07 138.373 554.486 cv
139.381 552.11 142.189 553.909 143.989 553.909 cv
cp
138.949 551.677 mo
141.901 553.261 143.341 553.694 143.917 553.838 cv
143.197 552.902 141.325 547.862 138.805 544.909 cv
133.981 539.365 131.893 547.862 138.949 551.677 cv
ef
97.1169 508.694 mo
94.5251 506.101 95.2449 501.853 97.405 498.973 cv
101.509 493.933 108.421 493.285 114.325 495.013 cv
126.133 498.758 132.829 510.493 133.261 522.373 cv
133.333 522.229 133.333 522.157 133.405 522.013 cv
133.333 521.077 133.477 518.342 135.709 516.181 cv
138.445 513.517 139.957 510.349 140.173 507.254 cv
140.389 504.157 139.165 500.198 139.237 500.125 cv
139.381 499.981 143.989 515.318 135.349 521.365 cv
134.557 521.942 133.837 522.734 133.477 523.165 cv
133.333 523.741 133.261 524.245 133.117 524.822 cv
132.613 528.349 132.541 532.021 133.549 535.406 cv
135.349 540.805 139.309 543.325 143.413 544.117 cv
143.341 544.189 143.341 544.333 143.341 544.406 cv
140.605 544.046 137.869 543.181 135.637 540.949 cv
132.109 537.278 131.461 530.51 132.757 524.533 cv
133.045 523.165 132.973 522.085 132.829 520.645 cv
131.461 509.63 124.477 498.829 113.533 495.59 cv
107.917 493.933 101.293 494.869 97.5491 499.909 cv
95.9651 502.357 95.4612 505.526 96.9011 507.973 cv
96.9011 507.829 96.9011 507.758 96.9011 507.614 cv
96.9729 506.462 97.9089 505.67 99.0613 505.741 cv
100.141 505.813 101.005 506.749 100.933 507.902 cv
100.861 508.981 99.8533 509.845 98.7732 509.773 cv
98.053 509.701 97.4773 509.269 97.1169 508.694 cv
ef
272.005 579.758 mo
269.557 574.501 272.725 571.406 271.429 568.957 cv
270.997 568.021 269.701 567.229 269.701 567.229 cv
269.701 567.229 274.093 568.309 274.597 572.269 cv
274.957 575.725 272.725 577.382 272.869 580.406 cv
272.941 581.342 273.085 582.205 273.085 582.205 cv
272.005 579.758 li
ef
445.093 395.942 mo
440.989 389.533 439.189 381.758 442.501 374.486 cv
445.309 368.725 451.645 364.477 457.981 367.358 cv
459.565 368.15 461.941 370.165 463.741 369.086 cv
465.757 367.789 463.741 364.621 462.733 363.397 cv
459.421 359.654 454.165 359.006 449.629 360.734 cv
441.781 364.117 438.541 372.685 438.829 380.749 cv
439.261 386.293 441.133 391.117 444.229 395.725 cv
444.445 395.798 444.805 395.869 445.093 395.942 cv
ef
397.645 247.261 mo
398.581 246.614 396.133 242.51 395.845 241.862 cv
390.589 231.422 397.861 221.917 407.797 218.174 cv
423.565 213.134 438.973 221.053 449.197 232.933 cv
467.557 256.406 465.181 287.725 450.421 312.205 cv
445.597 319.765 439.981 326.174 433.501 332.293 cv
431.629 334.021 433.789 332.365 434.509 331.862 cv
463.813 307.885 475.261 263.318 451.933 231.349 cv
440.629 217.309 423.133 208.238 405.133 213.997 cv
396.061 217.382 388.069 225.013 388.933 235.453 cv
389.653 240.926 392.461 243.517 396.565 246.758 cv
396.709 246.902 397.357 247.477 397.645 247.261 cv
ef
457.117 251.798 mo
455.533 246.829 452.365 242.51 447.253 240.422 cv
442.285 238.621 436.093 239.557 433.645 244.813 cv
433.285 245.605 433.141 246.469 432.853 247.333 cv
432.133 249.422 430.045 249.853 428.965 247.838 cv
427.453 244.957 428.605 241.429 430.549 239.125 cv
434.869 234.229 441.709 234.446 447.181 237.254 cv
452.437 240.205 455.749 244.957 457.621 250.645 cv
457.909 251.798 458.125 252.878 458.341 254.03 cv
457.909 253.238 457.549 252.517 457.117 251.798 cv
ef
414.205 211.981 mo
392.605 214.214 373.525 231.061 373.453 253.741 cv
373.525 269.006 383.677 284.125 399.661 285.781 cv
409.237 286.645 420.613 281.03 421.045 270.373 cv
421.189 266.125 418.741 261.013 413.917 260.942 cv
411.541 260.942 410.461 262.813 408.589 263.605 cv
409.237 264.11 409.597 264.829 409.597 265.694 cv
409.525 266.99 408.373 267.997 407.077 267.926 cv
405.781 267.853 404.773 266.701 404.845 265.406 cv
404.917 264.11 406.069 263.101 407.365 263.174 cv
407.509 263.174 407.653 263.245 407.725 263.245 cv
409.597 262.597 410.461 260.798 412.477 260.149 cv
418.381 258.493 422.269 264.973 422.269 270.086 cv
422.053 280.741 411.253 287.006 401.605 286.789 cv
384.613 286.214 373.309 270.517 373.021 254.462 cv
372.805 231.205 392.245 213.997 414.205 211.981 cv
ef
454.741 243.013 mo
450.061 236.605 441.997 231.278 433.717 233.654 cv
430.117 234.805 427.165 237.469 426.733 241.357 cv
426.445 244.165 426.013 246.397 424.501 248.845 cv
419.605 255.902 410.317 256.117 403.117 252.734 cv
403.045 252.734 403.045 252.734 402.973 252.734 cv
402.253 252.734 401.677 252.157 401.677 251.365 cv
401.677 250.645 402.253 250.07 402.973 250.07 cv
403.765 250.07 404.341 250.645 404.341 251.365 cv
404.341 251.869 404.053 252.302 403.693 252.517 cv
408.589 254.605 414.277 254.966 418.885 251.942 cv
422.413 249.565 423.637 246.11 423.925 242.006 cv
424.357 233.869 432.349 230.557 439.621 231.709 cv
446.245 233.006 451.501 237.254 454.741 243.013 cv
ef
442.069 230.557 mo
441.637 230.413 441.133 230.198 440.701 230.053 cv
435.877 228.469 431.125 228.469 426.301 229.981 cv
424.933 230.486 423.565 230.99 422.269 231.709 cv
420.541 232.645 419.173 233.869 417.085 233.581 cv
413.989 233.077 412.333 230.269 412.117 227.389 cv
411.973 226.021 412.189 224.51 411.829 223.214 cv
411.469 221.845 410.461 222.422 409.813 223.285 cv
407.437 226.597 408.013 231.422 410.317 234.661 cv
412.549 237.397 415.789 238.838 419.317 238.117 cv
421.549 237.541 423.277 236.174 424.933 234.805 cv
425.725 234.229 426.445 233.654 427.237 233.149 cv
431.341 230.413 435.805 229.694 440.557 230.917 cv
441.133 231.061 441.637 231.205 442.141 231.349 cv
442.141 231.134 442.069 230.845 442.069 230.557 cv
ef
438.253 227.101 mo
432.565 221.99 427.453 224.725 424.861 222.205 cv
423.925 221.269 423.349 219.325 423.349 219.325 cv
423.349 219.325 422.989 225.373 427.813 227.533 cv
431.917 229.333 435.013 227.101 438.685 228.469 cv
439.837 228.902 440.845 229.406 440.845 229.406 cv
438.253 227.101 li
ef
386.485 227.677 mo
387.637 234.013 382.309 238.046 382.741 241.645 cv
382.885 242.942 384.181 244.526 384.181 244.526 cv
384.181 244.526 379.141 241.214 380.293 236.101 cv
381.301 231.637 384.973 230.557 386.125 226.813 cv
386.413 225.661 386.701 224.51 386.701 224.51 cv
386.485 227.677 li
ef
394.189 216.59 mo
387.925 215.149 383.677 220.333 380.077 219.758 cv
378.781 219.541 377.197 218.174 377.197 218.174 cv
377.197 218.174 380.365 223.357 385.549 222.422 cv
390.013 221.557 391.237 217.957 395.053 217.021 cv
396.205 216.734 397.357 216.517 397.357 216.517 cv
394.189 216.59 li
ef
420.829 273.11 mo
421.333 271.382 421.333 269.654 420.325 268.07 cv
419.389 266.773 418.021 265.909 416.437 266.125 cv
416.005 266.198 415.645 266.269 415.285 266.342 cv
414.709 266.486 414.133 266.198 414.349 265.55 cv
414.565 264.685 415.645 264.181 416.437 264.037 cv
418.021 263.822 419.461 264.541 420.397 265.765 cv
421.837 267.565 421.981 269.869 421.477 272.03 cv
421.405 272.462 421.189 272.893 421.045 273.254 cv
420.973 273.181 420.901 273.11 420.829 273.11 cv
ef
463.309 345.685 mo
462.589 345.325 462.949 341.725 463.021 341.221 cv
463.381 332.293 457.045 326.174 450.637 324.949 cv
440.773 323.798 434.221 332.581 431.485 343.526 cv
427.021 364.694 435.877 388.526 449.989 404.869 cv
453.733 409.189 457.405 412.429 461.581 415.597 cv
461.725 415.813 461.941 416.245 462.013 416.389 cv
440.773 402.422 424.213 370.67 429.613 342.734 cv
432.061 329.917 439.837 319.981 451.141 321.278 cv
456.973 322.358 463.165 326.893 465.253 335.03 cv
466.189 339.422 465.253 341.942 463.813 345.11 cv
463.741 345.254 463.525 345.758 463.309 345.685 cv
ef
446.389 398.174 mo
446.101 397.453 445.813 396.734 445.597 396.013 cv
445.453 395.365 445.237 394.718 445.165 394.07 cv
444.733 390.685 445.093 386.869 447.685 384.422 cv
448.909 383.413 450.637 382.765 451.861 384.061 cv
452.365 384.637 452.941 385.214 453.517 385.718 cv
454.165 386.15 453.085 384.997 452.581 383.917 cv
451.645 381.902 449.773 380.893 447.541 381.325 cv
446.101 381.685 444.949 382.55 444.013 383.701 cv
440.557 388.67 443.221 395.365 446.605 399.541 cv
447.469 400.55 448.405 401.557 449.485 402.349 cv
448.189 401.125 447.109 399.758 446.389 398.174 cv
ef
440.629 439.862 mo
440.125 440.51 437.965 439.357 437.317 439.141 cv
432.133 438.061 429.685 444.181 430.333 448.645 cv
431.701 457.07 440.125 461.174 447.613 459.59 cv
459.709 456.853 466.045 443.318 465.613 431.15 cv
465.253 425.318 463.525 419.99 460.789 415.309 cv
461.725 415.885 li
462.373 417.037 463.021 418.261 463.597 419.557 cv
468.709 432.086 466.909 447.349 456.829 456.637 cv
450.061 462.685 440.125 463.981 433.141 457.429 cv
430.045 454.406 428.101 450.157 428.389 445.621 cv
429.037 439.573 434.653 434.174 439.693 438.853 cv
439.765 438.926 440.773 439.718 440.629 439.862 cv
ef
463.669 419.99 mo
463.309 419.63 462.517 418.909 462.013 418.621 cv
460.213 417.254 458.773 416.03 457.693 413.942 cv
454.741 407.533 458.413 400.838 463.813 397.165 cv
463.885 397.165 463.885 397.094 463.885 397.094 cv
464.173 396.59 464.893 396.373 465.397 396.734 cv
465.901 397.021 466.117 397.67 465.757 398.245 cv
465.469 398.749 464.821 398.893 464.245 398.605 cv
463.957 398.389 463.741 398.03 463.741 397.67 cv
460.213 400.261 457.621 404.15 457.765 408.685 cv
458.053 411.997 459.853 414.302 462.445 416.174 cv
462.805 416.893 463.309 418.261 463.669 419.99 cv
ef
401.245 268.573 mo
401.245 268.645 li
398.797 270.59 397.213 273.11 396.853 276.205 cv
396.709 278.725 397.429 281.389 399.661 282.902 cv
401.245 283.981 403.693 284.125 405.061 282.541 cv
405.349 282.181 405.565 281.677 405.421 281.245 cv
405.061 280.453 404.197 280.885 403.621 281.03 cv
401.605 281.605 399.877 280.741 398.725 279.013 cv
398.293 278.293 398.005 277.573 397.861 276.709 cv
397.429 273.469 399.085 270.59 401.461 268.573 cv
401.893 268.285 402.253 267.997 402.685 267.709 cv
403.693 267.134 404.701 266.63 405.781 266.198 cv
405.781 266.125 li
401.101 268.07 396.853 271.165 393.469 275.342 cv
387.349 283.406 385.405 293.486 388.933 303.061 cv
393.829 315.229 406.861 322.358 419.533 317.462 cv
427.381 314.077 432.709 306.302 431.341 297.517 cv
429.829 289.382 421.333 282.541 413.125 286.718 cv
409.309 288.805 406.573 293.99 409.669 297.805 cv
411.109 299.389 414.565 300.254 415.213 297.446 cv
414.421 299.605 411.685 299.245 410.317 297.949 cv
407.581 295.285 408.661 291.037 411.037 288.59 cv
416.653 283.189 425.221 286.214 429.037 292.189 cv
434.005 300.397 430.333 310.406 422.701 315.517 cv
416.221 319.477 408.805 319.621 402.397 316.813 cv
405.349 317.966 408.589 318.325 411.901 317.677 cv
416.005 316.741 419.821 314.221 421.117 310.046 cv
421.981 306.949 421.045 302.99 417.805 301.694 cv
417.157 301.477 416.221 301.261 415.645 301.765 cv
414.637 302.63 415.717 303.926 416.221 304.645 cv
418.093 307.597 417.517 310.694 415.357 313.358 cv
414.493 314.437 413.413 315.229 412.189 315.878 cv
407.365 318.11 402.109 316.885 397.717 314.15 cv
396.133 312.997 394.621 311.557 393.253 309.973 cv
385.261 299.893 385.837 286.573 392.893 276.493 cv
392.677 276.926 392.461 277.358 392.245 277.789 cv
390.805 281.318 390.517 285.061 392.029 288.661 cv
393.325 291.614 395.773 294.061 399.085 294.422 cv
401.461 294.565 404.269 293.269 404.773 290.677 cv
404.845 290.174 404.845 289.453 404.341 289.094 cv
403.549 288.446 402.829 289.453 402.325 289.957 cv
400.381 291.758 398.005 291.829 395.701 290.605 cv
394.765 290.101 394.045 289.453 393.397 288.661 cv
390.949 285.349 391.093 281.174 392.533 277.501 cv
392.821 276.926 393.109 276.349 393.397 275.773 cv
394.045 274.981 394.693 274.189 395.341 273.397 cv
397.213 271.526 399.157 269.942 401.245 268.573 cv
ef
434.149 465.349 mo
432.781 468.517 434.797 471.973 437.749 473.773 cv
443.077 476.798 449.413 475.07 454.021 471.469 cv
462.373 464.63 464.533 453.397 461.941 443.389 cv
461.797 442.597 461.509 441.805 461.221 441.013 cv
459.565 437.125 457.333 433.67 456.973 429.278 cv
456.613 423.878 459.277 420.349 462.589 418.261 cv
462.517 418.189 462.445 418.117 462.445 418.046 cv
460.141 419.269 458.053 420.997 456.901 423.734 cv
455.245 427.621 456.397 432.734 458.845 437.198 cv
460.069 439.501 461.221 441.517 461.797 444.11 cv
463.741 453.829 461.149 464.917 453.157 471.181 cv
448.693 474.637 442.573 476.077 437.605 472.909 cv
435.301 471.325 433.789 468.734 434.221 466.07 cv
434.221 466.214 434.293 466.285 434.293 466.429 cv
434.797 467.365 435.949 467.798 436.885 467.293 cv
437.821 466.862 438.253 465.709 437.749 464.773 cv
437.317 463.765 436.165 463.406 435.229 463.838 cv
434.581 464.125 434.221 464.701 434.149 465.349 cv
ef
463.165 446.845 mo
460.213 451.021 455.893 453.758 450.709 453.325 cv
447.325 452.893 443.725 450.878 443.365 447.134 cv
443.221 444.973 444.157 442.165 446.173 441.013 cv
446.245 441.013 446.533 440.798 446.389 440.942 cv
444.877 442.382 444.445 444.037 445.021 445.981 cv
446.821 450.949 453.085 452.03 457.549 450.446 cv
458.917 449.869 460.141 449.077 461.293 448.07 cv
461.941 447.422 462.589 446.701 463.093 445.981 cv
463.165 446.845 li
ef
461.221 451.165 mo
461.077 451.67 461.077 452.822 461.077 453.325 cv
461.149 455.63 461.077 457.501 460.069 459.661 cv
456.829 465.926 449.269 467.077 443.077 465.061 cv
443.005 465.061 443.005 465.061 442.933 465.061 cv
442.357 465.134 441.781 464.701 441.709 464.125 cv
441.637 463.477 442.069 462.902 442.717 462.829 cv
443.293 462.758 443.869 463.189 443.941 463.838 cv
443.941 464.198 443.797 464.63 443.509 464.845 cv
447.685 465.997 452.365 465.709 455.821 462.758 cv
458.341 460.526 459.061 457.718 458.917 454.55 cv
459.349 453.758 460.069 452.533 461.221 451.165 cv
ef
435.013 459.734 mo
430.621 456.205 427.021 458.437 425.005 456.709 cv
424.285 456.061 423.781 454.621 423.781 454.621 cv
423.781 454.621 423.781 459.086 427.381 460.453 cv
430.477 461.677 432.637 459.878 435.373 460.741 cv
436.237 460.957 437.029 461.318 437.029 461.318 cv
435.013 459.734 li
ef
430.045 454.765 mo
427.453 450.805 423.997 451.67 422.773 449.798 cv
422.341 449.077 422.341 447.853 422.341 447.853 cv
422.341 447.853 421.189 451.382 423.709 453.397 cv
425.941 455.125 428.101 454.261 430.117 455.63 cv
430.693 456.061 431.269 456.493 431.269 456.493 cv
430.045 454.765 li
ef
427.669 449.869 mo
426.733 446.773 424.285 446.701 423.853 445.189 cv
423.709 444.614 423.925 443.822 423.925 443.822 cv
423.925 443.822 422.485 445.909 423.781 447.781 cv
424.861 449.365 426.517 449.15 427.525 450.446 cv
427.813 450.878 428.101 451.309 428.101 451.309 cv
427.669 449.869 li
ef
457.549 419.342 mo
456.829 419.701 456.181 420.061 455.533 420.422 cv
454.957 420.781 454.453 421.214 453.949 421.573 cv
451.357 423.805 449.125 426.973 449.413 430.501 cv
449.629 432.086 450.565 433.67 452.293 433.526 cv
453.085 433.453 453.877 433.382 454.669 433.453 cv
455.389 433.453 453.877 433.67 452.725 434.101 cv
450.709 435.037 448.621 434.533 447.253 432.734 cv
446.389 431.51 446.101 430.07 446.245 428.557 cv
446.893 422.581 453.301 419.342 458.629 418.477 cv
459.925 418.261 461.293 418.189 462.661 418.261 cv
460.861 418.333 459.133 418.621 457.549 419.342 cv
ef
458.917 416.749 mo
454.885 414.229 452.077 416.462 450.205 415.238 cv
449.485 414.734 448.981 413.581 448.981 413.581 cv
448.981 413.581 449.413 417.325 452.581 418.117 cv
455.317 418.838 456.973 417.11 459.349 417.541 cv
460.069 417.685 460.789 417.902 460.789 417.902 cv
458.917 416.749 li
ef
462.517 417.685 mo
460.789 413.293 463.453 410.845 462.589 408.829 cv
462.229 408.037 461.149 407.318 461.149 407.318 cv
461.149 407.318 464.821 408.397 465.037 411.637 cv
465.181 414.517 463.237 415.813 463.237 418.261 cv
463.237 418.981 463.309 419.701 463.309 419.701 cv
462.517 417.685 li
ef
455.389 409.55 mo
453.085 406.165 454.885 403.645 453.733 402.134 cv
453.373 401.557 452.365 401.125 452.365 401.125 cv
452.365 401.125 455.533 401.342 456.325 404.077 cv
457.045 406.382 455.605 407.822 456.109 409.838 cv
456.253 410.486 456.469 411.061 456.469 411.061 cv
455.389 409.55 li
ef
452.941 311.701 mo
452.941 311.773 452.941 311.773 453.085 311.773 cv
454.813 311.701 459.277 310.477 460.285 312.709 cv
461.005 314.293 459.997 316.741 457.981 318.181 cv
455.173 320.342 450.205 320.63 446.677 320.557 cv
448.981 317.749 451.069 314.798 452.941 311.701 cv
cp
458.557 300.614 mo
456.973 304.429 455.101 308.101 452.941 311.63 cv
453.661 310.909 461.869 307.165 463.021 305.798 cv
464.677 303.926 465.181 301.333 464.173 299.966 cv
462.661 297.878 460.357 300.254 458.557 300.614 cv
cp
462.517 288.661 mo
463.741 287.869 465.685 287.581 466.549 288.805 cv
468.493 291.469 464.965 295.501 462.949 297.302 cv
460.429 299.533 459.205 300.325 458.629 300.541 cv
460.213 296.725 461.509 292.694 462.517 288.661 cv
ef
489.157 395.942 mo
493.261 389.533 495.061 381.758 491.749 374.486 cv
488.941 368.725 482.605 364.477 476.269 367.358 cv
474.685 368.15 472.309 370.165 470.437 369.086 cv
468.493 367.789 470.509 364.621 471.517 363.397 cv
474.829 359.654 480.085 359.006 484.621 360.734 cv
492.469 364.117 495.709 372.685 495.421 380.749 cv
494.989 386.293 493.117 391.117 490.021 395.725 cv
489.805 395.798 489.445 395.869 489.157 395.942 cv
ef
536.605 247.261 mo
535.669 246.614 538.117 242.51 538.405 241.862 cv
543.661 231.422 536.389 221.917 526.453 218.174 cv
510.685 213.134 495.277 221.053 485.053 232.933 cv
466.693 256.406 469.069 287.725 483.829 312.205 cv
488.653 319.765 494.269 326.174 500.749 332.293 cv
502.621 334.021 500.461 332.365 499.741 331.862 cv
470.437 307.885 458.989 263.318 482.317 231.349 cv
493.621 217.309 511.117 208.238 529.117 213.997 cv
538.189 217.382 546.181 225.013 545.317 235.453 cv
544.597 240.926 541.789 243.517 537.685 246.758 cv
537.541 246.902 536.893 247.477 536.605 247.261 cv
ef
477.133 251.798 mo
478.717 246.829 481.885 242.51 486.925 240.422 cv
491.965 238.621 498.157 239.557 500.605 244.813 cv
500.893 245.605 501.109 246.469 501.397 247.333 cv
502.117 249.422 504.205 249.853 505.285 247.838 cv
506.797 244.957 505.645 241.429 503.701 239.125 cv
499.381 234.229 492.541 234.446 487.069 237.254 cv
481.813 240.205 478.501 244.957 476.629 250.645 cv
476.341 251.798 476.125 252.878 475.909 254.03 cv
476.341 253.238 476.701 252.517 477.133 251.798 cv
ef
520.045 211.981 mo
541.645 214.214 560.653 231.061 560.797 253.741 cv
560.725 269.006 550.573 284.125 534.589 285.781 cv
525.013 286.645 513.637 281.03 513.205 270.373 cv
513.061 266.125 515.509 261.013 520.333 260.942 cv
522.709 260.942 523.789 262.813 525.661 263.605 cv
525.013 264.11 524.653 264.829 524.653 265.694 cv
524.725 266.99 525.877 267.997 527.173 267.926 cv
528.469 267.853 529.477 266.701 529.405 265.406 cv
529.333 264.11 528.181 263.101 526.885 263.174 cv
526.741 263.174 526.597 263.245 526.525 263.245 cv
524.653 262.597 523.789 260.798 521.773 260.149 cv
515.869 258.493 511.981 264.973 511.981 270.086 cv
512.197 280.741 522.997 287.006 532.645 286.789 cv
549.637 286.214 560.941 270.517 561.229 254.462 cv
561.373 231.205 542.005 213.997 520.045 211.981 cv
ef
479.509 243.013 mo
484.189 236.605 492.253 231.278 500.533 233.654 cv
504.133 234.805 507.085 237.469 507.517 241.357 cv
507.805 244.165 508.237 246.397 509.749 248.845 cv
514.645 255.902 523.933 256.117 531.133 252.734 cv
531.205 252.734 li
531.997 252.734 532.573 252.157 532.573 251.365 cv
532.573 250.645 531.997 250.07 531.205 250.07 cv
530.485 250.07 529.909 250.645 529.909 251.365 cv
529.909 251.869 530.125 252.302 530.557 252.517 cv
525.661 254.605 519.973 254.966 515.365 251.942 cv
511.837 249.565 510.613 246.11 510.325 242.006 cv
509.893 233.869 501.829 230.557 494.629 231.709 cv
487.933 233.006 482.749 237.254 479.509 243.013 cv
ef
492.181 230.557 mo
492.613 230.413 493.117 230.198 493.549 230.053 cv
498.373 228.469 503.125 228.469 507.949 229.981 cv
509.317 230.486 510.613 230.99 511.981 231.709 cv
513.709 232.645 515.077 233.869 517.165 233.581 cv
520.261 233.077 521.845 230.269 522.133 227.389 cv
522.277 226.021 522.061 224.51 522.421 223.214 cv
522.781 221.845 523.789 222.422 524.365 223.285 cv
526.813 226.597 526.237 231.422 523.933 234.661 cv
521.629 237.397 518.461 238.838 514.933 238.117 cv
512.701 237.541 510.973 236.174 509.245 234.805 cv
508.525 234.229 507.733 233.654 506.941 233.149 cv
502.909 230.413 498.373 229.694 493.693 230.917 cv
493.117 231.061 492.613 231.205 492.109 231.349 cv
492.109 231.134 492.181 230.845 492.181 230.557 cv
ef
495.997 227.101 mo
501.685 221.99 506.797 224.725 509.389 222.205 cv
510.325 221.269 510.901 219.325 510.901 219.325 cv
510.901 219.325 511.261 225.373 506.437 227.533 cv
502.261 229.333 499.237 227.101 495.565 228.469 cv
494.413 228.902 493.405 229.406 493.405 229.406 cv
495.997 227.101 li
ef
547.765 227.677 mo
546.541 234.013 551.941 238.046 551.509 241.645 cv
551.365 242.942 550.069 244.526 550.069 244.526 cv
550.069 244.526 555.109 241.214 553.957 236.101 cv
552.877 231.637 549.277 230.557 548.125 226.813 cv
547.765 225.661 547.549 224.51 547.549 224.51 cv
547.765 227.677 li
ef
540.061 216.59 mo
546.325 215.149 550.573 220.333 554.101 219.758 cv
555.469 219.541 556.981 218.174 556.981 218.174 cv
556.981 218.174 553.885 223.357 548.701 222.422 cv
544.237 221.557 543.013 217.957 539.197 217.021 cv
538.045 216.734 536.893 216.517 536.893 216.517 cv
540.061 216.59 li
ef
513.421 273.11 mo
512.917 271.382 512.917 269.654 513.925 268.07 cv
514.861 266.773 516.229 265.909 517.813 266.125 cv
518.245 266.198 518.605 266.269 518.965 266.342 cv
519.541 266.486 520.117 266.198 519.901 265.55 cv
519.685 264.685 518.605 264.181 517.813 264.037 cv
516.229 263.822 514.789 264.541 513.853 265.765 cv
512.413 267.565 512.197 269.869 512.773 272.03 cv
512.845 272.462 512.989 272.893 513.205 273.254 cv
513.277 273.181 513.349 273.11 513.421 273.11 cv
ef
470.941 345.685 mo
471.589 345.325 471.301 341.725 471.229 341.221 cv
470.869 332.293 477.205 326.174 483.613 324.949 cv
493.477 323.798 500.029 332.581 502.765 343.526 cv
507.229 364.694 498.373 388.526 484.261 404.869 cv
480.517 409.189 476.845 412.429 472.669 415.597 cv
472.525 415.813 472.309 416.245 472.237 416.389 cv
493.477 402.422 510.037 370.67 504.637 342.734 cv
502.189 329.917 494.413 319.981 483.109 321.278 cv
477.277 322.358 471.085 326.893 468.997 335.03 cv
468.061 339.422 468.997 341.942 470.437 345.11 cv
470.509 345.254 470.725 345.758 470.941 345.685 cv
ef
487.861 398.174 mo
488.149 397.453 488.437 396.734 488.653 396.013 cv
488.797 395.365 488.941 394.718 489.085 394.07 cv
489.517 390.685 489.157 386.869 486.565 384.422 cv
485.341 383.413 483.613 382.765 482.389 384.061 cv
481.885 384.637 481.309 385.214 480.733 385.718 cv
480.085 386.15 481.165 384.997 481.669 383.917 cv
482.605 381.902 484.477 380.893 486.709 381.325 cv
488.149 381.685 489.301 382.55 490.237 383.701 cv
493.693 388.67 491.029 395.365 487.645 399.541 cv
486.781 400.55 485.845 401.557 484.765 402.349 cv
486.061 401.125 487.141 399.758 487.861 398.174 cv
ef
493.621 439.862 mo
494.125 440.51 496.285 439.357 496.933 439.141 cv
502.117 438.061 504.565 444.181 503.917 448.645 cv
502.549 457.07 494.125 461.174 486.637 459.59 cv
474.541 456.853 468.205 443.318 468.637 431.15 cv
468.997 425.318 470.725 419.99 473.461 415.309 cv
472.525 415.885 li
471.805 417.037 471.229 418.261 470.653 419.557 cv
465.541 432.086 467.341 447.349 477.421 456.637 cv
484.117 462.685 494.125 463.981 501.109 457.429 cv
504.205 454.406 506.149 450.157 505.861 445.621 cv
505.213 439.573 499.597 434.174 494.557 438.853 cv
494.485 438.926 493.477 439.718 493.621 439.862 cv
ef
470.581 419.99 mo
470.941 419.63 471.733 418.909 472.237 418.621 cv
474.037 417.254 475.477 416.03 476.557 413.942 cv
479.509 407.533 475.837 400.838 470.437 397.165 cv
470.365 397.165 470.365 397.094 470.365 397.094 cv
470.077 396.59 469.357 396.373 468.853 396.734 cv
468.349 397.021 468.133 397.67 468.421 398.245 cv
468.781 398.749 469.429 398.893 470.005 398.605 cv
470.293 398.389 470.509 398.03 470.509 397.67 cv
474.037 400.261 476.629 404.15 476.485 408.685 cv
476.197 411.997 474.397 414.302 471.805 416.174 cv
471.445 416.893 470.941 418.261 470.581 419.99 cv
ef
533.005 268.573 mo
533.005 268.645 li
535.453 270.59 537.037 273.11 537.397 276.205 cv
537.541 278.725 536.821 281.389 534.589 282.902 cv
533.005 283.981 530.557 284.125 529.189 282.541 cv
528.901 282.181 528.685 281.677 528.829 281.245 cv
529.189 280.453 530.053 280.885 530.629 281.03 cv
532.645 281.605 534.373 280.741 535.525 279.013 cv
535.957 278.293 536.245 277.573 536.389 276.709 cv
536.821 273.469 535.165 270.59 532.789 268.573 cv
532.357 268.285 531.997 267.997 531.565 267.709 cv
530.557 267.134 529.549 266.63 528.469 266.198 cv
528.469 266.125 li
533.149 268.07 537.397 271.165 540.781 275.342 cv
546.901 283.406 548.845 293.486 545.317 303.061 cv
540.421 315.229 527.317 322.358 514.717 317.462 cv
506.869 314.077 501.541 306.302 502.909 297.517 cv
504.421 289.382 512.917 282.541 521.125 286.718 cv
524.941 288.805 527.677 293.99 524.509 297.805 cv
523.141 299.389 519.685 300.254 519.037 297.446 cv
519.829 299.605 522.565 299.245 523.933 297.949 cv
526.669 295.285 525.589 291.037 523.213 288.59 cv
517.525 283.189 509.029 286.214 505.213 292.189 cv
500.245 300.397 503.917 310.406 511.549 315.517 cv
518.029 319.477 525.445 319.621 531.853 316.813 cv
528.901 317.966 525.661 318.325 522.349 317.677 cv
518.245 316.741 514.429 314.221 513.133 310.046 cv
512.269 306.949 513.205 302.99 516.445 301.694 cv
517.093 301.477 518.029 301.261 518.605 301.765 cv
519.613 302.63 518.533 303.926 518.029 304.645 cv
516.157 307.597 516.733 310.694 518.893 313.358 cv
519.757 314.437 520.837 315.229 522.061 315.878 cv
526.885 318.11 532.141 316.885 536.533 314.15 cv
538.117 312.997 539.629 311.557 540.997 309.973 cv
548.989 299.893 548.413 286.573 541.357 276.493 cv
541.573 276.926 541.789 277.358 542.005 277.789 cv
543.445 281.318 543.733 285.061 542.221 288.661 cv
540.925 291.614 538.477 294.061 535.165 294.422 cv
532.789 294.565 529.981 293.269 529.477 290.677 cv
529.405 290.174 529.405 289.453 529.909 289.094 cv
530.701 288.446 531.421 289.453 531.925 289.957 cv
533.869 291.758 536.245 291.829 538.549 290.605 cv
539.413 290.101 540.205 289.453 540.853 288.661 cv
543.301 285.349 543.157 281.174 541.717 277.501 cv
541.429 276.926 541.141 276.349 540.853 275.773 cv
540.205 274.981 539.557 274.189 538.837 273.397 cv
537.037 271.526 535.093 269.942 533.005 268.573 cv
ef
500.101 465.349 mo
501.469 468.517 499.453 471.973 496.501 473.773 cv
491.173 476.798 484.837 475.07 480.229 471.469 cv
471.877 464.63 469.717 453.397 472.237 443.389 cv
472.453 442.597 472.741 441.805 472.957 441.013 cv
474.685 437.125 476.917 433.67 477.277 429.278 cv
477.565 423.878 474.973 420.349 471.661 418.261 cv
471.733 418.189 471.805 418.117 471.805 418.046 cv
474.109 419.269 476.197 420.997 477.349 423.734 cv
479.005 427.621 477.853 432.734 475.405 437.198 cv
474.181 439.501 473.029 441.517 472.453 444.11 cv
470.509 453.829 473.101 464.917 481.093 471.181 cv
485.557 474.637 491.677 476.077 496.645 472.909 cv
498.949 471.325 500.461 468.734 500.029 466.07 cv
500.029 466.214 499.957 466.285 499.957 466.429 cv
499.453 467.365 498.301 467.798 497.365 467.293 cv
496.429 466.862 495.997 465.709 496.501 464.773 cv
496.933 463.765 498.085 463.406 499.021 463.838 cv
499.669 464.125 500.029 464.701 500.101 465.349 cv
ef
471.085 446.845 mo
473.965 451.021 478.357 453.758 483.541 453.325 cv
486.925 452.893 490.525 450.878 490.885 447.134 cv
491.029 444.973 490.093 442.165 488.077 441.013 cv
488.005 441.013 487.717 440.798 487.861 440.942 cv
489.373 442.382 489.805 444.037 489.229 445.981 cv
487.429 450.949 481.165 452.03 476.701 450.446 cv
475.333 449.869 474.109 449.077 472.957 448.07 cv
472.309 447.422 471.661 446.701 471.157 445.981 cv
471.085 446.845 li
ef
473.029 451.165 mo
473.173 451.67 473.173 452.822 473.173 453.325 cv
473.101 455.63 473.173 457.501 474.181 459.661 cv
477.421 465.926 484.981 467.077 491.173 465.061 cv
491.245 465.061 491.245 465.061 491.317 465.061 cv
491.893 465.134 492.469 464.701 492.541 464.125 cv
492.613 463.477 492.181 462.902 491.533 462.829 cv
490.957 462.758 490.381 463.189 490.309 463.838 cv
490.237 464.198 490.453 464.63 490.741 464.845 cv
486.565 465.997 481.885 465.709 478.429 462.758 cv
475.909 460.526 475.189 457.718 475.333 454.55 cv
474.901 453.758 474.181 452.533 473.029 451.165 cv
ef
499.237 459.734 mo
503.629 456.205 507.229 458.437 509.245 456.709 cv
509.965 456.061 510.397 454.621 510.397 454.621 cv
510.397 454.621 510.469 459.086 506.869 460.453 cv
503.701 461.677 501.613 459.878 498.877 460.741 cv
498.013 460.957 497.221 461.318 497.221 461.318 cv
499.237 459.734 li
ef
504.205 454.765 mo
506.797 450.805 510.253 451.67 511.477 449.798 cv
511.909 449.077 511.909 447.853 511.909 447.853 cv
511.909 447.853 513.061 451.382 510.469 453.397 cv
508.309 455.125 506.149 454.261 504.133 455.63 cv
503.485 456.061 502.981 456.493 502.981 456.493 cv
504.205 454.765 li
ef
506.581 449.869 mo
507.517 446.773 509.965 446.701 510.397 445.189 cv
510.541 444.614 510.253 443.822 510.253 443.822 cv
510.253 443.822 511.765 445.909 510.469 447.781 cv
509.389 449.365 507.733 449.15 506.725 450.446 cv
506.437 450.878 506.149 451.309 506.149 451.309 cv
506.581 449.869 li
ef
476.701 419.342 mo
477.421 419.701 478.069 420.061 478.717 420.422 cv
479.293 420.781 479.797 421.214 480.301 421.573 cv
482.893 423.805 485.125 426.973 484.837 430.501 cv
484.621 432.086 483.685 433.67 481.957 433.526 cv
481.165 433.453 480.373 433.382 479.581 433.453 cv
478.861 433.453 480.373 433.67 481.525 434.101 cv
483.541 435.037 485.629 434.533 486.997 432.734 cv
487.861 431.51 488.149 430.07 488.005 428.557 cv
487.357 422.581 480.949 419.342 475.621 418.477 cv
474.325 418.261 472.957 418.189 471.589 418.261 cv
473.389 418.333 475.117 418.621 476.701 419.342 cv
ef
475.333 416.749 mo
479.365 414.229 482.173 416.462 484.045 415.238 cv
484.765 414.734 485.269 413.581 485.269 413.581 cv
485.269 413.581 484.837 417.325 481.669 418.117 cv
478.933 418.838 477.277 417.11 474.901 417.541 cv
474.109 417.685 473.461 417.902 473.461 417.902 cv
475.333 416.749 li
ef
471.733 417.685 mo
473.461 413.293 470.797 410.845 471.661 408.829 cv
472.021 408.037 473.101 407.318 473.101 407.318 cv
473.101 407.318 469.429 408.397 469.213 411.637 cv
468.997 414.517 471.013 415.813 471.013 418.261 cv
471.013 418.981 470.941 419.701 470.941 419.701 cv
471.733 417.685 li
ef
478.861 409.55 mo
481.165 406.165 479.365 403.645 480.445 402.134 cv
480.877 401.557 481.885 401.125 481.885 401.125 cv
481.885 401.125 478.717 401.342 477.925 404.077 cv
477.205 406.382 478.645 407.822 478.141 409.838 cv
477.997 410.486 477.781 411.061 477.781 411.061 cv
478.861 409.55 li
ef
481.309 311.701 mo
481.309 311.773 481.309 311.773 481.165 311.773 cv
479.437 311.701 474.973 310.477 473.965 312.709 cv
473.245 314.293 474.253 316.741 476.197 318.181 cv
479.077 320.342 484.045 320.63 487.573 320.557 cv
485.269 317.749 483.181 314.798 481.309 311.701 cv
cp
475.693 300.614 mo
477.277 304.429 479.149 308.101 481.309 311.63 cv
480.589 310.909 472.381 307.165 471.157 305.798 cv
469.573 303.926 469.069 301.333 470.077 299.966 cv
471.589 297.878 473.893 300.254 475.693 300.614 cv
cp
471.733 288.661 mo
470.509 287.869 468.565 287.581 467.701 288.805 cv
465.757 291.469 469.285 295.501 471.301 297.302 cv
473.821 299.533 475.045 300.325 475.621 300.541 cv
474.037 296.725 472.741 292.694 471.733 288.661 cv
ef
467.053 208.238 mo
464.605 193.981 457.261 186.853 457.261 179.798 cv
457.261 172.67 459.709 165.541 467.053 165.541 cv
474.397 165.541 476.845 172.67 476.845 179.798 cv
476.845 186.853 469.501 193.981 467.053 208.238 cv
ef
473.173 93.0374 mo
473.389 95.9175 473.677 97.7893 474.613 100.669 cv
477.061 108.229 479.725 115.718 479.293 123.278 cv
478.861 130.765 475.765 137.966 473.749 145.165 cv
472.237 150.565 471.373 158.773 471.517 158.773 cv
471.661 158.701 473.029 149.845 475.405 146.389 cv
480.301 139.261 486.493 131.342 486.853 123.134 cv
487.285 114.854 481.237 107.005 476.557 98.9414 cv
475.477 96.9973 474.253 95.0535 473.173 93.0374 cv
ef
473.749 161.006 mo
476.989 160.502 480.157 160.573 483.181 161.149 cv
492.181 163.094 497.005 176.557 498.877 184.333 cv
499.309 186.134 499.525 188.294 500.317 189.878 cv
501.469 192.181 503.269 190.238 504.061 188.869 cv
507.373 182.749 507.373 174.037 502.765 168.637 cv
495.853 160.573 484.405 158.053 474.109 159.997 cv
474.037 160.429 473.893 160.718 473.749 161.006 cv
ef
470.005 163.741 mo
470.005 163.741 481.381 167.269 480.157 181.021 cv
479.365 190.957 488.797 199.094 498.949 199.597 cv
502.405 199.741 504.277 199.238 508.669 197.942 cv
508.669 197.942 505.285 196.789 501.973 194.486 cv
493.333 188.437 494.845 177.349 487.573 169.502 cv
482.533 164.101 476.845 161.221 470.005 163.741 cv
ef
515.581 196.718 mo
518.389 199.094 518.029 203.342 516.085 206.365 cv
512.341 211.694 505.501 212.917 499.453 211.621 cv
487.429 208.67 479.869 197.51 478.573 185.701 cv
478.357 186.781 477.997 187.789 477.709 188.798 cv
477.637 188.798 li
477.781 188.149 477.925 187.429 478.069 186.781 cv
478.285 185.63 478.357 184.406 478.501 183.254 cv
478.789 179.654 478.573 176.053 477.349 172.67 cv
475.189 167.413 471.013 165.254 466.909 164.749 cv
466.909 164.677 466.909 164.533 466.909 164.462 cv
469.645 164.677 472.453 165.325 474.829 167.342 cv
478.645 170.725 479.725 177.422 478.933 183.469 cv
478.717 184.909 478.861 185.99 479.149 187.429 cv
481.309 198.302 489.085 208.597 500.173 210.973 cv
505.933 212.198 512.485 210.829 515.797 205.502 cv
517.237 202.909 517.453 199.741 515.869 197.365 cv
515.941 197.51 515.941 197.654 515.941 197.798 cv
515.941 198.878 515.005 199.813 513.925 199.813 cv
512.773 199.813 511.837 198.878 511.837 197.798 cv
511.837 196.645 512.773 195.781 513.925 195.781 cv
514.645 195.781 515.221 196.141 515.581 196.718 cv
ef
506.725 175.406 mo
511.117 176.557 514.285 172.813 515.005 168.853 cv
515.941 162.373 511.693 156.829 506.365 153.734 cv
495.061 147.397 481.237 151.07 472.237 159.637 cv
471.949 159.997 471.733 160.357 471.445 160.718 cv
480.373 151.933 495.205 148.189 506.437 154.67 cv
511.477 157.765 515.365 163.165 514.213 169.285 cv
513.349 172.813 510.541 175.838 506.725 175.406 cv
ef
476.845 189.302 mo
476.773 189.373 li
475.621 190.382 474.901 191.749 474.757 193.333 cv
474.757 194.63 475.189 195.997 476.413 196.645 cv
477.277 197.149 478.501 197.221 479.149 196.285 cv
479.221 196.141 479.365 195.853 479.293 195.637 cv
479.077 195.278 478.645 195.493 478.357 195.637 cv
477.349 195.926 476.485 195.565 475.837 194.701 cv
475.549 194.342 475.405 193.981 475.333 193.55 cv
474.973 191.893 475.765 190.382 476.917 189.302 cv
477.133 189.157 477.349 189.013 477.565 188.869 cv
477.997 188.51 478.573 188.221 479.077 188.006 cv
479.077 187.933 li
476.701 189.086 474.685 190.741 473.029 192.973 cv
470.149 197.221 469.429 202.406 471.445 207.229 cv
474.325 213.278 481.093 216.59 487.429 213.709 cv
491.317 211.765 493.837 207.661 492.901 203.269 cv
491.893 199.165 487.429 195.926 483.325 198.229 cv
481.453 199.382 480.229 202.117 481.885 203.99 cv
482.677 204.781 484.477 205.07 484.693 203.701 cv
484.333 204.781 482.965 204.637 482.245 204.061 cv
480.805 202.765 481.165 200.533 482.317 199.238 cv
485.053 196.357 489.517 197.654 491.605 200.605 cv
494.341 204.709 492.757 209.822 489.013 212.63 cv
485.773 214.862 482.029 215.149 478.645 213.853 cv
480.229 214.357 481.885 214.429 483.541 214.07 cv
485.629 213.422 487.501 212.053 488.005 209.893 cv
488.365 208.309 487.789 206.365 486.133 205.789 cv
485.773 205.645 485.341 205.573 485.053 205.862 cv
484.549 206.294 485.125 206.942 485.413 207.302 cv
486.421 208.741 486.205 210.325 485.197 211.765 cv
484.765 212.342 484.261 212.773 483.613 213.134 cv
481.237 214.357 478.501 213.926 476.269 212.63 cv
475.405 212.053 474.541 211.406 473.821 210.614 cv
469.501 205.718 469.429 198.878 472.813 193.55 cv
472.669 193.765 472.597 194.053 472.453 194.269 cv
471.805 196.07 471.805 198.013 472.669 199.813 cv
473.389 201.254 474.685 202.406 476.413 202.55 cv
477.637 202.55 479.005 201.829 479.221 200.533 cv
479.221 200.245 479.221 199.885 478.933 199.67 cv
478.501 199.382 478.141 199.885 477.925 200.174 cv
476.989 201.181 475.765 201.254 474.613 200.677 cv
474.109 200.462 473.677 200.174 473.317 199.741 cv
472.021 198.157 472.021 195.997 472.597 194.125 cv
472.741 193.765 472.885 193.477 473.029 193.189 cv
473.317 192.758 473.605 192.325 473.965 191.966 cv
474.829 190.957 475.765 190.094 476.845 189.302 cv
ef
495.133 179.581 mo
494.845 179.006 494.557 178.357 494.197 177.781 cv
492.325 172.526 489.517 166.55 484.045 164.245 cv
480.445 162.661 476.485 162.661 472.741 162.013 cv
472.957 161.798 473.101 161.51 473.245 161.294 cv
476.413 161.51 479.653 161.294 482.749 162.086 cv
486.997 163.165 489.949 166.406 491.893 170.221 cv
493.045 172.382 493.909 174.685 494.701 177.061 cv
494.845 177.853 494.989 178.718 495.133 179.581 cv
ef
472.885 158.845 mo
473.029 156.614 473.677 154.382 474.973 152.365 cv
476.413 150.278 479.293 148.189 481.525 150.493 cv
481.885 150.853 482.173 151.214 482.461 151.645 cv
485.773 156.037 489.805 160.07 495.349 161.51 cv
498.373 162.229 502.261 162.302 504.925 160.429 cv
506.797 159.134 506.365 157.477 504.637 156.325 cv
503.485 155.533 502.117 154.957 500.821 154.382 cv
497.797 152.725 495.205 150.853 492.829 148.333 cv
491.821 147.11 490.957 145.741 489.733 144.661 cv
487.429 143.077 484.909 142.862 482.245 143.51 cv
477.781 144.949 474.973 148.406 473.317 152.725 cv
472.669 154.813 472.381 156.902 472.381 158.99 cv
472.525 158.917 472.741 158.917 472.885 158.845 cv
ef
498.445 151.141 mo
498.445 151.141 li
499.813 150.997 501.037 150.493 501.973 149.413 cv
502.693 148.55 503.053 147.325 502.621 146.245 cv
502.261 145.453 501.397 144.734 500.533 145.021 cv
500.317 145.094 500.101 145.238 500.029 145.453 cv
499.957 145.813 500.461 145.885 500.677 145.957 cv
501.541 146.245 501.973 146.966 501.973 147.902 cv
501.973 148.333 501.901 148.621 501.757 148.981 cv
501.109 150.278 499.741 150.926 498.373 151.141 cv
498.085 151.141 497.869 151.141 497.653 151.141 cv
497.149 151.07 496.645 150.997 496.141 150.926 cv
498.373 151.357 500.677 151.285 502.981 150.637 cv
507.301 149.198 510.541 145.885 511.621 141.422 cv
512.845 135.734 509.821 129.758 503.917 128.461 cv
500.101 127.741 496.213 129.254 494.557 132.853 cv
493.045 136.309 494.485 140.917 498.589 141.493 cv
500.461 141.637 502.837 140.413 502.621 138.181 cv
502.477 137.245 501.397 136.094 500.461 136.957 cv
501.325 136.309 502.261 137.174 502.405 137.966 cv
502.765 139.621 501.325 140.99 499.813 141.278 cv
496.357 141.853 493.909 138.614 494.053 135.446 cv
494.269 131.125 498.085 128.389 502.189 128.389 cv
505.645 128.533 508.453 130.333 510.109 132.997 cv
509.245 131.845 508.165 130.909 506.797 130.261 cv
504.997 129.614 502.981 129.614 501.469 130.838 cv
500.389 131.773 499.669 133.429 500.605 134.725 cv
500.749 134.942 501.037 135.302 501.397 135.229 cv
501.973 135.157 501.901 134.437 501.901 134.006 cv
501.973 132.493 502.909 131.486 504.421 130.981 cv
504.997 130.838 505.573 130.838 506.221 130.909 cv
508.597 131.269 510.253 132.997 511.189 135.157 cv
511.477 135.949 511.693 136.885 511.765 137.822 cv
512.197 143.51 508.669 148.333 503.485 150.349 cv
503.701 150.205 503.917 150.134 504.061 149.99 cv
505.501 149.053 506.509 147.758 506.869 146.03 cv
507.157 144.59 506.869 143.077 505.717 142.141 cv
504.853 141.493 503.485 141.205 502.693 142.07 cv
502.477 142.285 502.333 142.502 502.405 142.789 cv
502.549 143.221 503.053 143.006 503.413 143.006 cv
504.565 142.789 505.429 143.365 506.005 144.373 cv
506.221 144.805 506.365 145.238 506.365 145.67 cv
506.437 147.541 505.357 149.053 503.917 150.061 cv
503.629 150.205 503.413 150.349 503.125 150.493 cv
502.693 150.637 502.261 150.71 501.829 150.853 cv
500.677 151.07 499.525 151.214 498.445 151.141 cv
ef
505.645 153.661 mo
505.717 153.734 505.789 153.734 505.933 153.805 cv
512.845 156.902 521.341 155.677 525.877 149.198 cv
528.757 144.878 529.045 138.685 524.653 135.157 cv
523.141 134.006 521.197 133.429 519.325 134.006 cv
517.453 134.654 516.013 136.67 517.597 138.325 cv
517.813 138.614 518.029 138.902 518.173 139.261 cv
518.461 138.829 518.965 138.541 519.541 138.541 cv
520.333 138.541 521.053 139.189 521.053 140.053 cv
521.053 140.845 520.333 141.565 519.541 141.565 cv
518.677 141.565 517.957 140.845 517.957 140.053 cv
518.029 139.981 li
517.741 138.902 516.661 138.541 516.301 137.462 cv
515.653 134.869 518.389 133.285 520.621 133.214 cv
525.229 133.214 528.181 137.533 528.469 141.781 cv
528.685 148.261 524.005 153.302 518.101 155.101 cv
513.709 156.325 509.461 155.749 505.717 153.949 cv
505.645 153.661 li
ef
460.501 161.006 mo
457.261 160.502 454.093 160.573 451.069 161.149 cv
442.069 163.094 437.245 176.557 435.373 184.333 cv
434.941 186.134 434.725 188.294 433.933 189.878 cv
432.781 192.181 430.981 190.238 430.189 188.869 cv
426.805 182.749 426.877 174.037 431.485 168.637 cv
438.397 160.573 449.845 158.053 460.141 159.997 cv
460.213 160.429 460.357 160.718 460.501 161.006 cv
ef
464.245 163.741 mo
464.245 163.741 452.869 167.269 454.021 181.021 cv
454.885 190.957 445.453 199.094 435.301 199.597 cv
431.845 199.741 429.973 199.238 425.581 197.942 cv
425.581 197.942 428.965 196.789 432.277 194.486 cv
440.917 188.437 439.405 177.349 446.677 169.502 cv
451.717 164.101 457.405 161.221 464.245 163.741 cv
ef
427.525 175.406 mo
423.133 176.557 419.965 172.813 419.245 168.853 cv
418.309 162.373 422.557 156.829 427.885 153.734 cv
439.189 147.397 453.013 151.07 462.013 159.637 cv
462.301 159.997 462.517 160.357 462.805 160.718 cv
453.877 151.933 439.045 148.189 427.741 154.67 cv
422.773 157.765 418.813 163.165 420.037 169.285 cv
420.901 172.813 423.709 175.838 427.525 175.406 cv
ef
457.189 189.302 mo
457.261 189.373 li
458.413 190.382 459.133 191.749 459.277 193.333 cv
459.277 194.63 458.845 195.997 457.693 196.645 cv
456.829 197.149 455.533 197.221 454.885 196.285 cv
454.813 196.141 454.669 195.853 454.741 195.637 cv
454.957 195.278 455.389 195.493 455.677 195.637 cv
456.685 195.926 457.621 195.565 458.197 194.701 cv
458.485 194.342 458.629 193.981 458.701 193.55 cv
459.061 191.893 458.269 190.382 457.117 189.302 cv
456.901 189.157 456.685 189.013 456.541 188.869 cv
456.037 188.51 455.533 188.221 454.957 188.006 cv
454.957 187.933 li
457.333 189.086 459.421 190.741 461.005 192.973 cv
463.957 197.221 464.605 202.406 462.589 207.229 cv
459.781 213.278 452.941 216.59 446.605 213.709 cv
442.717 211.765 440.197 207.661 441.133 203.269 cv
442.141 199.165 446.605 195.926 450.709 198.229 cv
452.581 199.382 453.805 202.117 452.149 203.99 cv
451.357 204.781 449.557 205.07 449.341 203.701 cv
449.701 204.781 451.069 204.637 451.861 204.061 cv
453.301 202.765 452.869 200.533 451.717 199.238 cv
448.981 196.357 444.517 197.654 442.429 200.605 cv
439.693 204.709 441.277 209.822 445.021 212.63 cv
448.261 214.862 452.005 215.149 455.389 213.853 cv
453.805 214.357 452.149 214.429 450.493 214.07 cv
448.405 213.422 446.533 212.053 446.029 209.893 cv
445.669 208.309 446.245 206.365 447.901 205.789 cv
448.261 205.645 448.765 205.573 449.053 205.862 cv
449.485 206.294 448.909 206.942 448.621 207.302 cv
447.613 208.741 447.829 210.325 448.837 211.765 cv
449.269 212.342 449.773 212.773 450.421 213.134 cv
452.797 214.357 455.533 213.926 457.837 212.63 cv
458.701 212.053 459.493 211.406 460.213 210.614 cv
464.533 205.718 464.605 198.878 461.293 193.55 cv
461.365 193.765 461.437 194.053 461.581 194.269 cv
462.229 196.07 462.229 198.013 461.437 199.813 cv
460.645 201.254 459.349 202.406 457.621 202.55 cv
456.397 202.55 455.029 201.829 454.813 200.533 cv
454.813 200.245 454.813 199.885 455.101 199.67 cv
455.533 199.382 455.893 199.885 456.109 200.174 cv
457.045 201.181 458.269 201.254 459.421 200.677 cv
459.925 200.462 460.357 200.174 460.717 199.741 cv
462.013 198.157 462.085 195.997 461.437 194.125 cv
461.293 193.765 461.149 193.477 461.005 193.189 cv
460.717 192.758 460.429 192.325 460.069 191.966 cv
459.205 190.957 458.269 190.094 457.189 189.302 cv
ef
439.117 179.581 mo
439.405 179.006 439.693 178.357 440.053 177.781 cv
441.925 172.526 444.733 166.55 450.205 164.245 cv
453.661 162.734 457.477 162.661 461.221 162.086 cv
460.933 161.869 460.789 161.581 460.645 161.294 cv
457.621 161.51 454.525 161.294 451.501 162.086 cv
447.253 163.165 444.301 166.406 442.357 170.221 cv
441.205 172.382 440.341 174.685 439.549 177.061 cv
439.405 177.853 439.261 178.718 439.117 179.581 cv
ef
461.365 158.845 mo
461.221 156.614 460.573 154.382 459.277 152.365 cv
457.837 150.278 454.957 148.189 452.725 150.493 cv
452.365 150.853 452.077 151.214 451.789 151.645 cv
448.477 156.037 444.445 160.07 438.829 161.51 cv
435.877 162.229 431.989 162.302 429.325 160.429 cv
427.453 159.134 427.885 157.477 429.613 156.325 cv
430.765 155.533 432.133 154.957 433.357 154.382 cv
436.453 152.725 439.045 150.853 441.421 148.333 cv
442.429 147.11 443.221 145.741 444.517 144.661 cv
446.821 143.077 449.341 142.862 452.005 143.51 cv
456.469 144.949 459.277 148.406 460.933 152.725 cv
461.509 154.813 461.869 156.902 461.869 158.99 cv
461.725 158.917 461.509 158.917 461.365 158.845 cv
ef
435.805 151.141 mo
435.805 151.141 li
434.437 150.997 433.213 150.493 432.277 149.413 cv
431.557 148.55 431.197 147.325 431.629 146.245 cv
431.989 145.453 432.853 144.734 433.717 145.021 cv
433.933 145.094 434.149 145.238 434.221 145.453 cv
434.221 145.813 433.789 145.885 433.573 145.957 cv
432.709 146.245 432.277 146.966 432.277 147.902 cv
432.277 148.333 432.349 148.621 432.493 148.981 cv
433.141 150.278 434.509 150.926 435.877 151.141 cv
436.093 151.141 436.309 151.141 436.525 151.141 cv
437.101 151.07 437.605 150.997 438.109 150.926 cv
435.877 151.357 433.501 151.285 431.269 150.637 cv
426.949 149.198 423.709 145.885 422.629 141.422 cv
421.405 135.734 424.429 129.758 430.333 128.461 cv
434.149 127.741 438.037 129.254 439.693 132.853 cv
441.205 136.309 439.765 140.917 435.661 141.493 cv
433.789 141.637 431.413 140.413 431.629 138.181 cv
431.773 137.245 432.853 136.094 433.789 136.957 cv
432.925 136.309 431.989 137.174 431.845 137.966 cv
431.485 139.621 432.925 140.99 434.437 141.278 cv
437.893 141.853 440.341 138.614 440.197 135.446 cv
439.981 131.125 436.165 128.389 432.061 128.389 cv
428.605 128.533 425.797 130.333 424.141 132.997 cv
425.005 131.845 426.085 130.909 427.453 130.261 cv
429.253 129.614 431.269 129.614 432.781 130.838 cv
433.861 131.773 434.509 133.429 433.645 134.725 cv
433.501 134.942 433.213 135.302 432.853 135.229 cv
432.277 135.157 432.349 134.437 432.349 134.006 cv
432.277 132.493 431.341 131.486 429.829 130.981 cv
429.253 130.838 428.677 130.838 428.029 130.909 cv
425.653 131.269 423.997 132.997 423.061 135.157 cv
422.773 135.949 422.557 136.885 422.485 137.822 cv
422.053 143.51 425.581 148.333 430.765 150.349 cv
430.549 150.205 430.333 150.134 430.189 149.99 cv
428.749 149.053 427.669 147.758 427.309 146.03 cv
427.093 144.59 427.381 143.077 428.533 142.141 cv
429.397 141.493 430.765 141.205 431.557 142.07 cv
431.773 142.285 431.917 142.502 431.845 142.789 cv
431.701 143.221 431.197 143.006 430.837 143.006 cv
429.685 142.789 428.821 143.365 428.245 144.373 cv
428.029 144.805 427.885 145.238 427.885 145.67 cv
427.813 147.541 428.893 149.053 430.333 150.061 cv
430.549 150.205 430.837 150.349 431.125 150.493 cv
431.557 150.637 431.989 150.71 432.421 150.853 cv
433.573 151.07 434.725 151.214 435.805 151.141 cv
ef
428.605 153.661 mo
428.533 153.734 428.389 153.734 428.317 153.805 cv
421.405 156.902 412.909 155.677 408.373 149.198 cv
405.493 144.878 405.205 138.685 409.597 135.157 cv
411.109 134.006 413.053 133.429 414.925 134.006 cv
416.797 134.654 418.237 136.67 416.653 138.325 cv
416.365 138.614 416.221 138.902 416.077 139.261 cv
415.789 138.829 415.285 138.541 414.709 138.541 cv
413.917 138.541 413.197 139.189 413.197 140.053 cv
413.197 140.845 413.917 141.565 414.709 141.565 cv
415.573 141.565 416.221 140.845 416.221 140.053 cv
416.221 139.981 li
416.509 138.902 417.589 138.541 417.949 137.462 cv
418.597 134.869 415.861 133.285 413.629 133.214 cv
409.021 133.214 406.069 137.533 405.781 141.781 cv
405.565 148.261 410.245 153.302 416.149 155.101 cv
420.541 156.325 424.789 155.749 428.533 153.949 cv
428.605 153.661 li
ef
418.165 196.718 mo
415.429 199.094 415.789 203.342 417.733 206.365 cv
421.477 211.694 428.317 212.917 434.365 211.621 cv
446.389 208.67 453.877 197.51 455.245 185.701 cv
455.461 186.781 455.749 187.789 456.109 188.798 cv
456.181 188.798 li
456.037 188.149 455.893 187.429 455.749 186.781 cv
455.533 185.63 455.461 184.406 455.317 183.254 cv
454.957 179.654 455.245 176.053 456.469 172.67 cv
458.629 167.413 462.805 165.254 466.909 164.749 cv
466.909 164.677 466.837 164.533 466.837 164.462 cv
464.101 164.677 461.365 165.325 458.989 167.342 cv
455.101 170.725 454.021 177.422 454.885 183.469 cv
455.029 184.909 454.957 185.99 454.669 187.429 cv
452.509 198.302 444.733 208.597 433.645 210.973 cv
427.885 212.198 421.333 210.829 418.021 205.502 cv
416.581 202.909 416.365 199.741 417.877 197.365 cv
417.877 197.51 417.877 197.654 417.877 197.798 cv
417.877 198.878 418.813 199.813 419.893 199.813 cv
421.045 199.813 421.909 198.878 421.909 197.798 cv
421.909 196.645 421.045 195.781 419.893 195.781 cv
419.173 195.781 418.525 196.141 418.165 196.718 cv
ef
468.493 195.565 mo
468.565 194.198 468.781 193.117 469.141 191.822 cv
470.365 187.789 471.661 183.758 471.445 179.654 cv
471.229 174.973 469.285 170.294 468.565 165.614 cv
468.709 165.685 468.925 165.685 469.141 165.758 cv
470.149 170.437 472.741 174.973 473.029 179.725 cv
473.245 183.902 471.589 188.006 470.077 192.181 cv
469.645 193.333 469.069 194.413 468.493 195.565 cv
0 0 0 0 cmyk
ef
471.301 192.254 mo
471.301 191.03 471.445 190.021 471.877 188.798 cv
472.525 186.926 473.317 185.053 473.821 183.181 cv
474.325 181.309 474.541 179.51 474.253 177.71 cv
473.821 175.621 472.741 173.605 471.589 171.59 cv
470.365 169.645 469.213 167.701 468.493 165.614 cv
468.709 165.685 468.853 165.685 468.997 165.685 cv
469.789 167.701 471.157 169.645 472.453 171.517 cv
473.749 173.533 474.973 175.55 475.333 177.71 cv
475.693 179.51 475.405 181.382 474.829 183.254 cv
474.253 185.198 473.389 187.141 472.597 189.086 cv
472.381 189.59 472.165 190.165 471.949 190.67 cv
471.733 191.174 471.517 191.677 471.301 192.254 cv
ef
467.413 195.349 mo
467.413 193.981 467.557 192.902 467.773 191.605 cv
468.061 189.59 468.493 187.573 468.781 185.557 cv
469.069 183.614 469.285 181.597 469.285 179.581 cv
469.141 177.205 468.781 174.829 468.493 172.453 cv
468.205 170.149 467.917 167.845 467.773 165.541 cv
467.917 165.541 467.989 165.541 468.133 165.614 cv
468.421 167.917 468.853 170.221 469.357 172.526 cv
469.933 174.902 470.653 177.205 470.797 179.654 cv
470.869 181.67 470.581 183.758 470.077 185.845 cv
469.573 187.862 468.997 189.878 468.493 191.966 cv
468.349 192.541 468.205 193.117 467.989 193.694 cv
467.845 194.269 467.629 194.773 467.413 195.349 cv
ef
465.613 195.565 mo
465.541 194.198 465.397 193.117 464.965 191.822 cv
463.813 187.789 462.517 183.758 462.661 179.654 cv
462.877 174.973 464.821 170.294 465.541 165.614 cv
465.397 165.685 465.181 165.685 465.037 165.758 cv
463.957 170.437 461.365 174.973 461.077 179.725 cv
460.861 183.902 462.517 188.006 464.029 192.181 cv
464.533 193.333 465.037 194.413 465.613 195.565 cv
ef
462.805 192.254 mo
462.805 191.03 462.733 190.021 462.301 188.798 cv
461.581 186.926 460.789 185.053 460.285 183.181 cv
459.853 181.309 459.565 179.51 459.853 177.71 cv
460.285 175.621 461.365 173.605 462.589 171.59 cv
463.741 169.645 464.965 167.701 465.613 165.614 cv
465.469 165.685 465.253 165.685 465.109 165.685 cv
464.317 167.701 462.949 169.645 461.653 171.517 cv
460.357 173.533 459.205 175.55 458.773 177.71 cv
458.485 179.51 458.773 181.382 459.277 183.254 cv
459.853 185.198 460.717 187.141 461.509 189.086 cv
461.725 189.59 462.013 190.165 462.229 190.67 cv
462.445 191.174 462.661 191.677 462.805 192.254 cv
ef
466.693 195.349 mo
466.693 193.981 466.621 192.902 466.405 191.605 cv
466.045 189.59 465.685 187.573 465.325 185.557 cv
465.037 183.614 464.821 181.597 464.893 179.581 cv
464.965 177.205 465.397 174.829 465.685 172.453 cv
465.973 170.149 466.189 167.845 466.333 165.541 cv
466.261 165.541 466.117 165.541 465.973 165.614 cv
465.757 167.917 465.325 170.221 464.749 172.526 cv
464.173 174.902 463.453 177.205 463.309 179.654 cv
463.237 181.67 463.597 183.758 464.029 185.845 cv
464.533 187.862 465.109 189.878 465.613 191.966 cv
465.757 192.541 465.901 193.117 466.117 193.694 cv
466.261 194.269 466.477 194.773 466.693 195.349 cv
ef
467.125 165.541 mo
467.269 166.981 468.277 178.573 467.845 183.254 cv
467.485 186.853 467.197 190.021 467.053 191.533 cv
466.909 190.021 466.621 186.853 466.333 183.254 cv
465.829 178.573 466.909 166.981 467.053 165.541 cv
467.053 165.541 467.053 165.541 467.125 165.541 cv
ef
470.653 163.957 mo
471.085 164.174 471.805 164.462 472.597 164.966 cv
477.205 166.694 481.309 170.221 481.813 175.333 cv
481.813 176.269 481.813 177.205 481.813 178.141 cv
481.957 180.013 482.173 181.813 482.533 183.685 cv
483.325 186.637 484.405 189.086 486.349 191.462 cv
487.069 192.254 487.789 192.973 488.653 193.694 cv
487.717 192.397 486.925 191.174 486.133 189.805 cv
484.549 186.853 483.973 183.902 483.685 180.59 cv
483.685 179.798 483.613 179.006 483.613 178.214 cv
483.613 176.413 483.685 174.614 483.037 172.885 cv
481.021 167.845 475.693 165.037 470.653 163.957 cv
ef
471.301 163.309 mo
471.085 163.382 470.869 163.453 470.653 163.526 cv
471.661 163.741 473.029 164.174 473.893 164.462 cv
479.005 166.333 483.901 170.221 484.837 175.838 cv
484.909 176.773 484.981 177.781 485.053 178.789 cv
485.341 180.805 485.701 182.677 486.205 184.694 cv
487.285 187.789 488.653 190.453 490.885 192.973 cv
491.677 193.838 492.541 194.63 493.477 195.349 cv
492.397 194.053 491.461 192.685 490.525 191.245 cv
488.581 188.077 487.717 184.981 487.213 181.453 cv
487.141 180.59 487.069 179.798 486.925 178.933 cv
486.853 177.061 486.781 175.046 485.917 173.245 cv
483.685 168.349 478.573 165.397 473.605 163.885 cv
473.029 163.741 472.093 163.526 471.301 163.309 cv
ef
473.461 162.878 mo
473.101 162.949 472.813 162.949 472.525 163.021 cv
478.429 164.462 484.981 168.422 486.853 174.541 cv
487.069 175.477 487.285 176.413 487.501 177.349 cv
488.005 179.221 488.581 181.094 489.373 182.966 cv
490.741 185.917 492.397 188.437 494.845 190.885 cv
495.709 191.677 496.645 192.397 497.653 193.117 cv
496.429 191.893 495.349 190.526 494.269 189.229 cv
492.037 186.205 490.813 183.254 489.877 179.869 cv
489.661 179.077 489.445 178.285 489.301 177.493 cv
488.941 175.694 488.581 173.822 487.573 172.094 cv
484.549 167.125 478.717 164.174 473.461 162.878 cv
ef
463.597 163.957 mo
463.165 164.174 462.445 164.462 461.653 164.966 cv
457.045 166.694 452.941 170.221 452.437 175.333 cv
452.365 176.269 452.365 177.205 452.365 178.141 cv
452.293 180.013 452.077 181.813 451.717 183.685 cv
450.925 186.637 449.845 189.086 447.901 191.462 cv
447.181 192.254 446.461 192.973 445.597 193.694 cv
446.533 192.397 447.325 191.174 448.117 189.805 cv
449.701 186.853 450.277 183.902 450.565 180.59 cv
450.565 179.798 450.637 179.006 450.637 178.214 cv
450.637 176.413 450.565 174.614 451.213 172.885 cv
453.229 167.845 458.557 165.037 463.597 163.957 cv
ef
462.949 163.309 mo
463.165 163.382 463.381 163.453 463.597 163.526 cv
462.589 163.741 461.221 164.174 460.357 164.462 cv
455.245 166.333 450.349 170.221 449.413 175.838 cv
449.341 176.773 449.269 177.781 449.197 178.789 cv
448.909 180.805 448.549 182.677 448.045 184.694 cv
446.965 187.789 445.597 190.453 443.365 192.973 cv
442.573 193.838 441.709 194.63 440.773 195.349 cv
441.853 194.053 442.789 192.685 443.725 191.245 cv
445.669 188.077 446.461 184.981 447.037 181.453 cv
447.109 180.59 447.181 179.798 447.325 178.933 cv
447.397 177.061 447.469 175.046 448.333 173.245 cv
450.565 168.349 455.677 165.397 460.645 163.885 cv
461.221 163.741 462.157 163.526 462.949 163.309 cv
ef
460.789 162.878 mo
461.149 162.949 461.437 162.949 461.725 163.021 cv
455.821 164.462 449.269 168.422 447.397 174.541 cv
447.181 175.477 446.965 176.413 446.749 177.349 cv
446.245 179.221 445.669 181.094 444.877 182.966 cv
443.509 185.917 441.853 188.437 439.405 190.885 cv
438.541 191.677 437.605 192.397 436.597 193.117 cv
437.821 191.893 438.901 190.526 439.909 189.229 cv
442.213 186.205 443.437 183.254 444.373 179.869 cv
444.589 179.077 444.805 178.285 444.949 177.493 cv
445.309 175.694 445.669 173.822 446.677 172.094 cv
449.701 167.125 455.533 164.174 460.789 162.878 cv
ef
466.837 118.453 mo
467.125 118.453 467.701 118.597 467.989 118.958 cv
468.421 119.461 470.437 119.533 470.149 118.741 cv
469.861 118.021 470.221 117.733 470.797 117.517 cv
471.373 117.374 471.589 117.085 471.301 116.654 cv
471.085 116.149 470.437 116.293 469.645 116.293 cv
468.925 116.293 468.997 116.077 469.141 115.646 cv
469.285 115.141 467.557 114.637 467.269 115.213 cv
467.125 115.573 466.981 115.718 466.837 115.862 cv
466.693 115.718 466.549 115.573 466.405 115.213 cv
466.117 114.637 464.389 115.141 464.533 115.646 cv
464.677 116.077 464.821 116.293 464.029 116.293 cv
463.237 116.293 462.589 116.149 462.373 116.654 cv
462.085 117.085 462.301 117.374 462.877 117.517 cv
463.453 117.733 463.813 118.021 463.525 118.741 cv
463.237 119.533 465.253 119.461 465.685 118.958 cv
465.973 118.597 466.549 118.453 466.837 118.453 cv
0 0 0 1 cmyk
ef
460.933 93.1094 mo
460.789 95.9895 460.429 97.9333 459.493 100.813 cv
457.045 108.302 454.381 115.862 454.813 123.421 cv
455.245 130.838 458.341 138.037 460.429 145.309 cv
461.941 150.637 462.805 158.845 462.661 158.845 cv
462.445 158.845 461.149 149.917 458.773 146.533 cv
453.805 139.333 447.685 131.486 447.253 123.278 cv
446.893 114.926 452.941 107.077 457.549 99.0134 cv
458.701 97.0696 459.925 95.1255 460.933 93.1094 cv
ef
451.213 88.7893 mo
450.781 85.1174 447.109 82.9575 443.509 82.8135 cv
437.029 82.7415 432.061 87.6375 429.685 93.3254 cv
425.077 104.845 429.901 117.446 438.829 125.365 cv
438.685 125.293 438.541 125.293 438.469 125.221 cv
437.749 124.646 435.517 122.99 432.493 123.278 cv
428.677 123.709 425.221 122.917 422.701 121.117 cv
420.181 119.317 417.949 115.862 417.805 115.862 cv
417.661 115.862 426.517 129.181 436.741 126.374 cv
437.677 126.085 438.685 126.013 439.261 126.013 cv
439.765 126.302 440.269 126.589 440.773 126.805 cv
443.869 128.677 446.677 130.909 448.693 133.862 cv
451.717 138.685 451.141 143.365 449.197 146.966 cv
449.269 147.037 449.341 147.037 449.413 147.11 cv
450.853 144.734 451.933 142.141 451.645 138.973 cv
451.069 133.933 446.245 129.181 440.845 126.302 cv
439.549 125.654 438.757 124.933 437.749 123.926 cv
430.117 115.862 426.157 103.55 430.621 93.1094 cv
432.925 87.7095 437.893 83.1736 444.085 83.5334 cv
447.037 83.8215 449.773 85.4773 450.781 88.1414 cv
450.709 87.9973 450.565 87.9255 450.493 87.8535 cv
449.557 87.2053 448.333 87.4214 447.685 88.3574 cv
447.037 89.2935 447.253 90.5173 448.117 91.1655 cv
449.053 91.8135 450.349 91.5974 450.997 90.6614 cv
451.357 90.0854 451.429 89.3655 451.213 88.7893 cv
ef
483.109 88.3574 mo
483.541 84.7576 487.213 82.5974 490.813 82.3816 cv
497.293 82.3816 502.261 87.2776 504.637 92.9656 cv
509.245 104.486 504.421 117.085 495.493 125.005 cv
495.637 124.933 495.781 124.862 495.853 124.862 cv
496.573 124.213 498.805 122.629 501.829 122.917 cv
505.645 123.349 509.101 122.557 511.621 120.758 cv
514.141 118.885 516.373 115.501 516.517 115.501 cv
516.661 115.501 507.805 128.822 497.581 125.941 cv
496.645 125.725 495.637 125.654 495.061 125.654 cv
494.557 125.869 494.053 126.157 493.549 126.446 cv
490.453 128.245 487.645 130.55 485.629 133.502 cv
482.605 138.325 483.181 142.933 485.125 146.605 cv
485.053 146.677 484.981 146.677 484.909 146.749 cv
483.469 144.373 482.389 141.71 482.677 138.614 cv
483.253 133.502 488.077 128.822 493.477 125.941 cv
494.773 125.293 495.565 124.573 496.573 123.493 cv
504.205 115.501 508.165 103.189 503.701 92.7495 cv
501.397 87.3494 496.429 82.8135 490.237 83.1736 cv
487.285 83.4614 484.549 85.1174 483.541 87.7095 cv
483.613 87.6375 483.757 87.5654 483.829 87.4934 cv
484.765 86.8455 485.989 87.0615 486.637 87.9973 cv
487.285 88.8616 487.069 90.1575 486.205 90.8054 cv
485.269 91.4534 483.973 91.2375 483.325 90.3015 cv
482.965 89.7253 482.893 89.0054 483.109 88.3574 cv
ef
466.909 151.718 mo
462.589 151.718 459.133 154.526 459.133 158.053 cv
459.133 161.581 462.589 164.462 466.909 164.462 cv
471.229 164.462 474.757 161.581 474.757 158.053 cv
474.757 154.526 471.229 151.718 466.909 151.718 cv
0 0 0 0 cmyk
ef
462.517 141.278 mo
462.157 143.294 461.941 145.67 461.941 148.189 cv
461.941 156.11 464.173 162.59 466.909 162.59 cv
469.717 162.59 471.949 156.11 471.949 148.189 cv
471.949 145.238 471.661 142.502 471.085 140.269 cv
469.717 134.221 468.205 132.422 468.205 125.581 cv
468.205 120.109 li
467.773 119.893 467.269 119.75 466.909 119.677 cv
466.621 119.75 466.117 119.893 465.613 120.109 cv
465.613 125.005 li
465.613 132.349 463.813 134.725 462.517 141.278 cv
0 0 0 1 cmyk
ef
466.909 121.189 mo
466.405 134.294 464.749 140.845 464.749 147.397 cv
464.749 153.949 465.253 160.502 466.909 160.502 cv
468.565 160.502 469.141 153.949 469.141 147.397 cv
469.141 140.845 467.485 134.294 466.909 121.189 cv
0 0 0 0 cmyk
ef
465.469 209.245 mo
466.405 208.309 467.917 208.309 468.853 209.245 cv
469.789 210.181 469.789 211.694 468.853 212.63 cv
467.917 213.565 466.405 213.565 465.469 212.63 cv
464.533 211.694 464.533 210.181 465.469 209.245 cv
0 0 0 1 cmyk
ef
464.461 121.333 mo
464.461 121.333 li
464.461 121.406 li
463.669 122.27 460.069 122.917 459.277 121.55 cv
459.133 121.261 459.061 120.973 459.205 120.685 cv
459.493 119.893 459.493 119.389 459.205 119.03 cv
458.989 118.669 458.485 118.453 457.909 118.238 cv
455.677 117.517 455.821 115.213 458.197 114.997 cv
458.845 114.926 459.637 114.997 460.501 114.997 cv
461.365 114.997 461.653 114.854 461.653 114.637 cv
461.653 113.845 460.933 113.486 461.869 112.765 cv
462.877 112.117 465.397 111.469 466.045 112.765 cv
466.189 113.125 466.333 113.342 466.549 113.557 cv
466.837 113.917 466.837 113.917 467.125 113.557 cv
467.269 113.342 467.413 113.125 467.629 112.765 cv
468.349 111.325 472.741 112.333 472.237 113.773 cv
472.237 113.845 li
471.661 115.285 472.885 114.997 474.037 114.997 cv
475.405 114.926 476.557 114.926 477.061 115.862 cv
477.853 117.157 476.917 117.877 475.765 118.238 cv
475.189 118.453 474.685 118.669 474.397 119.03 cv
474.181 119.389 474.109 119.893 474.397 120.685 cv
474.541 120.973 474.541 121.261 474.397 121.55 cv
473.605 122.917 469.933 122.27 469.213 121.406 cv
467.917 119.966 465.685 120.037 464.461 121.333 cv
cp
469.573 121.045 mo
470.077 121.693 473.389 122.342 473.965 121.261 cv
474.037 121.189 474.037 121.045 473.965 120.829 cv
473.605 119.893 473.677 119.245 474.037 118.813 cv
474.325 118.309 474.901 118.021 475.621 117.805 cv
476.485 117.517 477.205 117.085 476.629 116.077 cv
476.269 115.429 475.261 115.429 474.037 115.501 cv
472.525 115.501 471.085 115.573 471.733 113.629 cv
472.021 112.981 468.565 111.901 468.061 112.981 cv
467.845 113.342 467.701 113.629 467.485 113.845 cv
466.909 114.565 466.765 114.565 466.117 113.845 cv
465.973 113.629 465.757 113.342 465.613 112.981 cv
465.109 112.045 462.877 112.693 462.157 113.198 cv
461.581 113.629 462.157 113.99 462.157 114.637 cv
462.157 115.213 461.797 115.501 460.501 115.501 cv
459.637 115.501 458.845 115.429 458.197 115.501 cv
456.397 115.646 456.397 117.229 458.053 117.805 cv
458.701 118.021 459.277 118.309 459.637 118.813 cv
459.997 119.245 459.997 119.893 459.637 120.829 cv
459.133 122.342 463.453 121.693 464.101 121.045 cv
465.541 119.461 468.061 119.389 469.573 121.045 cv
f
63.0613 325.238 mo
71.1252 313.214 70.6931 302.99 75.5891 297.878 cv
80.4851 292.694 87.1809 289.238 92.509 294.278 cv
97.8372 299.389 94.6692 306.229 89.7732 311.342 cv
84.8772 316.526 74.6531 316.597 63.0613 325.238 cv
ef
146.869 245.966 mo
144.997 248.125 143.917 249.781 142.621 252.517 cv
139.165 259.645 135.925 266.917 130.453 272.101 cv
125.053 277.214 117.853 280.309 111.373 284.125 cv
106.549 287.006 100.285 292.333 100.357 292.406 cv
100.501 292.55 107.629 287.006 111.661 286.141 cv
120.229 284.342 130.093 282.902 136.069 277.214 cv
142.045 271.453 143.053 261.59 145.285 252.59 cv
145.789 250.357 146.221 248.125 146.869 245.966 cv
ef
100.429 295.645 mo
103.093 297.446 105.397 299.677 107.197 302.198 cv
112.381 309.829 106.621 322.933 102.589 329.845 cv
101.725 331.429 100.357 333.086 99.8533 334.885 cv
99.0613 337.333 101.725 337.117 103.237 336.685 cv
109.933 334.526 115.837 328.189 116.269 321.134 cv
116.701 310.55 110.221 300.829 101.437 295.141 cv
101.077 295.358 100.789 295.501 100.429 295.645 cv
ef
95.8933 295.07 mo
95.8933 295.07 101.653 305.365 91.3572 314.581 cv
83.9412 321.134 85.1653 333.59 92.1492 340.933 cv
94.5251 343.453 96.2532 344.318 100.357 346.477 cv
100.357 346.477 98.7009 343.309 97.8372 339.278 cv
95.821 328.981 104.461 321.997 104.605 311.269 cv
104.749 303.926 102.589 297.878 95.8933 295.07 cv
ef
106.261 350.293 mo
106.549 353.893 103.381 356.701 99.8533 357.565 cv
93.5168 358.862 87.6853 355.046 84.2292 350.006 cv
77.533 339.565 79.7649 326.318 86.9651 316.813 cv
86.0291 317.462 85.093 317.966 84.157 318.469 cv
84.7332 318.037 85.2371 317.677 85.8132 317.245 cv
86.7493 316.526 87.6853 315.734 88.6208 315.013 cv
91.2849 312.637 93.5891 309.829 95.0291 306.517 cv
97.0452 301.261 95.533 296.798 92.9412 293.557 cv
93.0129 293.557 93.0852 293.486 93.157 293.413 cv
95.0291 295.429 96.5413 297.805 96.9011 300.973 cv
97.3333 306.086 93.5168 311.63 88.7649 315.446 cv
87.613 316.382 86.9651 317.245 86.1731 318.469 cv
80.2693 327.829 78.8289 340.645 85.2371 350.006 cv
88.5491 354.829 94.2371 358.285 100.285 356.773 cv
103.093 355.838 105.469 353.749 105.973 351.013 cv
105.901 351.157 105.829 351.229 105.685 351.302 cv
104.965 352.165 103.669 352.165 102.805 351.373 cv
102.013 350.654 102.013 349.358 102.733 348.493 cv
103.525 347.701 104.821 347.701 105.613 348.422 cv
106.189 348.926 106.333 349.645 106.261 350.293 cv
ef
114.397 328.765 mo
116.845 332.654 121.741 332.077 124.981 329.701 cv
130.093 325.67 130.813 318.758 129.157 312.781 cv
125.269 300.397 112.741 293.557 100.285 293.557 cv
99.8533 293.63 99.4211 293.701 98.989 293.845 cv
111.517 293.557 124.837 301.117 128.509 313.573 cv
130.021 319.261 129.157 325.885 124.045 329.486 cv
121.021 331.501 116.917 331.718 114.397 328.765 cv
ef
83.1492 318.254 mo
83.1492 318.254 li
81.5652 318.254 80.1252 318.685 78.9729 319.765 cv
78.0369 320.701 77.4612 321.997 77.821 323.293 cv
78.1091 324.229 78.9729 325.094 80.053 324.949 cv
80.2693 324.878 80.5569 324.734 80.6292 324.517 cv
80.7009 324.157 80.2693 324.013 79.9812 323.869 cv
78.9729 323.437 78.613 322.501 78.7571 321.493 cv
78.8289 321.061 78.9729 320.63 79.1892 320.269 cv
80.053 318.902 81.7092 318.325 83.2932 318.325 cv
83.509 318.325 83.7971 318.397 84.0129 318.397 cv
84.5891 318.541 85.1653 318.685 85.741 318.829 cv
83.2932 318.037 80.6292 317.822 77.9651 318.325 cv
72.8533 319.406 68.7493 322.645 66.949 327.541 cv
64.8611 333.878 67.5251 340.933 74.0769 343.238 cv
78.2532 344.533 82.8611 343.309 85.2371 339.422 cv
87.3972 335.749 86.3171 330.349 81.781 329.198 cv
79.6208 328.765 76.8132 329.917 76.741 332.365 cv
76.741 333.446 77.821 334.957 79.0452 334.094 cv
77.9651 334.67 77.0291 333.59 76.9573 332.654 cv
76.8132 330.709 78.613 329.413 80.3411 329.269 cv
84.301 329.053 86.677 333.013 86.1013 336.614 cv
85.3088 341.437 80.5569 344.101 75.949 343.526 cv
72.1331 342.949 69.1809 340.573 67.5969 337.333 cv
68.3889 338.773 69.5413 339.926 71.053 340.789 cv
72.925 341.798 75.2292 342.086 77.1731 340.933 cv
78.469 339.997 79.4773 338.198 78.613 336.614 cv
78.469 336.254 78.1091 335.893 77.7493 335.893 cv
77.1013 335.893 77.0291 336.758 77.0291 337.189 cv
76.741 338.99 75.5168 339.997 73.7893 340.285 cv
73.1409 340.429 72.4211 340.358 71.7732 340.214 cv
69.1091 339.493 67.4529 337.261 66.7332 334.741 cv
66.4451 333.734 66.3733 332.725 66.3733 331.645 cv
66.5891 325.094 71.2693 320.125 77.3171 318.541 cv
77.1013 318.614 76.885 318.758 76.6692 318.829 cv
74.8689 319.765 73.573 321.061 72.925 323.006 cv
72.4929 324.517 72.637 326.318 73.7893 327.541 cv
74.6531 328.406 76.1653 328.838 77.1731 327.973 cv
77.3889 327.829 77.677 327.541 77.6052 327.254 cv
77.4612 326.749 76.885 326.822 76.5251 326.893 cv
75.157 326.966 74.2209 326.174 73.717 324.949 cv
73.573 324.446 73.5012 323.942 73.5012 323.437 cv
73.6453 321.349 75.0852 319.765 76.8132 318.829 cv
77.1013 318.685 77.4612 318.541 77.7493 318.469 cv
78.2532 318.325 78.7571 318.254 79.3333 318.181 cv
80.6292 318.037 81.925 318.11 83.1492 318.254 cv
ef
103.093 323.798 mo
103.381 323.15 103.525 322.501 103.741 321.853 cv
105.973 316.741 108.061 310.477 105.685 305.006 cv
104.173 301.406 101.293 298.741 98.989 295.645 cv
99.3489 295.645 99.637 295.573 99.8533 295.429 cv
102.013 297.805 104.533 299.822 106.261 302.63 cv
108.565 306.302 108.493 310.694 107.269 314.798 cv
106.621 317.174 105.613 319.406 104.605 321.637 cv
104.101 322.358 103.597 323.077 103.093 323.798 cv
ef
101.293 293.486 mo
102.949 291.902 104.965 290.749 107.269 290.174 cv
109.789 289.67 113.245 290.101 113.317 293.342 cv
113.317 293.845 113.317 294.349 113.245 294.781 cv
112.597 300.325 112.741 306.013 115.765 310.909 cv
117.493 313.429 120.301 316.165 123.469 316.67 cv
125.701 317.03 126.565 315.517 126.061 313.501 cv
125.773 312.134 125.125 310.765 124.693 309.469 cv
123.613 306.157 123.037 302.99 123.037 299.533 cv
123.109 297.949 123.469 296.365 123.325 294.781 cv
122.749 292.046 121.021 290.101 118.645 288.734 cv
114.397 286.718 110.005 287.293 105.829 289.309 cv
103.957 290.389 102.301 291.685 100.861 293.198 cv
101.005 293.269 101.149 293.342 101.293 293.486 cv
ef
125.125 305.437 mo
125.125 305.51 li
126.205 306.373 127.501 306.805 128.869 306.661 cv
130.021 306.517 131.101 305.869 131.533 304.789 cv
131.821 303.997 131.677 302.917 130.885 302.486 cv
130.669 302.413 130.453 302.342 130.237 302.413 cv
129.949 302.63 130.237 302.99 130.381 303.205 cv
130.813 304.07 130.597 304.862 129.949 305.581 cv
129.661 305.869 129.373 306.013 129.013 306.157 cv
127.645 306.661 126.205 306.229 125.125 305.365 cv
124.909 305.221 124.765 305.077 124.621 304.933 cv
124.261 304.573 123.973 304.141 123.685 303.709 cv
123.613 303.709 li
124.909 305.581 126.709 307.165 128.797 308.245 cv
132.973 310.117 137.581 309.973 141.397 307.526 cv
146.221 304.214 148.093 297.805 144.709 292.765 cv
142.477 289.67 138.589 288.086 134.917 289.526 cv
131.461 290.966 129.301 295.358 131.893 298.526 cv
133.189 299.966 135.709 300.685 137.077 298.957 cv
137.653 298.165 137.725 296.581 136.429 296.581 cv
137.437 296.725 137.509 297.949 137.077 298.67 cv
136.213 300.11 134.197 300.037 132.901 299.245 cv
130.021 297.302 130.525 293.269 132.757 291.037 cv
135.925 288.086 140.605 288.734 143.557 291.541 cv
145.933 293.99 146.725 297.229 146.149 300.325 cv
146.293 298.885 146.149 297.446 145.573 296.077 cv
144.781 294.349 143.269 292.981 141.325 292.765 cv
139.885 292.694 138.301 293.486 138.013 294.997 cv
137.941 295.358 138.013 295.789 138.301 296.006 cv
138.733 296.365 139.165 295.718 139.453 295.429 cv
140.605 294.349 141.973 294.278 143.341 294.997 cv
143.917 295.285 144.349 295.645 144.709 296.15 cv
146.221 298.021 146.149 300.469 145.429 302.63 cv
145.069 303.422 144.565 304.214 143.989 305.006 cv
140.389 309.469 134.485 310.477 129.373 308.389 cv
129.589 308.389 129.805 308.462 130.021 308.533 cv
131.749 308.822 133.405 308.605 134.845 307.597 cv
135.925 306.734 136.789 305.437 136.645 303.926 cv
136.429 302.845 135.637 301.765 134.485 301.838 cv
134.197 301.838 133.909 301.909 133.765 302.125 cv
133.621 302.557 134.125 302.773 134.341 302.917 cv
135.349 303.637 135.637 304.645 135.277 305.798 cv
135.133 306.229 134.917 306.59 134.629 306.949 cv
133.477 308.318 131.605 308.677 129.877 308.462 cv
129.589 308.389 129.301 308.318 129.013 308.174 cv
128.653 308.03 128.221 307.813 127.789 307.597 cv
126.781 306.949 125.917 306.229 125.125 305.437 cv
ef
128.653 312.278 mo
128.653 312.349 128.725 312.422 128.725 312.493 cv
131.605 319.55 138.589 324.517 146.365 322.933 cv
151.405 321.781 155.941 317.462 155.149 311.917 cv
154.789 310.046 153.853 308.318 152.053 307.382 cv
150.325 306.59 147.877 307.021 147.805 309.397 cv
147.805 309.758 147.805 310.117 147.661 310.477 cv
148.165 310.333 148.741 310.406 149.101 310.838 cv
149.749 311.413 149.749 312.349 149.173 312.997 cv
148.597 313.573 147.661 313.573 147.013 312.997 cv
146.437 312.422 146.437 311.486 147.013 310.838 cv
147.589 309.902 147.013 308.893 147.517 307.813 cv
148.813 305.581 151.909 306.229 153.565 307.741 cv
156.949 310.909 156.085 316.094 153.349 319.333 cv
149.101 324.229 142.189 324.661 136.645 321.853 cv
132.685 319.765 129.949 316.382 128.509 312.493 cv
128.653 312.278 li
ef
90.781 286.501 mo
88.8372 283.909 86.533 281.749 83.9412 280.094 cv
76.0212 275.342 63.2771 281.749 56.509 286.07 cv
54.9973 287.077 53.4128 288.517 51.6853 289.094 cv
49.2371 289.957 49.3088 287.365 49.741 285.781 cv
51.469 279.013 57.5168 272.749 64.573 272.03 cv
75.0852 271.021 85.1653 276.997 91.2131 285.493 cv
91.0691 285.853 90.925 286.141 90.781 286.501 cv
ef
91.6453 291.037 mo
91.6453 291.037 81.0613 285.781 72.4211 296.581 cv
66.157 304.285 53.7009 303.709 45.9971 297.157 cv
43.405 294.853 42.397 293.198 40.021 289.238 cv
40.021 289.238 43.333 290.749 47.365 291.325 cv
57.7332 292.838 64.2849 283.838 74.9412 283.117 cv
82.3572 282.614 88.4773 284.486 91.6453 291.037 cv
ef
57.0129 274.261 mo
53.053 272.03 53.3411 267.061 55.5012 263.749 cv
59.3171 258.422 66.157 257.342 72.2048 258.709 cv
84.8049 261.949 92.2209 274.117 92.8689 286.501 cv
92.8689 287.006 92.7971 287.437 92.7249 287.869 cv
92.2932 275.342 84.0852 262.382 71.4851 259.357 cv
65.7249 258.134 59.1731 259.357 55.7893 264.614 cv
53.989 267.781 53.989 271.885 57.0129 274.261 cv
ef
68.9651 304.789 mo
68.9651 304.789 li
69.1091 306.373 68.7493 307.813 67.6692 309.037 cv
66.8049 310.046 65.5813 310.694 64.2131 310.406 cv
63.2771 310.117 62.3411 309.325 62.4851 308.245 cv
62.4851 308.03 62.6292 307.741 62.845 307.67 cv
63.2048 307.526 63.4211 307.957 63.4929 308.245 cv
64.0691 309.181 64.9329 309.541 66.0129 309.325 cv
66.4451 309.254 66.8049 309.11 67.1653 308.893 cv
68.533 307.885 68.9651 306.229 68.8933 304.645 cv
68.8933 304.429 68.821 304.141 68.7493 303.926 cv
68.6052 303.349 68.4612 302.773 68.2449 302.269 cv
68.3171 302.198 li
69.1809 304.645 69.5413 307.309 69.1809 309.973 cv
68.3889 315.086 65.2932 319.333 60.5413 321.422 cv
54.2771 323.869 47.0771 321.565 44.4851 315.157 cv
42.9731 311.053 43.981 306.373 47.7251 303.781 cv
51.2532 301.477 56.7249 302.269 58.093 306.734 cv
58.6692 308.822 57.6609 311.701 55.2131 311.917 cv
54.1331 311.917 52.5491 310.909 53.3411 309.758 cv
52.8372 310.765 53.9172 311.63 54.925 311.701 cv
56.8689 311.773 58.0212 309.902 58.093 308.174 cv
58.1653 304.214 54.0613 302.053 50.4612 302.773 cv
45.709 303.853 43.261 308.677 44.053 313.285 cv
44.845 317.101 47.437 319.909 50.7493 321.278 cv
49.2371 320.557 48.0132 319.477 47.0771 318.037 cv
45.9971 316.165 45.5652 313.933 46.645 311.917 cv
47.509 310.55 49.3088 309.541 50.8933 310.261 cv
51.2532 310.406 51.613 310.694 51.613 311.125 cv
51.6853 311.773 50.821 311.845 50.3889 311.917 cv
48.5891 312.278 47.6531 313.501 47.437 315.229 cv
47.365 315.949 47.437 316.597 47.6531 317.318 cv
48.5171 319.909 50.821 321.422 53.3411 322.07 cv
54.3489 322.214 55.429 322.285 56.4373 322.285 cv
62.989 321.637 67.741 316.741 68.9651 310.621 cv
68.8933 310.838 68.821 311.053 68.7493 311.342 cv
67.885 313.07 66.6609 314.51 64.7893 315.229 cv
63.2048 315.734 61.4773 315.734 60.1809 314.654 cv
59.2449 313.789 58.741 312.278 59.533 311.198 cv
59.7493 310.981 59.9651 310.765 60.325 310.765 cv
60.8289 310.909 60.6853 311.486 60.6853 311.845 cv
60.6853 313.214 61.4773 314.077 62.7732 314.51 cv
63.2771 314.725 63.781 314.725 64.2849 314.725 cv
66.3733 314.437 67.885 312.926 68.7493 311.125 cv
68.821 310.838 68.9651 310.477 69.0369 310.189 cv
69.1091 309.685 69.1809 309.181 69.2532 308.605 cv
69.325 307.309 69.1809 306.013 68.9651 304.789 cv
ef
62.5569 285.278 mo
63.2048 284.99 63.781 284.773 64.429 284.557 cv
69.469 282.037 75.5891 279.661 81.2048 281.749 cv
84.7332 283.046 87.5413 285.637 90.637 287.725 cv
90.5652 287.365 90.637 287.077 90.781 286.789 cv
88.405 284.845 86.3171 282.541 83.5813 281.101 cv
79.7649 278.942 75.3733 279.229 71.3411 280.67 cv
69.0369 281.462 66.8049 282.541 64.6453 283.694 cv
63.925 284.198 63.2771 284.701 62.5569 285.278 cv
ef
92.9412 285.493 mo
94.3811 283.765 95.4612 281.749 95.8933 279.446 cv
96.325 276.853 95.677 273.397 92.4373 273.541 cv
91.9329 273.541 91.5012 273.614 90.9968 273.685 cv
85.5251 274.621 79.8372 274.765 74.7971 271.957 cv
72.1331 270.373 69.2532 267.781 68.6052 264.614 cv
68.1731 262.382 69.613 261.446 71.6292 261.805 cv
72.9968 262.094 74.4373 262.597 75.7332 263.03 cv
79.1169 263.893 82.2849 264.325 85.741 264.181 cv
87.325 263.966 88.9089 263.533 90.4929 263.605 cv
93.301 264.037 95.2449 265.621 96.7571 267.926 cv
98.989 272.101 98.6292 276.493 96.8289 280.741 cv
95.821 282.758 94.6692 284.413 93.2292 285.926 cv
93.157 285.781 93.0852 285.637 92.9412 285.493 cv
ef
79.7649 262.309 mo
79.6931 262.309 li
78.8289 261.302 78.2532 260.077 78.325 258.637 cv
78.469 257.486 78.9729 256.406 80.053 255.902 cv
80.845 255.541 81.9968 255.685 82.429 256.477 cv
82.5012 256.621 82.6453 256.909 82.5012 257.053 cv
82.2849 257.342 81.925 257.125 81.7092 257.053 cv
80.845 256.621 80.053 256.909 79.405 257.557 cv
79.1169 257.845 78.9729 258.134 78.8289 258.493 cv
78.3972 259.933 78.9011 261.302 79.8372 262.382 cv
79.9812 262.526 80.1252 262.67 80.2693 262.813 cv
80.7009 263.174 81.1331 263.462 81.5652 263.749 cv
79.6208 262.526 77.9651 260.869 76.8132 258.781 cv
74.6531 254.749 74.5813 250.141 76.885 246.181 cv
79.9089 241.214 86.1731 238.981 91.429 242.077 cv
94.6692 244.165 96.3972 248.053 95.1731 251.798 cv
93.8772 255.254 89.6292 257.63 86.3171 255.181 cv
84.8049 254.03 83.9412 251.51 85.5969 250.07 cv
86.3889 249.493 87.9729 249.349 88.0452 250.645 cv
87.8289 249.637 86.6052 249.565 85.885 250.07 cv
84.5168 251.006 84.6609 252.949 85.5251 254.245 cv
87.613 257.053 91.6453 256.333 93.7332 253.957 cv
96.5413 250.718 95.677 246.037 92.6531 243.229 cv
90.1331 240.997 86.821 240.349 83.7971 241.141 cv
85.2371 240.853 86.6052 240.926 88.0452 241.429 cv
89.7732 242.149 91.2849 243.59 91.573 245.533 cv
91.717 246.902 90.9968 248.63 89.4851 248.917 cv
89.197 248.99 88.7649 248.99 88.5491 248.773 cv
88.1892 248.269 88.6931 247.838 88.9812 247.477 cv
90.0613 246.325 90.0613 244.957 89.2693 243.59 cv
88.9812 243.086 88.5491 242.654 88.0452 242.294 cv
86.1013 240.926 83.6531 241.07 81.5652 241.933 cv
80.7732 242.365 79.9812 242.869 79.261 243.446 cv
75.0129 247.333 74.2209 253.238 76.5969 258.205 cv
76.5251 258.061 76.5251 257.845 76.4529 257.63 cv
76.093 255.902 76.2371 254.245 77.1013 252.805 cv
77.9651 251.581 79.1892 250.718 80.7009 250.789 cv
81.781 250.862 82.8611 251.654 82.9329 252.805 cv
82.9329 253.094 82.8611 253.382 82.6453 253.526 cv
82.2131 253.741 81.925 253.238 81.781 253.021 cv
81.0613 252.013 80.053 251.869 78.9011 252.229 cv
78.469 252.373 78.1091 252.59 77.7493 252.878 cv
76.4529 254.174 76.1653 256.046 76.5251 257.773 cv
76.5969 258.061 76.6692 258.349 76.8132 258.565 cv
77.0291 258.997 77.2449 259.357 77.4612 259.789 cv
78.1809 260.725 78.9011 261.59 79.7649 262.309 cv
ef
72.781 259.214 mo
72.637 259.141 72.5652 259.141 72.4929 259.141 cv
65.2932 256.621 60.0369 249.853 61.1892 242.006 cv
62.053 236.893 66.157 232.214 71.7009 232.718 cv
73.6453 232.933 75.4451 233.798 76.3811 235.526 cv
77.3171 237.254 76.9573 239.701 74.6531 239.845 cv
74.2932 239.917 73.9329 239.99 73.573 240.134 cv
73.717 239.63 73.573 239.053 73.1409 238.621 cv
72.5652 238.046 71.6292 238.117 71.053 238.694 cv
70.405 239.342 70.4773 240.278 71.053 240.853 cv
71.7009 241.429 72.637 241.429 73.2131 240.781 cv
74.2209 240.134 75.2292 240.637 76.2371 240.061 cv
78.469 238.694 77.6052 235.67 76.0212 234.086 cv
72.7092 230.845 67.5251 231.997 64.429 234.878 cv
59.821 239.413 59.677 246.325 62.7732 251.725 cv
65.0769 255.541 68.6052 258.061 72.5652 259.285 cv
72.781 259.214 li
ef
35.6292 283.189 mo
31.957 283.046 29.293 286.429 28.573 289.957 cv
27.637 296.365 31.741 301.981 36.9971 305.15 cv
47.7971 311.342 60.9011 308.389 70.0452 300.758 cv
69.469 301.694 68.9651 302.63 68.533 303.565 cv
68.533 303.637 li
68.8933 303.061 69.2532 302.486 69.6853 301.909 cv
70.3333 300.902 71.053 299.966 71.7732 299.03 cv
74.0051 296.221 76.6692 293.773 79.9089 292.189 cv
85.093 289.885 89.6292 291.11 92.9412 293.557 cv
92.9412 293.486 93.0129 293.413 93.0852 293.342 cv
90.9968 291.614 88.4773 290.174 85.3811 290.03 cv
80.2693 289.813 74.8689 293.917 71.2693 298.885 cv
70.405 300.037 69.613 300.758 68.4612 301.621 cv
59.3889 308.03 46.645 310.117 36.925 304.214 cv
31.885 301.117 28.1411 295.573 29.365 289.453 cv
30.157 286.645 32.1731 284.125 34.9092 283.55 cv
34.8372 283.621 34.6931 283.694 34.6211 283.765 cv
33.8291 284.63 33.9011 285.853 34.6931 286.645 cv
35.4851 287.437 36.781 287.365 37.573 286.573 cv
38.365 285.781 38.293 284.486 37.501 283.694 cv
36.9971 283.189 36.2771 283.046 35.6292 283.189 cv
ef
72.8533 317.03 mo
73.8611 316.165 74.7249 315.446 75.949 314.725 cv
79.5491 312.637 83.2932 310.621 85.9573 307.597 cv
89.053 303.997 90.781 299.318 93.5168 295.358 cv
93.5891 295.573 93.7332 295.718 93.8049 295.862 cv
91.3572 299.966 90.1331 305.077 87.0369 308.749 cv
84.301 311.917 80.2693 313.718 76.3088 315.661 cv
75.157 316.238 74.0769 316.67 72.8533 317.03 cv
0 0 0 0 cmyk
ef
77.1731 316.526 mo
77.9651 315.661 78.8289 315.013 79.9089 314.437 cv
81.7092 313.573 83.5813 312.709 85.2371 311.701 cv
86.821 310.694 88.3333 309.541 89.3411 308.101 cv
90.4929 306.229 91.0691 304.07 91.573 301.765 cv
92.0769 299.533 92.5813 297.302 93.4451 295.358 cv
93.5891 295.501 93.6609 295.645 93.8049 295.789 cv
93.0129 297.734 92.6531 300.037 92.2932 302.342 cv
91.8611 304.718 91.3572 306.949 90.1331 308.822 cv
89.1252 310.333 87.613 311.486 85.885 312.493 cv
84.157 313.501 82.2131 314.293 80.2693 315.157 cv
79.7649 315.373 79.1892 315.661 78.6853 315.878 cv
78.1809 316.094 77.677 316.309 77.1731 316.526 cv
ef
72.2048 316.165 mo
73.1409 315.157 74.0051 314.437 75.0129 313.645 cv
76.6692 312.422 78.325 311.198 79.9089 310.046 cv
81.4929 308.749 83.0769 307.526 84.3733 306.013 cv
85.9573 304.214 87.325 302.198 88.6931 300.325 cv
90.1331 298.453 91.5012 296.581 93.0129 294.781 cv
93.0852 294.853 93.157 294.997 93.2292 295.07 cv
91.7893 296.942 90.5652 298.885 89.3411 300.902 cv
88.1169 303.061 87.0369 305.221 85.4529 307.094 cv
84.157 308.677 82.5012 309.902 80.7009 311.053 cv
78.9729 312.205 77.1013 313.285 75.3733 314.437 cv
74.8689 314.725 74.2932 315.086 73.7893 315.373 cv
73.2849 315.661 72.781 315.878 72.2048 316.165 cv
ef
70.7649 315.086 mo
71.6292 314.006 72.2771 313.07 72.925 311.917 cv
74.7971 308.174 76.6692 304.358 79.5491 301.55 cv
83.0051 298.238 87.613 296.221 91.3572 293.342 cv
91.2131 293.198 90.9968 293.125 90.8533 293.053 cv
86.8933 295.718 81.8533 297.229 78.3972 300.469 cv
75.301 303.349 73.717 307.453 71.989 311.557 cv
71.4851 312.709 71.1252 313.862 70.7649 315.086 cv
ef
71.053 310.765 mo
71.845 309.902 72.4929 309.037 72.9968 307.885 cv
73.7893 306.013 74.509 304.141 75.4451 302.413 cv
76.3811 300.758 77.4612 299.245 78.9011 298.165 cv
80.6292 296.869 82.7893 296.221 85.0212 295.573 cv
87.2532 294.997 89.4851 294.349 91.3572 293.342 cv
91.2131 293.269 91.0691 293.198 90.925 293.053 cv
88.9812 293.99 86.677 294.422 84.4451 294.926 cv
82.1409 295.429 79.9089 296.077 78.1091 297.373 cv
76.6692 298.453 75.5168 300.037 74.6531 301.838 cv
73.717 303.637 73.0691 305.581 72.2771 307.526 cv
72.0613 308.101 71.845 308.605 71.6292 309.181 cv
71.4851 309.685 71.2693 310.189 71.053 310.765 cv
ef
71.7009 315.661 mo
72.637 314.654 73.2849 313.789 74.0769 312.709 cv
75.157 310.981 76.3088 309.325 77.4612 307.67 cv
78.5413 306.013 79.7649 304.358 81.2048 302.99 cv
82.9329 301.333 84.8049 299.893 86.677 298.382 cv
88.4773 296.869 90.2771 295.358 91.9329 293.845 cv
91.8611 293.701 91.7893 293.63 91.717 293.63 cv
89.9172 295.07 87.9729 296.437 86.0291 297.734 cv
83.9412 299.101 81.8533 300.254 80.053 301.909 cv
78.613 303.349 77.3889 305.077 76.3088 306.949 cv
75.301 308.749 74.2932 310.621 73.2849 312.422 cv
72.925 312.997 72.7092 313.501 72.4211 314.006 cv
72.1331 314.581 71.9172 315.086 71.7009 315.661 cv
ef
92.509 294.278 mo
91.6453 295.429 84.4451 304.573 80.845 307.67 cv
78.1091 310.046 75.7332 312.134 74.5813 313.141 cv
75.5168 311.99 77.533 309.469 79.7649 306.59 cv
82.6453 302.845 91.3572 295.214 92.4373 294.278 cv
92.509 294.278 li
ef
96.1809 295.645 mo
96.3972 296.077 96.6853 296.798 96.9011 297.734 cv
99.0613 302.125 99.637 307.453 96.3972 311.557 cv
95.821 312.278 95.1731 312.926 94.5251 313.645 cv
93.301 315.086 92.2209 316.526 91.2131 318.11 cv
89.7732 320.773 88.8372 323.365 88.6208 326.389 cv
88.6208 327.397 88.6208 328.477 88.7649 329.557 cv
88.9812 328.046 89.2693 326.533 89.6292 325.021 cv
90.4929 321.781 92.0769 319.261 94.1653 316.67 cv
94.6692 316.094 95.1731 315.517 95.7493 314.869 cv
96.9729 313.573 98.2693 312.278 98.989 310.55 cv
101.005 305.581 99.0613 299.893 96.1809 295.645 cv
ef
97.1169 295.645 mo
96.9011 295.501 96.6853 295.429 96.469 295.285 cv
97.0452 296.15 97.7649 297.373 98.1252 298.165 cv
100.573 303.134 101.437 309.254 98.2693 313.933 cv
97.6931 314.725 97.0452 315.517 96.3972 316.309 cv
95.2449 317.966 94.1653 319.55 93.2292 321.349 cv
91.7893 324.302 90.9968 327.181 90.8533 330.565 cv
90.8533 331.718 90.925 332.869 91.0691 334.094 cv
91.2131 332.437 91.5012 330.781 91.7893 329.053 cv
92.5813 325.453 94.093 322.645 96.1091 319.694 cv
96.613 319.046 97.1892 318.397 97.6931 317.677 cv
98.9172 316.238 100.213 314.798 100.861 312.853 cv
102.589 307.741 100.933 302.125 98.3411 297.59 cv
98.053 297.086 97.5491 296.293 97.1169 295.645 cv
ef
98.9172 296.725 mo
98.7009 296.581 98.4128 296.437 98.197 296.221 cv
101.509 301.333 103.525 308.677 100.645 314.437 cv
100.141 315.302 99.637 316.094 99.1331 316.885 cv
98.197 318.685 97.405 320.342 96.613 322.285 cv
95.6052 325.382 95.1013 328.333 95.1731 331.789 cv
95.3171 332.942 95.4612 334.165 95.677 335.318 cv
95.677 333.59 95.7493 331.933 95.9651 330.205 cv
96.3972 326.462 97.5491 323.51 99.1331 320.413 cv
99.5652 319.694 99.925 318.973 100.357 318.254 cv
101.365 316.741 102.373 315.157 102.805 313.141 cv
104.101 307.453 101.869 301.333 98.9172 296.725 cv
ef
91.0691 290.749 mo
90.5652 290.605 89.845 290.318 88.9089 290.101 cv
84.4451 288.229 79.0452 287.942 75.157 291.325 cv
74.4373 291.973 73.7893 292.621 73.1409 293.342 cv
71.7732 294.637 70.405 295.789 68.821 296.869 cv
66.301 298.453 63.7092 299.533 60.6853 299.893 cv
59.677 299.966 58.5969 299.966 57.5168 299.893 cv
59.0291 299.605 60.5413 299.245 61.9812 298.813 cv
65.2209 297.805 67.6692 296.077 70.1169 293.845 cv
70.6931 293.342 71.2693 292.765 71.845 292.189 cv
73.0691 290.822 74.2932 289.526 75.949 288.661 cv
80.845 286.429 86.6052 288.086 91.0691 290.749 cv
ef
90.9968 289.813 mo
91.1409 290.03 91.2131 290.245 91.3572 290.462 cv
90.4929 289.957 89.197 289.238 88.405 288.878 cv
83.365 286.718 77.1731 286.214 72.637 289.597 cv
71.845 290.245 71.1252 290.893 70.405 291.541 cv
68.821 292.838 67.2371 293.99 65.509 295.07 cv
62.6292 296.581 59.7493 297.59 56.4373 297.878 cv
55.2849 297.949 54.0613 297.949 52.9089 297.805 cv
54.5652 297.59 56.2209 297.229 57.8772 296.869 cv
61.405 295.862 64.2131 294.205 67.0212 292.046 cv
67.6692 291.469 68.3171 290.966 68.8933 290.389 cv
70.3333 289.094 71.7009 287.725 73.573 287.006 cv
78.613 284.99 84.3733 286.285 88.9812 288.661 cv
89.4851 288.949 90.3489 289.453 90.9968 289.813 cv
ef
89.7732 288.086 mo
89.989 288.302 90.1331 288.517 90.3489 288.805 cv
85.093 285.781 77.6052 284.125 72.0613 287.293 cv
71.197 287.798 70.405 288.302 69.613 288.878 cv
67.9573 289.885 66.301 290.822 64.429 291.685 cv
61.405 292.838 58.4529 293.486 54.9973 293.557 cv
53.845 293.557 52.6208 293.486 51.3972 293.269 cv
53.1252 293.198 54.8533 293.053 56.509 292.765 cv
60.2532 292.117 63.1331 290.822 66.157 289.094 cv
66.8772 288.661 67.5251 288.157 68.2449 287.725 cv
69.6853 286.645 71.2693 285.565 73.2131 284.99 cv
78.8289 283.477 85.093 285.349 89.7732 288.086 cv
ef
124.765 260.077 mo
124.909 260.294 125.197 260.798 125.197 261.229 cv
125.197 261.878 126.565 263.318 126.925 262.597 cv
127.213 261.805 127.645 261.878 128.221 262.165 cv
128.797 262.382 129.157 262.382 129.229 261.805 cv
129.373 261.302 128.797 261.013 128.293 260.437 cv
127.717 259.933 127.933 259.789 128.365 259.573 cv
128.797 259.357 127.933 257.845 127.285 258.061 cv
126.925 258.205 126.709 258.205 126.565 258.134 cv
126.493 257.99 126.493 257.773 126.637 257.413 cv
126.853 256.765 125.197 255.973 125.053 256.406 cv
124.837 256.838 124.765 257.125 124.189 256.55 cv
123.613 256.046 123.253 255.469 122.749 255.614 cv
122.245 255.829 122.245 256.117 122.461 256.694 cv
122.749 257.198 122.893 257.701 122.101 257.99 cv
121.381 258.349 122.893 259.718 123.541 259.645 cv
124.045 259.645 124.549 259.862 124.765 260.077 cv
0 0 0 1 cmyk
ef
137.941 237.541 mo
135.781 239.557 134.269 240.709 131.605 242.149 cv
124.621 245.966 117.565 249.565 112.669 255.325 cv
107.845 261.013 105.109 268.358 101.581 274.981 cv
98.989 279.949 94.0212 286.501 93.8772 286.358 cv
93.8049 286.285 98.9172 278.942 99.5652 274.765 cv
100.933 266.198 101.869 256.261 107.269 249.997 cv
112.669 243.734 122.461 242.149 131.389 239.557 cv
133.549 238.909 135.781 238.333 137.941 237.541 cv
ef
133.837 227.677 mo
136.069 224.798 134.917 220.694 132.397 218.101 cv
127.717 213.565 120.805 213.709 115.117 216.229 cv
103.885 221.413 98.7009 233.869 99.637 245.677 cv
99.637 245.605 99.5652 245.462 99.4929 245.318 cv
99.4211 244.453 98.9172 241.718 96.469 239.845 cv
93.4451 237.541 91.573 234.59 90.925 231.493 cv
90.3489 228.469 91.0691 224.437 90.9968 224.365 cv
90.8533 224.221 88.1169 239.99 97.4773 244.957 cv
98.3411 245.462 99.1331 246.11 99.5652 246.469 cv
99.7092 247.046 99.925 247.55 100.069 248.125 cv
101.077 251.581 101.581 255.181 101.005 258.709 cv
99.925 264.254 96.2532 267.205 92.2932 268.501 cv
92.365 268.645 92.365 268.718 92.4373 268.789 cv
95.0291 268.07 97.6208 266.917 99.5652 264.397 cv
102.661 260.365 102.445 253.597 100.501 247.838 cv
99.9968 246.469 99.925 245.389 99.925 243.878 cv
99.925 232.862 105.541 221.198 115.909 216.734 cv
121.381 214.357 128.077 214.429 132.325 219.037 cv
134.269 221.269 135.061 224.365 133.981 226.957 cv
133.981 226.813 133.981 226.67 133.981 226.526 cv
133.765 225.446 132.685 224.725 131.605 224.942 cv
130.453 225.157 129.733 226.238 129.949 227.318 cv
130.165 228.469 131.245 229.189 132.397 228.973 cv
133.045 228.829 133.621 228.325 133.837 227.677 cv
ef
157.309 249.422 mo
160.045 247.046 164.221 247.981 166.957 250.357 cv
171.709 254.822 171.853 261.805 169.693 267.565 cv
165.085 279.086 152.917 284.845 141.037 284.486 cv
141.181 284.557 141.253 284.557 141.397 284.63 cv
142.333 284.701 145.069 284.99 147.085 287.365 cv
149.533 290.245 152.557 292.046 155.653 292.477 cv
158.749 292.909 162.709 291.973 162.853 292.046 cv
162.925 292.189 147.301 295.718 141.901 286.645 cv
141.397 285.781 140.677 285.061 140.245 284.63 cv
139.741 284.486 139.165 284.342 138.589 284.198 cv
135.133 283.333 131.461 283.117 128.005 283.838 cv
122.461 285.205 119.725 289.021 118.645 292.981 cv
118.501 292.981 118.429 292.909 118.357 292.909 cv
118.933 290.245 120.013 287.581 122.389 285.493 cv
126.277 282.254 133.045 282.11 138.877 283.765 cv
140.317 284.198 141.325 284.198 142.837 284.125 cv
153.853 283.621 165.229 277.358 169.189 266.773 cv
171.205 261.229 170.773 254.533 166.021 250.502 cv
163.645 248.701 160.549 247.981 158.029 249.205 cv
158.173 249.205 158.245 249.205 158.389 249.278 cv
159.541 249.422 160.261 250.429 160.117 251.581 cv
159.973 252.661 158.893 253.453 157.813 253.238 cv
156.733 253.094 155.941 252.086 156.085 251.006 cv
156.229 250.285 156.661 249.709 157.309 249.422 cv
ef
101.941 284.125 mo
98.7732 281.174 94.3088 280.813 91.8611 283.406 cv
89.4851 285.926 89.989 290.462 93.157 293.413 cv
96.2532 296.365 100.789 296.725 103.237 294.134 cv
105.613 291.614 105.037 287.15 101.941 284.125 cv
0 0 0 0 cmyk
ef
105.901 273.541 mo
104.245 274.765 102.445 276.349 100.717 278.15 cv
95.2449 283.909 92.4373 290.174 94.3811 292.046 cv
96.3972 293.99 102.517 290.822 107.989 285.061 cv
110.005 282.973 111.661 280.741 112.813 278.725 cv
115.981 273.397 116.125 271.094 120.877 266.125 cv
124.621 262.165 li
124.405 261.661 124.117 261.229 123.973 260.942 cv
123.685 260.798 123.253 260.51 122.749 260.365 cv
119.365 263.966 li
114.325 269.221 111.301 269.654 105.901 273.541 cv
0 0 0 1 cmyk
ef
122.965 262.021 mo
113.533 271.165 107.773 274.765 103.237 279.517 cv
98.7732 284.269 94.5969 289.453 95.821 290.605 cv
97.0452 291.685 101.941 287.365 106.477 282.614 cv
111.013 277.862 114.325 271.957 122.965 262.021 cv
0 0 0 0 cmyk
ef
61.1892 324.878 mo
62.5569 324.805 63.637 325.885 63.7092 327.181 cv
63.7092 328.55 62.7009 329.63 61.3333 329.701 cv
60.0369 329.701 58.885 328.694 58.885 327.325 cv
58.8132 326.03 59.8933 324.878 61.1892 324.878 cv
0 0 0 1 cmyk
ef
117.925 365.557 mo
124.333 361.453 132.109 359.654 139.381 362.893 cv
145.141 365.773 149.317 372.11 146.509 378.446 cv
145.717 380.03 143.629 382.406 144.781 384.205 cv
146.077 386.221 149.245 384.205 150.469 383.198 cv
154.213 379.885 154.861 374.63 153.133 370.094 cv
149.749 362.245 141.181 359.006 133.117 359.293 cv
127.573 359.725 122.749 361.597 118.069 364.694 cv
118.069 364.909 117.997 365.198 117.925 365.557 cv
ef
266.677 318.181 mo
267.325 319.117 271.429 316.67 272.005 316.382 cv
282.373 311.125 291.949 318.397 295.693 328.333 cv
300.661 344.101 292.741 359.437 280.861 369.661 cv
257.533 388.021 226.213 385.645 201.661 370.885 cv
194.173 366.061 187.765 360.446 181.645 353.966 cv
179.845 352.165 181.501 354.254 182.077 354.973 cv
205.981 384.278 250.621 395.725 282.517 372.325 cv
296.557 361.094 305.629 343.67 299.869 325.67 cv
296.413 316.526 288.781 308.605 278.413 309.469 cv
273.013 310.189 270.421 312.997 267.181 317.03 cv
267.037 317.245 266.461 317.893 266.677 318.181 cv
ef
262.141 377.581 mo
267.109 375.997 271.357 372.829 273.373 367.718 cv
275.245 362.749 274.237 356.557 269.125 354.11 cv
268.261 353.749 267.469 353.605 266.605 353.318 cv
264.517 352.67 264.085 350.581 266.101 349.501 cv
268.909 347.99 272.437 349.141 274.741 351.013 cv
279.637 355.333 279.421 362.174 276.613 367.645 cv
273.661 372.902 268.981 376.214 263.293 378.086 cv
262.141 378.373 261.061 378.59 259.909 378.805 cv
260.629 378.373 261.421 378.013 262.141 377.581 cv
ef
301.885 334.741 mo
299.653 313.141 282.805 294.061 260.125 293.99 cv
244.933 294.061 229.813 304.214 228.157 320.198 cv
227.293 329.701 232.837 341.077 243.565 341.581 cv
247.741 341.725 252.925 339.278 252.997 334.453 cv
252.925 332.006 251.125 330.997 250.261 329.125 cv
249.829 329.773 249.109 330.134 248.245 330.134 cv
246.949 330.061 245.941 328.909 246.013 327.614 cv
246.085 326.318 247.237 325.309 248.533 325.382 cv
249.829 325.453 250.837 326.605 250.765 327.902 cv
250.693 328.046 250.693 328.117 250.693 328.261 cv
251.341 330.134 253.141 330.997 253.789 333.013 cv
255.445 338.917 248.965 342.805 243.853 342.805 cv
233.197 342.59 226.933 331.789 227.149 322.141 cv
227.725 305.15 243.421 293.845 259.477 293.486 cv
282.661 293.342 299.869 312.781 301.885 334.741 cv
ef
270.925 375.205 mo
277.261 370.453 282.517 362.462 280.213 354.181 cv
279.061 350.654 276.397 347.701 272.581 347.269 cv
269.773 346.981 267.469 346.55 265.093 344.966 cv
258.037 340.141 257.821 330.781 261.205 323.654 cv
261.205 323.581 261.205 323.581 261.205 323.51 cv
261.205 322.789 261.781 322.214 262.573 322.214 cv
263.293 322.214 263.869 322.789 263.869 323.51 cv
263.869 324.302 263.293 324.878 262.573 324.878 cv
262.069 324.878 261.637 324.59 261.349 324.229 cv
259.261 329.125 258.901 334.813 261.925 339.422 cv
264.373 342.949 267.829 344.174 271.933 344.462 cv
279.997 344.893 283.309 352.885 282.085 360.086 cv
280.861 366.709 276.613 371.966 270.925 375.205 cv
ef
283.309 362.533 mo
283.453 362.101 283.597 361.597 283.813 361.165 cv
285.325 356.342 285.397 351.661 283.885 346.838 cv
283.381 345.397 282.805 344.101 282.157 342.805 cv
281.149 341.077 279.997 339.709 280.213 337.621 cv
280.789 334.526 283.525 332.869 286.405 332.654 cv
287.773 332.51 289.285 332.725 290.653 332.365 cv
292.021 332.006 291.373 330.997 290.581 330.349 cv
287.269 327.973 282.373 328.55 279.205 330.853 cv
276.469 333.086 275.029 336.325 275.749 339.853 cv
276.325 342.086 277.621 343.813 279.061 345.469 cv
279.637 346.261 280.213 346.981 280.717 347.773 cv
283.381 351.878 284.173 356.269 282.877 361.021 cv
282.805 361.597 282.661 362.101 282.445 362.605 cv
282.733 362.605 283.021 362.533 283.309 362.533 cv
ef
286.765 358.718 mo
291.877 353.101 289.141 347.99 291.661 345.397 cv
292.597 344.462 294.541 343.885 294.541 343.885 cv
294.541 343.885 288.493 343.526 286.333 348.349 cv
284.461 352.453 286.765 355.477 285.325 359.15 cv
284.893 360.229 284.461 361.309 284.461 361.309 cv
286.765 358.718 li
ef
286.189 307.021 mo
279.853 308.174 275.821 302.845 272.293 303.278 cv
270.997 303.422 269.341 304.718 269.341 304.718 cv
269.341 304.718 272.725 299.677 277.765 300.829 cv
282.229 301.838 283.309 305.51 287.053 306.661 cv
288.205 306.949 289.357 307.238 289.357 307.238 cv
286.189 307.021 li
ef
297.277 314.725 mo
298.717 308.462 293.533 304.214 294.109 300.614 cv
294.325 299.318 295.621 297.734 295.621 297.734 cv
295.621 297.734 290.437 300.902 291.445 306.086 cv
292.237 310.55 295.837 311.773 296.845 315.59 cv
297.133 316.741 297.277 317.893 297.277 317.893 cv
297.277 314.725 li
ef
240.829 341.365 mo
242.485 341.869 244.285 341.869 245.869 340.862 cv
247.165 339.926 247.957 338.557 247.813 336.973 cv
247.741 336.541 247.597 336.181 247.525 335.822 cv
247.453 335.245 247.741 334.67 248.389 334.885 cv
249.253 335.101 249.685 336.181 249.829 336.973 cv
250.117 338.557 249.397 339.926 248.173 340.933 cv
246.301 342.373 244.069 342.517 241.909 342.013 cv
241.477 341.869 241.045 341.725 240.613 341.581 cv
240.685 341.51 240.757 341.437 240.829 341.365 cv
ef
168.253 383.773 mo
168.541 383.053 172.141 383.413 172.717 383.486 cv
181.645 383.773 187.765 377.51 188.917 371.101 cv
190.069 361.238 181.357 354.685 170.413 352.021 cv
149.173 347.557 125.269 356.342 108.997 370.453 cv
104.677 374.125 101.437 377.869 98.2693 382.046 cv
97.9812 382.189 97.6208 382.406 97.4773 382.477 cv
111.373 361.238 143.125 344.749 171.205 350.15 cv
184.021 352.597 193.957 360.302 192.661 371.605 cv
191.581 377.437 187.045 383.63 178.837 385.718 cv
174.517 386.654 171.997 385.718 168.829 384.278 cv
168.685 384.205 168.109 383.99 168.253 383.773 cv
ef
115.693 366.853 mo
116.413 366.565 117.133 366.278 117.781 366.061 cv
118.501 365.845 119.149 365.701 119.797 365.63 cv
123.181 365.198 126.997 365.557 129.445 368.15 cv
130.453 369.373 131.101 371.101 129.733 372.325 cv
129.229 372.829 128.653 373.406 128.149 373.981 cv
127.645 374.63 128.869 373.55 129.949 373.046 cv
131.965 372.11 132.973 370.238 132.541 368.006 cv
132.181 366.565 131.317 365.413 130.093 364.477 cv
125.197 361.021 118.501 363.685 114.325 367.07 cv
113.245 367.933 112.309 368.869 111.517 369.949 cv
112.741 368.654 114.109 367.573 115.693 366.853 cv
ef
73.9329 361.094 mo
73.3572 360.59 74.509 358.358 74.6531 357.709 cv
75.8049 352.67 69.6853 350.221 65.2209 350.798 cv
56.7971 352.238 52.6208 360.59 54.2048 368.077 cv
57.0129 380.174 70.5491 386.51 82.717 386.077 cv
88.5491 385.718 93.8772 383.99 98.4851 381.254 cv
97.9812 382.189 li
96.8289 382.838 95.6052 383.486 94.3088 384.061 cv
81.781 389.174 66.4451 387.373 57.2292 377.293 cv
51.1809 370.526 49.8132 360.59 56.365 353.605 cv
59.4612 350.51 63.637 348.637 68.2449 348.926 cv
74.2209 349.573 79.6931 355.117 74.9412 360.157 cv
74.8689 360.229 74.1492 361.238 73.9329 361.094 cv
ef
93.8772 384.134 mo
94.2371 383.773 94.9573 382.909 95.2449 382.477 cv
96.613 380.677 97.8372 379.238 99.925 378.157 cv
106.333 375.205 113.029 378.878 116.701 384.278 cv
116.701 384.349 116.701 384.349 116.773 384.349 cv
117.277 384.637 117.421 385.358 117.133 385.862 cv
116.845 386.365 116.125 386.581 115.621 386.221 cv
115.117 385.933 114.901 385.285 115.261 384.709 cv
115.477 384.349 115.837 384.205 116.197 384.205 cv
113.605 380.677 109.717 378.013 105.181 378.229 cv
101.869 378.517 99.5652 380.318 97.6931 382.909 cv
96.9011 383.198 95.6052 383.773 93.8772 384.134 cv
ef
245.293 321.781 mo
245.293 321.781 li
243.349 319.333 240.829 317.749 237.733 317.389 cv
235.141 317.174 232.477 317.966 230.965 320.198 cv
229.957 321.781 229.741 324.229 231.397 325.597 cv
231.757 325.885 232.261 326.101 232.693 325.957 cv
233.413 325.597 233.053 324.661 232.909 324.157 cv
232.333 322.141 233.197 320.413 234.925 319.261 cv
235.645 318.829 236.365 318.541 237.229 318.397 cv
240.469 317.966 243.277 319.621 245.365 321.997 cv
245.653 322.429 245.941 322.789 246.157 323.221 cv
246.733 324.229 247.237 325.238 247.741 326.318 cv
247.813 326.318 li
245.797 321.637 242.773 317.389 238.597 314.006 cv
230.533 307.885 220.381 305.942 210.805 309.469 cv
198.709 314.365 191.581 327.397 196.477 340.07 cv
199.861 347.917 207.637 353.174 216.349 351.878 cv
224.557 350.365 231.397 341.869 227.221 333.59 cv
225.133 329.845 219.877 327.11 216.133 330.205 cv
214.477 331.645 213.685 335.101 216.421 335.749 cv
214.261 334.957 214.693 332.221 215.989 330.853 cv
218.581 328.117 222.901 329.198 225.349 331.573 cv
230.677 337.189 227.725 345.758 221.749 349.573 cv
213.469 354.469 203.533 350.869 198.421 343.238 cv
194.389 336.758 194.317 329.342 197.125 322.933 cv
195.973 325.885 195.613 329.053 196.261 332.437 cv
197.197 336.541 199.717 340.358 203.893 341.654 cv
206.989 342.446 210.949 341.581 212.173 338.342 cv
212.461 337.694 212.677 336.758 212.101 336.11 cv
211.237 335.174 210.013 336.181 209.221 336.758 cv
206.269 338.557 203.245 338.053 200.581 335.893 cv
199.501 335.03 198.709 333.949 198.061 332.725 cv
195.829 327.902 197.053 322.645 199.789 318.254 cv
200.941 316.597 202.381 315.086 203.965 313.789 cv
214.045 305.798 227.365 306.373 237.445 313.429 cv
237.013 313.214 236.581 312.997 236.149 312.781 cv
232.549 311.342 228.877 311.053 225.277 312.493 cv
222.325 313.862 219.877 316.309 219.517 319.621 cv
219.373 321.997 220.597 324.805 223.189 325.309 cv
223.765 325.382 224.485 325.382 224.845 324.878 cv
225.493 324.086 224.485 323.365 223.981 322.862 cv
222.181 320.917 222.109 318.541 223.261 316.238 cv
223.837 315.302 224.485 314.581 225.277 313.933 cv
228.589 311.486 232.693 311.63 236.365 313.07 cv
237.013 313.285 237.589 313.645 238.165 313.933 cv
238.957 314.581 239.749 315.229 240.541 315.878 cv
242.413 317.749 243.997 319.694 245.293 321.781 cv
ef
48.5171 354.614 mo
45.2771 353.245 41.821 355.261 40.021 358.141 cv
36.9971 363.541 38.7971 369.878 42.397 374.413 cv
49.2371 382.838 60.3972 384.997 70.4773 382.406 cv
71.2693 382.189 72.0613 381.973 72.8533 381.685 cv
76.741 380.03 80.197 377.798 84.5891 377.437 cv
89.9172 377.077 93.5168 379.741 95.6052 383.053 cv
95.677 382.981 95.7493 382.909 95.821 382.909 cv
94.5251 380.605 92.8689 378.517 90.1331 377.365 cv
86.2449 375.709 81.0613 376.862 76.6692 379.309 cv
74.365 380.533 72.3489 381.685 69.7571 382.189 cv
59.9651 384.205 48.8772 381.614 42.6851 373.55 cv
39.229 369.157 37.7891 363.037 40.957 357.997 cv
42.541 355.765 45.1331 354.254 47.7971 354.685 cv
47.6531 354.685 47.5811 354.758 47.437 354.758 cv
46.501 355.261 46.0691 356.413 46.573 357.349 cv
47.0051 358.285 48.157 358.718 49.093 358.214 cv
50.0291 357.781 50.4612 356.63 50.0291 355.694 cv
49.6692 355.046 49.093 354.685 48.5171 354.614 cv
ef
66.949 383.63 mo
62.845 380.677 60.1091 376.358 60.5413 371.174 cv
60.9011 367.789 62.989 364.189 66.6609 363.829 cv
68.8933 363.685 71.7009 364.621 72.781 366.637 cv
72.8533 366.709 72.9968 366.997 72.8533 366.853 cv
71.4851 365.342 69.8289 364.838 67.8132 365.486 cv
62.9172 367.285 61.8372 373.55 63.4211 378.013 cv
63.9968 379.382 64.717 380.605 65.7249 381.758 cv
66.3733 382.406 67.093 383.053 67.885 383.557 cv
66.949 383.63 li
ef
62.6292 381.685 mo
62.1252 381.541 61.0452 381.541 60.5413 381.541 cv
58.2371 381.614 56.2932 381.541 54.2048 380.533 cv
47.9412 377.293 46.7891 369.734 48.8049 363.541 cv
48.8049 363.469 48.8049 363.469 48.8049 363.397 cv
48.7332 362.822 49.1653 362.245 49.741 362.174 cv
50.3889 362.101 50.8933 362.533 50.9651 363.11 cv
51.0369 363.758 50.6052 364.333 50.0291 364.406 cv
49.5969 364.406 49.2371 364.261 49.0212 363.973 cv
47.7971 368.15 48.157 372.829 51.0369 376.285 cv
53.3411 378.805 56.1492 379.526 59.3171 379.382 cv
60.0369 379.741 61.3333 380.533 62.6292 381.685 cv
ef
54.1331 355.477 mo
57.5891 351.157 55.429 347.557 57.157 345.541 cv
57.8049 344.822 59.1731 344.318 59.1731 344.318 cv
59.1731 344.318 54.781 344.318 53.4128 347.917 cv
52.1892 351.013 53.989 353.101 53.1252 355.838 cv
52.8372 356.701 52.5491 357.493 52.5491 357.493 cv
54.1331 355.477 li
ef
59.1013 350.581 mo
62.989 347.99 62.1252 344.462 64.0691 343.309 cv
64.717 342.878 66.0129 342.878 66.0129 342.878 cv
66.0129 342.878 62.4128 341.725 60.3972 344.245 cv
58.6692 346.477 59.6052 348.637 58.2371 350.654 cv
57.8049 351.229 57.301 351.805 57.301 351.805 cv
59.1013 350.581 li
ef
63.9968 348.205 mo
67.093 347.269 67.1653 344.822 68.677 344.389 cv
69.1809 344.245 70.0452 344.462 70.0452 344.462 cv
70.0452 344.462 67.885 343.021 66.0852 344.318 cv
64.5012 345.397 64.6453 346.981 63.3489 348.061 cv
62.989 348.349 62.5569 348.637 62.5569 348.637 cv
63.9968 348.205 li
ef
94.5251 378.013 mo
94.1653 377.293 93.8049 376.645 93.4451 375.997 cv
93.0852 375.422 92.6531 374.917 92.2932 374.342 cv
89.989 371.822 86.8933 369.59 83.2932 369.878 cv
81.781 370.094 80.1252 371.03 80.3411 372.758 cv
80.4128 373.55 80.4851 374.342 80.4128 375.061 cv
80.4128 375.853 80.197 374.342 79.6931 373.189 cv
78.8289 371.174 79.3333 369.086 81.1331 367.718 cv
82.3572 366.853 83.7971 366.565 85.2371 366.637 cv
91.2131 367.358 94.4529 373.765 95.3889 379.094 cv
95.6052 380.389 95.677 381.758 95.6052 383.053 cv
95.533 381.325 95.1731 379.597 94.5251 378.013 cv
ef
97.1169 379.382 mo
99.637 375.349 97.405 372.541 98.6292 370.67 cv
99.1331 369.949 100.285 369.446 100.285 369.446 cv
100.285 369.446 96.469 369.878 95.677 373.046 cv
95.0291 375.781 96.7571 377.437 96.325 379.813 cv
96.1809 380.533 95.9651 381.254 95.9651 381.254 cv
97.1169 379.382 li
ef
96.1091 382.981 mo
100.573 381.254 102.949 383.917 105.037 382.981 cv
105.829 382.694 106.549 381.614 106.549 381.614 cv
106.549 381.614 105.469 385.285 102.157 385.501 cv
99.3489 385.645 98.053 383.701 95.6052 383.701 cv
94.8132 383.701 94.093 383.773 94.093 383.773 cv
96.1091 382.981 li
ef
104.317 375.853 mo
107.701 373.55 110.149 375.349 111.733 374.198 cv
112.309 373.838 112.741 372.829 112.741 372.829 cv
112.741 372.829 112.453 375.997 109.789 376.789 cv
107.485 377.51 106.045 376.07 104.029 376.573 cv
103.381 376.718 102.805 376.862 102.805 376.862 cv
104.317 375.853 li
ef
202.237 373.406 mo
202.165 373.333 202.093 373.406 202.165 373.55 cv
202.237 375.278 203.461 379.741 201.229 380.749 cv
199.645 381.469 197.197 380.462 195.685 378.446 cv
193.597 375.637 193.237 370.597 193.309 367.141 cv
196.189 369.446 199.141 371.533 202.237 373.406 cv
cp
213.325 379.021 mo
209.509 377.437 205.837 375.565 202.237 373.406 cv
203.029 374.125 206.773 382.333 208.141 383.486 cv
210.013 385.141 212.605 385.645 213.973 384.637 cv
216.061 383.125 213.685 380.822 213.325 379.021 cv
cp
225.205 382.981 mo
226.069 384.205 226.357 386.15 225.133 387.013 cv
222.469 388.957 218.365 385.429 216.565 383.413 cv
214.405 380.893 213.613 379.67 213.397 379.094 cv
217.213 380.677 221.173 381.973 225.205 382.981 cv
ef
22.093 271.741 mo
26.197 265.333 27.9971 257.557 24.6851 250.285 cv
21.8052 244.526 15.541 240.349 9.13306 243.157 cv
7.62109 243.949 5.1731 246.037 3.37305 244.885 cv
1.35718 243.59 3.44507 240.422 4.45313 239.198 cv
7.76514 235.453 13.021 234.805 17.5571 236.533 cv
25.405 239.917 28.573 248.486 28.3572 256.55 cv
27.853 262.094 26.053 266.917 22.957 271.597 cv
22.6692 271.597 22.3811 271.67 22.093 271.741 cv
ef
69.469 122.99 mo
68.6052 122.342 70.9812 118.238 71.3411 117.661 cv
76.5251 107.221 69.2532 97.7175 59.3171 93.9014 cv
43.6211 88.9333 28.2131 96.8535 17.989 108.733 cv
-.37085 132.134 2.00513 163.453 16.7651 188.006 cv
21.5891 195.493 27.2051 201.902 33.613 208.021 cv
35.4851 209.822 33.397 208.165 32.677 207.59 cv
3.37305 183.685 -8.14697 139.046 15.2532 107.077 cv
26.4851 93.0374 44.053 84.0374 62.053 89.7253 cv
71.1252 93.1814 79.0452 100.813 78.2532 111.181 cv
77.533 116.725 74.6531 119.245 70.6208 122.486 cv
70.405 122.629 69.8289 123.205 69.469 122.99 cv
ef
9.99707 127.525 mo
11.6531 122.557 14.821 118.309 19.8611 116.221 cv
24.9011 114.349 31.093 115.357 33.469 120.542 cv
33.8291 121.406 34.0452 122.198 34.333 123.062 cv
34.981 125.149 37.0691 125.581 38.2212 123.565 cv
39.7332 120.758 38.5811 117.229 36.637 114.926 cv
32.2451 109.958 25.4771 110.174 20.0051 112.981 cv
14.677 116.005 11.365 120.685 9.56519 126.374 cv
9.2771 127.525 8.98901 128.677 8.84497 129.758 cv
9.20508 129.037 9.63696 128.245 9.99707 127.525 cv
ef
52.9089 87.7095 mo
74.509 89.9414 93.5891 106.789 93.7332 129.541 cv
93.5891 144.805 83.509 159.926 67.5251 161.51 cv
57.949 162.373 46.573 156.829 46.0691 146.101 cv
45.9971 141.926 48.373 136.741 53.197 136.67 cv
55.6453 136.741 56.6531 138.541 58.5251 139.406 cv
57.949 139.838 57.5168 140.63 57.5891 141.422 cv
57.6609 142.718 58.741 143.725 60.0369 143.654 cv
61.3333 143.581 62.3411 142.429 62.2693 141.134 cv
62.197 139.838 61.1169 138.902 59.821 138.973 cv
59.677 138.973 59.533 138.973 59.3889 138.973 cv
57.5891 138.325 56.6531 136.526 54.7092 135.878 cv
48.8049 134.221 44.917 140.701 44.917 145.813 cv
45.1331 156.469 55.8611 162.734 65.5813 162.517 cv
82.573 161.942 93.8772 146.245 94.1653 130.189 cv
94.3088 106.933 74.9412 89.7253 52.9089 87.7095 cv
ef
12.373 118.741 mo
17.125 112.333 25.189 107.077 33.469 109.382 cv
37.0691 110.533 40.021 113.198 40.4531 117.157 cv
40.741 119.893 41.1731 122.198 42.6851 124.573 cv
47.5811 131.63 56.8689 131.917 64.0691 128.461 cv
64.1409 128.461 li
64.8611 128.461 65.509 127.885 65.509 127.166 cv
65.509 126.374 64.8611 125.797 64.1409 125.797 cv
63.4211 125.797 62.7732 126.374 62.7732 127.166 cv
62.7732 127.669 63.0613 128.101 63.4929 128.317 cv
58.5969 130.406 52.9089 130.765 48.229 127.741 cv
44.7732 125.293 43.5491 121.837 43.261 117.805 cv
42.7571 109.597 34.7651 106.285 27.4932 107.51 cv
20.8691 108.733 15.6851 112.981 12.373 118.741 cv
ef
25.1172 106.357 mo
25.5491 106.141 25.981 105.997 26.4131 105.781 cv
31.2371 104.27 36.061 104.198 40.885 105.709 cv
42.2532 106.213 43.5491 106.789 44.917 107.438 cv
46.573 108.446 47.9412 109.597 50.1013 109.382 cv
53.1252 108.877 54.781 106.07 55.0691 103.189 cv
55.2131 101.822 54.925 100.309 55.2849 98.9414 cv
55.6453 97.5735 56.6531 98.2214 57.301 99.0134 cv
59.7493 102.325 59.1013 107.221 56.7971 110.389 cv
54.5652 113.198 51.3972 114.565 47.8691 113.845 cv
45.637 113.27 43.9092 111.973 42.1812 110.533 cv
41.4612 109.958 40.6692 109.382 39.8772 108.877 cv
35.845 106.213 31.3091 105.421 26.6292 106.718 cv
26.053 106.789 25.5491 106.933 24.9731 107.149 cv
25.0452 106.862 25.0452 106.573 25.1172 106.357 cv
ef
28.9331 102.829 mo
34.6211 97.7175 39.6611 100.453 42.325 97.9333 cv
43.261 97.0696 43.7651 95.0535 43.7651 95.0535 cv
43.7651 95.0535 44.125 101.101 39.373 103.261 cv
35.197 105.134 32.1731 102.829 28.501 104.27 cv
27.3491 104.701 26.3411 105.205 26.3411 105.205 cv
28.9331 102.829 li
ef
80.6292 103.406 mo
79.4773 109.741 84.8049 113.773 84.4451 117.374 cv
84.2292 118.669 83.0051 120.325 83.0051 120.325 cv
83.0051 120.325 88.0452 116.941 86.821 111.829 cv
85.8132 107.365 82.1409 106.357 81.0613 102.542 cv
80.7009 101.389 80.4851 100.309 80.4851 100.309 cv
80.6292 103.406 li
ef
72.925 92.3174 mo
79.1892 90.8774 83.4373 96.0615 87.0369 95.4856 cv
88.3333 95.2695 89.9172 93.9734 89.9172 93.9734 cv
89.9172 93.9734 86.7493 99.1575 81.637 98.1494 cv
77.1013 97.3574 75.949 93.7576 72.1331 92.7495 cv
70.9089 92.4614 69.8289 92.3174 69.8289 92.3174 cv
72.925 92.3174 li
ef
46.3572 148.838 mo
45.781 147.181 45.853 145.382 46.8611 143.798 cv
47.7251 142.502 49.1653 141.71 50.7493 141.853 cv
51.1091 141.926 51.469 142.07 51.8289 142.141 cv
52.405 142.214 53.053 141.997 52.8372 141.278 cv
52.5491 140.413 51.5413 139.981 50.677 139.838 cv
49.093 139.621 47.7251 140.269 46.717 141.493 cv
45.3491 143.365 45.1331 145.597 45.637 147.758 cv
45.781 148.189 45.925 148.621 46.0691 149.053 cv
46.2131 148.981 46.2852 148.909 46.3572 148.838 cv
ef
3.8772 221.413 mo
4.52515 221.125 4.16504 217.526 4.16504 216.949 cv
3.80518 208.021 10.1411 201.902 16.4771 200.749 cv
26.3411 199.597 32.8931 208.309 35.7012 219.254 cv
40.093 240.565 31.3091 264.397 17.197 280.67 cv
13.4531 284.99 9.78101 288.229 5.60498 291.397 cv
5.38916 291.685 5.1731 292.046 5.1731 292.189 cv
26.4131 278.293 42.9011 246.541 37.573 218.462 cv
35.125 205.645 27.2771 195.71 16.0452 197.006 cv
10.2131 198.086 3.94897 202.621 1.93311 210.829 cv
.99707 215.221 1.93311 217.67 3.37305 220.838 cv
3.44507 220.981 3.66113 221.557 3.8772 221.413 cv
ef
20.7971 273.973 mo
21.085 273.254 21.301 272.533 21.5891 271.885 cv
21.7332 271.165 21.8772 270.517 22.021 269.869 cv
22.4531 266.557 22.021 262.67 19.429 260.221 cv
18.2771 259.214 16.4771 258.637 15.3252 259.933 cv
14.749 260.51 14.2451 261.013 13.5972 261.517 cv
13.021 262.021 14.0291 260.798 14.605 259.718 cv
15.541 257.701 17.4131 256.694 19.645 257.125 cv
21.085 257.486 22.2371 258.349 23.1011 259.573 cv
26.6292 264.469 23.8931 271.165 20.509 275.342 cv
19.717 276.422 18.709 277.358 17.7012 278.15 cv
18.9971 276.997 20.0051 275.557 20.7971 273.973 cv
ef
26.5571 315.734 mo
26.989 316.309 29.2212 315.157 29.8691 315.013 cv
35.053 313.933 37.501 319.981 36.853 324.446 cv
35.4131 332.869 27.061 337.046 19.573 335.462 cv
7.47705 332.654 1.14111 319.117 1.573 307.021 cv
1.93311 301.117 3.66113 295.789 6.39697 291.181 cv
5.38916 291.685 li
4.74097 292.838 4.16504 294.061 3.58911 295.358 cv
-1.52295 307.885 .2771 323.221 10.2852 332.437 cv
17.053 338.486 26.989 339.853 33.9731 333.302 cv
37.1411 330.205 39.085 326.03 38.7251 321.422 cv
38.1492 315.446 32.4612 310.046 27.4932 314.725 cv
27.4211 314.798 26.4131 315.517 26.5571 315.734 cv
ef
3.51709 295.862 mo
3.80518 295.429 4.66919 294.781 5.10107 294.422 cv
6.97314 293.053 8.41309 291.829 9.49316 289.741 cv
12.4451 283.333 8.70117 276.637 3.30103 272.966 cv
3.30103 272.966 3.30103 272.966 3.30103 272.893 cv
2.94116 272.389 2.29297 272.245 1.78906 272.533 cv
1.21313 272.822 1.06909 273.541 1.35718 274.046 cv
1.64502 274.55 2.36499 274.765 2.86914 274.406 cv
3.229 274.261 3.44507 273.829 3.44507 273.469 cv
6.97314 276.061 9.56519 279.949 9.34912 284.486 cv
9.13306 287.869 7.33301 290.101 4.74097 291.973 cv
4.3811 292.765 3.8772 294.061 3.51709 295.862 cv
ef
65.9412 144.373 mo
65.9412 144.373 li
68.3171 146.318 69.9729 148.838 70.3333 151.933 cv
70.4773 154.526 69.6853 157.189 67.5251 158.701 cv
65.8689 159.71 63.4211 159.926 62.1252 158.269 cv
61.8372 157.909 61.5491 157.406 61.7649 156.973 cv
62.053 156.254 62.989 156.614 63.5652 156.758 cv
65.5813 157.333 67.2371 156.469 68.4612 154.741 cv
68.8933 154.021 69.1809 153.302 69.325 152.437 cv
69.7571 149.198 68.0291 146.389 65.6531 144.302 cv
65.2932 144.013 64.8611 143.725 64.5012 143.51 cv
63.4929 142.933 62.4128 142.429 61.405 141.926 cv
61.405 141.853 li
66.0852 143.869 70.261 146.966 73.6453 151.07 cv
79.8372 159.134 81.7092 169.285 78.1809 178.862 cv
73.2849 190.957 60.2532 198.086 47.6531 193.189 cv
39.7332 189.805 34.405 182.03 35.845 173.318 cv
37.3572 165.11 45.853 158.342 54.0613 162.517 cv
57.8049 164.533 60.5413 169.789 57.4451 173.533 cv
56.0769 175.189 52.5491 175.981 51.9011 173.245 cv
52.7649 175.406 55.429 174.973 56.8689 173.677 cv
59.533 171.086 58.4529 166.765 56.0769 164.318 cv
50.4612 158.99 41.8931 161.942 38.1492 167.917 cv
33.1812 176.198 36.853 186.134 44.4131 191.245 cv
50.9651 195.278 58.3811 195.349 64.7893 192.541 cv
61.7649 193.694 58.5969 194.053 55.2849 193.406 cv
51.1809 192.469 47.365 189.949 46.0691 185.773 cv
45.2051 182.677 46.0691 178.789 49.3088 177.493 cv
50.0291 177.205 50.9651 177.061 51.5413 177.565 cv
52.5491 178.429 51.469 179.654 50.9651 180.446 cv
49.093 183.397 49.5969 186.422 51.7571 189.086 cv
52.6931 190.165 53.7009 190.957 54.9973 191.605 cv
59.821 193.838 65.0769 192.614 69.3972 189.878 cv
71.053 188.725 72.5652 187.285 73.9329 185.701 cv
81.8533 175.621 81.3489 162.302 74.2209 152.221 cv
74.509 152.654 74.7249 153.086 74.8689 153.517 cv
76.3811 157.117 76.6692 160.789 75.157 164.462 cv
73.8611 167.342 71.4128 169.789 68.1013 170.149 cv
65.6531 170.294 62.845 169.07 62.4128 166.477 cv
62.3411 165.902 62.3411 165.181 62.7732 164.822 cv
63.5652 164.245 64.3572 165.181 64.8611 165.685 cv
66.8049 167.486 69.1091 167.557 71.4128 166.406 cv
72.3489 165.902 73.0691 165.181 73.7893 164.389 cv
76.1653 161.077 76.0212 156.973 74.6531 153.302 cv
74.365 152.654 74.0769 152.077 73.717 151.573 cv
73.1409 150.71 72.4929 149.917 71.7732 149.125 cv
69.9729 147.254 67.9573 145.67 65.9412 144.373 cv
ef
33.0371 341.15 mo
34.405 344.389 32.3171 347.845 29.437 349.645 cv
24.1091 352.67 17.7732 350.869 13.165 347.269 cv
4.81299 340.501 2.58105 329.269 5.1731 319.189 cv
5.38916 318.397 5.60498 317.605 5.89307 316.813 cv
7.54907 312.926 9.78101 309.469 10.2131 305.077 cv
10.501 299.749 7.83716 296.15 4.59717 294.061 cv
4.59717 293.99 4.66919 293.917 4.74097 293.845 cv
6.97314 295.141 9.06104 296.798 10.2852 299.533 cv
11.9412 303.422 10.717 308.605 8.34106 312.997 cv
7.04517 315.302 5.89307 317.318 5.38916 319.909 cv
3.37305 329.701 5.96509 340.789 14.0291 347.053 cv
18.4211 350.437 24.613 351.949 29.5811 348.781 cv
31.813 347.125 33.325 344.533 32.9651 341.869 cv
32.9651 342.013 32.8931 342.086 32.821 342.229 cv
32.3892 343.165 31.2371 343.597 30.301 343.165 cv
29.293 342.661 28.9331 341.51 29.365 340.573 cv
29.8691 339.637 31.021 339.205 31.957 339.709 cv
32.533 339.997 32.9651 340.573 33.0371 341.15 cv
ef
4.021 322.718 mo
6.90112 326.822 11.293 329.557 16.4771 329.198 cv
19.8611 328.765 23.4612 326.677 23.821 323.006 cv
23.8931 320.773 23.0291 317.966 20.9412 316.885 cv
20.9412 316.813 20.6531 316.67 20.7971 316.813 cv
22.2371 318.181 22.741 319.838 22.093 321.853 cv
20.365 326.749 14.0291 327.829 9.63696 326.245 cv
8.19702 325.741 6.97314 324.949 5.89307 323.942 cv
5.1731 323.293 4.59717 322.573 4.021 321.781 cv
4.021 322.718 li
ef
5.96509 327.037 mo
6.03711 327.541 6.10913 328.621 6.03711 329.125 cv
5.96509 331.429 6.10913 333.373 7.11719 335.462 cv
10.3572 341.725 17.917 342.878 24.1091 340.862 cv
24.1812 340.862 li
24.8291 340.933 25.333 340.501 25.405 339.926 cv
25.4771 339.278 25.0452 338.773 24.469 338.701 cv
23.8931 338.63 23.3171 339.061 23.2451 339.637 cv
23.1731 340.07 23.3892 340.429 23.677 340.645 cv
19.429 341.869 14.749 341.51 11.293 338.63 cv
8.84497 336.325 8.125 333.59 8.26904 330.349 cv
7.83716 329.63 7.11719 328.406 5.96509 327.037 cv
ef
32.1011 335.533 mo
36.4932 332.077 40.093 334.238 42.1091 332.51 cv
42.9011 331.862 43.333 330.493 43.333 330.493 cv
43.333 330.493 43.333 334.885 39.7332 336.254 cv
36.637 337.477 34.4771 335.677 31.741 336.541 cv
30.949 336.829 30.157 337.117 30.157 337.117 cv
32.1011 335.533 li
ef
37.0691 330.565 mo
39.7332 326.677 43.189 327.541 44.4131 325.597 cv
44.845 324.949 44.845 323.654 44.845 323.654 cv
44.845 323.654 45.9971 327.254 43.405 329.269 cv
41.1731 330.997 39.0132 330.061 37.0691 331.429 cv
36.4211 331.862 35.845 332.365 35.845 332.365 cv
37.0691 330.565 li
ef
39.5171 325.67 mo
40.4531 322.645 42.9011 322.501 43.261 320.99 cv
43.4771 320.486 43.189 319.621 43.189 319.621 cv
43.189 319.621 44.6292 321.781 43.405 323.581 cv
42.2532 325.165 40.6692 325.021 39.6611 326.318 cv
39.301 326.677 39.085 327.11 39.085 327.11 cv
39.5171 325.67 li
ef
9.63696 295.141 mo
10.3572 295.501 11.0051 295.862 11.5811 296.221 cv
12.157 296.581 12.7332 297.013 13.2371 297.446 cv
15.8291 299.677 18.061 302.773 17.7012 306.373 cv
17.4851 307.885 16.6211 309.541 14.821 309.325 cv
14.0291 309.254 13.3091 309.254 12.5171 309.254 cv
11.7251 309.254 13.3091 309.469 14.3892 309.973 cv
16.4771 310.838 18.4932 310.333 19.9331 308.533 cv
20.7971 307.309 21.0132 305.869 20.9412 304.429 cv
20.293 298.453 13.813 295.214 8.55713 294.278 cv
7.18896 294.061 5.89307 293.99 4.52515 294.061 cv
6.25317 294.134 7.98096 294.493 9.63696 295.141 cv
ef
8.19702 292.55 mo
12.301 290.03 15.1091 292.261 16.981 291.037 cv
17.6292 290.533 18.2051 289.382 18.2051 289.382 cv
18.2051 289.382 17.7732 293.198 14.605 293.99 cv
11.7971 294.637 10.2131 292.909 7.76514 293.342 cv
7.04517 293.486 6.3252 293.701 6.3252 293.701 cv
8.19702 292.55 li
ef
4.59717 293.557 mo
6.39697 289.094 3.66113 286.718 4.59717 284.63 cv
4.95703 283.909 5.96509 283.117 5.96509 283.117 cv
5.96509 283.117 2.36499 284.198 2.14917 287.51 cv
1.93311 290.318 3.94897 291.614 3.8772 294.061 cv
3.8772 294.853 3.80518 295.573 3.80518 295.573 cv
4.59717 293.557 li
ef
11.7971 285.349 mo
14.0291 281.966 12.229 279.517 13.3811 277.933 cv
13.813 277.358 14.821 276.997 14.821 276.997 cv
14.821 276.997 11.5811 277.214 10.7891 279.878 cv
10.1411 282.181 11.509 283.621 11.0771 285.637 cv
10.9331 286.285 10.717 286.862 10.717 286.862 cv
11.7971 285.349 li
ef
14.2451 187.429 mo
14.2451 187.502 14.1731 187.573 14.0291 187.573 cv
12.373 187.502 7.83716 186.205 6.90112 188.51 cv
6.18115 190.021 7.18896 192.469 9.13306 193.981 cv
11.9412 196.07 16.981 196.429 20.437 196.357 cv
18.2051 193.55 16.1172 190.526 14.2451 187.429 cv
cp
8.55713 176.413 mo
10.1411 180.157 12.0132 183.829 14.1731 187.429 cv
13.5251 186.637 5.31714 182.893 4.09302 181.526 cv
2.50903 179.725 2.00513 177.061 3.01318 175.694 cv
4.52515 173.605 6.8291 175.981 8.55713 176.413 cv
cp
4.66919 164.462 mo
3.37305 163.597 1.50098 163.309 .565186 164.533 cv
-1.37891 167.198 2.14917 171.302 4.23706 173.101 cv
6.75708 175.261 7.98096 176.053 8.55713 176.342 cv
6.90112 172.453 5.60498 168.493 4.66919 164.462 cv
ef
60.1809 328.477 mo
50.533 338.917 46.9331 345.325 41.8931 350.365 cv
36.853 355.261 31.3811 359.798 29.9412 358.358 cv
28.501 356.917 33.1091 351.517 38.1492 346.55 cv
43.189 341.581 49.5969 337.981 60.1809 328.477 cv
ef
124.765 263.245 mo
124.765 263.245 li
124.837 264.325 127.069 266.845 128.365 266.342 cv
128.653 266.269 128.797 266.053 128.941 265.765 cv
129.157 265.046 129.445 264.685 129.805 264.614 cv
130.237 264.469 130.669 264.614 131.245 264.829 cv
133.189 265.477 134.485 263.822 132.901 262.309 cv
132.469 261.878 131.821 261.446 131.245 261.013 cv
131.245 260.942 li
130.597 260.437 130.525 260.221 130.669 260.077 cv
131.101 259.502 131.821 259.645 131.533 258.637 cv
131.245 257.557 129.805 255.685 128.581 256.261 cv
128.293 256.406 128.005 256.477 127.789 256.477 cv
127.357 256.621 127.357 256.55 127.357 256.189 cv
127.357 255.973 127.357 255.685 127.429 255.325 cv
127.789 253.885 124.045 252.086 123.613 253.382 cv
123.541 253.453 li
123.109 254.749 122.389 253.885 121.597 253.238 cv
120.661 252.373 119.869 251.725 118.933 252.086 cv
117.637 252.59 117.925 253.597 118.501 254.533 cv
118.789 255.037 119.077 255.541 119.005 255.902 cv
119.005 256.261 118.717 256.694 118.069 257.053 cv
117.781 257.198 117.637 257.413 117.637 257.701 cv
117.421 259.07 120.373 260.725 121.381 260.51 cv
123.109 260.294 124.693 261.59 124.765 263.245 cv
cp
121.309 260.077 mo
120.589 260.221 117.925 258.853 118.069 257.701 cv
118.069 257.63 118.141 257.486 118.285 257.413 cv
119.077 256.981 119.437 256.477 119.437 255.973 cv
119.509 255.397 119.221 254.893 118.861 254.318 cv
118.429 253.597 118.141 252.878 119.077 252.517 cv
119.797 252.229 120.445 252.805 121.309 253.526 cv
122.389 254.462 123.397 255.325 123.973 253.597 cv
124.045 253.526 li
124.189 252.949 127.285 254.174 126.997 255.254 cv
126.925 255.614 126.925 255.902 126.925 256.189 cv
126.925 257.053 126.997 257.125 127.861 256.909 cv
128.149 256.909 128.437 256.765 128.797 256.621 cv
129.661 256.189 130.885 257.99 131.101 258.709 cv
131.245 259.429 130.669 259.285 130.309 259.789 cv
129.949 260.149 130.021 260.581 130.957 261.302 cv
131.533 261.805 132.181 262.238 132.613 262.597 cv
133.837 263.822 132.901 264.902 131.389 264.397 cv
130.741 264.181 130.165 264.037 129.661 264.181 cv
129.157 264.325 128.797 264.758 128.509 265.621 cv
128.005 266.99 125.341 264.037 125.197 263.245 cv
125.125 261.229 123.325 259.789 121.309 260.077 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
% page clip
grestore
grestore % PSGState
Adobe_AGM_Core/AGMCORE_save get restore
%%PageTrailer
[/EMC AI11_PDFMark5
[/NamespacePop AI11_PDFMark5
Adobe_AGM_Image/page_trailer get exec
Adobe_CoolType_Core/page_trailer get exec
Adobe_AGM_Core/page_trailer get exec
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/doc_trailer get exec
Adobe_CoolType_Core/doc_trailer get exec
Adobe_AGM_Core/doc_trailer get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 11.0.0
%%For: (pingwin pingwin) (home)
%%Title: (Floral scroll III [Converted].eps)
%%CreationDate: 3/31/2015 2:48 PM
%AI9_DataStream
%Gb!R&lY^=VN?rn"(JsQCi4oTkS@6'Tp5XQ@s0C1AnP%Xhf^9V9H5ZsP;H9Q5.[<g[dp;qE'8p+RN)*>PB(u(j/e!-,qP\h!*Pij9
%j<FDp+8tcuh<UCdYJ9nph7rmcX=e-sS^6$(So%^/r3ILDkWdu&meZ=GCX2*S4`KA*S`cbTh9Oc`Q%$ns5*^E0I=H<^p$VPMotqU?
%G?<C7hd5*O]"<Iho<Vf<]"Il<s8+Hue\:snRoe3kGB\O`q/Ed6:I^khZjZommH$:Y5<lK(-iI,MY?nnhH2U1Hs8(i\DYr>Kg0_9A
%mDn\!+!17Yq\on!Idu`Rr3,.MIss</J'-H*s64aZhqYkm\A*F$\U4;$5JbmbpsnZurVcDY9E.A/?@NZlmsdIsS*R72hn=@*!M/=P
%rEgXqEe[*^^Lt<0"3Oi[C[J=*G5Dt,[f>\[d!pLJnDCnFl+c37le-Zopj9aMic"=Hl5-PNg!]_h.rQh3?@Z70CkKY_ro*_Ic)]$C
%CL>1n4'VQ6peP2DQc8r/VXm]`53d1&/Dpj7\^/b#\fD#/c\9)^IrkSOT:c)FlcYXHpKZ`cgct`9k$S!h[\KD\9-sCXmp9;Ws24/l
%#;4X^IWbDmr;,jCodeGVp:krsM.I]?`VuK2r8I5GS*PjTUN`ou@0(h+[SQbSDr0<a\GYdkIX&tQhd!qq_qfgKJc9ask-LiY_Am@k
%hJGEVX1r+.gZu(aH6hq!h0SLD7JWZ6i,A(&^:AOfEt)s_o'c$c?7&`kokaC&Zb`:&_uC5FO(7N`r:"\(R]QFrY?tVkh-u,Tn3?b\
%kMFg][9qa<_nY=EqceR5]/L_3&\e1f?,,@\2+I04B><uOm9b>4l<XGMhr!>)Hh4;i?f-;2foLXQo'WREZS*pQ^?s\IqXr%@5<0t5
%J"HHfSbh@.]nkj<2fF09nOGcJhnT0XCOc'V]=6[hrSd24<BQlin5&SC^A<<)Vn=9-IdRC<O8iDp^US[alK4T5b;\>8>WqiZBDrr*
%qS9e:o%Mu.fu-#I`m[/kbF[S\rU7Q*I!tUtDqMDR^Und$c7cc@I06HupA8b]hggY9s),@;;o[_VAs_u(S/_->?ba@)Fnb#Zks;lH
%0Dt:*pMW60Ek]0alL*3IgY86^JJ/"^.?EaUmX?"5rTsR^)ZS%YgR!>tNP"GQ5Q0e0qtJleptm2T+23(*4nl;_qYKX+YO0rpchj[@
%M$iL>Irb7hhd##ETD_d)k4^f?ZsUjBe(J[0J"ul9j!?+g'3Vp+O1tZ@IXQuYs/#bMs6R*WT.O]j55V7-T$CYkhZ)0q[0OD3n,)+M
%O8J:I5QC*:B72c7(E7`$hI5IeT7S^K?ZdfCm=Y8pX2fj>XKV"eJ,EAA_P9>CEV9-??i2Zd)%Z_U:%sSFb`aK)qH\Ql^N4P@jF;7U
%`M<DcdJLg&;a9mY%U.$LD_<..gA^<ZT8<OX^sAK#bg,>KG9m+Vf.VU%<NQ5snc/QNQZkXirBl(P2ePASQePTFq\;?7s1Rj5ob0%2
%O1p#@K(kV8hW]pXlt=)u00]4/_fp%kkF__4rr2Ka@GG0R>e]Q3n<Xt\q0.nZrT4"&j]AWn9"t8?N9#aKOT3)Yj0/'SX)Do_]tD+/
%XfELaoPeNrI.oR,]mIP6s2tB8=3l<Ecei%q;I[uM#H[U5iS,C_*4L@5BRfs[]RKb>e[r:$GIN)#JZHhbfDgA4dAK+94SG\F^]27@
%ll>lqL]*M5Pe[&_:AsqY7\>I]bJ1=8q<5bFF^q?FnjAtWnRJ/#O]Qa.J%C+)#p9$?me)@tj$3Gdob%5]o>\O6DZ'"ue#1OEUM4uM
%oq27o[HZFI2cp#lWD`Vfhqu,Z^Uc<>i=G_D*q+rHO&USRTDe3So$n7f-Tj%!^\de-L"H$RpfZK;s&n5chgG%_-^_bdREi;/BKsRV
%dmlOpJUbCZq=*dl^TXc9YME0-OPe)sGjb1;\pNY\k_nc1+5BNc$!_fMZX;SFrQmaul$*'0P]t_us/5)K^T?/cbC.Cg0eq+p\bsFM
%8i[:BMtu;W?<k5Dk2#,Xf4SIG]m9A70k]5]?ef#']tSuGIJ/H^IsF$NgQsi0QXAR]\p9A[>[*\%]](o_]RT_AmdgA=fp,"#b1V31
%O<;1.S,;OHm#PKN<O,8u9AMg[D&pXcd7_M7I.ZF%T%X<CYC"4:\DZ?Fo(C`rQ[P""^?]^MH$T,Wk$P<5_)224fpg/DfD#6I\*mXk
%(Qm=ndj,N`X+'s6iQ\uiZeo'&ICR#+q,`XTA]./-CaV1?qYKTg+1l)Fi<=5PfhK6Jo&700s0\EH^AmI_^$Z,^]0<rIi7=2RpnqJ+
%^V"i941t0W#KcHT[kd6ukJN\XiG:W+4l.ImVn4U5<aaAh]R4dArclMNYAW2\VVPRmrKARUe^V:CHo[^RIdsJF?bC`qMg5_SR"g#J
%SUDMG^UFT#qYp?VTsN*IQ`i#K?Tkad-hm8DHZerVqWsno_,%`9mDJnYT0b)n%pXPUlK1fR;YZ^[V/MN8&0Chl/T2mFmbV=.^OaQe
%AP\qlX1S7qf.Wb!PI$n[k3h3cp@mX&T;A4Xg&9+k\**0AH=F*C\aK%]laqrM,%&/6=6]&-^3q7_T3h?]p!q*ckt8/JMjL'UkMtCu
%o&b>HQd7h0?ZGi&jh$RZnb/a(\@R#4[N8]T`q[UiGHX(14?/s]s6Fpo^qD(OT"D@&ha\;mSj%,XrKBm`pAC2RS*X99GiMKe&JjS3
%Fg:Q%_Eel#^@kdH%'Dhc`)d*]nFEiqIWSS^_Zt5tIK)aFfUd"WjS*^3^:sTD$iKa[Fk<Ch^:M/3e7X5<o[iQ8?[^8D^4-$"rq>/L
%Dnkc4E6ZR-DskBS94@DHOSl]EDYV:BG]r)]\c("QmH+;=hVN\Zosl$[T76b;E!6#jb9-0/I/:gc\lkWRn:@XPkdZ*;AE9A%rAa@D
%\3*:\#oB4or$``G@^C3k]"J&LG/o=26W!Dbf=pLhl-8OtmlpU=qsea!^W*uW(S01O_9[RUrAA]\G[,W&@,'63oBrZ7Rtk'@]gkj'
%BhI^WRoeLZNH+&a`,IqadA`^_m]rnjQfen8=:YN$\QsoIhHjL$rn]6l(VP*:-#lbQQ[4,:jf@_=pRccj\)55\\ErY_Rs<Z]?DJr3
%VZq+bS%H-g+(738eeeA2[s.THqN8thmVf[NqCsV:H?F]YQI8ib(4P=Rl.%_:&)Xj[E9SJOTBEf2RNJjaE620?&%@mDSuC*K?#H9T
%q:>$2P\]_O_X_^*=7jjgn!,Q0hqibPqP3Z]k0<k8*OEJHF)][=?,F:gra*udfDYLYY<-a!IF$q;/meBS_t!iYf]oe@X'^)RN9R=i
%B_ut5oBZ/,0PZSF5'hKhNDI'/cl2dZcArKrrFEq%dE^nc?96BcZXukFk,%*I^/'4OX$5JJnb1oV073<QjnHD%fC>\_iJ/N.YJJe<
%ok_k2ai2mLfCu27a6t%"h[mhh!JpF(41a-pF`#1'iACMbiVW_,l5.&.$jX6(%c#AMhEJ;pn\32%O,8MdDH>W/]uK[3^ZVqCl.\GY
%]]k%@oq+Dt$=QVMM=Ad]?hn's^&m;3r5SBnoW.ubMr10*p@4RF`"0bD?Jt_j3%(ANju*$b:CM1=qtnR'cmX(,qdr$:^knQ9mI7I^
%k2(buIaFS"iR9gVLZ'NP_2EdB5nAQSG6-U;"apWj47O>=MJi`\pcaI.)80F]n'^$2G4XEm(/X/(P"us75l3^]TE15R"G:N0Bu^^L
%!Q;YlB;Ne^g):51a=k:(r3ILFO1CSV0t4^nDsdSj\,>=R`G=3FIHdBqR/b(-rhaUu-T?M-DfeI=J0jYcr?TG`-*W,YIJi,t5QC*+
%$"Pg<OI)SoN@]gDS@@a1R?-C0[H"obZCTfpi`a[kBrRZ5T5WiDcK;R*QZ_bMm<i*(Z[#^"bLUjK@U8i3>kQk:EF)9%`.!3(qGh+k
%;L[BGg,>QFqg=q,Vk-]_c\B\/Q?gN!oiTMKFY@Cpf_qeWCT=qqEjg/!;WbE18ibekrhm.VkNar>]5_'$-bOhtG8jT=lM7f>d-CG4
%p(pd,5!3QH,N!e(HCQY/g51'ieDC[,h2_L0^%l6LZ#+obCEK*Q@k[2Dkf^_8[9p/j7rHdq^1.`Q6i4Xj$b*G;Y].WHSX3B;Z`TNW
%^\tTh4pQ1ZX0#/5;Ao>?DT/d2rM+4%)P8lGcXE3=k&\)Xa8*CAVpAp;YBB*]FCdN%M_DojX-S'\oEC`IY%Wl"4(7PiSCVWEpTI)Z
%8_gcC>e7Y@HX1UDFM=pVTq*LU%ub,<ghsM53,.,0GD5B>3Nr&MFS&_i\hVV<h&jCTc8b03f(3J<,?TA2[`Z"oD1*K(i<?LBIeDJt
%Y1:doee\bhX\4/gHHbPhRf176YQ!BkJ)-I*4Et4;Sa"^BpF"V&oGP[.g=4mO'gA_&g1Hj7pSG(l?U1mbRZSnJM-7===4sKm3NpCm
%>CY4T8`.k[@KW"CNt&R`k/1D3?MQ&b]O\iI]+"oHB<S)FU\`9OUo[(G24sbNfM[:\\AFe7qHMQ][1rn^fOF50V=3-um)&3Q-,/<T
%*oHhhl-G?_:FlF#OW4<7m#]IN#$;r\!(jD<5/uD:97=q)C6R-`\3IM3K"5>Y)s:i$ChsIh8hI*YCh_0W\L:b-m!YIB0l;'qe[CGj
%\FG8m_<*E;ZY:?f;QRVMo=KR7NNfj6md.=70"l:&fD80Wa:<5#4'ZrGr?I@09TKGIi5334pL(LFoA*Qcc@$YU^+\V$XB+((`kksC
%W+FkoS[MR9YF:]nVQ6cb0AihJ^+:GRqOid/5VoS-/@K"EfWqUmVEPmh8uZbhCI<E:Cu+6f_6=+/%RG,CbhMsI(X.PmNCTTEiT3l#
%msmUf)mXBAE(>QE2hK.;nG,7L^Bq7%YN]8=Fc"]r6'l;I[dsN&[W29hOS:qJPCTtIosIOYF7jMFYkG2:])l.:lY-TgR6.iqX+DV"
%%9o_K:RV-4Ep;3BV`G+D_Hhec1;.\-b5+P&'jfca?fTGR,m<;Y!O2Yo\Fdb[qK4+J6FpsrjI*H<B-GUuGd5e9&A.Bod-@pk+Ikms
%k*\mKY<I#0&F:m(dXC"=lhe!63!dMAOJI$,btq\*M](n?XrJ_V^4EE`l_usXIo$rD-5X,$1NVLl)u7(OP4'QC8,nPlpL!5er9rRc
%$i_iO%FQpO'Bs`q[_gaGhj]K_\60t^2fO(M5qF9>nmpW<F,qE^KfZAm4l.((e`'hN1NYXcYC*lp`:%Zm8l"h.1jtG>0Jcqj?_-05
%j-mhje28i_RI;fCX#e^Mjlb!c)eUH4j"URQmg<ZZ%PmH+q6a)1pN8[(5Ms)URu2'j^1aCpYVW^K;1Wl,;Xn2oaUfl/W7%*'^VR9l
%[4r`J`o%V'8h@R_.BLRq(bbNb\#Y*@-l_<Vn)6;f"WrYF?%$'!WRS9E\#o4sRBKM-CNH<k2TqceaV,Lb4)dnQLDDX\UR;;!%l"1F
%C"m\Ze]]9)31%FbDQm->./[TP6t>eNd'lKr/`>L-'c0>]E(>$lT(gp+_8cZt`ohZ7`]7]d!B_0!c/`WsjX']9XcosHmX(e@4RM/X
%o;\/1arc_CpuQZr$4b`f>'RYnG,mNGYs6lORKN]ujPH+8?+?<9Cr>ir^R_i7a?qkhX#;!n<WcU\lJc?nNp<@_/6lNQ<!$C:AF'N'
%Mh5hug4k;lS?tGk2Vi?skeau^eS^T38uHT&gPUD`3SV?*h^?PO%'p!VjqE0q;sMfP%ks(=`Jn:s9bT=RPDmTj<Wp8Uer@emdN@E@
%A"g-m2\nq$hmC\VSRl+%@q40r"i]m#R:^^$&0RF0:O1X8AECA3Ki@KVALSuNX3@jYAPqR1qb!9Y?C+)*^p`D2_T8/-,NiX9IYY/n
%Cl6=s1bk5`=OO?2H/aolR5R"UE`jG:Su]K7dk^1Fjc\`VM6N(F\#X=lK4)%7n1Q[R*r"CVB&Ej\ilj]:gGIH0\Do$ATAueo)_&C[
%a4LDZD=aZp1<Rf:#](5c-=WK%.EhqY1="u+N`fs@ij-I^<SQJ1X-o+6p5=jc@8te?Ujo`jm!,)C'2WL$f]u3W"pr&<r_<a-8jU!I
%\]]8,VZm/*qkE*0h6/M:KuZVd^BX9J1BEAQ%Sk51RBCj?$f6LbB"L,h7;$%VY5O8RY?1mjM`fD@\]r]5[rZD[J^gUG#5hbqIW6m@
%ErOH/hYSF3=0t/)Ioq(/#*%tlI.]5Q`pLj"r5%DS52-lQ<c*I'JaHDISkRaMcHc]mY1RcC/,0>'&%DI&1#WCqrFs4dJ0r!L<k#9N
%AYpY;_<g+Mk4?Bpm;c%#^;^#(`AJ0R(&j$p%<sk4Z$W'[/]pp1DIDCFOlG_Vla#<IOgQ919Og<iRe;IiDtlKk8HI%Q/AZt<Y6VUR
%m^LrHJDKTt$5\:sC\U5#"&?4oNVhi9+8A5gQ<E;PgO\/MCRKU&N%9,K6Mg6!$k,^b[B&]of5]M+"a2t'-?eU(Tl8'k9#A"ok/s':
%`oXqL-g-DOYN#q<Sp,&embE*@P<E*77B9@@^C1lBGR7+jT;6pmSU+=MjZs.G-buor]Sf:l)ZVA,*jj-R"*]XJ]`!ZK#N\Qf+%JHB
%_5eI:SMNP$[B7ru\5=Wi[;/oHhJit,1_Jk]UJIX`9]+J^H#*WrI*ouOaqX"gRM_)'bSdT*4&<mV9C4@rG@tWO?nO`&]B?8:P\K.E
%E75a)!ZE+>hAHR8k@Nol6I!iaI8D9BCHmB^<C%SRoMhZtfG1D.R\m=O=$-6r+..U@j33s`%6l+^iaL,f-L5eq6a1CTbaWs!N.!%O
%m:m.j_[RXo\((9TghR#<c>KLM2+8k#o;<CNHTL8U=4?a8kM30P;_t!&GO0F@<OrLp<cXZCVRuX<qT/"SKK$kA^CtmUV_cRMK2/`r
%qMfgNm&,'>Dme!4!=Oo&j,c7eiG<+=7(ePKG4'jen!L(Ji9PE]6)??)i@EREL,@2amosA<*-C8kk$1!l&[sN%\1P']C8K$7>Kh(h
%Vqp_Qf_^X2j"o_ZPm7gPjuc@e9^Zt2ef]VaT0!M]j!pgLGMWWT"u?nK$Q'Y.*sQmfR0.&np7\u0\=`;-S&1;"B+O>9Zb#)ng;=]1
%4h\B,KU9;@Ei\c\QDBn=c;2=bXBe8`4/9R?lkF[nmGLoV"a"&2U6t@.40QHSjtfm`n1c+K1%Y^]\D#PVT(MtQ0BM>._*%,7T)Fik
%`()2bG(UjmEWKFb^i<ulc\Wu*"9jfHO+iFKR!7tWkGb7<9A[6K@&Ka@DdFm=eo&dMKW7"Qi37_\%sre/jG_fOnLJj[R!T@A_u:T]
%DB*Gcg?;841JPlkgVC7K.X%^3)_#MP:="*$UV4nKi5XA7%G*QuFe1J"Mc&gR\d<@Xp#X5hc'sTKHq26CEEq@JO>AK85&`_qFc#<7
%[(]hjrn9EbQrVdahu'PR;f.<DD%*LRQMfEArSZ?O^arjV,0,Y1+_B-T1te@TL>"MS]4Kqo_8KaX>t#fH&)](M1QU[B_0K%#eqIRl
%e`_>0<&S&XG>_]o3U=5[#Rm*PUMjQOO0%aX_l%:fB09bcrn_mkLP*AHO'V&M<Wl7S@0&OPiZ-5J]EK"=lY7K&Z_u$g@h3#Nk%'s[
%^Mc,0FtE#KBGE3D_`[@g`r)95Jo-&T@h>186YDm%.!7\g,;JOYF2[e8\7hD$Nkh2rEf23UgH>Q82uGBITc_b\?BdgOG([U.8q#1B
%o\_2`Is0QNd2>'uj`2g/?GMB@N<CcV#1OLsiXjH+;\C)"gZg!lCO@D]=AC7Ua<q,fedK5'<nbZ4VX?`iL-tIQ2sDf)(HC:'"NbUj
%q$N=pe1sk[I0a!r/[g@M9D:*mSq,W3hD]hsLTJW1eq's"C&'gCoM`S#G0X6j\;bLGr.a4N+3ln9R8.i^TE83HL!FQ)VV<Gph9`pk
%]Fl3d3Ck>f;d5ND`=31KR!lg3)QN<U&:B7]k$J8%Co9Sd4A`CLE1bfX'/q]qm^hd]_T8s<IE7R>p:c5a)L?UYGV4:_#uC8UbQ!(e
%r3HJ_g]%!*#Nt$&1Y,#kH<]4<ccAj`cs9//%Y-D?!<\<,=*gRP!:%jj!egkhLb+$P=gcG]clmBRI.2#&_3Qg4`(95WCF`RrJf:l"
%*rV.1)49T!K+o@J5k)J=[HpA2J7(cP6Ac$ZGoaV#Z/0BjcB9"j>X'p\>i9=Q0agr+-6WrqE,2n#g:GG@3d`u*-[Rrh"1L"qabt,R
%D#Ur$H5\LcqD!ob`>qT#K&=#3-Bj&u5/+uh0J8c+D%IQNIQ![0b1eY/dhl\2J(3HnV_3U=@Zt_B";Ztln$u#$Cq`2#EITn%>)O?3
%/uUqIAcn8bXfL-m#@tCsj>%4+mL.!Od(D_J=5Ra.Q%8f)7rMY7AT?<'^5FAm]W93qMh'"ahf\M]6r)tY+W>U-m?A`$!3A-f!e=c(
%kU`#QXfJ39N+VtbodGcMd3A`tc__%C9`rq*%@]l1(KtM2Mai(0QJYkkk_Cr!>N<Sq:Y]WqRtHNEg0_+E1&4VR[B%g*B@Wb9N<kGH
%-^qn=-k)$^m3fK#]=]om/e`Y]?*)e>?&[+p1m@ZFZ8g.<]%L=2LFf+G7jG:h9b'8.DEnVt1O,YGBnHp)G$aF6luHm26PG\U0c`YL
%Z"FH3&^E25$Yo.b?'&uH/)n!(LX3CA'S)6cXgYg'S?H-GL@!qA'4:Z+Li+fGLW/R6K4Y*m`$SS?30t^k;'ZZZm\_^d(KSFb"5JCT
%D?SQS#ak0&M>8lY,2Tb+dB#j@WgdV$)pK1sGF:l%Jt9PTqL+?2EM:oO5OYn9[`P*0E#G%L]8t=6!3hPYJ<+&,%g/-S#*Mo<0ADJ]
%I*8[<n,^Rs`OE!f7c>t\-cD1j,nF&+ACr4ue.'_e.+))9<>6Em9p"Db6XD>U*6*&jBZIc;9l6=$iRKOf&R4aG5D!Bd@jlsWiGLI(
%pOV67VQQZpGsIJ.7;aJdk3M*+PXaR2#gU&ap^5ToKOq2Oe>,oGp%RLaWZjN1OSG'kRDo?';q8AFA(h<g\IRoRAA;46eAfsNWW(/0
%6XS<rB[.#*]MuoVCb%[%(m;)n\n+-]]486inMk/3JPnBp-KJ7f;F#5m1VO?M>!%pjibg9W\J46<Jr,c-2]FpKE?c`r4;MVj_:0eI
%P:Zi#c$'_T31P,gT^_5B2b!s^D9Y)!Yt[n3#@?d[O,MdN[8%XU8f&9]lbZ`=7LkB-ceITT(mpmfY"(RjE%Tm^E;^+''=+IY<*pg)
%TpSQbj06U'CRJ7a#Y.M%Y;';>aG-O\'@%cEi?)ho:'.12maAnTgb<Tjd.[9I[tA\$qcN>>^'"6?&`L+OWXT;u"OH1)CT.GKJS]jm
%JA$L%os7,cfLAWQ&oId_m3nf*$A'dZ2R<a1Hj;'Ql[WZhi1-$gNk\Uh%t`^`I/Gn4gWYB*MQ:;^h;Z1TL<cqGEL3cb>c?>DA1#k:
%T8#Sg-Bgbmh?(mZamP((S7VR1Wq41tJte-1/ba+4[HthBG81cL"FK/$Y%9*'L/HErM-XORR80dUm%X<Cr6RDoaN6l]EAAo^/p!^?
%4*i@_g0;f*!V[%0[d97MY]t/F!'ZQtFe_759]m=g5&Fp,'9>'#hnmB@q!W0)'1-a6S_%d:n<QY#p\l9>H4R]]7T86\n.aK.#WjSp
%@ln4tgSDR:SMN2E7Ae$Of(\C6&\Ej%F#I2=oM3@<'HD/;^g8G'0XKRpFVL;E'7,TIm+nS5^c=1uL;`.[j3\SSAtM5lm^o_bf#cM+
%TWNUcX2Nns1DjbJQ=lYNpRHas_tX3[Ccok.lS]JE/]l$Zr5-]QQn[^c6Q0C0cXtkID$!NNIS9=FaBAi`8.FE)3(Hlm3Yu3`8ftUo
%JR);7M9!N5S2")[']:s'RD)dK*_pJb0F>jlM%OJb$^2*Za-U+Z)GXO!_R<U_S$5o0=I?Vfg3(1=R/UoDpg3^u8lgc^.%+<`k69+h
%,i4_Of&sR4]\J;\!JQ_)F`HAP[<l]\`d#uW[)P@6b,SGg9p-=u[abP]073`Qck]9Aj1?(\Op%!0B3S-d5ZlfnUKr1<I.8!rdf)*=
%FU$uIq'&7D]@(j5Q.qSm<4>G'iGCWEFNs%SeoXHs*"be:o,iS3G_k=S=Qq2g3qr6]Bk&=sE(Z=)\&50^W(VnYbq@fbL2$'I6X?j7
%:2TDMCQ/ODT,)oX>@ti`2d`!X&@u?.?0I^IBn1.I(P-J22Fe%>5-6`0";G=0#V&n:eOG.]Y([JVo::=U."Tp)N7*GBTg?BZNfO1f
%Ch++E5S!OL#IYf%&W:r'_-^Eb<f()c`H*-nddS2a>iB!UfW6`FS*A&6\4fHOUVZ:6]n'DMb`BOUR_=,)1T$R*Z/#VA/Yl5d!A9,j
%G!%A>@4$rW^',o%`,rhh(HtMSCP$4A%;1X[-"`3AbCsG5&l(+bI+mp<+]"N.'f<F/oBg+QE5h=1iL#6T2FO?G+Wski)NdV3[_Tlb
%aR>"JI\21Jk[U,f+D1.%4(2SaCNDT?`_BMBK2A5n-bOZtR,\`iiaq'ko,Wu.]"1-=mNqr(_b=qFSsWo0qT%T$Ghe[=i+c\P\JlOg
%@#5>JX[.#BIGq@c9,^2g:X?@lK-4aLj48T^-!Gj*HYbr'']n4ebG89Iq'AZ?S4Ou$JEU=L50G8[5VY_(S]@(6lXRuI1H/^u$\@'&
%AR#,0#Yn`SCW+,,g(>dQ\89@C=4::Yii2ef'T;2$`1Y/7Y5CJN="/o:L3D9;Qn&s&!GAVELu+#FI9VLDLqVRHcL.mpPE*KD9RmEj
%7]/$ERs:Ve)A-gA,i0/a:<>.S$4ZmF3:mCXirmT>ccP1):4_QN]Ekg)PX`E'D"_G"9I>.F)=_PU-lG-Uq-KMB@02gA^tnDU%p4b[
%d**%0hIpfnf^R(I^i9>k(9.HMEAN_?"!>H-DAdKBGnj3Nq/?E#LW*aA"F$Z06l;/:(;@d6Ro+?<3UD']]R:-:.p7&ChE(Q7Kf=$n
%9?]&ImC!Cp:t*;$r),+!5',ojO+<B)&<<bgDp$aNHNk%*@6e;rd8B<s_M+Y%>8Z9!0jJ)"jt:T=p3B5$j\LY^Ei9=t5`c\%e;FuF
%-!q&d(Qe!Y;SWn8#(fuqG[3;4K198B^h#7gR*=P=**9;K6G=9kF^=A5e:,?0EuU7_O%r&M-EMO?[dNnQ7WPR[BErZ?&>(*q6efq6
%_TaV7H]5;F&:8&bRf%#7^rIaKSLGpKb]TXK8IrS^nSNQrOVjZ,qk=Wjc6!-qBrp6f2XO_d(>r?>O-;c%/VXZ"d"N?.0sUW/ba>0r
%FdrY3OVtm:\V&t]ck:>coRZ"2?^-JrqO@kWO&umHi+T<*-0l"fh&&c'Y48m,Ka&?h[E2pGR_ID-&hZ8%@RE^GT!S!7)GtY!ZgA%J
%51nc@Q/J=A>q4;/q%h]*Xq'%rNfMWP8EM=CfR?B8Y^t+/)M-='-ooM[*R['6D))Z969_j>C#^^;#Wf?FX_V=2BT53+YQGg"nofl[
%:c%&$eS#s\8$G9;HU;\@BrijBZ[cX%/&]@_#)uNJ[#G9aX<*m`+VZ?(>jQ2$npN#c>51)7D#KThGZ1=Eg<)c`!;d]4_?s%ZNd3In
%pjC;1DVF]N."ont1M(s/#t!o848Z+E'15GL#U]T"-=2PV<JYb[6@20pf[Gfb]sK?FJ?0,*C4b$uAHGH?2!fUHoeQnCh<hir.l$p5
%n=<i5JQdt&"c/JgVoO<qXs(H7L-qZ)C0Shh)-n(fV/geO--&,Edc_%t.`A0bJjs]nfX`>53@*&E"6-&/(09oAERQu"nh(u+GK7%f
%\^:mq.j+.#D(Dl-k7sJo>:2IJ+.9%8YCb::k/5b@M:sD@l4q/XEAm#sa?d,Y`h`QpN-Z`!*<m863#e+KE1t/O9>%J;#F63UTf&_C
%l7D8\3LG,9As!?QX)V_)*VPG-%7DuZ7>[eVq`%<V>`9;n?P\$"_E/hS997?1ac=g_FeYF:!a%.8<-IP1#6QYl?5]V[Wa@:&8?Upl
%]-LG;fn%aFNi/Aq`1LPtL6e^M@d!El8W1MeS$WGEJ=o:7HlOTd9kPB]q?A"(7>cWGRYj+]DCu2C@/T!(CuXfDbnp9Ci"7[3,Hguu
%i[Xq\dpsR%q7"nE]nP)FW@4kr(P.0^d7MO>*6Bd.p<aU2RYo.Af#8fP#'4GD(GnYQmIYM&E;1>jF/Lhs"Tmms7/>i`!k?b*BK-9X
%8-@W_;@S]L/luN/\p1r4T]=Yd.N\f>&SNI1_=f-^3>!R*R)7jnf?IqX;d\IM<;+g=h:u.;&bM[pJjDGr?Ot"6Mspm8rsagt.(*mc
%b\.R3/;ti-:`*7uH'F9p)'G64%g$cCFrD:hi%%S(E=gVd)3/-P%`ZBOJa#)']p^V.De""rRH8V"_2aYKK34`DEeH-"[t&nB_HNB4
%nfs31W<chDU%*+fp`5Tc/#nIHN&nu6_qQk"[neN4kAWUI5rKA.QP-;9N+Jo+&3[XAirL+"n"<XO%rFFP;c5RdUDSKL.CV=ViT.%n
%l7`&ngE[nM/Wdp0XDf#f*Ct@olKHFYANXd]X__bVNYXEhd/>>]LjQ20XAMmN,cjGVLWZHq,sjQ7(''&6N(c@LkQ-+(R$R';>t'%-
%#R=S6>#AO<Y)/f&b3cW"jB@3`?j]CUMOY3F#Sdr#Y>DO/i!SD9?GXH:4RQ^FoH(t#0ET;0-ra7U"-q#(W+Aker"=Qa,FT!(EY_+O
%^tOJmMj+[&>sMo&a26>YP,Ss'an`P[*b7G``i)EOo.3.7[?m>$ikfrA`=EDZ=qm>,r7LT(&@4,WnM4pc_Rop]?$]NTX5PPn0Do_3
%f3P>:CbcNU-\8<"L_`!=D1"X?Q7.7AX?SSE_4#WIM;X:?DUA^N[1i`JYJe[//#W5@Umh&/8M3gNppI>'[EW4bO#t6rg^%Vs]4s%H
%"b_XeO';d8.]ZV.8]T!*eP+&mBu_X^8IkcK]W$:^Q&SND5j=Q%$Y!N33tITNE*<M7j#=INjZ<m5ET-XO>4<Z][;>J/TVRT<>IQbr
%_XO4%2EDB<0T5Y"L=*:PijS2BBZ2jUfO\\a!Y>g9YrAKuk\\C8D2r6;5h&ON.q"&hT6S,qMbu1k_j?V/N>\UdO2bd^nEOIZjdZrJ
%O'MH3]S6YiHO($M($6A\H:m[l-=F;n6[ZU`-Pjh?GF:YYIhs/>B-IF5G<G'q2=!\^(/9R2M1KN8Br.(>o'f\3$P2BiZb@!$"rM0_
%S0(Ok/H&@^T(KKX7)&DPFk`gTIWH8Z[RLI_l1qV:/EO3-^44f_:T_Im4,QC(,fi0`emU.d/Li<2nj!BlRgu'>ba%RGl*.HQ+LlUQ
%'c0&,0!5=e*hK_8K'XsEU"fl*Lu[gWY61*T4/`>hrokch+`,k7(PoIOXH^Q(WW]DQJVme2ScpeTd4]R#'`-LI_;S#1]K),$`_m#N
%_WL`kWX5K2"^2N$Ycq"NkZ?)*#Jm.dFc/tG+]?5iaagFnMATXZ71^c0#N1UNP]7C@M2G`(oiHgf6D0*6c9PoXj<W*#A"A?&o>U8_
%+:nYfKs3>U&/+E0R6ITZ;J%&m+^/!W/&)N(o"l(n0*$Z;nUiBE!A3`)<rC<O,__0FHb@RD!/J]ZV:eWt:,auI?5O#<5cUmgs7E?C
%S[(Wn).h0AcYiAZ'D9%LaX-O*i%MP8132aSZRYRNN8EXZ$S/f@]TFW>#4:ImER6hUBik*U*f)&[oRp[hJX['Q&k__V.]k7eGH=pS
%7;#$@_osH-9R[=YXX]P(d2'=9%)>5Eilj<kodib^CK/T%jCYN]><@BalYA(V\679c/PJlro]*=j?_E8d+NOor'@mWjipea*k*T[)
%YI!QtI>u=3ei>pTJS!Ffa9iH[Po'T#[VAm8J'D'*BWd<6Rf2RZhjHa@XdK3=_1O5?nJX/['Eo$;Zmh69:dV[OphDq6p@6e7A1&FG
%Xcpn(b\kk1Km?'KQ^DYWTbB4MpfW:cs7"c=NJ3`&^<I<^+X!lE6_"Pl^$DWa^m+jf',!msKuk!*'JXO\aHCe?X>>ZJ\BI4EP7/kB
%d9q_R2enQQ,f*hHr&nB"\\S]F!2Wu01sU_\/>"2;Y,ZninAK!?A9;_[P"V/L46Np!86c7SVo3?Bj:0l<GaB4WfI,6DTWWXQ?f]>]
%ghVnG2G8T=qgJgQ"=1c5i40q=P:/kNg&e]>[\mcIU>fm[GkE'/Ub3[P`2pd]H)V273.3ae;u#bRH$Db7J_WfO\+/F#m]eeV?=ZKP
%$9;:BiJc*e$VX]3!o<*<*MAK6=;0=@m$64TPm1fj`MiA'N:5eo=F!EU=>3;;L5%AEA1o[r!))O$Qoc>@pt4^VB`B6g??fPmEiLn3
%T8*SdibhN'O2!Bp(9?J%JoXE?CM@PA@6jF9Q6EK,3(bceKWNm)=a'&P*BW[]!L@b9d3#jc;m<41LF?51HGqJdb0jJr6Umn:;$s!S
%=(BJj<6nIi&KaA;?7KQhNn7MFKn_iLE<1q5E_YD:]Q^NM,UgBJ1RlA*4KB-.XJ>'6`o@N21,QY$>JO]\]rD2FKW,Ia`\LQf=Vd"K
%MCX&8F%RAI3t!TW-GYYtDK?@<WeJ"fmD^k#-56tO1IOQ93L"jn*=297&8JR';(8M?PD[^Ya\7A*b5).T.fu#*I\qu$J!.sjFi&'h
%OFtB<GcmTG<"qaB]&f<I5sLig$3qD[/'eP!hjO1TJDOS.7`rTs,bZV@@(TuY]ffCP"Mmn,Ss^OQ;CfIO@!""3_r#a6W@Y90f/kV!
%emX(j;48\<2&luTha?(2ll0!9C<:-.dTZ8rA^*J&Q'LY^jV`[4kF$ihn!aYdfQ2+_nBd>gaGD8g!#0#loB;5SC%_aq+k`<jQHS=?
%4P;?/<?/>?K$=#(p!n7rF<Wm]'V>5ip^3n+i"M,`N?ES4-7V]?oQ0/gU'C&Gd$e(mJUJ=:35g04#SGq,ie6mNbHB!E;lVb"0,)7j
%\EaRg73>c6QG]JL?q=:b-jSen_55db?>N%L!YeZn?JGdBA+%0j:r1?\JHDj(LtAoYW7O>Bf?ke%FBqS&(S/pOPmo_o!OoqTH#BSk
%d!d1TpR>'tN,X=l#<t4==gZ)Zbr2;,V5``rP$C"A@P=$QMc(;J*D\U7.U(J6HQG1U+'8O[5?$O]OWQ.)SOZTi=XJGi)=8*?E?6Sb
%G]Fmc#qP7JHgm\VQLCSSGOg19\uJAn>6STTWf$j(&hj6A.sK?B<g?o:7t"@diT\p=?;D`/?+kJ@K_qn7o^Ld.I=\aT4,_SfQruVS
%oS=+(9Ic-n_%MWK<\T1lM+!^^TS[cU37[GgSY>*YH;-3;%&lBa8Sq(n;%c#)LqN3a93:,j>UJCY0r-<sRl$bHR19A!1?=\)o"lAh
%4`H\0gd3DE*os/GU_h&&ajS$?GcLK"l!d90;?]^_PJ`*UIoj-g#StCGq@7&p&J4/8M.3cYj&6iNZ)\A'%*Ub14s*OWSGd[o__dba
%`qmIF/=IVqjsS3YWbudOL<4"D\RQ:9jJj#[Bj^F6gB<d!*U+pSj_niKjYkFQ38$Z]#7&*e+3,l+G"Iqe6m4-XTF&Bc*+eCkK9'T6
%L3HXoWh&PpC9#ui0aOH`<d-IYFgY;97^T+g05Xlc2)>2%RA*<"B$moe;%sEjIQ#5bQR*@@=3N.r<4kX;U+R1b9h[4k=ljSc"2?l7
%VH:OOe9DZsl8]],W-sO\pM)+]#NuYN!Td81UkP,Y;NIs?-K!&<;T!"%eC(RB+[isa%;R6N?AU6Ua`"IRY'a[5dQqSJ\;B0M0gBD]
%eQj_WJ),!kj"&GmUTM,TD]Ap`ESS#S+;dR393Fj=._4,0cC)1Br+Hr#Lam=_jf+![oig4nCXuLR[>'KMLr"Ypl?F890GF=Q4#jP#
%FIR=*o!c4H#6R2S[UXG),nMTi>ABIL(`lOn]^#a'-<>ebI49iAm%%ch<Q)2FjP*)c?fS%4#r67s=h^Y69H+LDaENRU?n+g,#c5KW
%l:TPTdLsf+\oPTBCoW_]lAOVL[P2hElBqH_H<%(X"e2^.^+$)u:(H+4U6IYGc%Q8B>i'fA1j5jX,[O!)bk1,IT+1o1X\Y'g#p0<Q
%[rEM5dT[T5H^Pr_<4_qK/$-:'!5snJ!]sGfe=r4Up#/;J-GGE[Ie3GF*a(eTUX,;<\*G.YkZD%jH$oi/=eg_aY:^*h.tNi*Rr#>G
%i_o;!G<-rlbH#ncEIosfMl5k8Mbj]G.ps7)r%:HPN\!f6WP1?:b<:b\Ndb&^K#/L,nH4&p;sh:99TbmFQV#`G-3ZX9^)J)%P*OX4
%La#O>2DHVcqI,%q,Ig#.RZ0l>&_2?9Fm'(c<6i04EFGfEa+E8)<BQZ-FjrOCCd2-YK9?3=,"f+;=EseEFf8?diuMl4H^L@I?!UT$
%%q^NBP2e9Yom=?OOH#g9@sbP&4Zp?*ZlVP/E.p'bRN\SJrs`1ciO>K4:=<!>gIk;tHll(X1$F9.pP'Lildo>?RIRbpbnqL)pGAU]
%[S\YfY)L!N(NuQgdb>c`CpK^`[73NA%%Z(\UZ<'t8@rS5-OB8dSfG`"EL6jsH"FHJ0Q=jVX?:#K[#S!5<H2%CX:rFJ>4V3N>.kTj
%H;O#uo8ki0kc:_//3?eB6#_aGEnkQeA?6-:&YbXAid'8kdU><"*YAGuG*J(-:\Mn/"Vo:1XR*<OP""rnB%H0.c`1kH&XH/dF([t+
%LDLGWp>jfla:p`A=)TqT%KDKo[OoZPAG-'C'.og)jl#lM;ndh2A;B0sRI@_n&-jU16)%UB*lTnk9,N\WL:":e%7V6>\lm6.#'IGZ
%n)@lR,ej$]&.>fq[mPkPQ1`/MNtf'o,rmS?ftsePmp9oWnB6/i@N:Tgp)5<O9X<Du'M=I.;?YJ)=f(e#9HkBnFB%\R8f=$;[*un+
%?kSU`4,Om.GoG<(GuhGmmUDD3^=_Sd;P8)soX\m`0'CBG,mV_(OYc)mCdb`Y^jj\q!L_mMFGRbn,FrX`N#raSf,!$bb)M%_`QQMO
%8[<LNb`Z\5#Fe%/*VWr7Z:q5\#`5h7_8ZMH@M7e>1N,GHiF#tE.$gcc:2C,nL'Fre3/4;,3+Z;KJ%2*[I\7,.K2mjd?/sQMamk&Z
%i^:WaTH@JP9dq":S5T'9de/V`0F,Ho+.L3&i6uZA=Z,dN@NS6b11Kt-Yp`&!Q!JGp,O=N[UXWPaViRjZ%]-3J2,MpX'bFCadKr#@
%'V6ejd@K_9-;4r7k#N5+RR?TA(OHptT"e$!,.KeQ4ACr$Vo0\(#k+r*n4qHmbaIJs7%U6A=L-Is-maT#,e/t^!GnomKo*)9b2K`0
%s$t=]!YiQH]MOl">c01&:of5[5dTf7ZrfV!H/aiOB!V`9VF:^ld&a\pMREQ8UV;*mUMlgJ8Hd"si5ih3.EX]4:Dj?soPINM&jFT_
%$[LWes'&Z'AR48/(0hkejoJI]la(+;31m;3TR&0A2."*`1['JP=ZIrE5#C7nC;^K[90Ged]&D%f_5aO\4K1LRHl9O[0N5tTeRI&B
%jV0U'<.j#)%YN0Q:Q6O%gl<H'!0j%/;.d8SUgB;P@>B\lD1__%:b1(Ha#;:Q,X*Oo)lT.:m:f56WJaq:Yh\0UkFW3Mq8X!Kk/M$d
%4X::X?[s7&dhBm#mP?#G$>Z*h>9`Zt?2pXK"[GYFY@[Bu-gtjtTMc-!6D$%$1PU;WH1ko5Qn8R<PW+\47Lr<ue-a+G%7Ro?nkWYm
%\-ekK7PHFg'N%qpOoo.T/ut-EeHNaB^Wj_C@`k"]Y8Z]1M`esnU:,cuP7p0md]qXQcs!SJMXqT=%bU"j-">pfJB.kK?&HrsM38`C
%1%@0JP!>ll!QO];,q64B?,-m$L:(G&@rDfcb_joUlpS>mZT0<Ve1,=Tc5WF$_X5/HMnrtt/>8ZWriB\&,o_ku)bWU8`f;@-K]W/W
%dV.K?qD8l.JCfVDF62u7MMZYh0Ub*uX)@3N;_nqe;CN'a)#6qRA(iJCKF=-_I+jmO5A]-fJ@&9;(+P=pBL^W31::UmK#uLW',2+)
%Vml1?V4$IufG#-d:qLk6NCG+gE\`2p4"jk6N49J/Z`St=2G8[d%6V:PY_o%a?i9@+<KeTMj2g=\o;Q/?8+c;P9g#^SB@A8&4q\WP
%Codc6VgIhX+7I6"SPl&N&a>':ko'ZBY;HYj8%!Q:+M%6Ed@*R+Nb>ViDAQ!EFksB"JK1*AZ!aE_l$`]$)cL4DFMki.Y1n@6iZcde
%PBK9$gP#)\3kKnD\$<gsiQ4Eef6Xg(h\`bf#.n?0HjdnPYC]g<NK$+\+6(LRQ'`0Z%')u;Y7(`gb-MWt@@56H2RSlB0oPokD/1pq
%0@D;nhQe2#]6/*Qr+BE;B$,Bu$9)X#V2Rpd@rokuAOA<9\FNl72m1^`gHfd.)#&<ee8iO5[Z+#8jN3*+$X7">Ca#QP_K)U0gIs`g
%EhjeQHAu.Ubl(XGg_/:Ek15771rFF)'E"YR*'sL<NLn#P2E*8j9[$,cW_6?%#.;?`4SU,6_Xe5+RNq8IgWDFGf:s&dRLj^hp;qZt
%/M+a@JdUbnR9%MB0hdg1\u?4nbVS9oB6pT&\VX1/hCtf_8Drp%@ogrX0mNT2U==sa9b*[ROb.Osq[bZF?JU[$NNr7]6oc2H;0k2;
%cOm"#S?L:O_06pSinE^H2Yeqtpp";#&pV"7-<"c.&1@\lFt-SB"7?8M&K.l)q:tr31R5d1R65\%SYD3q9EDT:mJ:BkgD11Ug1pI=
%@a"&T=EMmgfN<J9'Xji@e-fd8D!m.BNK8h-Aog-beRmdGeEC/DWRlq]T^^(IqkHAc>oP^X;\h^Dg?2>#7u$0CZ</7E<nu?MVp3ni
%`#F+rL94(&=t9Wkd44!fiDSt;N`s-K@WmH4=ih6iBBGI3]8L=?`=#_m>?Ke#94V/l4JJ"5,"?VR&usr:+ZXZF79,L1Dlg$cNg`SC
%bBM"uTf@\V4P?.WLU$s>KA:\HQfP1%]p>R=p-\Do`jE\uj)&)`ZI!$WD:t9'9a>eL2V4,'%(!W_gGX1(2'7+u4Nn]aK\ONCc1X%b
%#XJ$Jm[F;5)kr*g)aX\\J@KGHnnkY10P60-!5"rfUPJi/W,-B1(t2f1O^#M-9W\^)"QdKJ`ToI^1S^5Z0C6p(8'U:t21LRu07"uY
%]mq&=n`4<e_.sXA+1O'>fK@K'9N$**ZsiNo4TI5SW?5lmX10o5!addRTs&Jc[V0[tUY%\)-2RAEXfD7Udpd9#GU'HW<k=]iW>R-?
%,L'!DlU:X=aAN@"mt[?[CddmKOUL%&^$7mVN,iQrkdE4[N>BjS1<>Nb3a0AM8G"5s5N`A*s6M-Ir43m?Lualp/H(L)gR+JB\D7cT
%(N)I`%Lu>m`YtQ$Tr:EZ<n133=KZ,1$UT,;;0X:*XeNnU(%\lX;1R@,<iHHL%^1AW_DXISX.4dtV]Le4@l(hjPqZH&JD`5[dMQ&W
%bN=C*MUCYHNF?!!4Gqc&NFP-R4,0l=5mrRBO1foQIbXB05@GC7n1Jr$<[,[^*po+a$"$_T8I)(IX8%X2aHW]nHpkC&6X4a$=o<#D
%%WdkiR>?R7K@nDRWQYdo4k",\OuTJ^"#n(\:=FF"bb>W6A$o4q'*N&=#RI@0_pV?01]UubkH\YreYk-%Mb7ufMFhel(n6n!)Tne<
%4^/cn!7ALOKcmY?oZ#PH`_mV%&$KZ:P=!Y)MA=Mf%R"U^&d\QcYQn(E"'Rr!R7,g9g3KunBSWc$JO1_Z)oXBRo2BhqKOX])JJrMP
%cH)<C)r2?_07ZAk85iCnbL;$Z[#mKYZ%?XYYaU2J&00:!b^ctSB"#cC`]i)0F.J_a>?Cj`a]4>b&aN]-?:/5B(>e-Zo%5\J%^6TC
%,+GHMn9e6sbo"i)1!213]F1>B7QE7@BcX/^.Xj1!,Ua.b$A+7WA$So'5W?Eqm98Sm>:N-Y8kKEr5!!'H\YuN2GZ-Q"=Y]$6&ElC^
%Psc.T2cdFoB;,o6J"SOqLcZW5dTA(-;eaJShOcZ@)B=XaQiS!p5<-J8lRLkCMNG$,kV#10I&1:<M9K,)P_%^K1L4pu\qYJ9lb]g^
%Rj[geGN:[dNEJu,*Wa4nV$I*Y_BXArS`".a+,UoGT?HA"bP>g%q$oc-Fe[&[#E&X4g!m0h#m+tgXB;Nfh,]*ofNI_GGHCquYp!=X
%VY4bL1)$B&@bY!F0+a5<(ri:ha-CfZiAh':HS#:*#ai4>27$BPc8l-;J:7tjg-K%sCm<M<WC'p,Bo>4j6pI2<!5S\ebsoB6+UH$`
%B),.GHL<R1<8)^,Y8R>B8tR62gT9GFD;$!I6J-*Qe(=\t!i"9qEE!c=glZ[#?cV4=b>^7gJ$"=\OBC)%mjHuY4.g5=SlfJ+PK6FB
%-Bc++,T2&,Bu=LZk<Ci<09,M<&[kP?;?&MZ+5Z3X(Y3@Q!/W[oYpR894d7V<]$d6*dA=/'_5aqgcr.;#l]Glt]02S81.6bt'Ytoj
%X3A.'Q&;\.F&!9=!DN@3*kHY50r[\E4?t6/U!4(NUS8NUQJr+:Dn[K8[4R:62HQIhk<uEF\n()sWPd^]#Cd[!='cBQ>*b?T9?<Y9
%HqG$+G9p*R6=e"R[;sVi^?gI5(PmH9n*4,Tq*Wl#^!+_%MH8MKWQWR>@<uu3XQde5[?f80II/pm4A`ZG4h<`lq77rER94G0KqCK[
%V#a]\V;f9GfoQC&Ok>M%F<LTH>!"=[BG?.ZcAj$,bIgaUT&d:8eX\W;Z85D!P$*R,R#l"uQQn]SBTo_P(I+X'$<onYKd\"&RI^L-
%CDPamch)2:_Mh,]\i\ElH2PeTjf1AiNiM3l(WYk.#ht0]n]]^_Ce>"0!J"$/Es]PrE?SEs/F1FKI;i0OZNYl1Vi1:diMZ;\Sdq_*
%2r^))C#%@1[qn_%ZS!>''NR%$*F2L/3`#`]#k]q[4puP'0=,CM)PBmB:VdSr%<eU$X?34![PmSd!H!b[6\.^KUPaK+TsQA1-]=Y*
%@:QK[A_m2KdJ7"Fh?\s=CWaG1"bgqUp_`t^=m9A'f#kkDq,5`'5h3b0O1U%3=G[ZTkj2]3,92Dg:/]sT1fX,\JP6r6?nq!D]nahm
%H6n6$"ZI=@&GQ;RC^Q(p"UWt/Mb5O/L-;(WQeHOa7?^g=AkG9Yc3(/4Kg?5n2)StaeN13ZRS:`<hFL]3h-HX1lX[W`NZH$eo8(?%
%6Y\T3_B<00>2qH:p;K.f3EC>9TVE4H?KD3I5,dsAgMLufMtk/Gr]pnm2kZQ$<5.sOpcOeRiQ3fZd,AoYp@[].<Gd^%C#[K&b-"9'
%IUHZleSmfBa'2.ko.*4`!!K_*K:qBicD-JK?(!-g_%8^11'2W["D5.k_)AQ8c,)4!2McR4aK%4YHEC[F_<`WgKQ@lDl4A(=5,Mtg
%.]BQ\IMYL<U3El5MaF1-j)dE*p!>GoE!-DC!6Ur]&/dpj<Tp\9IWso10%Wh:RP9;Hm3V8Y>Nu\Xh5d*rP#\fWc@;*NIFo`mW+,4;
%grBuRPjmBrOd(5V;LF7YPjj,*;%;=>F`b_DEi>tIKIGW>[]"IOabf#@6ofO$&An[s-dCGJq*%[B5#nW(bEuLFJPFd*O$jIhq4^28
%c.h-E,Z<TR:l^M@o5H234IE&\q#"[6&0`u2K@E!poY-mDpAk!jHVHB@]l/TU%[N23o-0'hVPUZ)eD5g_6%76`Z-'m8U73#7P;Z<R
%(S__P0.Q/NKq_RM6OfKZiX4;WA*HZ``Z1A")HK::1R@Nb-sg=*nX)@@duDNKaVo,46CTM/ma25ZrY+ge9;f\&[=jp%X0ES9PNK%2
%*6g)#>pYIYS&m_EJS!WJ;:Vu1)VW7JDOcFE#uR0+2UnmN9m&h83>do%1&Rmj4"glURnk5uf-L'-^Kj`jj?L1L6@A\F)t_?(=`0kl
%b=DT6]64n\%Kfae&=Xf``s=9g5-HuHk]/jmlOg"pQApMRraFG=#JC[&#i4Z-3LP_'Up="5[mV_1U7%h;2+#D$K/XPI*-:VdLL=MF
%A^W;`EkBVW7tT_T<t:toJV9QWA@30Hdo9bdUY:Gca"j+E22ZXU)IeoBCm]Bs28^Ocfa:1#W@.pcrPS#L$`iUt%*C+InUNl"Bi)e?
%K.G(siB?ggBB.BC=[aqpfd`5Q+pE4bi"T$@%[B(<BG>W7AYoKYK0E$%QeT@_EDj2m2KDs^c;OE=[m^;)1fK'LOuHOk!gJsMLm1&M
%X$B)l6WQk(-A%3g#AHN#L+b)NC6(+f9a8fb$-nPlY7C+>bg`Z_WcU;-G;`L1p!'1<%4F>9bA8Wo.81oPPA],!gR7*27k/dL`Econ
%<$H_66F7L%j&5CoFE8aK,XuW0/S@pg(0>I[.=Z>,G55a`dSIWXEehq_P,T"c63AOb3b<E;#agb#eq+Uq_a*b*V8B`P"NF..;S@"\
%iHgq(PEUn%c?Z.;_\3Z[bi0k.gXK-CO#o4"a_&esI>aU3+^n!j;3AbU[D$TG(hT>`2Pc2GOd68tq:7#_PXph+.MQ12'%okaMhTfk
%[l'_V(##3^U6b./AiAD;9)'Mi:])am9pC<&eic;"-UsZDFT@N5^mY>teHTSfQg!fJLE=lA#ZmUa,FTH,J&`*FLc!39Zufg0cl1c)
%;.?A$AN7hW7[;pl@atLHC^$Xos#+LDl*0\f>m>-PV4X-5AdCJVTn]14:Ch*.Cih:\<umbN\XU@!@hL:GBE$&lOPn6<]B<[A)Kt<p
%6DZ@!%kOTu*LR(_ZT)2Pk3&5$0.1#!!k*9l$>7>NfH%$^`(7LrL,U`0ReL@&rVX"<VblJ<@iLWcAc\2(]uPCMEPOuS_M)_0lk%n:
%-;?iJ=1:b]52S(e=2mee"V?oc:8L*p=1Rk)"R/*Ok0WU=%,H%K6oUfIr(WGd#ni<"'RGbG9"H*XX/k3NE]ihoOfDm]C<^d1:cp?Q
%=#kJ5&F9VJU:8%`1LgmsYEG)6.rg^&&sgG3`T'CN^Iq8/&^PL`7-??klR[5e.6i!!o4"6J*d8.^F4_6_<@[k^7^"9b6M_a>&!<03
%F<;t<3p)%hL?JjS&.]aqLn?O^AKERkKoC\qW;!J*.p>&6p.\:]2GAf$NGG@CEXMt0d9Y\qo1UZo6E>+];shiN7Z=pGG$e+G4]M_f
%"1'D/WLUFGfuSa@0aCN'gRq0f_RpG/cALLVs,XU^D[$pd%/55#8lY(P1rVFoR2l=:+o(V)[jIMXC/[DUi%05Z+PsmR4'*cIUq/`p
%NB0g7+[@dOA<_-P-u:0ND="9!`*p-=MkBRJA=&U3B+(TkkD2*B.Y5sll$KjG$0Fs#lb948=&1i(]R(3T9:IO6AIi65`0\;o7s)+I
%k8I1@s.kZ3d1aIN`1?Nj<B?gD1SY6<85N@&9Lro?5`#X1.#AjfOAS)<mf2*6Cqute3!:5E3QVU@"-IC<?2[$F-@9V6mR-`I@EMlM
%-mTIs@A4!3\5Tn]gnblP(+&M]'NY#?MFl5BKb5tJH_fV[Sr05!Vfl:-m$\_SL)AR=`^;qd4):l6CJ93!(b,"GXfU@s5*^b;*bGL`
%5a3MTD-t^AkF-<i'?3DUY"2kHN$R36A-To@,.3(1Imli-<-d-+UT21^g$J*&prB6Ogf8B-(hdqETh:GN*Z\r=,9A#Jbj1n^mO/EQ
%Eedal=.P(@:)K4TrPI6K@\V:>asL)4;Db*<fZ5m\kUGLg$I?_UL/4%u31(4:kLt0mjI,hDGVjURI3R-&1l`fL4WH>q_r1`U;2[\X
%1\#l^]c1)n2tSgAJT`F.=%pcBCKS1eU2?>\*mR+6dD<b_PD<(=nNdliJrjc2rXlP^$u]$u<b8s6=0=6DGpC(XLFc#ME5N+Q>DD3!
%$60VJF4H6dMSYfn,=293LAU2^amX<F+gqqX?Ul0/1atG)$bqmh!.ph=VW$HK#pP.#MjpL,W0nfWq5`OK0%*rCWJj3_\akj6MVNS*
%TPi=7hTc/Mh\^t@gJfbOYZ</mNE?%eXajpf#gQE^n(lT#3L+?@3&e%I(IgVG[>bd^@q_@@X>4*oDcY1(TeoBWnXCIDi=9'ocTVJ+
%I`J^QqK<;^[%p:c&24tur5#:Z9!+q?4M?$4+Msi0&%,Y@k.ab[Y0WR7VNM`&AKHat2W5SLHKE!Hn!G-Rd],=rV37/oMIN/#^0(%R
%b#)XS<-_Z3._BM%3j/0J=bB\iWpgT@h(DI(SsK%9AuSiI/3)--J;-73Gj**0Ebrc?fj[aZZ\um7EQ!lPU#.nnR_QkfCQEq5qb\+*
%8)9SVk?=^pVbCfD9,&i$$5%0!)T"7sm+[DXPuHfSd.b36M.^t$6:`01boIrN%9IZjQ=XjLgnfanIYXRqk[4WB1c8j9VDR&]T'DO`
%]3VFrNRSN6G:USI1F?^9[j]s8oO6E/>fa$^'.o)i>G3I(X*?,66X660AKMP,JuGQ*HkQ.SHNEfRTNq:0\^be)+:I1#8Jtk0K_WE@
%IZVPcgIa@a+]+_^6!1I:VNN;Ei*]j*dFf:c#HVTdNnY,oRa!9YilP8[`-Kgo&@KI$MlJTSHsrO#[N[VB:iC2+Q!";NQWSY`(pN&b
%pJ@+f[I;c#F@Ph$SH:F8gM3=tU%?H`A4gC'E(a6[ceCkk79.M8,ZDPc[O@?9d4/6;pu2=r"I^4c!]%T9ipI0tR1/LkF"q'jJ3.et
%]Wb(c;7\J0//)@V_;PF<'VOa,1'QAbYY;HM^OcL."JC*Q'ghr`/iT'uR;duAiWP@bBO2!aOeGp2A+lSaP=<">g,&tp'?Lqd09Ak)
%DfJ0#=a,Y,eoVCV[jqMTR!*[0-B]h+#fF&T)hZBBeDN4Pr"srXjq-;S%5=kQ;_O(1a:oMJJRlp,E$SB#b"!jYPe7ZoWU=M4.O`cp
%\[q>lCbfi?5lbST/RRumX?R(g.1.+EOqBs06+^qFJ,h^UQBgH_VA;9O\XTlN]Eb\H6Y4\H)W:d,5ie.LCg\7P!DquG$hutHBEC@/
%q<nqR2Fp%E-\*=;huc7f^f9`6b`ad*J0;Y)2(>/=k@K8I61ACo/u%TgRiqlc?i^3RJfr(8J9BL3!?fIo9`W!pA"A0V=mCmKb)@5N
%"G'DZ^d'MN;V7ab5S3"(1N4!:Q3'EmEf!KIHknF>iA:uX6$O\Nmou'o5CAH[bet*HqecNLKJ,97"P2khUC2Z]X-i5R,`)H/!@/L'
%*t,tiW<86tHKLT9J4P83\<$i5&fHf7@>G,P+O%lV'%EIXg.*R-5R]&,oM#WC!C#ZXf$iGj[(Jm[JU3F^PT\?<[J>R4pCTr(+EZgR
%i<U\7!_+<_0VSiIr+^mTUNC%>#QiO?J-Zdb(G]8l&"_D`7D&[h&7)pM6P']Z!^iVE?6b+G)F4O[!-4-_a:_4JI!QDk?l.MO$UTs+
%KAuR_5oq``dF]jt"KD>6rD26'!"#C[<WEFMZkG\+KVCpE5u\iK0raq^7,olGA=@k\&AUNtSkri$6ECBG+T-p<L*.l"0a,#2a!_?^
%'T!hr"ORpD."[8?.'@F0^n;tUMBH_nJ.b7`,f9K\f2!e\I[m&6GeNQ85maWlZL,X49RoPZ?oX`A['+$\L1\nb-,9m/4=_sKq#:Fj
%JG\,J(siC$__Ekj3'f$*iX)>hg5%*V96i2P8\m&O)8QV%kIa[A!%3U%i%aVSMCB37OI"dS-O?V?!")Vu&5OE5rs0tPc"n07Q6T6O
%ciaqG(srHt;8,S!8kGBa0W:$tUK;ms+Ndtl,'>t+aX=ci?imm*6qSmZ/-.0;LF8DGKZJ4_:]u8Wb]&4Jj=1I.&2CSC&k(U!LaBj`
%h$kJX6)q3bel^&q9jjO8*;;iX5oT<?IY:l/1kBI)`tH=oWcP1P5EQ)g!6,?*C:dD=8:j-3-'BAP$pkTFa[/5oHiu0V!@1Ks[QH$u
%HC[4U*ntG:iPN#t+MhI6=.+sZXTB,#]t$6FJ-:Es(Q\V`gS\%:!jt!5Nkeg]g-ff7-8e+B!@,[Ro6T#Y-"`GU7$.!e,XF'D2Fj%j
%['(=+#%LOZ.LfEKoasgsZ^s4UkgZ[I`#?2<St%iN#pQQ7YQT.FJ0g#/9I#p4=9)p!#_a@.JgUr(,:CISJ0c%EOB;Pt%`BHu3hC-L
%1bg72j`O7B&GE%"'-ikeWh>-.d4>lR?-"W.@j/YkW>,R`#^ATaaAn>c!#&Ha6<sdL6-cUJ"N/VDWrFod>m2O1K:ee>Yp(EWTJhK.
%AH4Tun*)^H0oGRf8:k6,5S=K<3_@$+oGEYmB&j4cTSdJ3r9mOX%XP`Y/M66fX8]Y(TEglD",J)tblK"*fL"Rc_<MV#OD6:H<F568
%jpmUY&`ej<bX[B/n<fgo[Zm"5?jN>:EV*K`5oc?^4D*CRc_dII^^u#5Y`=pRDpCu0'L`H:61S@K\[KtsW'"$L6d.q0UiS(65S>o\
%bGm1e#pMp>''g0CG_$,cTq4jfJbdC\";0]/#Xg@?b0YkeM<*#3p^ePL:q4OJ6uXpE^,OX,e(Ge='TF4:&?4W2J6s$=8;`kZ%NpA%
%-o"u8-km>5<#`qI&O[^n&Oqj+7PFmkORJGo('Jig'.9XBZ;><,XG"/g=N>[qce!k9M+dtTFsY?=kc_jO,E<o9HNDsP-O,SR2#2qP
%L^#BH&ZA8h`7QdJN1:@;Ce)M;I%*(f65GM&2TZ4LW/WsH'8jt=&h&?Vp4sp.<Qp)uZ:DQKEhE]TrAgSXj9^h\D`qb.^1[f<`@.f[
%("^F6SLa+6ho,>>KFi[t30VGV&-lhhM2",X#b^?hr?Rc=9nWuad'rA1Z31`gj\Yf:i*J!3)a'6KXYGb\!5Xbt`se*=$@a7OQ6Z>P
%&lG'WU-5%9f6.E@OoPR<.mcOg2$IrrEQ$TE4qOG8K'p.+F3?Uk,=1gMiBAQ@i8]htkQ,K>c^[f#5Yakq)Ae&?JDVE#*5D[=Y2<u'
%#I$a0G+k.e9b?p7%YUT8^]P_a!^$GiHe0Wi!.oc1B^4u,jU43_"^smm5](=mbnH\%8%S*AclY>N:=c<QMld><H>%=&72Q"-;3FdH
%V6IAE,&&h8M[:L[,OHn3LriHWRkb_!!XM,Q"Fsn,^I/WD4Cg\gfSu.@@`GSIW=)"RhX:J2J3e2Z>!f8m17JON4!T%<lU29e"/R:X
%Q@,WU=eGkK@.<g3A$,o8Y0*u;\TS$oKNT,K'1s,!m"Si`#]-*g'.iThbc+tQVY0%P(Q9IGNE!G%*=4dk5;CMuc(SNIC\ucj,7#?Q
%s0],6b"/18,B3k=+tfG'oUJp=>W;e+UfNp4;2lik#t,DV^a&o:r4+)u.?6KP-og@I0V]f>![:8mT`br4%4FMC#DfbdR>&OK-p^mZ
%aFPA7h[[1$G+'9L,d;m+[akKmJDq\Qi<4o5_F,&J8jci0h!uVDX9]]t:Ds66l-EIsC82Wa!%#FJ\EDj,"X`e35oJSSR.u7HFV%tI
%!NjR964'C-m>*(0@KDn,UWrtY&k%Oa`"HU@Ru!Ib-S,;NMXhsr"=Kcl&!U'sbZ.sn?fM/Y&=%YG8H=CY2^XXij!GD%i9>,(P$h^%
%_b`37MYC_1+rEmO,GGP7=>^0Wcqi[J[/?F3Re2$42V_Cl!f(lI5-%.`3)nT(Bng9NL`s&\$OYKfF+?R'n0JQE,OuC*</iTRB-4LF
%KN,3]6-XJ/5<[1ZUu52)LidmGCkS>q]XUCrNC_)^$fkY71nKTp@gF2,m&.-$),L6Ffn^b?h2%^liJ=/*E^ZqX]TEG@<K=">.qt$/
%,OgO0<ugf5oFPsr+WcB\&`G`NjbO2NWc1?1BnsP;(*Kq(c_+Ee,#pWIN7G1R7&XKH*.bT)dKp:Oe3sZ/Tl<DG=]IE_'\8W'6dRO7
%4:=ZL&0hN#'McY5;&tE;7`]#;Ef(7u&K>/;$?4#o=1+PH5"V!&(C%-TiJs,=&c'/7E!1na/KC+B9Th;Ro2t@h9e`.6Iu=3fO-dpJ
%i<`DunQXGcnY)%9<5^Nu?"cOQ6,-t_M)[dR<A:\s@p-u%]blp5,]m@j]eCTsF+e<Q#KknR(HtZ)G4r_bHg4`V$8kLS/ps&3=_h$p
%(Zj?2!0er[J&Bg(P*h"6I:(Af0!(!`Re#/ug;;1\Plq@6[o-;2a3/G</2g4]Sp#HIADqY]5dnudVN$i,13C6f`7h<E(*=eu^</sF
%]).a?N4SL]R,&BhV6,bj_IY,RTVQ"a_o!2W!iYDrWqI8W/;0aM7i;;ZWj)=c:+2&r4"!_eEZ9sG)t=L^d!qf<cTJ_ub>lE7W@@a'
%`s]kS3ueF)//jeD:bRn\cQa\Tc`_<8\K%oHPdm`Nr1&)*>aaN<Ejdsb"th<sa,sS\5.81R(Q!pgD,D%6GooYn/Qq8[8s2U\]<nsf
%1Sc3?#;).-RJ=6=`!FA;H+V4%IW-@j/Lqlq%;m&;PFIm1mA[Qsm![Ojgh:"4,<Q)t2*;BC1mP.PW,/PCYdPtW=jJ-0?iGM"N&aR1
%6P5*0A&-f?nC?cS30alDQ=u3C:)r49ecFju:Ymm16)PHEpdD*/G\i<EgiAj(bl,Hs=1ALQ)]53jHKcf@1<]"kG8R+Q&:V&j,j?)1
%-QOM(1hU^=4ILo%)j7X`&Xh6UJiFVgRM47KC0==m%O"_MTQgX_Z_pJGB&.Q^%%RWlGI1KcN1Dh*492_Q/=J%A_`q%EYSL@_D9J0)
%;cD1`>\&hKgLO;D;ssDtBM(=,g[Ji:FX5McBfsHsN0+-mWg7,$0D"#=b:'9obOA"e+9Q=,D.f08R2N!jbl-UiA88^rPgnNQ(!shA
%6H>t7)i.I;TU>O)D3ppB6/+gV-junApdWsiTaHF`6b(/9.WoC>#I@MA&3%/CEuEnTXO`fbT9s"9])]eZ\dgOX[ZK!uZ'\U2D0.[P
%lMNbb!/&>p)gIH,IhS]+aom0XLds+5h]6W:k]"ml3COg($E'<IH\!:[eD1,*c$3<']+"HDg.kQcm\Ys,bX3(_cuh6W)hN0;6u><C
%%G79%FW_<<lFJT,Bn0igE20q-hN1ZA(W=[CJi9L/A(-]?f3pOnr1AY=e='%^V(<O,?1'0k]*t_k9P9YV8\(EZ9[Z-ISke*L\l<hq
%'"/G,DA-b/[%0C"e95&<!dCHjk%l3kQ4kr#]6$_<fd2j6FS3.X(<R+L:=":^Yeq1rT,Sj5@8`C]atB7MY3\L%%D"/HCN3#f*Gj"p
%0pMjFBQW-O9U]07]9oE.?+21&R6#(!EdR9i51+Oi:8nu$A`a%G,F;?KAG.`V.%Dbd\)&A\Z@NNd>L@.Jidin4Gg\J/kM"lE*\$)?
%qRVmbD+[*M@>+ePkc)VqXSKRDg8elKiC+`kI+nsEbTiE`7]52n[2o\"am*1CBeM!@k@bc&/#1=c2N1W=EA>"9iA+C>Bh_IdTZB;i
%arF,PbK:,jpO]J!Z5c5SOaS0"&\Cp06)?/D_6YO<=.-0GDqU)Kd^(X6=(^%=RTGd7LlQ?5>"hV$RlWE[ZWbm`$Jql62'5Zt-#.>:
%8JQbo0C-8#7_dCnDTlAIf<LN/;3A8Z<2QB9A^7Zn,W=1\MWZL\\HpN[34dooBXjjG"@9k;hNR73O6,o'Ku;Rkm$.6H^+b)LP>\cC
%a$E=&pt;dTM'V\fUXm].DWu-fQg`=V?P?VXG]>mUqVkJJH=RA*EIAgN_mjVF<.B*hY>j%CU\!rs/)(VdVlBkW>]^>DU.!_R"7ONI
%K$fZ<MA7M:WE<XFP]JC$=LU\NZ<@i7!6@tP^cS@RB306m?>@J;=qi9`Z3k2e:M"%dE9>pP(:d?Xlk&n]NSZ.<lZ2'C?2]Y5Q".9P
%!AAVUU;ad)iDP9mU;:aNG%\^o'3u9rFG%!Q`mX?_T2X,9/@Dl[KAU1s.$hW1?\+12PbBb)1;%N<,SiasHGTXZ4k-lJYDf.n:<>E)
%74B#3iFG)/mMVm5bG%Ut:Ic*fEW"V[;0C6*NE7aDkd"[!4Vq33JS=g1'U%9B;$UmQ^P.Z!:J-n-s$bWoH5rC\lK)e\Uh+/Y8ec<>
%HDRT[iPdf^:!T4Xj"ilocB26;EZ*WU.l+V&GBdsLBjn(2<F)7e3=0h)NZ>JYDPhrK:!?"f@&Is]O8r7)=eD3]i`.IL\R=$cP`e3A
%Z8[YJO4*E[`FSrRH8+RWKR+IJ<(DKsEisP,9Eh$gGq&LoR3rENW*/7D-5BBjW%(25A<J8coXdB,/W(/HmOR[r.6`B-cZ"7W,t>I9
%Uj,<lbFm\mE-9>tqV>V84*clXfi`<GeF0ok>CMCm!UJUkM29co0l\Hg=fG2:1`%&ie9_7_#PC7lQ)^>gWcq:\A#\=?b>br2.@VNS
%PB](;3u3*A]4;t+pGgO(]$Fjr9?qTJ)79:^H%[1k_8n_t%ZdB.&+>(VHR-Lbr=a<7.//[F&g/8>m5RKW+)0G)P^=OBgJA+"4u>M[
%M<5<0T)#WhmZtn(E`gI)X?bu\.X0)(<N&b`mDrnV+(,.o.c53V.-in!62HrF%[Cpm(>GU%[l/4U0Bt?rL9I<*6\^QR4`eRdg*Y[;
%33"a!8*pe\b85/=Aj/V3]f+-.hE`qV=$l$O<A3"U[L-*$g-%Hcg3ita.WmE932XO@P<;9AqQ/:B`)&VZk_gjU^eL*Z>qX*`b!9K/
%_l**<d-q-Xs,]Ylrf`)_RFtK68:Ck$*,Lm%^,^.-qE7I^ADRCBV'Q7`X/QXVdkgTB;,gjaoe_;N;"2k(0GJm9W28D]H+al#,m>Cd
%p7^EhMs#i]0)J.bC!c@Kd\PiC01j%l3?G0ZR2;)ZlKT=TLm(T-dk_`OHI-6BM:aY:lt7c"eF0@J,',,>+/=KNAMRo4GFsBYTAD$(
%>o;KhBY4<EmlVd[6`(9G5\jDNB#%A'R<c0]Ou9P<089IG&79fK1p3iU=FHjHb0"\`&k-$,<fr@@YchJZ13aGXR=0/n-a+bWA+3$;
%<EB/Y%g%;.[+I>\8q,O4<0^2?=qletKnd++"]pROhT48H)[kZtkBeo=i)t\$-3B7-CeD+733?qDN>)m7=$pV+$jYlB@/baJ?46>U
%a.]?'lC?"^lP]rb:.rqYB]R4?!<)GLa7H$q=9_486DV4WH(aphT%pj?&BUhg>-)s5rEQ8<h!@B6WaFBb.K%s(-/fW'I'aQ3N"5&X
%>c&b58?kJP``(lT';D:_9]]BX8BM@``TNjV-,0-sZ&j>'Ja*G5Y0#t'a[VD5#aT"!CJ]*c6"'ssC`:qhRc25gLhpU=S7+grkFN;n
%$sG=XCR-!#"$L],F5,`/o]g!">-d[_0P^oW8:4YN@C75lp`NH,TlcM;G!SqG9>uhP7&?n,WT9gH'AkuDI.9L395b@,qY2Uqj&#u3
%_B6^Q3[MKWB.s0$,DB]?j$jgBk6b+C%8.?K)Y.n.4J;Nl'0-KDMj[%lEhf`i6'MH#l#o0Sk/j!%6#q<,jk-(tS%sRgS,UN?(q0nU
%<Q!*;b2YWu`5d3YM6hSC6fcFq!mt$m.AoMmPka5MdJ7#.PH3VgMBdoFmD9B'&o`:n<TjS"P5-B]FF)gsf0r)[GH&:fYIj]d8*2rh
%-5!t[-bg1ok]dbfbb(gD?_;TATM)T6JqmF/b5'>[8%oYM%XJfjjfD<\NhdHnoEu%:cVrB?)??<ol&(8%D5N-:I4/,5>2H=Lb'V++
%L=]k8!P_^BbSo-LI;o4Mfr^sH\%HZaKM%B=--LfK47+JZL<X4:2GcB"EFWn]n90Rl32$m"'fW#FGtNH=(i'aeYTU&L$!SPe`\I`<
%C(qJKmnlrr/>E/4>e3N(TDmfV7r0nQ2ApUsU&p54g!"bF:t7^nVTRVKoL3*rW6]8m.WeHGW'TApS^[0X3"ZpqaMmG4GKCB%q>bcn
%Uap(hLW\.\!^Wp@?tRD9ld2\A<_-uuqYW'AAPd=dr9'>\1!2I]U;[FTOW't@U:<83I3E65+%Q;uD#Q$8/oq>4#\R0!/5NI7UU<GY
%j6"I&&XCB*+:>FEI3A`'=CD?Nd+=?d;/RU\D9]T*2s72V'V;.mNlfKPY&TS6D\W-]fP+Ttn/K="%X)?HmND@:i0#XF)fB-9R0miT
%;R?O)%YK`2+fgW$o(/bV1acO997]IND^^Lq:T'[7*?Hgj)cNKqn6d:.a=?p(G1<5pA&Xj)bnRA:0JG:*$`br?Bm2_=oLm,?8)IXM
%=%3eu!5jOiODlIkGt]e[5"<=m[T*NrTJ3*Z;;K'OQPJUHZGM2i5VeaDR&];Ec!tl&r06QYUNCnnXdQ<F_G8*8f'p&AKPm$9pM.cb
%_R<Eh#dYPjq]Rb!8c73)Wc9oXppGFR)s\Q<6C8K1<UCI1nPGB*lB_5E>[-us!]dn'c8n1\Y4?*Oh\"n)C+(KBmUc0I3bqHESd`UE
%0ro<_KfbR4$9j9$]?)$.4qPBE0UnlcUVnc<.pIK>oeKD;1F4:bgI503XO]5_@fURIae9!f97tsmc.Zu$dK3ol&ThKD.O]J8d`^XU
%<ha0-)jGd!>qhTk;ZYK=]usN(.<)W79sHs\P%fMW1W)Phd>]LlgI14>q3@`NmY,ukh&2klJ(`cN#Y-r7]l!8d:QP%J@)mQp<=45f
%.S3lm5#h65ne.Ea3G31B]([Lp/tB10n/t".Fa/UQMQ/0.B60Tj^55$h[@kfff[Wc/>_`U<NCX@_LfLVT-$p-@NegH-\aYeTRO]p)
%*ItPom7()4L`ND9"7muII:"Rup2rBpo&=;K<V^[_!d.MCPN5&?8f+DTD4dc\*5-\19A3ODM,g%+^n(.r4*DuD5c_+o'Zs0jWRAt"
%bTqQ".\na;.$J)KKACJ;"#gtIDCQ6pHHDQAQ0d\b\f+Xkp"c3X>8A_GqkYa]njJ@AYU/S3P10>Z>=Tg?N4-<8LY]MHe=A2'h70aa
%%ICHi!'CfqlCS4^<hU/UXiQAd$UV.$EL+*og)YkB3S22H),jjd7,G6Z"PnqPI=SW)Oh8*!?5)ugcf>@SGXB^fs5L='HsU8G`9,V5
%A(QY&R(d2L5]V1u$*RmO%/A`gD1"/2:c(SS3u<NO3OcN,CeG=N^uM^Hb#Wc-\Nh.-GNG*>)OoZaZ"D9Z:nfa*qh<ao'XmgN%,%[g
%8=()UK5tj5ZenAoK?SR+5Le9?4Onn:;28gC3kP5Nqn,GQK^n"J)q)-Q0M3hpG2XR?BfS7pe$8b,Hp6N!S$E,8NL)o)K,G/in^mq&
%]'W5F@ABd9?QZjT8t=Wms)K@&r6'dZokr5cM(`r[1icskJ1@`YI0\.976MsD+i.>^CNQnEKW@p\6CQ!V_<UeX9<qkag;ZpRX+f=1
%^(JALg45perl'E%$],m)#Uo',UZRBuPj)ZBc&+:KF9AM7nOcJQ-hq_k!VR9RD#8amne1]%:C'CI(>2d-YZ8h=.^<95l'Xse/)Bol
%>,nSc/0=7R^U\?qCGd2labp\*C^-8-):#\n5Tn7l*DH*;_-6e<:nAH/e"XLIOq\UVIGF#bC.pi##Ze=.cAmNCak%i$A'-1<W#pNC
%eM%5<CbJ^aN_SEW>]&.f12im2ACrtjen>[*lIp4m6BH+S0QR^q"?Hoq->_*-@*-:&`*\BW]J#,hi'b*"3.+4+@XiAS)P`Wd$(T\&
%6E-AE;,^nL*I35bIb9#+%LY>AKp,.G7Q@8elE(.6J*?YiO!+,S6!M>lm<sqB&]20V(4@nMjX?'uQu"96Y4:%42F@UCDF^%tZ8\$u
%&9)Y%k\ul@`(2b4HeGYIRQCX"/.$uh<+uq#j&cg1..OaAjcJ[rN\NcpY_s$0"f2;ejim&4$tNN$832^$aikge>utN"Cn\<o$1c@*
%VP2@X5$@!ao'J`r*gI)HqL$AVLh[\snGtcJ2J7Yfo@0Ld8e?uq%X3ZTb0G%Io>,X9K.!1#o$6K2hkE*H!lYOg\!TPECagn8>W1/>
%==3Kh>(Df=rG7(t+?I]c2HC3Uors"ib"`ht7/VO;f0FlE5*LP/ARQp4+6GO8>7)D%AS$iDgfT@g`>boh'I]8R=#SX/=E#1t.CS.7
%a'+gS^-/:YXPL4M0YtO7[IlPI5@2QfA\>6g[tEc>ZI8i-$$M<@3>/L]4JH*Ud[7DZFLhK6;Z)@AGkml;>MTEJUiO0Q;,r`Xae6m.
%Fs34h.)a%V;)Y:'7%u(EVmRrL6;??V<&//mCER6C.[\>rjN?'+jonZa7VE11ka&o8Li.pSjN?bT\Gci<f]kH-"]akrdM/4e.iG>V
%pfVd\P4d;-&#pcALD<o,<kBm&)DrY'L$4qFd-HJ1\72O(#)Y4kdA!)dZLT0s2tIur6A)R#(?WEfRE^[R@"6#u2YIJ+4)=#g<OlWR
%dlH0_:+qF?ZaqZ)N"4aR1E0Rg"c9<QRVfBg*4'Sfm[NAj0OuZ<i<5k.:PN*XHam^2Soq%;+1^QOVC;sH[%&fNo9@k0aFgQB<]7OR
%DYZO2,TA6u)@oj^&tA?[2Z!NVluSQ?D<AjVf#*?@brg-8DP\35\&uQD=>Z!>7!#+;Ld0Zr=oK';-jP^PI$#Pm%GiQrd=ETk3NA0n
%'6+PbWg;_1V<.21pY\ea%UnK?&N8$HMNOBI.`W-5:g8/o-t^,^iO:9/ZI<U;O=?0KKk[6%(Gj$IYdomHpH)#cFOOXU`efef<11YP
%<4@-VoaF"qCc,C-5<Mbq:W-8Y[s9(SIeIl"jJU0rOgM-k>k+"(\7,%U<TS1/Z`m+S:X0d]!OI=ZDj+T$]P'=T]H'1PgqW3U%tSfl
%m^mUCBaHX8=:Y#gSqpijPCb%.&O<ueWM5V;+0f%ti7k:$0[^-A^*9nlXANjaY9GY/d_U?mKiKopEGT/-PG4qV-u?'grXG\YD&ZNZ
%IgL^2'-u3aQ(_-E5M%4_+Y1`Z)TDSoGh[)I:UhM>^q^1:":N<Xn,qWt^?]Q-[?0FEB*+\m/O9%_."2H#22W*>&5AO`:g>l;'GeH#
%-#*^*)IVs"2a8[S]n5UXY'$DL#g6d@(8'WBUl"4K(>cAb6ik=.UC6]P.Z-Pe64^Uc[h-RbVICSGC^pN@A!e'eU%!;-+1=eF?u)&f
%gu:G4gcmOTeg,"qJD'h85M8H[>>XOf!]GoOm&bQ"&N<9]8/:OaPsYAZ?9Qk1%-XG+KUhF880*af9fs/Z5f5$qR_tk7Z`5<IKXjCm
%nihZt+];b::+bg$k]pfVP]\ha!69b`;rCHWM5mpde^;4Ocp4BXrdN!ZD&+t>"@7$?EFl9o`0XtS7Bmf^WAH8,(X@D-:kfbjc#)7p
%5r=j^pQ<=D\i@gT"<O`<N1/fZI'sor2D`f,H.%SM";H1$E2/)Q.LKX)I#C[i@ZL-Q]a`Gm'\Ce\FXK6/W3n2U1%DKq(@PI_iu$Fn
%A2()<.A"Mj.)80UjUJ&pZ.7hI<[NSTlo5+(Q00)SMp?n;K3['</.?;j+=]WQ2F(JIf`:B)"cAoc%L-6^+8C&;qfI4Vk[D7c3iFP[
%gdM^G6'*q1M;"pp>g[6I$5"&@)3<[>3BZpVH6.*0[>0IB0,-Nc;7E($8'dC-E'cfH41cpQ<i?1+A+fk:mQn<7X.MqZY8XaQ6Fo)$
%UoIACRD>:?P?H?r:(-?-KPr_-.,;X4Y"H7!Ed'3qgmk[#QWZEZ^Q`bZT;QL"]C&T^cA;d2(LSh2haKOBPJcC#W^Bt/4AWoaNN3M[
%n4gEsErl'U"n]YW#;bG%.PYg'1%6:f1BX8TRtn9?jEjtJO(]XUCNB@%4eTL)mRZGI&^=Ne9-;-Xl0L:TPp"Ni#r6rlCW"OfeL\,S
%>P#Q3drtF*?D`HSdjCAkO/7]$Id_7k4kSk(G62$gZWIlF`%ESQDo@Y)KgTI>^g%_I_do4pnW2"En;EY>((cr5S:'YGmoA#?"IZ81
%(mMrQ)LF&J[02:/QbWuu[mS2]qQX,Er6A)</5>8(FRUJQ@4-9:]_?RA$B'[4P#t5T6#)0_KqHneoZAQ8>F*PeO^eVLN(Em,F'm.Z
%BY.#`N%#T:W7]<l[C#37.)Qp\boGmq%)g`&VNi*V/]r+[^6LAkNUH=j%FRsu=<.C,>']T7`K-Y4#;*Lqd\t,6QX'g%A-Y<?PrF%A
%%c>?kkW_9*iLH"/8=s$Z.nn!ZU'hX^WAn!V0Eah4R-M#to73=NhGk$"Bp;V1<]`$<Jj<bM`Q9j/&?c<GKfT+=TWhj/;\=#r%&p#a
%A0?+hXh(^PSorN_7:&i'"6*Lmq$Rk(nl9,3O(0^jPoH=sTA%+VF05Wmcb.&]V!6?q?\"9T]`NQ4%0O2U)JTl\\TgofI$44ckF9cb
%4DIU0V%:m^(VZ47/X-'WD/lTeaUeuD=52it@_Mj6,+0$llQl'UJn.2VR<<m_BpjT_rlK;@C?atQnjfOSC#a2_=U8&YLJ%*.V+pUQ
%&^l3m(rsGm[uJ&ElkBuPWE@1r.<%<s-42s\e8CX-o6Sas30Y:_RE5]KV?K4dk,71Jm[0!R9M[WP<SfPN?\<#(2MK`!,o]Rs5uFWR
%H"3Q>r4n/f*iK`&:qOq,_P\jZmk,"&R[Chn#:2A$Cf?`K^f2t(:7iV:LJ+]?-i9TJ=m-+,](d.mAigsA%cpDgB(%\fc`qi'B4;_;
%.WC-I;#'aea=a67\Qd2Dc!'4dGf4*4Z;Y)HGB6kg@CFI7LRZ/8.&5hNnRifQ--2@.`PcC2c"RZBg6j>in#rW0m#7\YAS2=jSZ'L!
%)XlF[f6BJ+]%h&!iqZte"g1u=N#c5e0N`WbLj^>8Rio;u08JDsgFgE_kFJ0u]khI`Q.RNH_?H"$Cb3*B6g"]jR%UCG/j^4`0dt$q
%*t3j4-TI"F+H.52-T'q$]cT5Q[K&g_Mc%it@r_Z&Tps\YONXs(YUJoghPl@pN>8h*ekq,7%5Z7LgmJ7+DmPB_Tr5=KRrA^N+YMf+
%LAfos.'D^VLu]fKEbRJYM`g=t1#G%>SZTpX&<>Kf0Vqn>U=j!!$LA00\;d\tS=rW`^^auOF4L(ub).o?2<$M\-tZ)6Ge<GqpcJk8
%#i?jjj7nVe4k\JkNr+>qmIGJCqj)k9E=W/$iARpK-`!<tr3@Bk4na`>Hf8?RDL_=p5oT/\OWUe2?c$rF9e'[E=ej]p7TmVA$@t\s
%elpkD=CJ"R;LishTHpCl%M1Y'Y6G,`3Me<K7Lb]^8t`m<Kbe=qj]'LoM$\=JUh*uD$s_dBJ.:?p]u!al2R`o+*k$Kl4lJED5Et?8
%UWlDm0mKsK8j+IHIbI)9A]Olcc=l(+qla/q"`T2T[:n@gARhcd@9&uZ@d#>9'B)s,^2d(O]JA!6LlB:NL!+/9G<p>tbnJ6D*iFWV
%$CYU#CfFm%7,Lt5LFHdgiAhs">1M;=@h3?O*.YZ'd^`$Cl%=*JnD^H/72qHgnM5mqChtA)"6(@kHb->>?a<9WWiG^kip?&X,tW8j
%6%+:_%k[4P0Sg86#S6_nZ(r+XVo;*(\&<!Rs8>#KRMhN]Fn[I'GCZ[QSJ`=(iD.fm1ZP#@&eBAdh9&1T$,8E"CF(;[N$1ZdW$[11
%PS4,OG>T.X(J954jLO)"r$u,-+6G0a->S0;-LXTaLYtnL.Tl3Yh0k7\$Y'gV3#P.cYc(;Git;.a/7uhF/kH81H%kei24gdk1`jN!
%>Lh\pQlYXhMA=:gNCQ</aMJOKKu&RZNu:1#X<,c;(h%T8<;lD#VHVTfa0OWr?85IN!&a0%/Y6\p^`9crhbr)K&)lti7bX@Cl?Z8T
%CHSt#(l=*c7'Zj;;&P+*=7^]4)r=0/O79pB`T<B7eUr"%R5Z"1W`;!BK&,k(DRj,"2T_;bq8W4Z`&S=%$L0mQ$HO$ECN5*Xi/bO+
%KJ%n-M)sH>>q7LlnOR$O/DrZ,#/s9]5KAqmp.3LoDT`-o@QUHO8'Z?q7(T@qEmTZ'l,6qOOrN#m/1m]&#?p;%@?J6V`m"jso3,"s
%O:Gd!F2s`nA"Scn<U##Yih:b$9<GkIg=/anbbO%)ZVi#Kage1<XDZhR(;`c.e@<'U;pU16?hqZGs8+'Litf(>Vfoqe#r-0d`c4Wq
%>ud_PR-\9N$p/R4XJ6cI)p.&EANbAfI&uTn)fK7<[>:LeNF*XI+gZ[K5e-BhAt5&EV&H_s:.L@*FaBrT4@WH0j1XA^F!ol-]oD:-
%l/+r3nO\03->6(aL*0;OKTMiHOYRJM/m0g%-9H+5Q*JB_jDhGef1&@K(+dqk4I2$i4/qV&EUF[di+/`:"\(9'j9NAZ9);.-$A5TJ
%G>^NBm5F-$?=8G7:TDkYDDP5=8m^Fi#eJ/G_RPu.g4u0I?k1i`-]q<7on\jLZmEg_an),bq5f%NZJ"(H&c&$TPG3t[C"HZHlY33!
%Z^Plh:W7a[+1^^]H:uFR4^YEEdn35((\Tb<3b6(epE!bN-'X#oFq,Ye"!a&%?&BKW'iLilRM`!&k=_`L)"nFqEm&lhZ,6i&U+n:<
%!45'<"dUJ"GLnl0QmF06I+ZQJU^,;-@gUtg_K:0&5Z$".@E^L5f13+fd].,ns4iS&Ke`&h`BY-td`J[RMCjW3biIKoX:202FYDkO
%QFf;=g?61I2BSul6h@S87P[J3Nf1)(ROtrU/+9Yo50`cWjU5DO4Bs#[8#df(jMbThBhGb;@+9U"G;V=YBh3t"5+FsGZ`9=\jCoK%
%_69adfL[4]7mtA'WgN;Q_a]-TBpiE&_jF[#BH0s6hP]3C34u7lCJlf\j9Z&l*at<@C_e)[#"IM72sS1+jUMFEM+T/]_F^u(8S`>F
%/4C?b+pYjfP*I5W#7d<0._Zho_h0pkSub0o$OK!_"Q_S3#bPT6:Ni2(4ZDI@:GUKK$%"Yh,RL+c?d6n5/I@%q6'rpb]purKdU/_j
%Z6F:X_&f-Eh2:r>hP!%B#SMEM].&r$^'?Aehk*Np`lUhG*9Du2_&5$E9`3Dbg!&qS'.<4+h>e)+OVIBFAp]aLGgt%&b`h*nKIF)s
%OHX+bKk-KZ/[=(!Su:*$n3/X$*t)"V#R)6U]T[EL?`EiXNuGmmR>/8P&PcqQ2=g@"C15T"5e8A>J_?4)+/ob6(lY7PDEH1#C7sT"
%)Va`#<YC)nJRse2j@]MK)q?oEc6Gn.XmZ.UDY*3Ackp:\*a[W_qnD$'#c'6Br%/>.Ub:pD$<3BhK]Futk^,O3ZA-1X9s.Eh4UGsn
%8hUoWDcLC&_imE9A?D0G44tl1d('\+A=]@#A?iU#d1$qc.6;$+r/oIm(m=!BG0EXoA6T-0S#2!SO[r3P##WjT)Xia/&6$ur)a#df
%31(lB96!u<lkIjXQpn`\>'lE1W"M?Nb&'tNp4<<RO[!2$V;e=3i*H72R7,8M4Obk5Q-QQ6ijg.r-c'$04HalrphKeoZ]$X`5B@&b
%bBX"6HZ)>q'Ut_ZLIVOD]:*6;0bTTJ?Uo@21Vk^5ntEa+LEeKujSZmk$hG63[hnP!.a<Y?(^;+KFBBsn?_^Qo7Q3kiohH#/XW%63
%mTrt?ZgY0+_&C6_bjN&QE<lcb8GG-41]#`k_B;gsW@EGekT8::/imdN6CF;/LXertN*-:1&Kmq@;@`+SM"J*QpfM#_1A`U:!XZ6u
%;BKXC\[d76D-$Mjk)8l@iU*TVP'k<0h*h7!h\,_FdTb!Ep'L\9I-P7^:68iqm/t%aDuCB]Gr-l'.3Ja(3g!n/dptu=k-)8Wjn:JD
%;eTdsff\CC5,?-02TqSgXF!&,QLP6ndmhFm,,I<j:L6,(;_%,p]K.roqY3/@.l/p7OHErYar,&YGE#JLX,&?_?uO>R^ka6@G4T(U
%HYOFn1l01q<-J,rfuQ.n&gm8:<X4ZP.TIRK$L4lIT]g*Kq4KLoAdKBLE4&OAcFM2pl"3'rab=XK'N@D?40&7L2-0q'M9V+gSt*j9
%Ie2?b%YT%'plj07[Q_qNc)($9-uE5u3DnrNYWi1fZGuWC3Z:l6NPAt[bu<QmbIp"Mc6a<44WhZqM^OdO_8<<`qNoWg-p&hnjIWoS
%$E)A.XE&,E'mG#L)W=u0O]eM%O,[P@4&ks@2J0JfgO\UgZEiJST[>,^2mJKQ%X71?C0auKbEr=Vc5J>DQfFfsDR%8FM!SCMrO028
%Xt#Wu*O)6;f$l_=B(P&+85PMiIs72dUAbc%(R9P.j?(m*?IoqZnYCrEJ]E'M9c>gZ'as7^i8oYsT9!)2S%7hJ4tPPkDQJb05Kn%^
%VLS.a1QKhMck!,(o&%"?ZUgm8#UCDUlt(Y;pRS?G`EJ(Fd(FT7@D237h`\1:h'FmDT#P4X=F9cG_#%_3Q&H!Lj618UJ@U%Q8cn^/
%ZSorKl(@m8&%Em@$aP+*5iV6[&Nk!:5tU]W@mq`8:1"N`:Bmd[@b1D.:qZS:/H5Lj"*5Nd.>L-@QFIbVeK0G%:CMg*a*e5PE#G'M
%AbMV.<>BW[-NE/I\27p5;!5u?n9ZGCjR9a@N7A+'_&R'?HF)02]otPjh8;tPc\o<sRu.35Bpqg=J,f@mn=0t:1-=%;Q3P@gk[u`p
%U/!FXK:*E\=4EcUq'1%$n2]_saH1%3q'+c($2?($?,]K&\ig]K%guZ&G@g8tNJBaY>\$J?=o22UbH.bHTO']7o'o[d^Nn7tK`06s
%OXX+D[r>T>KmS/8!*tqQ=K0dag!qcD7%ZjW<n6)$DBO!?`]27%q"nbJ0O_\5OteXlR7L=AgU+ngWbX3ja7h24K^Saq<BXePiL`:T
%m-?S@qh(^+s,m%OB?Z/-ofe`_a`p:(V#B\NCOLoR=3*MY-cCAIf*LQm"A+Qbp<J:o-9UHC=1dQ06%5?Nrl4W%6TH2s-SU_/Me4:?
%&f>[nFV>QaP:7`:>9M1L)@rI(nmr!G@."(g:'gWu*+GasII7#f6-0XUe-d8._Q041DL<e1RKDU2_01[qm7]@)/8S_lfPW!"LM(Xk
%16tSFgFfL+IS*<"hU!9QA8!^tE]uUO\H"NG$BF,3FPambUU6c$R0_%3;!*QG$t`e?<RS<)ZAAodcp9fTK(@eg,o>,*Ic_>7)'^"'
%@o"L#E'[@qhPhiRM0(Y*k936YUmP:.8$dr`X7oW$PLD2(abr^!&]a9#+oYW\hUF_qk:S<d:%db1aqc=h)kArHlGMk.pm';?)3cLK
%5CVN#-s1E)aOm?A\5>b<lpC8L:2g[K?3`KBA`Icd6T:qSK.4pKdk%?5H>sa@'^%NQ6Zkrd8UX"0h5j$)/rg4_,:4L4Ia1S8MJ>D2
%E)*,I)Pi`?(?t9?M%q"C,pEJm6VSj=/!"4$<:@[?'6pWg'>D!+A_#d`CF^0AVUh(pWjVuK\Z"du/[*d)N_PZ1>B_qfo=<mYCO)oB
%qpnPc,7q9q-)3tU!+7XI@[4(NNT;lALZ1IO')ZRDX?[7Dd*A7nIge^Sq*sQ',+;g9-?Z1h>AK0<OnYVSg3"2kGH%#"7G41WHG3qd
%"G26F><s&9[E4N1iM@"t8S3prj(LGsfsU[8"UoAZ34[10@oZVXGP_*&5c)+d@Nc/WWmrO5"S3JiHZ"F^)UZMnY>`M6?i"e#c]K;_
%$i,g$M&Wu)(:_jUq\s62ge=Z>>tj,<Q1`QU:Tjfhb(e?"8KE?@;Vk3)0L9A,OpSQeIHi+Uq:,qg?4@;C442!/)P2USN4Y+g@i'!+
%mK?9)Vb2"%CG8@k'.bpj0h;?J\R66taar:o7\3"Q37cbcU,40@m#op_Bslns_ec7k9_ZZs67PQF.UHj'"%o_JFNbp,+A:mF$HsQ"
%=u%_VX_+_+#q.sbapABYpeWT8n(UNefLMSF&:aJ%c-']H8)+*l50Q]]OEJ+cbKo-YV25bY74tB.^RGr8<Fl']ig,dbT^\@2"X$,M
%_\(([!QFKhMMsdh:5F(N=FE+;jf)-t?Nbi8A>0Y0K9;[>jO^:FMKG!bT%HU<&W:So$/94%7]_,FKKBQZGlP<3-%GG+Z"5JA734H)
%d56@7(`=!Jk#MO=&(0&ITu>"3VSdSj87"eOJmrn,G:KHjcC[[#Ogj=s!mk7Q6,;kdlA@=^q:t6B[T,&G;"\LA[&)MMq%\gc0"%6f
%^!5MCZ@@orMjaMU>cZ4jILbaeo<o'Sa&l@hT#'!;P\tjO5S.Q9Ic:t'_<l36aY%1'HAm<LUSPlB`RL<Zm$1O=a2YDR1lW]L2>2-8
%lXZ.d,8opK_\`#A>2$6Ghn\?kp7SJq(\B8doXf?sJ(/X?*Rj"3gL)B%Im4PWC5mW&<9F0[1GT(@jK[NMA*@dHP=SC<gW-2-R&"N8
%"_8Tq$/N<dZ*m1&R;]nNcLTbq/[b13Fi;Xe]P\Nma-i-_.=kEG&IIe)@jN-,AJM]cLq28c$J^m`4r*IGP/r4ErqalGD!;<,X>n#J
%VdOZq"t.q?`[MLQK-qCtDX:<k3rkuB=/fVYXCL$\Sd;!iR8D8Npa'HS:\"Z600BH&'//6i^!E=c]D6ra'ZA08MF;VLX:LMB8:r+u
%%jRh3fl2".O`@V&N(K'm"WUB-;*4;:-7-?UgeR+\i-5iadkc[mG"MhqDou@mF5K!2W+?\rIP2m%50:j?IJr;JHP5>uZ$teBcFOUA
%rF6F1@O)DA7^r_FgS*P]>RJu\(;H38WC,YV'IejAOb&4l8YuO([g:$^0nBCQS`fF\m`%u*\4,m=*#0tX#EN?k=gAeu"o)2okI)fM
%p[CpXnG;Mk="<3qdaQ/;^op/+d\W&@L?r'3e=4CKEQ^:Oo=^ba8qm@KjE?SW>htZ1i%Z=1+6WJ<CgTcX.E&Dfd6",EYt5CNGKZkM
%_+[`8amr4S&o6FP=7g]G-kXIQbF6SFSTh'EbH?3Z?CP!i8LVkQ<GIJs;rD4u9+5FSp.@ni/9pl\AA0$.Jc3Le1$(,*IKPG[E)Tm/
%^thcn@#T/`rET:H@9aH&2p#Y?SmhIIQA+$+;el2P?IB#/ge.Ga,<S$7O2Ud[Nl,QXVkHSiP4?LZm8odq])+;"H1f*<g;CQ-9^[/T
%/a$[n=H./?NWm[L5:2;U3a9Bj`8Ct#bY1jGF*.ai$>f'_FO*(+=L"+m5p\/pF,s3_6^fg"hDV+WNY]*!Eq-i<K[S>PN/,YUR=:4P
%@Q&I95%%i4AI.5-L1>[7RepM34:B&/9_(OE/N%Q@9OMB%pN]r_fBE5f2X--n4?Q5tY`Ikjm3@mq^Ii3)Neb^3V_,L$fIbVO[1k,,
%2#CaID;=J8Ke(+TMNKk4?<>fWeFMa!%7P95N:X4BRM9su:0&'rR`_pU=LW.ToBh=(A@3!B3gju_'J%`'`ppal2)f[%;O^:GmD@<i
%`]qucM=QWAFSR:q3Gn>dVb1!C<SdYW2DjPM2gjneB(29h3R6ni0&]aH=O2uPe$>-drU.MT;GJ+]0&\7p]+mI,fN.Ju[%p?>"ro>&
%r@-]>i1oPEV?HV*^>p8n>;c9(BX.LraFc#M:CCX#ioYUX`r`7g-Dlr6VU8Sa'-h%r>:FLs?r[i2#&+rt"_<Pq4#;[l#.Gj?6Ur9e
%:Nqbb/./BiGmR'HK?u&=GZlK=&tTpH>`-&DT<Bp"3Qgf+]a/l"[:N-\iYl6gimb,AcD?`hMg?a&OOQA4,fZ@EX<DIZPO:h>ip+[W
%:aT<kgPGq,H!XH3mmhc>e<em_-';HeXH%]j6ZE*!Zu[>+r/p6XO%7VQjCLSLF1t7imdlai'U/-0l33"Q4iL05MOjXTQU5L.Fd>YO
%-.j[%5uH>:j>a",PC!2bX*a2uXuMOV+lbgsSO5e0Bm&D\3grkm0M="Hq>D%qbR=[]!C_g.g7$6D?'"P@(?rK.q'D"qPch=t2s9m_
%/cEm.2MBF-I88;eZM_a(\<`M_jd2+5"]7QtGS%@j#Da+V>Dea3$Dj:Gb]tf*r$:M@]p555gu_h^RAS)O$f3*DqL(u^LhNr<Vd*Tn
%EF([o&CZBVGX1%t[P*2M],'Q]3+,?uhBg>ZdsD8o]ub3tZ[8V.!FCe8eKUMB9.`kjZY#h$UmibR.<+.Q/lDb@pSIG[^;L#pOID5s
%9!:f4m*a`QSJAR-VBcL?QG987>1/mJWh*LgF5J66.g;VpH^'&'m0I3i?'Y'E^2[^d&ab_U@8l#f:FYphcWYtC7I"demo&!6&/1Jt
%b(:uS[jt)l?#OdUMG+>2V)Bku<3.BPQc1kT:%_?6?QX!>8S[kMWtr\tle*!pZOF3S#>Ji7l]''ZZelhK-fc[T+:^cEXtno:Z1kN-
%IXN?/LFcdGfN`0EXp6=4V.PeBO%io$.B+M2c)!<Z'#8ihBa^4NhS(9;_pY"NY!,L%RJZ\,Xbi=-b?!&[O!S;2(j0JFk#GJ=\#3dp
%D60->HeTON@h<75&e"c2*!`i'Vb'Be2,3(:?c4c'1Kmm\jSYS`c]!9k0ic`A1b\#FM"&'%,*e>Rc$5KsgT@6L6o6&Y1ADXTG^&;*
%RXf"0UttsXIjVp$""]bqPPTaHgtn"G\mhNF?@>B-F'llgofF3e[EQ2f8UL,'`T"KYp/)nUR*A6kZB8E@o=eSV^b'8BWFXl7Q:<Eo
%Yh`&<!Vql[V`_X9o+K6J$Y5up4J+ZAJ1-\S&UJo%mZ]g\C%!7-d*kN)o5.'J;>ZV[m)#.IX!p;def.#6q*gJ9N,YqX@d`m(P/Pl-
%'#Z'+YNoVs@<9P!IUE%g;'SK!.%k?-bfQ2d.85lt/VPW[IojLG.Tt6:1^6H*Qr36s&]#Fte$;QI!f0r)Y"Yd"1aNpQ*4$Bq-k9Y>
%2aZukcRsZ,,!YX2PJ39MXJ@K][GB.:QKCdFJqYk/Y9G>U@\,)AL0aKC;Wi@a?E24ac-'>N\l-40&$"UZfeb$_P*_]c/pO?qA%bMN
%jdOt91,?JoV.@`NFidaaUb9DfgFQ@JYPogS?%,#Vd=a.0QS_c)`,>!4=[V1jk)-Lf-)r[KiKjQek`TRcUQGV@ein:-E!0:sTl<$9
%lB&fX.ZmH_nka]`Gt[%ae1J(VR^T$u.akaf1/*1[[X<QoaVTE@2/5?ZfTLqhkuqQP8CJ1ge/(9klf*]AYmfRadD[Z!LP^>1Zn,'c
%^\0T8bM:BDZK-qLOCb/jRYiC`G)Q3]OTsA`llqba%n@K+USCUV=ItE`P6?=C&YUfSc3UA66&/)$;Qo_<[u"/rG4&<Me@WIe=5ohR
%&S7qk(HgnYM(UATPH?s>jB(NiWFm^&b)b`0a+#_h@jG1PW0*f"3M&SE$OuI(5W6$mB9Q*PH4ksJGm&oS9`_Q>-kW^*=^#PnX@Isp
%92mP:\<96+^6H#V.TA%o0r.(r\g9.(h2b"GB)RU/If$h7_CFgOD?6r.BNn+uSJ%iJW;e>ab3'J(MqXDVj>WMajYOI127&XrI6<?K
%f=NTq6cPWq.3J6VPq(nM)bm)^r0S3,Z^usrie,3sO`ZgRg")/J#\E'N4G]c.;^m=!mpcY6?`K@f\<XV!n-(F4r@\e,-#qL9.8=Aq
%H-B!?*(;"*bB-gb;F]Y[0D'B0FcK-D-MI"(A5S\hoH"[hgJC1K(bnAJH:_#oe3q<Y*Y+o8aTA4_,na294\LlW#;IZ8kXt"*K;o+k
%Utg`(72D]SLT%S*;VL;7HB<FCSZKVN5t^4^-lXOCPQ#@p`tEX3'Ia>jYAEI2U^s=9qV)(pglK:iV+>="*q>+-ZriVl.QL4gdR[iJ
%;E?)0.O@D%MBnK;ASg_P9J\JuRo?*;OLO(Pa\k1V[Oe9MG[Akmgc^Fj\D;umX4\=CNY-;-X\7p7lb%6Y=`8)<92V\Q;HbTlRI_gt
%#>8O>.?\m\8rRarp_pk"Pk'LUV*q!)74Da$4dY37p.ck7Ub"bIV*npI(I$=`KHPAp;Hb<GMc/PE@GWS.M+_E&6)'V4$S8D#MR_a7
%Ppdp_XZ"6Em_MMQZ)>fi2-EO:V"-)f+W0%3'=uHf_L$jE,tmLZ\sB0\LI?:cddL[4(97ct$1?M`=\@2[BS'2_SMnZf98T$pG"H>s
%@1A,f=t<5b\:c<Kk(V&.@7gbHegW=+eug,^_K_%d9R0<'hX5-Z]ZK65T)QEQ;QdgPPgS/J(F+V_O!WW9R]JWd2I4JhNLWXjF3QjT
%,h]*9V4<us.IiFD1/(CojD4NsW(Vu.:bK;#.?1N2>`F<i`\R@^bDoVBS.]Qf>tW=IQB]g*7_X=e$7H*4G@=+V(XcU1FtuhCdZd;1
%L4O-gPcB]><0,:hIYQ:80Z,H<Pr.UG+@VGOMR#'Q8fqA68.(s/9u^8KP!-35RQRDI=Um5AP.fDK"sbDgWUP;>1Rn:Z9aZU89JSF+
%WQA(2NibI(PXa`eg)ZDA-0u*j[[QmLQG#J8k`prl#uirP[pY1QOt9FD\YUp,'56HS**+:k[bmBsrNBud:#E9-"`Ab27t"6-T(4nl
%=HDa3NZodLoVhdVe#(p*M'`JV3GsGM94W&"/sV8s?9Yj"DP4<28sSeuX<(.=Ugc"ujtYn_16j3DYt=VkBi?559/T.E#9P1_KP8#u
%$'[=o`Y)"=,VZAhHo7/ip5Q*49q;nQ169k\gc+LB8tkQt)A@d1_N^)ah)&^AAV?h^G?D/8O.m3M;Ejt^VXn5sQR5?#W$B"<Gs,+[
%Uq?:#W[UjBB\!;8IH%"Cjhm*<?6.@T5%U]jm[MohN:YAD(]$O?Pl#G8j+?NkrEKsY$TPWT>cU`iK3=?a7_,/#HJaj+[3(H[%:WQ`
%7RWIZjh;h"JI",*/3"ulU`>Bs?><&t)W`"d#Vjd$rDno4OQ-5kM_uk^b5F<V$h<a\FZ.2j)WNGEb5EHK>EY3fTX^\iY<rl[QMoQ^
%*^a4gftf@9q,\KN?#>m#PS1/N5d8\4X?qa'bWV/>9p-,b'(Me4.<h#4:Q"W(7%Q^[2ap=Qjb[=ine<<J_BT'm00EnOV+8',ESt4@
%`npA:nSnUQ8rn!W72d/W5=lLq5.[@!Veq$Mq^L6SA,,)I$3j;e40249gFGuj%._4_;i$Q(T_hTI;8%(J8\#r0U+8s\muOJ'0/'jX
%K)@R;0(/A>2[CJGpD#K*1AB9T.5;>N_NIrNf0jOOf(UU2Pbq$/3G5IUGq_oRXXl=Y@oM79M^B`fJc%U+B$X=+=AmT%0;=;$@Y*V[
%QRHF0H=:K`8bk("lC*sA`r%t7f/G-i''FcG-Nb23^_sB*W6YCs.NVqjjt=;pe"jnl,PsruNnsUtP)qB7+K[ILpHAC!f\XMJ&i<<S
%b'cM)R^"+e0k_J)V?lmjr1?LMP^PF$-QukH;RZ%J+sjBc2J"=8iq`.9/)V^i!Vo^eGPGW>MO#Argu^n';Ok5oCLSTT/S^0-R!$]>
%66uGU#JG;j,tRk.g(A-a:IW:.3hQ+=n<8cfP.[@K-3]>BWTR_CW)P/ep2+l``9p9]TR;g<GVEE<\Bu!=h='25Pj#+f63u#sF'%`]
%5oD_8R8B(MjcY9)@tBCcZ:e$RBP!lf4PJW2^6)K<>`rSJ#tb1CPqJ!J&/<S[$V"HG-*5EY*&"Ki$5Z,$$2n998jJthbEN'>n8L.d
%80peSpamb!Q=j9Y;2?C'#Q2iT1@;H6g(QUVQQY1fVHi.ESfcR6nuh(k$l#!3V7B/5i@sW2CJZ&g:D-]N_:2>77E'H_D4:eW:;K\s
%jr%d5d]Q8RqM]V5asLM2'h\9YTeVTUdB[&4&sl4'Y81Hj0%%Xsp=</JXh>(mUWeV@#O>ghKu0#j81BcM7<q"b<%YcuG"G<K(d.(Q
%e$LMX8GjpE-uo3ME_t0L=R/D3&j%>;7[/-Wf%#H"_B,ja%?X8=&qcUNH48Y:rCPm*4cR:kZ(XOA:]f*?Kc$@;D[Pf5KJL"%1&gMX
%PSdoY:N_HI!Z/4M[sB8U&P?K<.tr2lP3,E=_DRjC'`n&?$qpL:!heg4j)&]@8e[196!;B6&sU48b^Mu,6$_7M[?1NeBdK#`]e+>)
%$BuCO6jRoA5]RHc32-,3q</0MQmYMg.cZ"sAPMG"S,VKhX!D<RQ4?KMT0.#aO/Hk@hArp?23>+9<hBL`J4<aI)YpTk(]'H(M+rF3
%Mk8V?8@Dr2`!f1b12KB[afRaP"OuX\8o+!I0uDBY`jilbZ<7V<NGUugdLr.1/Z-C5*Y?pLV)$W`O/;DD;kCoMF2><oLcUs"nt`a9
%;kArMRUTU'UTN9SX_D/YqlDX58PC@u@^/<tf#3DohbXuX4Kon;G!\i$hQiji\[R^@]U?U"nmpMKEbm[]<n]]aX=aYo;Q+<pPK:>@
%5m&?E+R6gt\u`?=FjnkgnNA)n`B'.ZI++_+g<4QL#&t<U4BVHDaFInq:,#dt.ZKZp!r,GsGY<Ju6b1qt5DbLrFZ99@cc=T`FT&F3
%.)h_hI`%Z'?k!q`MRJ`VV$r//GfQq7e5Ri9Z&EU$`cZsb<@CT=YmTT491_SJCMisO6KqQ\(!>Qc//0<Db0S,ZF>-U0.[2VoCmISA
%+KQQ4R'0dPU96gs)PJ7r']H2].3c?'-tCi:].KAaF)Kh5,(JlY1D7N\bXq4PPkK3RcGU)]%"hP.5G"@n&TWn9K/Q5;rj9L`Ss9AA
%(eFDJ'IXP1;M:"aC5fC`2p!3b!b[i(V246aTF=)BA/[8=2bu<CZ3Fl>=k(>@O1g`*C26W]G.NN,@dmuj4L,Ea4n`0hO]b[)I4YT^
%g5l&&!Xt:t-)cg,>1m@m8qO>Mis,'ED(A'31N5%Ic@nl26!rU`o^fb!#0\3hhQ,QSA$6q[Wm4RI>rn3m<+&8dP'QL$$4]sgZH>$;
%UAS8"[*N6GHt*I[ib6KCP>b@$,go5>'"J4$Aeq,ZR+Xu/>S000#uO<Va9P'qA<W_*m:L#^*D1]08Q@m)=V-EVPk^^\PO_;=I*0p0
%PUJa<pkL5K-j%R$.e0RC$dp:<8n8ibg+f/MU+"TdZmnW`U5ZauNk$#tT#AX7%]'gFU(]CP#R)P^(5,MDVVAJ=SLW4gop]UU'V'r+
%s"H^t&c4naoWVH*f#D-Y;i+<p@@r.[e=`lEHIJP*+BKlVQP%nVK@1`EK6jUoAIV6Z5Iq&1e:s9lQ<h%UE"XH`q>T<KlJUH$>88!M
%@]0hd4&Ih8Tk%?@$W/*X`A^P]Z*,]&98=-OpY9pdLCuUj!hq)2a]uN4..J\V.O@KnUBi?T?r"m/X+Hi<k5EuIIe14:U-)3>25sCr
%pIeC0EBgAdQ^"1368d@[M%a>lMSYG)3F-f&<6qfflq8J)KBbOaU"k^&AP]%kZEdbjd_ua=:r_"%4C]Z@n,:ABIe0p@Nt_8[[>uY%
%q/*,1U]RCm)8F$QS6N*K;gT,pB)@-QW^5@ub[VfiLAQ8>%'a97Pc'0^U[YLm!c3JR30c3re'=Xf&CS$.g)j%61<LBcD,ht3F%Hm@
%kKT'%pp/U@-tP@I=R)))P\#hPT7l5].7T3@\Y1<5fq;Fn5$<CbM,2]::seiB)._UQifal#X*-#YMEY&!IoDuX+F-WJrh8K@`f-n4
%f2Y@\H'VK3AWMWM<J,rp$5U<iVE@qFT:ScBc`Hgl[5KQ6adV9Ypt&)8&sW:)"=Yo/9#iTf*&U.<P*iTe"O`rjJO=J&/Fh=;'T9<i
%l4m0tZ,Ko=k&dq#`^1s1q(l_`,*Wq._EC=9,D!4#qh,DiNsM$t6!5&8VErlTN]imlAl<"JjKE>qf#s6]V/)sZTX=&if:[6A^`&Gt
%k3^&,5W-1UHkWQB>9OX$*Z5.[-1[j"."f$Ze"r35TrP.#>UH7g&P=U*I.IuE[/-2#/sYLDi?GXZNikZ^=W`?FTac'Ao[;n4@8^BB
%1]5R:?:`)=6#!K\1an>/0I+TAL9<l-:tR7^&WOh1;2%nAj"<ZD7$!+Jo/]q>\$13CNtT.Z74<#o,XQ3,-5"CH[7u>&<ATP0@]AM1
%P4rT4OsWN[j_PN$+\R200OUkq:su-f(:R;G[7M!\(SGjj<`B=Y0+1VQ\g9T*T[31mdcpAn.NfN(e\rn)fp)3+XeN`]Xe4._-XG',
%pnWJH<XT5L7@a%?puK_`#B:ZuMPa]VA`QL,Z2h)V@<m\hM3KkbTN!<+;,+n?ZJ&%V"(C>]kTkW'XB>o>Um7/:WU+t1SLdVB=.LE^
%^M)Ajqp]1)br2lo,j('l/=R<tACH+J+BpMeJu[t]OR/bh$bPaNgoEhp'88*5<ZeQeU[LEJT%%F4\r8--3k*j3-QT?\FL&P)740+S
%Uuiph-t:VH]":\)cIKSbk*;1rA1Reeq#%iD2$cU!',f=g-OYk_FG.um,1.,b]TEJjc*6U]<DEn:r>)AD+GWD"3Z%?gN_td))/)[7
%4AW@m99kAISIAl;#WC!Gj>ps-Q;0Q,T'E&6#\Idj"bh-)7O=@(9hf^BrZd%<-i;O,d7QaG^/MqI6mj9eB?a#!bUki3$g4rKXqg(N
%m>*#8.ri[,=coUt:7?oNbt/.2(7c^K\Ecm&*bNsE\52:j<7L5cP=80-i+,h!,rcc]it1L[hP@WIdXk6`8oN.P'4#PIAME/Dmh)G5
%3:^.r>#t9k/nkBheKsO`20DKsQ)uZq%?Sthe0UqEfYo/;Z64//P-Ik.f,Lo-98Y,Rbr.S9SmCd#`qJDXQOFIbK[3M%;UQGKQh3S>
%a\.)!\sA0AcSg'j4kS0*g''P"2D"I"K8%5inYnA6LQu:[@;pJ<5,IXSF\/f^#b<-1Ad<U.FEP^Og\glZHiKFX@"`E#=>DQI$J)On
%TC`qUlasi_94tJL;1.s=5>VVh7"c%Mo4(Bq&sau5QaA&+gZNh1QAic-Z!N";m&/.kEUOG4opZ3SM$4tcR^D/!+G55'_PX85M+1*@
%dUbWVN'^'lhofi"dKrWOZLZ5&QJ=ink0CjH1N!8^2]hX@VrWYe-)79*7?p5ci_^U)&sgJVf\1*johFG\CKR2Bo:B\Ve2+Y79CD\?
%mpK9(.Bs:VUb92"oDo_o1uqM[GPcZM!a[/<:5V,H"jQF'>7rD[N']=&S9Ms9&snQnW6%V9nms*%q]oB+=d/6fVrtu`Jh3`M\R-U6
%2f2.N;AI3lX;sl*#*n.l&XG898&CEkmJ32g2e"f]]@_c_]dKU+=j(*fP2BWCZ#@LBYU^F,jPIc[rKI);e`2t"A=JhUZSgDKQGa&i
%6R=:o8'.]?-1Q3!-^'aRT8R*\A0pQu.4^8<9o$g=HGM@/=0bNj,Aps"\6"n"aRLr=V9k3g]Ud,"PG(C.Q,J<Zf/7+cc"aAV`_:S_
%Wfm7DqMN*u(tg?\R\q#VlR",b(RM3K\@24%Uaq;WAL8LfXsA1U'jGaO*E*ZSLKX$#[;br6n7kJ88k+t*J"PnBHn-5P<$hE4hG>04
%*SUcJl+V3?F@\e<Sm;aQ.Ht)XPE[V/[3R'g?l@`k;A(3Be<Qh?$uW-)(a4!c+maGJE-FlFg_DV>`'>>R,M1WA_`G*m#CLpAJ<d"m
%nXKc?a;lq<B>q*9nk)VV&qb9Q<.+d(cV5QU<H8h+T;n&II)W6<.I`ssa:33jD!e"h99YX"_'kBQRX.*]mF>_n5G((Zn[D#6rqt[Q
%pHS]Ds8M%Cr`fDX``R6,keRl*n10c$_mG+oI5YPD0*\Qm2!'V>K`2:DUqR[57roj/-q$@"a`_07#9C_!hk;]aRj+q4%@(NH%F?p_
%YHX/;3hdA6rDZu0I.<oYou@!6m8HeuHh:--EEBPdiX_nCmk,p$Rk,%+q+8]k>HN\1XX>0PpaC8T68L4%[pXV4g6:>9."Au'j\"(O
%`>ffY(i:`<<D>(iYh^>]$f>.Hi*n6`-sX]X@3btj5@.^"Iu@a],OkoO;P6-!DB:@EN?d6U4:."dhr.&eGut5Jh*'mCBEZon4cr<T
%-Y1JA1NSj7,?1X@5mI^tOPdTn,f'0D`:k\iRb_.6j'fkdpKKfMe=FNNi[30$>e<SYR"uGLT7^G/#2]ZkT$a&<DD,RT$^ECmiK0.J
%cD:mBN8cr`Q88'h,:SK*An>+d81W\nLRUB%*j+mjWH4Q,Mf>^WM0PkIpUk0b+BTY6Da"rWMh3h+Qa2C`SrsJ&[!#@=AC`qOg\9TA
%`X7RoP\)tQ_L8YD/J`u.Y99ABRtni05EY@oekp>CpQbD-(Yk`.Sd/O]7F:)Na7V!0SGH5hF#SF]iF^n769YA2aYPO`S7A8=PLs,!
%W11h+D-7Dp`>9%/8hlK,<X0.i(l?T!#t,\!5<;L7_9;tH;>`+;njOc]f^i>8N\ed?^cfW[%4pqoN]WGoM@3jFj1[*C4tYJW#SA+;
%BE"\D$g&bdrB-Pt\eLkn=n+i!@cFHV?r=@N*_dl+d;]!U?mK="E))Gd%`%2CeuLW&qqf?C\MA9Cf5`0c]Qos=PG0E<LJE*m?`CH*
%dkdV2jqC6&Cm$08PMDVVf(h_+g16d6<c)7fdK62\)?4D.afmQgH+8EA*&@X!0conb`o%2ngM*T;#%P'e:#1^3\'j'X;NRM477D[&
%dX?MmK5P-QG=$F[.DqJ>>ICWp*DR.gZ]E"lV@4][CMJO9QhY*]&osXaorr3F8AaT[UD=Ou6G3Lm]naSD?nUi!V$^HW[(?j?-h)ah
%Slb6JG,O$7"-8ZF>9-#l^6L3.o?cYT1c3#jBuEdgM`ej:aTp\/@ah3;64;g!kRJj')J?dn<+DKrbh`SXm,3m9-Igpc`=RZanT[s`
%'/)*[-a$\0+(d-"2e;lTXTl%lem/YD!ZG<+G)#mC@7OIUq-htrlTM^2$Fe@</H4h`iKdA?M/V^Jp6B=BH+G:MH(h`o9(1(WUX)e`
%4`8s[CD/i6-8QAj2DgS=b-5Aq*f9?^ne,b5HI=8,b_)b10pppea-<#Fp.fLO<7H*ZN,XSlo+CsA[uACGKfD$jnDM&!M5W`cYu37O
%Pkl4IF;P<k?3@;96k.Rd[OZ>d[N@V;XGtdXqnDpI<Z9GuOp:dOeQ>4\a3(67]8V/kO_p>fNP-JSo'i3B8Pkj;M[Pp@Y^a0cc-r=)
%JO>?Q<J5&Oba4[nH/r*=mp,3@N+E,G&deq@)<&j73h[q88DqO_PL;+QlfP2g])l`u^$X3Reh`ZfFYU&X`H`HF)]b.WB(1boZP1DK
%L(m+?!eZ"HAM.E7F%N^NdRL1&1<6?=W8gb)7Li,2Z@b$T1*lgT#<b2@R(aoQA=g=t^]XjpSA<lPIDM%r;&H`t9(6WL38pZf`Z1=L
%4IrS5beYt=,O)N=q$.a.rQVlQa68_`'nkPnc,$7l7c<7n%)3A24)Dha!.**<+&^?Hl>*r0:R231T,IW51(\8rK$Z+h#*2^?S!'V&
%"4l)0gZqCP!A%M;&\k3l>$ZBFkt<!ta^WBgKr&!f%dc,cC;[I@[E1n%,8O.'S4c?1VnEET\?pB.dsbTN;*?HFnM81\;(_Wh-1@<g
%H\2G^XFjW:^G9cQ`AuW8Tn609;4O$+%g?n(#:Aj2n#th&_[OT""s@R_SH*/)SE(9Aan.@V@AJe?U^S;V/"=YZ7?MN<Xdm*!GSH&1
%#(u.VJ9QB#nI^!Cot/8iI"n(%A(WBTe:IDlrDnea7RO9`)K-L`f"ua.N\\m*)7XN7gs1P6F3K>!gYob!^M`_'72\%=g"<0<8eP7]
%#.!UW^<$rBF`L@RC.rdDgBJ9LY>fP:*tPKa+DbI]&gUsB%_gqfCY^`:S?-j'A&S]bk@d"<:BlVrW7Nf`-pHY2KWp.MbX?Wk@8b%0
%jR5bajB@q+*^@4"36UH@76O*p,/FC%:br<E[sY^2U6AuA^OGq8S<-&&1,m?Tr5ui4XW+)Lg5$A-K>gQT2!j*)8^Ia),<^lS1Ln%V
%IJ=$2eNPbdr1j+)`F/D@@[[<B[-haGLCk-D0pq.?NFW4fM6Zo2=EVCgLl.,,1^4or`4"Pr4b\'OO*P+*1cmKYGiJ?&gER*MS1B'X
%(_/$9#B,r\$J)O;U$;1t5sMj7>Z_CYGCZsbBiG<i@cH+PCblkQ#%K<'Cd0ciN:"+Pq;,gIQ[4l<XRfmaXMjo`%ZBg?qMhKu@3$<5
%6OLpInY6\cdRZ=uB9L-2VL.NKq7%s+72dt0;BB6nl'`(j`glCq[?\2j<&>acim7l=T\4:A9(M0<Lp)DhAjl-%3h9![<`T@<kF#uB
%RAV0L&;S$rasdW9Lp9(K.dqOU10?4CHNbVsebJCU'fs6`_.48(8[bUe&Y(#/E25\>%E7VTA>5Rq%Opa/V5Ki[h%t,RP;11Ya(rd*
%mNB4ER=Y"nkGkBQ&<2Kb-#^.SVUfZ\mN!k81#nVB1^I/OppuiWE"C7?<Q=CX:"\o[dsh;=_:UPW1n?FFDea)?S#<XU=Xj&,D;Jg7
%@g"FumBUg#?>>jM5@qV_dM:02P\FlDNkn5H?=uB9T'N@Dgs,QDmV;-cNIIjhBP!ehHqeo2:@hmJV:o(`5YopPSi7OEm]stmS+jYl
%?h(DR)RrZdNkr8_<VpSIMQ+r6*Sr$*\;*,XZa>CE=r:k!L:GEQ#AU`+H&::lo4?ClMu7Ag+Ea%k%q5q/ikD?>;K(\EJe6bX"UC'W
%Lj$3c_.Do@k-jWDo5*9t=3PoQD]-74,9_1CGD*$'IGF]D;qT0Mo80u+Am6Ad`]]lj3q?S0c3p7:Dgq6NcZ<2XR<d6P<(99foK;>E
%-A0,*Qka()iXO5)#j;'_rK,841t]@"lHm#m"R_3ieC]in2%e/58bNm.LZ^WJA*aYQ%^g]6:-Ic:eo9b+"ElDlMKe).!>Q#TMl94Q
%Q^tuRdu@cYGNg*ts7E":lA<)6(+b=^\XAOZLmF*[Jmrsi.^(h2F7-1ZH*.E<G#B:N8HhLpXO!Gk#h[=*gd_F[D*ZFB[$2c<NUeu6
%F#LeQ/Va09:Hn!@E__NjKo*ej_dJp$>Q8cc$GA)ReHlK`opba,S21AUK-M'2_E,n?G%j.<:iBGX@5uT4N5FRdLMKKm]T0N%CTCEj
%dLKo[`8W$3D=#A,P0*g@1qV57d`NVY)$tEO5P_RP-9N%1(\oTE9`bbn,*K7"VdG$9ND%69rh1G_7af5Zg55b[;<#ZGV`c1](aD".
%@Xr?XIIAm7FTr7DiW=b[doc#I".VB4n-6W'Pi!k?50FB@4]o=m#sPO*(5]UU@f-lgc*65d(k?Z?gDr?bjj&/+IUQr$`H0b6Ha.8Y
%]e:hb5hSF5OaJ_H?Z1S%M?!7(qo2.g2VU``(Jo,5TbK[?&NW:[?8`i>]FT$7:g_:Ed4.aNHYZX*S%otSPM4+L[9A<JHd?$46bSsD
%(q0,\EYlKV%1Ea>S:-E$,BY_uX5`:t"8;5_LU:Y7Oe6AK<I&N(2K,\%A>*;NnjCBVBBE8d5J`RpFF:;;gN_AB70R3qV3>P\36ZX(
%)A";E$T!/\;eH`W;!)S(HXSVFEi3_Z"bEsd,TjJ<ir7*%DWGbHP4Gu>)TZB1K67fu\\;C--TpPiaE\+[lSG<&$Vm.).s;rgSnb9Y
%,<k!5>72XrcUFsRgFDVPSG8MMhDA2qoWnh'[iQ%>!1.P@/f,TR28gQaEU]B\5!eh(H]Ycl2f#7&Tii@Ra(?u#oE!6ekR>EC'k?jW
%?H$.&aXCA*c"^3[V_m6j'aZ1"hoAp0U)iElOSQ2P.R'/V?S3&G8"LlW),QJoXaQVl9F#tnBA%]o@C:n$QuYm,_NWUW,Y[3nQ\RR9
%K^;g9A4d"7]Wg0#2du=gR#DWn!G3#7^b9+-Wf#-o!(2"74[56]jqLeSrp!NO6's,-Ib/36XmlFcR[q!F9AOkYMqmAe!>I'cL<%O;
%X-T%p9>^"CMFVd/e2]f/d;2snb[E=.j4nrcL<#"o\.>JZFKWO3g%dXR`Rl^ZRJ8hpo?o?S/J/Yuq#0hj!i\T^mm(Mj,ts?V,F!j:
%LKO7d_<R".TS.80b+<Bqd@XYIA"X"N[SaQCFSQ6i5pW%kA7)^lQ]l-mEn3T@j>Y&-3W^I=QtP^'*g-5$k-:MIX\1@4Ds4ah:a<4"
%\W9aj`/"ep&CHIr$D/+b%@i+\"ito.(ZQLFAsERDk.;TP"TBg1C-5/C$"1],;Y^>%B%H4>+@#3bmJrNZ&J9=dX/q;sI$$9Aau*c`
%BXf3-*(X$XfApC%m]qZHRedc`bS&ePBhsDV-ssL:]Gcj$RrY&7SF(&UA743,"D?0om`HWc9IY6qR.rLZ4'a.=:-S5$O7um+0o\>M
%m+].M\1:$n-2lahiRtDV7!W,MeSE3sV=mEMk&D;BR?'0%Y/2]3/3\:c7G9HUM3$k[;4VO_\a^9,#f9;XDIbe9(I`hN/]*#(QcKn,
%ajVib08A[[>?7eG!B8sMnuT<ck\qOKOcipRkV9("Z"YL6D0BeLg9'^3H(ID]X9@UV-NbQpYO=i(#/BQo3/V`:S0p&IE%Q@h*i*F/
%0m8T)Z=VE:lC=?:5"R[nkGa)IAjR52o.]MU)"WN?cR61hr@R=3=MtIi)!C`pj?HF/rg>c-B;t'>J"Hb^3;2(Kk>2b?;;sSWT9R7g
%_>T74Au>TCdLIFb3:4cXRE`VWUMZN)=R9+Hgf#ar]R+Z/YX3jnJ!ej!GjrT`$D2WA\0&uO$15`9N/USTVdHK0".!^dRSpub``0fV
%/p.[[UgP&m7ZOqY-N^[I0;SrRXFLoB89Z+[\#Z0`<u-I/WO1h<]O@j0gt]?ce$bD07/KI;-2T-^]:rL)98jR0Nf%V^=K^e4i7(?u
%h!C<NcX/Z[DZ/iJdt=dTY_)H,I;DN<&_%iU<%1)<HHnmSLPo8<j@s[0-p0\S'&BaMhiT5r&DgMA!'E]oIg;GT]9g(J>iOXjj,Z#6
%VZ9Fdhjk3UG*+;1CM)c^9^omhN<:+FFUV`0I*S!QOR\F\W5l'iIH(%Ij0Wt02H]#Oc@a(Tn)bi\^t9pChMtVWZ`-##*lsik`02Y<
%n3)7!js@<RkP]bskk$A1_c1--G0V>E>e!;hja'kolRdXJe6*[u>*,[^.^Pqhgnq0ficT(*h!+GPpkVln0R2aR=6/u-OkB:IM&/lC
%n@>Y&"jj/e1C,5jrPGR4VW2mN2&OddIE8./`o8_WKL09'$A1b='4[%1V7F?s7"<ms*o%fFD\gTWI,U>GTBDMs.&O1(9>%AfmcBJ7
%D->!Bo,TQ$KK"2EXM$\f_V8RrUG]Y^)r`@aE^ZY0oC\9-4]?guMbMM%OUG8"C;,Vt<Mm9Lk'gR!4*PGXj7ntEH#H965og%9k.;^/
%/>#$"$30),3(Re:cKTTAY\AUM?,V(U`]TGJo?t5mZr<1Br9*Jhj^F-G+PKV^p%Rr]\5#`G?b^r*DT88IL2Ht`7tI7?3[/AX,Rr;d
%<!a%X,?>NiL[d-29Dg_WW%f$g"639Q26:DqpM=%P-.H1g9<LXmm[XXu@2uuP_rV";Z<kR^V`Kd\,A6$'M)>l=>KSdC,-n.j(_r\[
%0#KVM7>9]A%\Ol"^^#F1&1`Jeq^89lb!:^^#$N;XRn?0UdmWo"`t2='_?h($1Y?5:U)-HU(f.]P.Mf6gaBu]-l5p6-L[UVK9)Rri
%Et6oOB!;j@j_ThbJ<?icOq!,]Gc]!'`;5o(g>"4k@`4,<Rj>$?,I\*<ZV2#-P7$HuERmEGXIcH7TV*/g[6s/I&uujh);ZDk1(&"l
%V5P2"Ein3";>N(r_"?s-r??`R">H'Ge/YlJ'r3k,e_cTf^rOGEmY!r<L)Kp&6V/"-3JYt\%RnC=Jeccl,@$[h,M_W.itq*9(h.qQ
%bsj&[mc?,+$$C82P5=9fOZC7!.[RY3q9K59O&`(0:Bl<3F%E0"#..=M^RM75pfM!!DG"&"amW9LRDmbQ.*]m9q0<RJq+lGhQdWO:
%*[PnPcU*-E4_,NpKl$Ba%$is&5'BW+UhT4cVQsi7S0Ws^YMVLP2P\T4=$sF[$J-VdMK%hs6&(9EY%lpPZ&I-bd@qUG?%i/GM2N[W
%C[/,shiI%4I*:FC+n#A#kHI(D1h_^MXFJu[18"&6)r/n3Im!94j5Y4F?SqbsqSp4es70WM_I,WEN0Q\S?LdtgWa;aM.qhcprguE4
%jFfg:''b"@,_dcI43_9HQ0U&4OXJ-6;?0@H"5LTmY!q9fGmTMDfT6K)/WnB*7k\uo:R>!K^Y/]jVrOdG6*EG[5B>LPHRUi@/CIug
%,[UFu1]jL><15BknZ7Z)aXBT-J_ZJ;dr!77bDQ%'UZ!H?Qk]J]j4V.qpV9L\,(;!7im"&YoNoI:-(Li1Mq:qq62,=qJNX'=l8Sq4
%PBCU]Z!AUjKM2t9bI3gTFe[SPa8:r]N']:39U\8d8:`<]AocP*W_+KXchI+ELX$bDM2Bh3gCNZiO(E/!gQ>_h)PObf1%J]lOLZ^%
%LoZDd5ZFG_hNUB0I#P9a<Zk'V-;%$IUZCS!eru)sien0TZbY'Ko#<9ea:'LX;=csujib4TDa\=OORh2a.+IC_P!X#oL+1Uc;Ep::
%Bb]j*2^Rp\'kJ(-1O9[fg6pG,$FTK/VGK?gD[Q/);:&AO[<Ao;e5$G+(5;V4,s-hWqZkTl);klRE@_>lW9:$u7AE]>\b"`-[.$@q
%%o]D]=])<e'P\&>PYSiL3R/2.,jL4jM.9[5;.ItCl"")fVeO[YpA]Agq6%QS9&<I.W6N^FM&I?cP,VR%_FU>()iK#K1_cf[i(AhT
%(6@0+ND?8RG!1c8,#VnpJdRW&l@A`NNP+e[;;F-gqDjs`^9jt@6#It5i&6`_%B^HQ)an1dd?T")`h19#j=<.8p`Q3Ir+V+o(tT&C
%?Ap4-X&<F/2:d436Q1Loc]i5j&Z@EQq$'6\#/6WQ7A@e;+]M_5igWFPYc-aXLk\eYC:pu#,)SuUY=nd.;Q3C=lW!.p&Su,12+A4W
%+=d')qYHW'DVLA4>XW<l+G.NZ*]7QLS:t3iqbHQ[SZT-HK!HpC26N@>(5j+"LA+LqC:n9;.Tt7<iTJ=W`^mt_)iGX7-B4)E>$N4Z
%r8LT6LIffF+uLDd[\?mJpdZqanu-3Z2=BX]8.B`Jn3+bb$0)ZI/fqD;Un'tlii?eCL2#-HCt+=02!Qd.X1]G\]X"Ij6Mk(GlMB?a
%P`*$l@eRLMFdesH)L<W*A!uN8LdXDX//lrAPB1I71kq/1-2R8HLQE?H-A!P,.GeN0cbZuMK:&=C7/g:J+cPJ$D?O\f;@Si+$V;-'
%=[\t/T*?/[B3p3u_W75E57J!g\).J@^.IpZ@loT2SUV>l)B\-Igg\0W.O`53&6Or/ehjIFo&dT0jsan0-@7G.XG.onRqYe[2q]M%
%XD.T9DW\s-SoY_,S:e=GP+p'_`^j"C)g=?7=,Xe)OAuMSL6CiXB[\*Ad5(uF)LI/`Ni6d$^Pb$V<+/,0n,f#HB9[-p:ZkGJA72\E
%EI7B$.?QWMOZ8,>jtm:WA%]G;Fg/hVYH_1.fIu#M>9[HHSAlL?'C9kQ$T09jFSN-1[uEBg#-g.C0O'B2dpui3VR?#m*=/#l>ulrt
%Bim7X31)W68!NmU]]hH/Vb=[:6jf]OTCMpDPf;bB^G%'B\-D!Llq]@1gH[KXgE<V+]95/Mon15>#'DJACA"PL,mdpmPU8it?lMd:
%R8F`cF>Ink)_8L&"pWfDDOM@^?=JEE7H;XhSIdFmY9Lh]ZD-l51;Xq])M@8u8a`uF1X-GK/NlWL$.&P]]6ID=9O2UaW4lBEHr6re
%5c&/A(jrJqXZ@F[/_[8DXCs^VpX#-H^Y`/@Gg&._G?-O_,t"q9\g0X-T2sH2U-J(f<4=m8GR;JOeAMCb[I<ht/)'nsZ(f-R,r:de
%BG+,\-X-O,,s"5QCOlmdN7`60&j=8e^113ZbA<'WL_4\K8VtH:,S`3ddJ.Y%/O&H(js[:;Lj@9WEAeFieTjPh4&'TN,oWY<bF#9H
%#jYrRM\PR:YE>RL3n$Y[8A[CtD$O3%=KSsGN>Co#[T6M4*q-4!d5G$I>D<JUZr$F_40`^p(&]o/F&#s3nQJ,"!I)Sh8bAa%dFaKt
%Q&?IG(fReTbSEu^m0r(3/n-Z73DMu]Mk2((E]7;]:'9RtM\dCbnO@YPMuaD\^$%X)7SIBEU.&QeaTNqB)H.Q*7:Sc95'1CYk'b<P
%'J14.*D-u]hk?[fJ>,KYHd^gd.iMnuC<Cecc89Yk78K`$iiS%O4TUr(cMN;04muTa%%/2,&<L*r`pu;W3RR4sLmjkneV>%hqX]P(
%':73G)CHFZ_:M=XZm4N:eS[:Pn"aVZ.<Q<bOI"<0N>.B@Ah5<-oXq0NgKDo`=!e0@WTAE]U.IualB4>7@mqWDanS?,kW2a&<qPRM
%F%T2*3'/W/K@KQSUq5Y"j`XD!"Z0,aK-50.@6?;[,:=CJ4"Y"'7$i$1XM,*s371hD&Q(JZFEk4$)C6<V+Y?DoM91[qM7+3V-bB95
%6Sc@DZT-A*1qQcX*hDgB=l:Tn^H']dNF*#@'HE8LNVTF-;K8F@0K#1fMT/166puoMB<<@H@kdTh3RRBkdj`Y9YFVMsU9-7MoJ9iG
%d16BiMA6!po[$.V\5_N`PoOPoDL!U;gTJhYNWA16:.Lm@^8%n4elaNB;KRm3*EeH5",e\N245-F;cr'JirruP8=\n2g;"D['Fb1]
%ZAFGQrEQ'-WcFrsC6>6_MhN[&UA]2r7)QQG<a)#,*%:A7e6(*E[O5+_I=h9\QqRS&M\V5LM-RYq+:fE)'Iikj)uG='/UiaPdIf5V
%U7JOSUhJkIc&$nHn@R[JIk3@P\b60>G"OU2ZJ$^!1e-J+c':WtiN-j@5`\=DFo'm0BT-KpYHadLp,*f#;SZg1qf(EFd+J)D=:lF>
%.p>ncm.`-K2(l77FlGa*L?@2%(HSiWaj)Lk[+":%6K;Qd7h]OnKLP&j]4,/#1q#_'6ueo_+@p<7EM71=`J)=5AGok?BI)&:Pnt1(
%+eX\=a<:]!W*TfG,<HDSK8F1P&)(XHjjlu]"HfoCTq2"!%5s@i!E'UFqI=7('QjdI;+,*Qr[SR!O]@!X`.[iX\MKqMlSKD=p2[5P
%EhP3Q4CrN+n\'H1L^IF3+=_Ia4or:>2L5XOC1QO\J-M42Q'?Wh6Ye1g*Enr>kg3cr^<iRcfeXZF\O=LQ*EqmHplB(%180tBHso>L
%qN[sNkT`U:Vhi]Ci[."$RG*mGB3r.]Tq-3^&_a41&YUq@Yc6VJ,HOW;Y^"O??'l$@8,AnW2``c""%"1iFP2)ITg)W8:HIDW(eJ4)
%b?u))qRL8]`.k_,Bk6F_34C)!Mh>Fn[/GKP6S$tX2DdT2$'A[abOWEPTq<JZ`7<"g)DN3-i<h2$oYW;!`J6naEU0nHF@h=R.73[s
%T-Qsk%S_iH$QiQ*f&B'WpMMa^klM1`I3D!C'QZ#QR]`dfclQkBBM\K,gb6hTVF)jblYL6u>`0'iIA(15Qjm=?XjNiYW[1*&cf2p<
%c1erJB`.!E.AC9=^C5u/>u_%?DfNdQVlY^Fg-l2q3j`[/^+#!dXls07Ou7t`LA!bIJDp]=X%`j]d-/gn%(ZJmd.f[qi*o&`KIaRb
%d-Y!>f?Sno5)g!lGEB88f[,o.<j[P#M4i<HE,bR>/=G[[YT^[4cknKi0!1)t^mtt;M=X'MPqu(qQ\$NFVibFU=&"oqkXsH-D.?0_
%Wn>[`;\^B8WZ+fA-69Z45`-'M3_2<=:SL$)HF["G/JKGt=$#ud.4HK"1sXC$7cg%6<SC3'`c3qiE3V*:f$9=*'#rl^l'4\mNjMk;
%0dTX(mNbl<#TlfnF[@oI%$cpogPOSk'ZlgT6?F[I&Q2W'I3M'(eI`C9nY%2B.%.!WRTLKm<3"#YQf:BmA%DN>'5K`pnY)MJCjbFp
%4XEW`q9ZY=/.EZCBX:iVVaD\kbJd6]!>94jqR!!'B\SLZ?(0NB=?(1R-!GT@cA8pESd<`Rc(HCf]6ghl=Q`'+CkrSgdR!+_?H&9I
%GI1m5#tMkc59XlS6q8hC^$q^goo^:'+5dT$6CK'8]$[57@';Z@U&D''6^QqGZ([TI2]''d-&")F<>lZ7dN#7d,LK*"84p*.HEmSH
%C0]t)>h^ZA=(Eg[\8/KOkXJmFW6d/?RL24@-%.H.iS?;_EM8Au0cM#K1/ad87C*nrf[);qad*JWHJV0VGL6O,8mZ>tW3Jj@>`;be
%5CE0Kq6@9"OiWITWV@d$5DqQRGttk%8HffN(I)StRrCfa)\Gor5+n+5m08MO%!Qlr`h7FM\s&gfXYq!,#"JDWP@qgfSo]dn9F;4u
%C^p3ZMpG:+B_Y1-cfZb%Y#&ZmGiSjp()IlBg!W(N-m=PAJ+&g-'__n[GhlV<N9!kQjpc5QS3iu;=!*0Co+I]0(V5("EM;^4KZ/iQ
%)M*hkEJtIE;c(%@?BG_W2k;HtFQh'?9skL4/NXt6gfP\P7>DAG9VB.a%uiA_p2=YmBNG/XL,O_%ChVU!*q_Q5>-#CT?r-J70/Bo[
%.uar8>eD;DTf(Y<6Rs2j)nQ(JUHosGL;kYtceBXE-m@0`d#iF0A%LpOcQesops;!?]b;1X.4hr,L$3VSIDD(\ZiuoJ-Xmdcn6_FD
%\Bj4>'IOfm?Ck*6M8fV=PEIrR:XYe?.+&ReCPrl)jJf^=d@U<^M:M^JP\@E?b/HeAZr^V06lXf';KO$cUGX\rd9(7R!@gu(<[:8Y
%Cc`fqTLmPR"a<^`+(IjXSo:>k^C3(Ji8oFpPB_nII4=d#Mii6AGU!5n-:PQ7B&[:S91=`@PS$L7pq]YeM%jeL7-@VU<cTPqSH(u>
%n\b>NmlS7Hq5!d$-Q:%Sr?t8p(/Q'd7>u?HhH7,$&t0Dl[%B?h";FRB2&ddoWP9]Hj'0&r7#6j;@q5\)&rjYIKn',^5Jh/k&a_D]
%,=Dc[2tHkj6l3R=N9EgpL6ZM4BKT5-8Q)95Rjq%;6$Y+W\`]*H+Z[s,cJgS4/p0pr$Nrt`9M(ElDW&DJkV&aqpU<\*M`,P;6t``%
%UeCY<5.(;A2RN4bg!KYU\^35TN=9+73K^"@8eW)2Y+nph@jj<K)Z9P);Pk?I)Wi8iBVIg41@@:JQtN<`'4tVr[,D'u6K@6lWmdon
%Z"W1jM0OsoQ0__G@s02N?ZrGIi?CV/f@%ae&)u%%dY\B;K`t>IX$C'NJmB:1[;hlL/1iXL6Uj>'TtOPi)>ZoKCN6'HP"CCW?X*pi
%:(i>?$6>e<88j=lm8BIRcj$1c.WeY(p7nRq(s%A3@mUF/2dWkYcp"1J.^ZIrVEuNeTm17>Vh<6e)\IB;LH*SW5fPlgi/J*Bn^oC`
%pT--<cpEtQ#T_Q[N=lpCJ"-o^3Y<:.6L'*,[9="R(#%#&;k[uM)AUsc6W9[/gJ'.S6&V9>NV=8]8\Y`PV1T*LA3tc.YqQ;"'9'n`
%2X8[`BYSI(]6`:m#]2!!M9n,4N<pU:]r2$q$Jd&'W6e$*Qj[c$PI]&[Z?-ImkY=.IWYZ?cqW#,9(p1QdE+FH@Mb2?+7.rq:<%Aq4
%qE#GG!,>H+"W/p,H>Z*/ggWShJ0?8HnHi_m4-8o)BTmLBQ,,uqe.k/'7G+$TjZ#\B`a'lh;G:a+Kf]qdKAk.+q`Xr:A>%>+ckW:2
%#]6(9M9p50/9/'I]#"^BTW>jggg3VC8)lm*Ul`N8@1]jrrjd:#%m/CWn=Z&hXB`C^K/ta2&"P#R4$.(&69d<`0(40?1<"XHpPfQ?
%C!JtE>\LdiGn^oQi:%6bHX]<C[8g2i.!LG-6DHm!=s=]mC=#D'N]/!+n$F'!%q9-;b:@]ZFIeZ7KW_ms@mYZ-[=TYGcl*SO="k<a
%8Uc>Lcjn8\',jSE,<.Uqg;-^#6G'a<.^Z2_SI4`kXJsS1.%>7s7[/.naO#?oV2\e#,THU?Z%!V^*p^S'Tkj+S$sfo&AE_[2cgel+
%NZA]1[#4I4=rJ42<_ZQW33_Bf;+tZ`K$8nfL[o[<-F=F0SI(:lS4,0+0p9Mi`e=>9lpcZZ9YD"2"^s+rqI#>rGgJsW]M*ujk?7DL
%dAT!Lh',0)37Wl4ccS[H*qU\;V0L?B/2',!<>g^ZC7RO%QTq)/lZWl@V6NT86O[WqLIcqR(W-Ahj&S2A)N,olOA8lS6^Z*iB:X'L
%kg/J2]_Bp_$&W=ZX)S!RIhjreoOm:CWY4mrBO@B-gW8<Vca4eJ,9F1unE3?Vj@4QXXgCQm4tEg9gh.\L?`;:1K4SU[e7Ub(&G9#)
%_4o">I4eZ5Oe6LA9n!T9:!@Z'5MN8@j!H^QEF[GkH27:gqml_gWT;C.lnu,JPStZ#bn:+?F!++X(6:RP0h?rK[Yn>-N:O@g$K>Fb
%#^9E>RiXE3c^42ns2>oKNBLfJf?Je-j-S*Uhfem#6id."^AS,>pu0mVEb!^<\omY-]WaGN;VX)!^[M?+X(#D!!&;NOfA'PA1JQaa
%:3XY`Vg4hrrl*2.O`qi4dn!i$/Up'&Ff\WG^@j"D=Alpt_XE3=`*fbB4@ic`[=Xg:]T1_d%0`sP%KuAOHJ:=<1W9"!k13F'9_Vdg
%2b^Ye[ZS-t>2)*Jon%/.D3fJN?IsTAcm&0!?HI9eq>St;/i?EdV4_NHj0XY/(?7n'[jtj@cVn'4!glVS$=tEaI4N`GVXpEa`*/a7
%kB\&=p*9\k)H[Q7P\^i9i=<9O>GJ37WW3$pSkq6Ubn_OiiqANgb(=kEoO0)[N@;Cc5jl$S6a`"ZLf[XKYk$?51M<,<h6f&Rg"fiU
%k8IpV0lVBL]Y'"Q"/fW-0Vbk6[+fO_f6/UfcF5SO"rMj!kSOtA^1fhr9a":->)\5]_PCjT-nOr*VOKMu9nFK/l(%XNCo+\f-9rR9
%gNZZi!VZ_cIP;9nmubU]#W\=D$VuJq(V>OGf4u%^`--#_=GM9nWLl;l5<SSoKI?]?)Kug'4;I!oLc-E>QHO%nF5nZf*C=7okD3;Y
%dMeO)2hRgeA6l[`.n^*M*((&7+2!lHjGBDG`jXek=UCF;M9C88or`!u[INr3r/k((Z89F1JeGr!'c5%qLs=NDF,WT[eZMp&45Q6A
%LISm<%BdGpbOAUn6]_#tWT_-,OF7iq=bI>ghAI<sFDu($?SbuDjUg2@.p]FcZP)+b`nT)h2#h$@L-=#"`gRKg:U+X;kAa.=bmV:1
%MUeaGk+bDd3Z_a:9RDrB!Q:hC$pZ&*Z.-.bfYN:7<1Hj.,lt`TC)_8k&Y/"L'I)JjME6qjnk?$rWm6Kk#b$eIg0j*jHRH?mD)Pr<
%bbDgSAGSoC7F$K$F<=qXbVnHOU^!a&;NF@Fm$qNcNWsrEg5munInC.$\roRdQ`MG;)qU^K&uiu;fJEZR;Q`eeHf;\sHMD5lQsqt_
%llfLVP)5@nY\uWQX,%5$BB!13#oSQ".D$-B,V'CFchH=[bs89>X5l<FR8o4)lYq2iL))2,%0CKY@*`!rO&kcrp1QX+_,k1Q/YY,i
%c?Na>f]j"U;]PPt:ocuq,VS5u9t0,3^%Q9o?og(p4'CZE0"JE!QE&S&D=5oOpfX>\^;#CUk;F1e'ACVX-s+A3@eO/CSWZUTF:;c1
%B*.L`a>iU'#b%m?iE;,q7LhuMk]V):I8RC'J(A$Cldln6Vr1<EnhM!TmA\a`pN>_.i*KlC0s2!-UO_Q[>QPG&D*X.co<X]^?bSrZ
%*flIa1D7(=0,2nsSq!r"'i"aDJk@mijAG*$8(#1SSNh8H`-dbQ`o,aX`:+&I:)u5n$jAECG7@+U+XIgHI^L_#`%#[HHIgjnFN+[A
%?3db'J$e8sI\+a`@:p>p%.R#B5aHHUa:(14]k]"Sk.OFULj&o#jY_E4bRhe29*-o:-.r?_X\nei:d9`3Obd)%r^=-B=:llKkh4.H
%0Z:&Alftl%aDVL]`>adr<fVkeNj'JO?S2;!'/muiGrj+6;,jn*4#2=6/+`L9Z..cJWc,.QF,@(G[s`C"':XFVZg3PU!-dKjjfBmt
%Ar\m4cG9G"_+%D*nqOd?1j;<<m>DQ'eRC8n@6'DlI-C=rqa+6[b[P@*L,_'1_dt'UUAoNi?YmGJ,FoJXl2J1gchLIg9Yr]o&^+.?
%0X_GZglZPHPT>o<+WQW0MDR[%,%;g'[DM:g4XHQD:d[J'[?S76Z]4DS*lBhn;!F8])3tHo,s]aOkHeL(ZuI-jh5bR_V)q&G+pP?G
%E1O'64G9bB"\Vj$!AiXr<Q<)A/gl_*\5-+mJg'M?@-IAdp,)`U?9,(B@4lW8c'k*Kb^_.(JC\($#;RCCCG-\jD,[<0NQ_[]m':l"
%DJHHN_'<"4rVS#T@GK(f9nQk`fEMg>3'nlq*[N>>F"40IX#?4uHd,X[`IITL7t\gH"`llTM"Ze4H!d-(.Is]5L3fLANk\*'.HQFW
%jnBG>=C:+ilTRu28D+a5<ObU^Y^5;"fbi/l91BaDqGQJ[?+aR7N7<3&8(n2b?r]>P=)#?rK0oORFTbt_i4$`NI"^g=8K-j\5H;B"
%SYrGLhp-AOHoFi'Q)s1U4h^8RON-3qcdM#E)X4FF@TGcM?m;sdKEdjH!HD;$#Q%,#(0gOeaL/D2^,F)]./Sr*UWGEq,p=H[Ho5CV
%%sUFEh(oc]*XRc.%'/lP&`S#&0omRb//Y_kYtFr!)54ej9-gir?ab]SlGaQ*n"f=/\T1WjO5iJu[QD,4T@G>Hd[cLJZ\W242UBo=
%;(\u8ejQg0GQT3!^:q,"0$!9C7a:Edk$.Ra"=@]HpSYmtL^UCrYC)>-l>U*WV3?<3;'d9UR3i^4/H@2]d;fqeEKhV/JK;W^ia?&0
%$F`TW*[,ki(pOXu-?Xc_OZha:_^ins[Nnj^A>c.;[^8qg9O]2J]lj^,q:)lHGu:[?.l)#rOI0fZM(d8'0pP-7jhuL`H&M2sLBM_a
%0W-qbfddJ0lbr4?jg>Sa_i6uM@Qo5+i+_aqg-LT=YEQ7_8G#=8"qRg9-hkWkeP%I3Ko788h909M/^cu];1:FtL1dsa5pTTWaYJ*K
%RVlfuE"%J3B^P@Ko!4j$[>mpb@KFFoIf3je,XogH@\,$iaqftAYg0VM)A*93^1:?"6R`5=\Am3Oj_Kp0/8>s/@U=3_&(jpt]T/o*
%b*e,M<lq`t2]m[?>:+Y4,L"%9(/:7aW%cH#)WK*rF>QJ8LE;t)N0n0"!h4,C9nW)5C?-i[AdqLl'kNg7!u)9Z,36ao;75CjQR.dH
%CV6$'W-)uf]g$D)Y\kMhnmroB5@?UMpZB,IJ`U_`&?+Z^s2soNlemhA?&h9/J'[=E-ojS5pn!N=-g`=J'siZ_F08Rh@AW9P$Jd"V
%Qg;".=I.(3@Egn)hCcl89eW2F0]QX(J`nP1/YbHhnaDao=Qsj'&:_eX7Ins3o2JIKqgc[lqT!WAS]pt(E#)fT#+.<i=f#e>^`t^Z
%8m]d>,?1>Gn9Ja5I"(2Jagf2Hl)b^]fdCuS<0C4uj>LUY;cLNCP4[sS+jMEr!^-K@nc<HrQRq@];(6f055Co]&sO@kb*9j+CB]bE
%N*E\Y""XH6!Z``>.%)WNBQKY7M&.g@PqbX>Y<bT<]HSVqn\'T@d`IJIBHd:S"uCmZk$#MW_Ra,[Vf<3P8j*;q&.@G8PdHWJn9$qg
%%Mj`;?lg8(K2:aneO!B'iNTRIPO*$gF,EYiJ[(L$U;&Q`SQ40Egih\.`66-KQ&5(=n<)b-6n-A*-bI<3H=O_<aPcV'JtjR\X27?P
%=3_'Hl?QQH+'uiVkYph;_-+%;_]gf3*auP6[L7u;+u;PGcB:O,'H2T1aL2[@:=Y;i'&97f74Q\nn4?1[49:s=)C$E/iAaH*MK728
%H^QY\`tX],fn("P8QgCp%l?.mP#INooZQI:XE.niQ(?Kn6IQdmo".W6?:baOX5J.F"_\Er8oXB0cX)\1b^#.HVltf$G-"+p0mb,)
%iCiE;9BVB`XD878n9q+\q9&4LP&ib<E`d7U^I[PD"MesEqlX<jc^9mfA0gftigu?Gh#Ybl[6D^!3c<IPQU?-GqT;`f6N6`;9Q?R2
%hm"&6kG=m;$O.fcnhLjXLlq)LF"6CD,FR8AeZ&1+$"nTrHuGSb=JX[U>ZCR<.4MdIHT*EFAD5f+=I@L%E"HmZ@[^7(][!EiH<Hb$
%Ds9*!D<&ZZk)f(;3?K$l0u-;=*@&)<=+6!tFK/T6Ed8Lpp]._m4;'k:[!u\%'Q@t]%]r2O);BpE*S&bMbHU\]*/X.3&\!fu(q-Ts
%#4u\WIS(UXaKZ.&CJqZ`gS8T%'fCDpZ,IYRe^$TXDPO-2]DBKsV-rP<4D;9C>^3?5_8'Qk"tJjLf]qP\0:<18IJc:8(orbcP/l*5
%e:R>f'EL2$BCPr9I^cf9$&XFk%U(=jSNogJW((g[?l_*hl'Nd=!>r*FaC;$R+"PYLYLk!k!?mDcYTQRUall!O-0PBjDJtW5@fI+I
%"KZ*N;F-U@l(K4m&GX>!Y96IT8II/lP#.>OYln<A`[*JK6WPNW9Bps%!a-/tglNiTh^QXpa'2pQ#OQmoBk>@`i-G(M0MCgmh(_Q?
%=QM@^:qEeA&`LhY_[WsUJ7iJ`R.q)$N1F>!.35S8(MkPiUI[f\[=ep!]sU*u^]h'5-ooA,)G%^r=lc;eQ6\:ra:_Ne6H+a_HCq..
%m(g\eU14?r)!n[V8&F7kllJNVF9;lC%nWE`$ktt5`B6Hn.KEU?-G*HJC>jCH'u1b^4)_49@Nhe)"Vq[n"VspmWWER0]96Vi$b030
%d/p#a&O&mV\nKNZ\WoJh=RT+#JMHB?Sa)0EMI=-E!pIB:EHf[""M=mRpj<TUhn(dZJHZt=[t+\uoD&P*aOYip'k#@d(T`/,N"o/N
%nB0Ce'K9\r!Onm^<5AId>X%lL.]@m0=;`UHhN!<t`(2.5Wp&nhQA,aV0cQef-1o[#L"c5l3.YN:P\)7C^dNg8'j.Q%(b9!FSjHUR
%ICOn5Up"425W%104I!$;eY36`;!3"q"mX+ZbeA2"!D6k\DZn)e/PsnlZp7>g6OUO:&hW$RpOsAbW_EdO+J(rQ$S8PtotCl*2dCm8
%&7=>sCQoYFh^$;[L'q+9Wl"ukotqCjUhEjDQ!DOu\UXl"#]HaVR<s_\0&;)IrBNGH^l9aJD1frLANiL2Ug2Hd!q)ZFZ@?sc9l7A9
%/toB3(0\LaN:o-Gm"cF=DH-oL\<!Ql^?##jDj4&]=98/01KFJaP,*().hH!mZV"G(!G_WO.Y-an_]bt/jc;H%+G_CRW<<qQ\'Q/4
%$IiC"=FloZ<N9iOVj[o%8aI-l^f!pn_,3jMQ*)k/335!55k&?..NPe_T9'9.]:gKLLC2P[#qCJiAQaI2!'3?L!pYh]X8iGQha=Jq
%]@(l(!*k"QoVlSY8opA.+pHuhV>3KS5j<b).8ZI-64/rr=i1SS3G#B*^B#2i@0N+>:r<Xm3-*"jKk.DQ8IRJ`^lg=$d/mlWKGIAp
%g_[?5&kH$Aj2IQ?[(uFngs$9[TVefE(9!@r?_a:u?m-2VB!JC8E&:c^qj>(-#&-P@0MHIO^c@%l2[V,*16bs=2*sB.qG[nTd%%Ab
%f@gQi`P-:qQ2$%KE'I?r"j2Jj-dJR:nH/&W>]9]In-'UnZRd">T`l.Z)(ctK@#I2%X#+"QY6)CV@[Mib.$)p:!kJQ1"k5ceBE@f8
%IR+@?WG3Fe\m&gZYP0H)dG#rbk(X\NJ:=NABpr(R"n6`)N!:&J;3$g@YQD&<=iqFZ^hl+o<kuCJY?g-W;@+n]J4.F_`TM&Kc=kO=
%XLfQa+=Wi7%imC_%8ailH`:t0aP9L\jpF$)^=sAq?PL+1C`lt]*"335!)LPRhUMZbH\rXtJ12"F<W`g'Etqo[8et9kJ^;rGTR<d3
%?)W=C6bru&moHXn#2:.U?k_g/T;/bSMl;b`Ta&_iF_9%'\Xc,FT<mP^i%t0%Ds@0Oj/LK=?;0:$fDnkXo?8K4J9;h@)_bp1i<F8*
%aX!I."*Fe^DuedBXpuC9DBZ@^M&R;*Altu4Uc"M^.+eN;0n2g7p3*Od/7"LjlaQs#49c9<ggpCEJHLpq3cG'L2G/s&dOV[\Cr!k^
%LCLcBZsa&C(.&ITlZL\WRktpp5Y[@K2,GM,2R&R#.$/t_e-971Z`McuZZCa.Hk,0&.<.s]N:DKTV3=PQ\W..=YZ@TO!uT.m0S'>r
%O\Et8E1du<MYgEu2/iP>PR5(@%6-Xcgjk)S>ue[r?bCmk08#KQ?.rJ`:?*+1[l<4F"u?plgTPlFDP.1@2Gdo3Y*]nn0Pg_68apQ+
%!W8H<nnCbZ@f;-0qV&pu2D@ISib@l2R\VS]Y#2,CJa=\&(Wt2Lk*t.G\Ip/4g9CaPK0Qr(&U"-b`,]$j#=;*B$H@c?Ls0C[b>b<W
%HDTKDTWEU_%Nm?eKeB@t%^#kC#KB_D^9@^IBS[Z_F5PUNHM!4;-nhEk4?g]@-(tF.!%-WX*N4[88sab%c?>)jY!#\8J]L\XU.X'h
%g*4BDZqD3Y5hu.G95c^S#Fth\fE!@P"WaNLSa$nA)ps`L-MeZA+Q)S?NDKBk3"R62f&.'Q95fZO(JZ)X7au&Y2uqQoX##;/BTT!8
%Ir;Wu<2qG'^_ie7&N>6D&Yq[?#!9?s%YQXn[K[DD`EOS2c?J23R&R4H#/#dq/.5Ai@98'je5d/tTM2Rt")SJ]Cr"&F"hV&tJdp4#
%/'ds+#oeuKZV^hW3>k4Ae3KK:Buj*#ZYG0$WWEWWcZe=On;<#aOJ)<?VH:YC<2Pt+J]^Ch0n>BkZ3;'^TaCQP^joAZbnqrhBnudP
%DA:/l5VC5'^jt`%*AA&NT@*a;SrU2Lc<N>'cn87%Lk.:)=mSY)'j8k,/2F2'h%9ba2<%(8]eu7O6anY>gcttdRd;lKe@72GTG`GM
%%9O$DY^uB6!XZdc,SY!3CPuar?OSlr81W.DPBOU6#/#$`)JIY*]D"5Cj760_=J14"WQjh>dU&gBDkF4\<[^b7r:u?jBL*/?gaeg:
%C&fK;;%#8.iX<;#<<+Q-s+no:aP#o;fK_#"Q"&P?l=GW>9B-6C2'$h264=/Z&08t):7q3#O%0ciJHHa_94Ub;S>WC_7LtGV?q=EB
%r*XD?)8q_Xj_g[pTj5GETKEs*;aCY/*uHjhL@?J^4@:5*<QHnXB<2.E@#Su&;XGjX,d*nP,Qj3a*'gPYDBaSsf(L5,TT,n9s"Y;F
%W34$IGl,$<%ZF?]/:XamO&tTKr3[FmkPth)+k=6l`'!<V#.r]7huEuWFq[#hl_LFOn,OL],FJ`W^m^(sWs>D4*K'';*Pe<36lU;W
%*3=c"45_/r`X]r1N&[tK#>i--cijrTYlDpnW-q"i3!9b>mP'4tYiq7b=+V!.'?mY\bcE[47>N\:@r@/8fQq'L;A-hce<1@TAgQcF
%,U&8pAr9klr[NJf6#ZSr-4(9@`/V!R/5.V'7'e.,,nc[m7!08ZOq99XX%`IR/P5J`G52c)BZ2PRG58j#$A">0LaEI+oe)(fe3g)]
%7%M</."pl6,mrT\o)B4tLi`qL$K8`O$F*]mXKVFb/l;n^)!I\*cM^o\U>[)fO6eW<'8:DrRA(7p/kDj4eR_Ag!m-COPtDb-)+]TN
%3%upe#Wl;76B!)GV0!lbelb!_@0gZU-LF_L_Y2Ze$eQ:J@4=RV$o3?K,PD6]Yprc`Wn<uu^.SH9N67m,-np>8YE'"V=dS\Ms$[I(
%ZJI3&d>.FRV%"%#Mkbbmd!h>35Klk,!o'@C^HMSj?iSFos%uK0<"f4rK?6qkHf"&HKFJS'9ZeYOZ!5V^HBjb8OI-cKT,Ui9JlGr0
%^*eK'-]$8QrJN4F[Y!KZ?/)Xd*Bn)g1(%6W9Tll94O7jIUjr>?<-MS2:H7JYl39d;KSWc@mEfrk,3bn@SkJENf+Zg%k9$Pq@ap*"
%q#XobOu)Rqi60jG=l9`?ca2-ANe<*JW,Y;YWD6Vpl]L^sqm[nk-'?)S:G.cU"$cQsFn9):5DOQqM#$oVd0;&u"e-1q/&.J'P'ERt
%8fKidCA+gtB\aM\m,$ZdOROV+?`Kf>ZMm(iKK/8jOZYR;KM*K%].ZrJ7CrX0oGm:^<!lg`B#VlBJ3@_P=F(Ts>,[kAk)Qh6k9seJ
%<cmHCoG1nj;'OgfF%q.u/p2p^X]?h[^@M>9/u_%7,7E'0Kd8+WJrrr",!9D=6Y'OReR=-&m<rthdI(I:=6l(hluIT4McdT7P9`';
%dJ=*J.9o#f2ToR1[q;+1FiVuY6VCF%ThA/FF0IHX#?]d/f>=UPjBU9dT1AiA]E7h"&Z][qCeD]*%q/OA>&)ZUVeF1"Ic^>!.8)<8
%EqO9[]J"N<hS[=Sr:>M)9>;]EA\1s>Z/2Glp"5)nLJ<`T]5^SFalAZmP*%DmDSqh<?A:*:9ZY*F%Q$GY^!'6t<fa/df*&;\/+4^:
%HA%N0osQ,dm84hAS\VB)OlGBtl;U4@8Ig,hJo6cc-b+D,ho9t90"2?rd_)OZR@qKe/stShMJ\s:>l`X+^s29OjTBWm0+1)?<-E-k
%:&6V387HXl!cXD<1lam]^b0^^?;N6Ilid9/p4@'_>=O([fFBu/h,AU8[o]4=UCK$7#M,Pq?oYQ2Dba-ecke'C,`&"aMV<*&mQK48
%i0*5h]qDuLfojs"RMW&`aUM9Y0/lFdgl!+V9?pF1Lb$_f.OXP1-1E>3hKrj=qafjI\dqafYIaK\[_@7jH?F_WB@Hes,@U>Ue._^j
%5)?;A=nAPOf+Rn;s7>%"ru&p%pW&HZMt^0/Z[@N/-[(!Zr,h\BW-2b@kP]/apTZ9mqZU$oeb;q6Mk4jNW0][)7P1Y.pbj/sb42Hn
%Wu^(A5kW+dH"5P!d?*#N/K2MCa!Xet=(#N>IZHGWlM"tBS);sm;DJ+kp\_)LgE]+%01SRbb6Y<-4^Ug7QfHOGf^Z(6Yuu-q.j`1$
%p=qd:*r)VriL<[SIZf-:,$M&cF.'X\I:_j-qR#e8p!MR.351AUDL5)C!e]V.2PGo<gN-S#]01;hl#*[Xb?D!8S^ra@\Rps2dN30$
%Rp0n_i0'j`#uW4/>8#7D&\<*;Oi6jKJ>QsQg5!=(I%a8sFT8mGJ[4aead;m!;YkOp]at,.GCuN/o7-!u(AO[bD=BNNV82IqW-g$q
%oLM'!Z2(e)]]AC>'(!A"(bB2]W4Js^4?'7-4KC:kC@IN3Y=H*egW1qSW4J":YA[!k?s0C=Fb=/i3VV!gNnWK4R.A/'Z4J0fW-/k>
%Cu5Pn;ljQ`Xb;b]rN$b3PsScnjX%'iS^M>)-.<ThJ@\3LgX7PXTq)'qObk$\bic'N\htm1>cM=;]Vk`eIn`9hcXCr.$%](Jo+a<H
%&qj]jDcoCJs0/<Or1Yd?[kg7g_o9>@Z@11^E=1qth#^k4%,TSX>t03gOo/u&<P$O\W'C<\mYCnS>Fa=kY@pqa+.0\21Zc\+e>$&5
%C1_&hA#Z=gZ\ZTK<dUc<Ms3c\*sl"O%W+AZb?)RBV+_ke9"i9q8$<1+DP)`MQ^1#+cHL]f\cWCS)+o:8f\NpeBQocQk?XNE6`H@%
%&H-rQ1Xos$aK&PI@lrKpG+gccG"Fu6d<[m"_.n1%`NK'+_bW1AgN@CF7j:VPO.'::P$2nkdUSO2AE9>+B#bsL?#+GH8s5Ll-2ur%
%7V_Bbq9,4"A7P%A(FZj_,3M]QSQj=<h;)Uu,,IED=%_s-@Rk4dlOFG9Ys?UZ;m]iVl;CtNXXNXYM[YJga4Eq?q:+?&p\[Rd;p?$>
%Z^8+TRasob4XqFX=.f'ElRX9$Cf9&3=11g@7G1>2(L[liri#OZV-5>lW4A/MORbj`QDG_oI7l-<W"7]Jj[g_L#:Zi=V@F!hK7Bfj
%Cp%p7MC6C'nb4?[0'[3<'!css\2BIPT2_Gi3r<6cP%j`#<8!o;2"f8=FKZ(RcB=61am?eTiU'V*B!e2hJ,/PU]sqsTjR'NQ@WDm'
%POm:0[kYL<h/,PWBT88B*`:i$9/-e:CZfQ+:\3C-=JlP?8K\qJB9t/&&R(Xh#,%5m48SB<ccFgWfuSnn`cC"VZ-eF;/GIC&HHtf(
%'_>$q!qW!'l[c:Uj'Tgj;'M"u<_g::dO)t)a>"T4ha^pEY!HsrFt%_bbT&Faji[+FPJOCh%5JG5F"6Fu5?:jf3_ER7O7$"\O1oK]
%I`\;Xle/<h>9Kt^e9S0&+3gGO?6A][l.':<T,)6DX.SP*buKs/0/A[&3_$&a3#aSEF=+Tl5b1CN[B"6DU%<,HFf_%UV^ZahX,W^!
%"Cp`9ZNInc6mFiV7`ag-Wte@M,e@m;(+9pV(s!B%mYXrb)d#]U*0!f=[b+L8UogZEH1JJqHb?n4%-AF(9=_K8X^gafk1h]4UH"f+
%7T(O*cJ9M4\o[W*[W=B'[[_\a31=nA15"02V3W\'mN9XKbM3B_-(9#o6-%8U]Ug#q9"hl!mP\":ZG]pqG4'3bb.5!,V0D[VWdV&d
%)U5f/l]9?)?F?:b<[?L.3Hm$EbW[TZH*sqA=T$FO"8kc+YL6$0:R<6<[^*C7n+^3/-d4B\fU5:e*Um/PX38-8VD@"mGE:"5?>:-m
%Gu8s`]K=-MWBY,i-IlaTpR%/C+kaJ;Lrkl-(WiY`GAfMHjk];:m,!a$BI<.qM1)esp<FS#<jr7AQo+*CHJ1`=DFK>CX:;-5K,0#Z
%\h9+&(B?I.2M&t=4P=mQFlbVV&N@BDL7[`R4h.nMTj04\i6SDUW`'Ts[[GoYYnW0=NuhNOqk[2Sa$a<d,@pKW_R]SIh+.$S<b\:;
%?D#:_l+G](>6XX*BSg2Je`Z*nq2sc$1m3`@_eCBD6jY&4ql5TLL?d7ad!f=IbC2I&g-1`_Tj9&;VsUCH9%;ZJl3>`I.n04'>d3+j
%,5(T._/ORbl>+khr1H8>pT,180"o@"R`'7=bI!:`?ajc90<7Dg9<B16RVH[ki]m8@oH!'4F\TZ0=BXIHV68%C2h^>K>NU?HQ2+49
%%9e6Ag<kYgKeF)1&e3UJ99DV>Zu!(i7#'B]!(W-#3**-ko3p%rCm#:l=N?5<n23cd@&Tr0#;16O6?'s6!p5ejaCNM==(aFhH?iW^
%BB8:Wo$7.iCE1-.MqH5M#H3gEfYP%)r4L^EXVK[%8_D&"VL3qi*nS@WS,*9>4nJYD`l:D2CA&H**ir&#^g:@c?_mk``Q7IK%OThK
%/a=H4Wk#?.,9]g#L]KPh4h&\B;_LYbN-,^6/\H:l#DnHbYl2-SOtK5dU#qUEZtP>,(&mN^Ae_a;aj%r%C&9ug)O'hbJ!pNC&3]%$
%hp\'2^U]99,/.',*@<G`:oXf*.#n,Lc@k5DCWQiA*c8,J$WoFOctHQ8CbSRmL!6D4!)2U"p[sSRIM\DB_:Jl"1b+:@:/f"hK,fe2
%%8NCgU:jl,ad\SQDW1MJGUnm>(jgtc(kI&2atOu;P!H9`N5%;h#CD.//S]&n#h1F]"<>Q#iG]4uf*T?b\Z\4ieK?90Z)L1+liWLA
%,PC)TkMfR?+<YqgKaT>%1W?Pc3b(_($OH>X<sf[XjsLHHR^Sj!)IkRXE7simTds.^Knm&/-8cNI>n-V5p7aAB^,Jn8-+'OT)dalT
%C0e@k9s8lq%s!=U"cV`Qfc'CbJg!Tq'SsOOBDh+55E#IfknO&#13%^"#_AE@.?TW@8mr(t.#NUBVEK$K_*R,G#&sesrq/`h^Q2tN
%Qb)H3a`&EjT]fVf*#S#iho0p*9h[Ar;q,,'JRC2*bg!Slf,@hZn+Q:0rLG@+V-Eum7l=McQ4i<%rk^-S-;pg$%$VAcV6i?e,*VLY
%W=:H4p!rVmf"/PdG8XJ:*CpOC8*H/M5/0uf5;/lKMJOIsC5VoEQVo&%3`>tMqm%AZ8HX^62OY>W9]OI%\bEeO1])R*>:MhV2J&&"
%SkLX39SkugV-KBDi5#trT$\uJ#-sQs#C`PEUb-8-k`hVYgqK0GbX-nLH6:;G;K$fF+?cW:WPOVkSS@.8oo5po]b4FY($*1U,>&GS
%+\4Tmb&f,dKI!Tg+uF4'M?N4$'-*Cj\<;0TPFZ452\k\ZGaiG?'@Fn0QplM#f7#Nrln!H)an"_:)t4ol>#b4>:i9O'_,h'T<&IK-
%Y=>A-,QdQ1Oo8"(ml-qT9Rd^HOf.4GG962r$kC..kfr.1#a<B^[odB^D`r68n#2KN=aIiE##U9pM_$M=>uG,p6Q<\9#d%ZCHXR86
%F(Y5!?81E9AdQmTJ%<:lE!TeW-\6oea?jKVS`T4KgAbE?3R-PYSlft8M-Z!,8t#oekEjq-l86IH#jbeK8=&!ai*n3`>Jju`$:33C
%N+B%V`F=4ug7W$+/(dO=X^iUf^X)nrDq=LFh]gTNh`m-qdceKC0l#QNdI#t#p%K/o8H[Nt&cTr'qY.^p4BaQ@l]3?9U+YL-s--$F
%Wefb:I(LI2p%.(;1+[8jqD99Y_h)qC8C49%-,b[2a<#Xflp(_"'JC(AK9Q`%7_1C80Ui[%>(+Ql)Kd']oUi0M&M[R_2M9N4Mt:aJ
%SbRi19K`gk)RSO[Y[NPCCUDS6PXXNMJ)k"kNlgdf,q2<$qg*!jHCiTI,C1J^bR"JZML[hfhU`jdPhNbKBLBD[Yr]a[ao2%(J,V+q
%_[Ju#9PlKt&ksp6)5W]_.=N>"eu&!Z3Ogd_X"8h`D/2/%`R-CjUHYPsOfhXcmIr`A]-;KumectArb[BcW(6'^Ks,=A:i^G?=go![
%V>WQ[2YMo!IC;$V_HhSnWSH%c2t_LK*GD,6Z[K#&cZJt$i>m;.?`o1aro66BO8m4Qr7CuE7mX73>E??4&N>NN1KXIU,aa8CfGk8@
%&Y&H1kf4dITfCrKbJ82$Fr`?L^9XE(Yt47?[8EB?P]ibh#hhLM,Q.6,/(:]i@3WK9eOTN.dV72OZ'7L(]Tp@kNP4SAm,PRF[ERLl
%j;6BtD_P[XY<Q3#*fdWrXAbAK@LGoR22ooH@mBsk#&;a))PDT2(.6M7KRH:Gcpqd<o'gp]5O+Ik0CCE8D3F[.Rk0AKRFI.n_?7)b
%rEIDRqT;3:qR:2#gAMn5*0PiQ,ri.MdX]K*?)2"[rD@fVs&T.61Pm#YY4o!/7?7=k)+0],IqIE*YKZjkmCg5prV1SH-R13MN#K96
%23OAU\N2SKSUkZ'5S(fN*=U/-AQM@)d_=4lnd_W<d_:#JiI`i5YMIi$kg]O4[]p]8fn`U2>)(%E<n`>45Q9\Qm)Qj['?S)dBeB(I
%d!uX:p[oI-pqu+L#m:9')J8Zomfn9S%rSi]ZXa5VNPVuE"NsR/H0UHf8,5(:UJ4oq<D*L*@^f50H2LsXHtC7nqs[/#7=C64#(H#`
%O>l*Tei@bBVL_]9+5)du:IL/]77s%D46i7c[uhL#e)];tr0=+]L%IpgdJN-Qd=Hcfr:+\1`M9@>?L^PHR.No%K/Z_:K3$+_Mi@<A
%;7f_,pZmn?GVN9/ro@+n3!'&cYchiM/P1tL+6`aO0*@A'_lB_:[;%kYgG0TUfGG"\5+1B>OUZ^a1Qnp*J+"Bq&QuNf\MJtk\YjbW
%YPQ>_b)D-M_#Adc6K)A%aLO,CIMlm3<eb;[O$.=d/,,JLgKSoas)]FYYB>0mH+$cc.I-"`7Cg:uY\^3$RNWTM*@q]4&F%@9b:Q/`
%2nf(59[0S-QfGG2cu%^[K?OW8S$V^CC+3IE.lA.Y:CeaD?"f]E8*J>g.DNc)g,?!;%t.)`h(&jKbN&DeZGkS@qU-bsAOZ4P*c\O@
%4Wdt=/T3FZD$/AH1(roQc+&.8I!bCkCmWB;>G`p-['jq7c#L_';N>Xk".PKcTC!qQnUL:W5Q1$G^\d3/qWjdRiU:.RrU`cVGc"D*
%VGpTC)W9?g+dQoV,KcV2!dJd'/G7/`_u"O/j:)q%*i0RS<i,@Zi=&77Bj=\;>aIfVMJ&WF&#FN00_6Tl:la;96P@n4<YoTPQVV(7
%PY2a\17%S1e1sub+=d_`i<gk'jN8l<V;JQi+5QuD&V?rc7):@*8=Zck>5ILSTI&\mb%VQZ=j,n`9$ht4B;[L6SU2q@Co0$=a'%]<
%,jW?YTgeC'[#Uo>XfQDOqpNUg`:6k[R=SFK)U!DpFt!>"4t(COZ"EONbW_)@n=dH"*'4jm.cYQ+3JA$lm0]/_fL<?DYnC_QeV6<s
%9/#JlHl5<]DKT@u$Z'3i&OE83[ka,CRXoN/H@X<!p0bg>o^rc5k2c/&k7bhb'rEQ_g"c1@VAW+XFd%p7)@oJPTS6kbJXu'<P-8l6
%iIUWl)QS2C9;nV--%N?Z=V0@=ej)OTNd;_'m%B%\,tm79^a]_SlFFD>1U`Ss03.MFPQlTp7CuuJPMdUk`/pZ=QG_=*n,OI5-q\)9
%#&#OoiDT"^j(s@cflnuh`Ui['Yk6sI.J3h]6I,m/L4\KO@N7rQ>SD$@A6BYuHArHH[qT8PH1/8)b;"uU;o-9<r#R=C8_p`&Bot+V
%`1_lm5Sr75gFJF#E2sjtEkIjiY?f,'![](eF<DV3qs^kYKrSn*Qmsh7$R<9!b*A)e;[&;1"L67H.!$h0kFG%l7<C]EIm$`;WuOQ3
%Gtmrl@JM3(FfARQTmS;$LoF=5e5?\+(W4>%BaM@qhQ^k?4uiPFNGl3'bfs<n1FC('QW+oq8%c.(g>]/3Jk<SoqJ%P,U.$T'0C\<N
%8QHKLJZ^6=cF0DP_Xt3U\N<b6@pJC$5@VC<"9e.fJDtS[dE"/O)ptB6\D1GuLmtFO*>c9q`K]UI%*mnD'Q:o&'Gg[6$_]04P'+oM
%@D1/g<%T6sG1DR2[=k8eep+6rdJ84>&sRl26Z`f\gL9T4jhl*Mp\@hqauIT3hU[7k&DFX;_4nleqel1e&i3X5,UQT4Cp7jqdAnjF
%YXti9b'ZuD"b6.B+Po&""Xcs-d$5tV8]s8t\0tJPoO(^X?qRrS8r-UB*,0qkn;j^5Zum*rrd:0fSmOsn<em!M^c1$*@1IU`ki0:4
%&ZDG6KI)JKYBF6dfG9nB2D+49$:u>p5DVWcMdH?=Qp<EJiT4#T>@M>kGn8I2/\QLnG+NNne#2<_`mI:k9":9K$\FV-QJqmN-?ZAa
%OK0g)T68Cdg_EFAe6U=HnVj*VrSfTR]:W\;$RK.@-V<SYlhecBn!"ku+*1'8\=?S;0Yf)#Y?P7(RS`3U$J?;?oOSjr3epC(C(>ak
%W:<qGG#]Q(,?CV91^36^MNh`/l.REEO<nj_[+G@b\%-!_m`*JuAL^AsC[pK1:J#on"f1-KQ1\37+]1J20Ptq>%MUL]m[XRVkh<EF
%DSYhf48"5eMWlNLiOC)Hp>A,iQO^W.1^o/IK<=gZCmNTS\%=IkZ(inqr7pt+9jsE\o._e\:F#ppNA]C8.UJj/MSK-"5mjSiN!@uE
%[qO*`^oYh$b@Shi0!5^p79&[%YDmIJKmYK>[I/Mpb/P\UFas#[Z4-V%]5h+A)e]o/p04!DfFU^aQr8XGf]$b\QQ8.-gqs/07i"e8
%e'kK^fo^9@o\[<b=C>$R(`/FE3Uuc9q45rg`=PUrG_r5*Gj-;`-"90eLn2DHU*Zq8Pp*V+SS<-#=:6tJ;HO/3JNgF@$P*Y&RKreQ
%jo1tt$9m,_lZ%6O`rG>WI7i?\(.cMZT%c)e07HBQd+I"h_`p.o,[PdC9E]b_HPI6+[>MV)/auo'6UT[iP^Bp:$qbOH66?djBW=[M
%9A;Fe7*i$GQ#DB5D!^f'b-,8^UMk):_EMmJVUJ8T*SrIIY1oDu9e[c5<QL5=LPJ56e@7;o>dN:f.Z(c%?TKDb]52"p#MYJiIL&]9
%/K-3`D>m5(D!Bg,0J[@Wk#CXaRGlHQpBFVKc=]]$="d9W*?%S$gt&*Q>Wmi4QBlVtUI.38_>FdZ>SnLg]s8:DX])KIIPG"=PWkpC
%Hu!rA/.K@<26>LZ\"p:B8)2oi>XOKHIMHaLm+p8N!RO1(>C%'?[E*4?n@2\u/o>iW$Lc0NHh-eTI=5=1hn'CI?]b]dq'Z&eZYZnk
%WH\^"K2/XVhPmC13UE5")`ZH9]3N#`LTS.d88,9n`nI"[J\Y;fS<qLn@1gX4V]_;Ed5EuV/VbDWn\M\Gg2jaKmP:a;QGPene;.Ju
%%C,2?<To6@)>D^%hkRDlf/?U3@n_*C/6-W]LtC5$$.@QqDPH"=dh?b=JY(s@[S8B`4k5_"4SVuBbE38V5#@c]o]]0dFkMHR?]KNF
%)q>*&X`gjGM>R`V`R9ufbF5Nu=9>m3T:7=2DS#ff!]AcQ76=h9mhVfe@nbit6jmY:X!]Qu>"?iXI[J7+k4EXpXQFZ@\/)^Y+%*6]
%Uf"K)"tdk&!BSna4(Z:;Gat(pcTUt\<q&P@o+-#%k"o2./4m7unpDH?&$#NQa)DKf0PsfrSPOlgk4+]#\"B^W)o?I!&5MHK5XVc?
%Fj&-pK[:-Smu?fW<eJqff:AunXE`l#C!1XL)@@G'+b+#g#96#d%TIC;1g%?g>1;RIZkP)mjsp=3<HDX/TLC4=<FnISVQ^K&/l\3F
%&LJL/P_L<+&e+l05?CtG]Z^`nVuOC\5:soeCH7*G7hbVP0cS]!\6^Od</>P[`:G`k8G1H_aXp$MX;8;2=Zq$NhTX'["AiA_dEbk#
%_<c+m@X<2i=C[nA&-+ct,?Ur=QSR5$e*?@Q.n&=H\RC6`^W^?8o@<)_rdB03`%LR1#E1XcTbBcW`Dtm\J`?aSr=oV=iV(kXg$phN
%!OsZcO#LaFoe;^kXqS"r1fZA'$G/:VdS5!?lZ`li>S4l@T!.`@alPu"$^R*[I>'R3DB#\U=.ENd"f.>gY/dM8NgTA3Pq"EnN5'7I
%Y(rUH@Y=(P7:K_cp1Acrjgki`Db`37n&q*ffY%f$SjcBt`EcRuiZ#6);t1g5eu^'TH$)m6pf$N;iYf!_NLRNt>"#SrC#I$8V/CVV
%oErtLp_q\-+#5Oc[,A=WMK&+1(A&/XVZ<o"A+E#VV_Wo3cdK\Q/;]LdqXF_OPd^$__hIDUlWKW,3rNcj7hpeTYc#ofQgR&hj*J1D
%ST5&3'N%bu3<<HB62nT(GaZgOCbHE;HnCZg`Wn"#e$FuNULPe,LmM(p>/cMA(F<XqK](iZ9(=;BN>?,>AJk/3V1g"W^G&0V+?%FX
%RPN=d%L/EKD</@t/YI\2;13;Z:i5G>oHeCNk?1?.?2bi-gI3h7&K1t<Y3Bq9bZ.A9#T;\5eM#@"_/D_7ikG3GFm1>0C:AZR1ucj_
%*F4Hr&FXnJK!3se@2Op"'QZYja\57V2T\]1DK+k\M=+<i9nrQXO*>^L1Bl-m2$Gt;f$@;W@bo0q7cV?tMOaE&-aVjMfV(d@NLVUS
%YW@5]iNRKUEr,=NF+/F4fB!Q*(_*+mbZoR_;@kL^eo\ZnnVScN$T57lI:G*s2^SkS*[j8%l[QDWcL*M"jnI3B^sj]Td*D>?b,ea#
%`rUu.)'LnH?8LI,MK7ICfBn96X(.TaLrga;')Vt%&T!@4GE;NjI5PDjjkMN[-,!aI-eoK?79J=r!%VO<k&Tgf16eErP1B)c\['bA
%(><W4^to.Z;l'#I=9S\JLH*_@TQeR;RNRS*c4o[&ES^#=_0"X^9@keWT)cc=193#hpJ!<#nkd;O4A;SNYDb>_Z'SqT,&rI7SL`5H
%NS%%mh"7D2Hl[,EpN<7dXZP?P:6YHW??,Xu,U!f-BHYo?G6o8b[B[R2Q[R]JA,PH0`R@El;>`B)/HAM3P+#W!0.k_dQqgI%]B8PE
%cj/-slIM484M+S=a+ZqhC<0)6f&V.eFFtjj`c\aP5U"^!\X7#Qlnr$hE$PUn!':lq22D(/*k#M#;8"=&A3%:Z1.noWjBc*A?C<@[
%K@eLU%RglMQ.7t8eOGIeg/U*DDlQ70TZ#F@Z+3tsFd-H&YH6QZFOTqefhsrop'VCJnN"mq75>)%L&6dWDL>r(B"m<4]7)'73EhY5
%*a*sr?R1uj^>@u"Gr^khOjZQ,$Y,E(<gDjP2=kd_8<G9)7YB[rDgJ"tB0#cE>fYKN,+"F6YXK<nBE1JqdS\=qG:*<Hb/M%F1npFi
%),LW`M25R@QF9b]j(jN/fb3>S^b/)L7jRA=R1&O9+G1X^7U7n_eRlQ//HSqS1V?Up9<QIGiH5]bLDO=_'%j^m#mu0&0>8,2:A'h:
%FOkT"]",B[?M'kf#!Xi6;dnG]^o9#^UOAhFH,!mf!,7FV>tN!+F>"HPS=#@k#.fMGUODP%7h196jDl_7QnFW5]07O9i:`8I7l4Dk
%kWA^.99?JBaPd(o$NB9`2RJ7;m)^q6h.<Z_;[Lan@)6K5M;Y>[j`92*7<uVjXB&aY>`d<cDpftnL>)hgiK[p@$o;oLT,`(_*bfN0
%8NumpHh?(bg(s8RfkZp_HlgT!&rBbmAdC\V*iF]cOjd5e%IEmE61.`d=iPj'[4C/OdB1PAM>^%D<e.im@3Wa3'8OK`_D^7(NJ'3a
%#i[:>9"7A[V:nWtM9@1%Qtm+'Ojhg-gmbQW^c_dhaD;$fkDJ76P@^BaPA*.Sg"TU^dqimCo<!biq>7__3K7sSh_QJIn[7W5/PY8m
%9Vu*4O7-h2m?s_tQaQ(s`X@)he_V&?rH&oqDf>)q*2Xt#ST:_O\>fYWOeNdY!H(UdH_t@>AFeokgg-O10t%L(kVPM0VV;H0o5^LE
%Hd\^p(^)-\$],9X*l%p:^3+&)>3W&\!n"&EPg6q"p\_ag-Im)cAVtP"[&r/a;O[#(;eao#q):#Z*C@jkZhs`X#O1<G,k^P>Y]cr5
%qFPRc="-*[B^8kbSXENn;'o.qCrQ7iWGGN\?K"?5#X30:!jq8geRZmuYFOjYnk@+.:'*h"X179<H)&^1GW$e[K5LYd;pK;D%Sk?h
%NnLi_W<H>jn2&DclA+UhO&&HV8Ql6XHd-Z1Qu.UFeMpn6;^=WjC:T/E[;R6fR%E@`bU#2q`NLp:K8m%GmT#gJ(o^XX0U435X?JVd
%k?=M,1S6AM*S'BiY8Y%-'hCJ9]Y$oRI*EfdW(TBIFRl+mN-#EnC*-1k%j+=SgkW@n:7fnFM-fC@^hLqRQ<VaJS"M8m1jNQOf$*>l
%P.\,5c0X3QU#^X)6e&\qKG;-UX>q:<YPYAIl"(IrS3XN!=9!o-2(YC"XEh<Mf?%NE8Q\Z\O&lMt[Pu[OaaW6W,sPEPY*.],!-BPn
%f5F3"O@E<]^:\lMfr\*o+A7X?F0c6Rn_iE&hlKNNjZ&-t<)9,"oJ^VA6RKsS@4Rbg#[ndPnIplCZ.h;[,LY5`$=CEoU3><Q25[P=
%SV=#-U7OOrDB5&?KQ4Y'#l)qh]'T6`.%)Lj*]ts]d$_p6%FfK6E3#/\W][RYUhcRtiE58!O/'rc^=fW895?9ZRR?UGH\:MbX%=k4
%oh"6%9P*\!A%#+Bb8Hg:*psJZ)r71#04J*jfU+N#!gr<Vj`QYP\VA\K&Bjof<q[8Mk-=e2!p&a<%<dB9GrbT"["Ge[I_hp&C4#6Z
%.m2(]1c$*PaXL[.am9t5gR4AA0H$<tXRhEB1F>?B9&\_W+ha#,:@CNJ>F>Oh.W1B3W!':qQ*I.W&WWgN\amu;o!:m3m,o@<1>I3(
%<f%#e?oF2[JQAF>B>44(;%?_WPCSWs;o->HG8K(S<F<n"[>%3J8q%W&I4c7E$$%#mY.E[,4B#82kf\eXoTgp$3"!Ykg<;te[KB^Z
%g3>eO-\9-4Y5$S:KM+n)UP/k!/1Q0k!9JB$29Ui0,5Jcc`";F.Eu[AE.7"Ru-KlGY[9%9M`9?[#.4!\"ZOPgLW>l!"+IR-Q?561V
%?Ebri+"H^$F,,f+NFadX@_B+NU-X)k[kdZVhg`h6>&4IA#KfnHV!+B%7qu6CP>)O@iERZS0r-t>JCT4:b]`4^`'U9)()hCajK"6`
%YrF3a8RNhrN&9(W&)jJ'@>KM/a&o$Q,?p=S#6Kt/\Nk"i=+rZ#[]ZK_Kh`Hl9I?L1<e>Q^6JP8\Ht-Y7P-?Z!AhljL3NSY9[>-BD
%l9#u[rf3FrrFo]#0mq37):=*E%:Km0l437P`:j_!Lgr=RqM$Ie[S&lme%@dHn_Y3&Oh0/Oknp!De'P-=9rYE1ViK`bs5iLJkUTg\
%jL'Flrie^'S3[Vi(hf2b?P4j%?aWIejjMSdpfZ&:#48De'lsEi9X+1]2n^cS4#n+4kZ^nQ,KP@ijLj*+BOU'BP]^"%)3p.PbWT-_
%jup228g[1Kb`:dMFOLhIUQkaM3.FD$FP1HigJ83\]Y+H/)jid>1GIT:C[slX/sP,M/l8dmc2h)q6Z%PlG(A3\@#dkuZ:L*e,7=eB
%J4tD-n[j,uR5FR\K?g.21<KcQnekl-476#49)"S7MF+?9%XTB52b[J^>[a&d'f2__XAT7-EVikWp^Pd/!ISt2],VT,%.l&n>L".k
%:*O@Y>V)SWKr-@mRc.m9"G^f;20l>Em`Fj9&>U7k#6qFC,q2-HNG+]g(4=8"D[X0AfPu<k4sh`$>_8)p*&(4u%qFl`[mbi-BQpZC
%TH395_d$\0[cVfdF,FWBEaE44XY01C;#%^]7r[9'9j[SZ`E"eZD#-)&9rLK-,7gt'!bbZ*\PB&(M^kl[HPO)KgnB:Z1:JhZHF9pr
%<,o%!.R\D7i3jD$b,B_#cAKIL.7o?]N_NIdJ(#7aYtQK*15[I29A=);QkWA%cbj+jfAt2FM8aqCAkLY>b<j0#:#q[cX34AfX!t`h
%$qRE,olKa_!-Cf]Y!$!&6$.;<m7;`mehJ]9:bhnW-r,akp_[7O0%fi)\jJ9cRpqR52VL2'j_@kcK^t;_b5u:8$0NUt&7V^b3C7Eg
%X$d#Q^9cBX>3!1r"j%3F)-,-\E$p[]Tn(V8j0J&+$d+g8bfnctlXEM[Og:"4q>]4q=(gY'.C8]]V)`k(gC=NRZ\C&TZ!,`,::J'N
%[RjmuWd_gddBWltE_pZB=bd_)/i/BoOj'Z.cN4Qc172a;4k[7lf,cgp+prOVUJY8l9EFpALhBF5I3S?-?/TJTcLlm`I5;&c0D2UC
%?U)D7B>GeDR(J,tiRK(6p.TH07o7Za5n"q%dF=APMRk&f%pMbYb#J)H2]_iQQZ=R7F,N_O#-1`BE$*fF_4mZ',P61O76VRI9?l=;
%p9+%:LLKc5)>2!o8%_Bm+!>V;?doc2\J9@GL*3BBBa`rW,uZ!c6/3*F^O?h!,]ct3.+>KfZ@=GfSEChfF)Y!#0D-l$FH_lEgG7r6
%WfA2]0%en074n,IfpUQSEiAs2V*t^%OWC@GD/\s,[!_jlF-+`[Ne'pToC(Enfj'C5N$NdYSE)g_2r)4d;cRC>;8ZU%)5&^@Y+J>b
%36Zr3]R8nA*F.s8GqL0]dQ*b8iJ/ju1iLu1e3P7=VI%CA;SWE^r*TgcA_q?tcr:l!P2)3kc[)p7e_Z,=ElB+JXPY1nCK-K.O"#-f
%\amVYnsB_?];fhI3^uh!qi'u0Uk`4SQEgAs$XIcV*JZBY/Q5$gOVV_NPL<G881utj)#uIGq*#7dXTmtG=d)1d8b1^H)bg[k[Bu&=
%lbjdk7F5s.U8GdRl,-#JMRl,W.V=)9%p;eT80ujdXHl.1VK+u&)s!,BeIA8A+3`A1(q4t9=uU@P9Za2MR>rCm0oO.Ko=Fu'%@^ll
%RB`=+1aI=2d?>R:Q"d:5JnB([?`D87NDMV9e^8>&jum=_Yj$<QT;HHX?;5@`q4F_=BNAQV[*D$F3b<jR_sLVbet;530lT1(A5,#t
%LE,/Qd5*lg)@9A:;f,*$ImYf0"2Da#4G.*=b,Gohe?VhEn^>(5+$Zbi:k9612ciSK5$)/aJ:(F'V<)I(!84`j)hlUmj7-d3GS_T-
%<r=2.7$&ddAV.qS[B!RalKT-;%kd(jC_!SV.FQLhK\B!/2`<3oBjRUUK"2.AHs/PL!ZZseC)p.n`XFDjitbh-A@\6W]sdQT&kpSl
%>CucG=ge!)jOt;UVm"[W)M^K86]&37PLkp"6GQ^.]d-\6oUmi^i'8.$O4Ik;=C-:0Ij<h-S!e<266<Gr"%L4?`-W1sTLAuj$!/3S
%(Yu/lX.l,Ep,8ajq[/iT@(FCD$)!Ni%j+CQYgo^PJGPILc_4E69ROBMfC$ZmJ5!d7>sd$8l$WW7UqjCCngJBsD'8c[]pK#a@.us3
%J>SWFOWgZp7#JcoC*uqQTn_R6W@\(S1.j\WRa>&iobMYj_75XC[6tuI,d;;)IJSV[M@80\8Qh[.6?1t]6k:WB(3B2r6"?OFEr1WU
%Mm=!<)iIm<QFgqpcu*>eNjP9kb=t*r6arIk>dN0u*$+)QjW^e!Yc`hA6&-do8;DU2+bSVlLeg9lU(jIhXOp:6:<?b],*T*B-$#O<
%)E2[]hc=.?<.G]J\$"86'2AmD_I]hh=;!=#!q#G)ikdH4p7+$^-<AThn':d)YLCc6D[3*TXu40dR&61o([jmbb!ei:4sEp<RoNVp
%F)<!_,ped&al8o:o\c"0eYKM"SC@;WN7:8_CMC`C.HW%CeNos]EghR6EdmsZ'T0e98kUJMA=L&kHcS@som@J/OGDL@q+*;LO#(Xp
%-Z;dgcbkr%rBJ7J"70_F+-tQtX]$K>]@'g3QDHT?XnLA01((^6K/a16'!L-12t(0e8Bo)(^jinYljB.hGJEct%Yueqc0@mp0Zm+r
%/Hl<:aE)AS;.VjqS)o2;-HsGZ0i_Q4abr4-V\ctdntoqXk`N5,fiD,8\eH@"f';mr&rUNXjeG_$BZ[)'EVs>SrI9T/;,bA[\%0;]
%nJZYk4r:CQ<D$Lu0MLHMa(JTFOI](%Zo#-6E@nF*=7^kqfsZ^9Z&o9GN?@b`+UoOamRr"[!2[7(`etVT+a-[a^,8Cp^KZWkF>bAA
%Ulc?Tg)+_tH1'd#-@WC>b8.reBM9<ej'pH'o)dPb5/Uco>:<V8RWKLC1ZB;U*,^>9c*/$[@@$:%2U*^^REN]EB\P*%.g;7E7o/=m
%$/jmg3P3$6JCt7786G:WW?\;468gs9F!f.+/te+l\2\cV+PJ'hN[,\'Bu-=HA8R0Gl0sd3!"70+N\/KeqtFkgP4Y!ic[J9"83XYe
%YqHFFbUl.s_',[th%Dm>:$+SRIOsW<!]*2o/FInXB;1CgT4NU=Fprl'>qPPV,!-tGH)_0ge5c]U<W/^Ki8c6Ago7;Yi@`<`<%jFP
%\0gXOdP;<g-cp6H_5:MB@FFP630u:jr9FmIhGQgCeOOhSgV`oY/6OP7)Hgo4jW?AM*^=MQZ_m.B[1@21ldjg.QrjZijHQH7\C_F$
%h47p53H><T9`NQ$oT!=EPs#9V#UojUaee6W@8`EY4GbT:i`Fkg^*d,!?!dZ"kIF$a]Z$DskcJH&\r-ePLVV3GZ7U>M9]fQNpFHVQ
%VNodlc&>&ZjM=7_R>MmT0Wt+ErOQ2!Onuj$H-%6_)94$l?4;[M$S;mOFK@>3CeVT;1G-mUluhdGcZ:ToJ91R(C8=:-1C=8'&uh3D
%EN6"6g4.Kof')7leC+Y<&ZD!tZ-iGQ<ud-c=DJn"m#/&+f__)Ch$67U%oK(#<4bWIbfDp#=OcP_5MCXC`m_UagQPlujk-/A'BdW[
%\dm\-J57Irm3_3eEOg0fG`/&NO)AT7o20FJqI#L1Li`F2kE7fjl9i&-Ne5<Q^`47=\AKW`lqO%f/PbO/Q:(UGPG;DK;'Ls2*r9HJ
%,\]$V@cgf<=]COYbp<Z,R4d#Y\Akhp[<gFEf&'MN#e72Q@JDUO4jj5&(.\/pBp4:sZS7VOqo]IV?#DtMo7JQR[bT_4MEg2G'U+u5
%`%@idcP:!K"A/ceVP5tdZe)'%mT2rY/7a"CTJXj,*1"/M\/VbZC1>Yt^:.g@h,,2]V6d=8C:UI8=F>KT*4'LD*dVEmW:L7lO7^YT
%i^b;<<bnecs2+\.I?e'3Vsq>ZVQR_(?..;LW&BPFBa0?OQ/oT<?)l^i?F#fIiCeR!%\N9:#$]NiFs#^!b=o$D<#&'7)=Vp#4d)qg
%"-ENZa%ncF=EZ`K`%3H]$XTRWNP>$NcSE//ff'Mo>OZ+^I?e6>ab19@'MZoFaciW\]k?DA';et/-H].t:.<Q$A&[P`^B`p![72f'
%PuN9i!*#]M]d5C).1]bdm:fmK2OJs[WudD)U!#$$9lcMH&k5pXKrrU&T!tODGSE^&S33lWL>Sm5*ls@_oh(gr,k[:4\h1DRZ_>S4
%UbcmCR?`8hI46S@YH('),,pktb3*KGAlm.go7n%@94*rD$&`$Nnn(>ZX`.:A]#X7-3!#N<WNGB>Ja%Rj`4Bc1l<u..l9\Kr+B::s
%pFU4@=3;'_3\R]KRWFr&N2N4,Zf(>tF%$T$/\AZ;p61_S';'(OD_0"hfufpl.VE2OS416Ahj6\>=XEF?,ft5eS9".MBb?!*C1be7
%'kSh=R?rm#?*$Rt13f=1f;5.'(MJ)gbX+s8m![&3Rin<C2:E:<rR"U!m7_8P`JR5_l5sokRr(JR>(f>J'Ed#[c@p_<\=V&MGcPJq
%'91H4me470e2I2PHU.=MCjBn#\Plnbq:5u(=LO44?;k/g53JU\Y'ffK!:FT)2eCLf(toNP-;$unJ]Bq\i54/ZH@:qTO$'FNU2\ea
%m8>O*Fd;X**.rS@F&?^GIQJbP>Pp>n#?&NS$9&UKm:Hg!\J[:]kr6-R!:=9BHR>QBo;'!_PZH*i:.sge-l]kDX>X>dE,lF<H8!(K
%V!q_\>7o$(;sEgb.[m5<Rdp-8a:k>B&T3F@6:m)7n@"Xo!-`c7(!eJ!#T1&3A;UrgAQOU0c:Fak'SG0.,Q7p#bJTN#eIndO,5&,k
%JPKBrOd&"4M"ePZM^JhUes>p]8_d[GH(9aFiS^Y0eTE[T//`lnfH@nNSa`8bQnm#)>UoVA=OP]_gKLmmHNMR@.!4=MWo)AOWM79I
%^Tm#*$F&F2Q1C.XaVc_-.m5396GkCL^a3CXRSDp+i$9)b5:"d,C8ZgC_GZtl8KcGp8q"i5@3:gF@j7h(KNANhgS7%Wa_RI8f$/pn
%nYbYf"R6b"d8T^KZKL4.QK;5qc#oG]<'kIYcmu8h("\;iZc[!Q.`YkkVY+NRBa_-R)M!]R[A'bS+dcCoQN3:ie.tH]^/6)tocC.+
%-*[t/TlS^0BYRimVp7u*[VA-$$Pcc1Arj[k,`-rI13P^CE1^#;D4J8HHXA;P0-bc4:9e(cg$_Wm%hki1Xn.R/Aie1ma!SLK4I0C9
%,<TPF>'t+C#j(5-.I+#QPF-`fRXu^Arf._6$'X5faB=/T"6GlSe!P;Qep])lTJ;/nl_aggQMKh%i!iYY$1^XEYSoDfY4RZ58fl&M
%L:j12<q(_;[4HBa+4.X=RXG)>E]2o25)s-]\/>$7,EHU]%CG?C.NBC2era(;/\qBI2el`O3)+FJ:narXQnTc<M2Mnlm_t7nlZd"j
%$bJ\&PQTr%"8Xt:8#/hKpX0OoE!hRul7)n+38Z]W#Ir>1"pH;>.q\7%!1uorEU0E9M0E$l/ANH+R->=SI44_gGt,jfE=02eR[UI0
%00o,[1(*lP3oc\33P[W6Z07P07#[SNg0V'@K(#@0J=N`10tcS5p'mb6o.o$e190p"<u&R<QfDDpAQ:oQC`ro=#Yj)`%=l7YZ@Bt]
%dJ&J#UHW#?3MeF2^Y?$=CMl5Qo8R3O@DTQA.tEe<qpUnS7d^GAm.3ut@Hdo(@D.i6fU!N$ZIHQk(A&B%_%REq+U-t,.dFhXZVd0;
%>Dl)`D(SD(<KrVp)Y[kjYV7sI/C*)2'M'o1FG7b6nXqLI#IijsfFhXIA_(W&-/kLdjPoK'8*["6l-#B`h,OKea9$&7Ao=<]IS/Dp
%Mrg0lSPhQ\$6(#hM`OY?f"AS+P'!L?;/W0.?'GpSE[N)1MBHSp2^EnF-Bn,TMU"p(rBL<$_\C^6oj%%<LWEVT$,sD@H]b-m[BG=F
%l6.N>>BGh72]^9(6S(gk.1D[.;eV6!SSsS`]I`o@iK#MBl'D=?8,SKCY1]+#348%A,@q]$J*RBJ:?KrKeJ/b7qkRQ!KNO#V\-mbt
%IB8L0UV#0iAFH4'WmfGR+fXC3orh>Dbp&c/EI9E.E=$Hm2Y%J?QIZmR2KMJk,EqRF).]"%KS[:J[hS8e"OiVl_W.5I=gF9unCaN<
%Z+:_\/p3&+\?%]Umr:_f0pS6Z5(HfSOX):jqjf)76Aed!3L<l^5/c;7`;J=ce*'Fn;:JI4\o5#Z!ba7JR];ZCBObI)HN\:YpkuUa
%BZF0(md:i_F%*[pgq:MP8%8::'uO3-:GNO)3`c>+TRfB&)P7^cJSdq!hP@$!S)Wlj:jYj@@^D`rCo3D2rfsI?%.R(HqGXZJgmm85
%MMfJq`,JHTV6H`B)k)q)9[_ZW%9o!!R1Z^Z-uMI0A)53OeAd1l8^]+^j2@KZZ9@:bIPI:P56EMK:RYMn%CFPPW\1EJ(@^+9a?[Zq
%Fso^PmUMe"1E8<D:="HVU9@p>5UnW8(m]<8=*[h>I(PL,Fg$+q.\2]<MgF+`%qfK=J):'pMiFZm@VTJ%d#k1SdUC).$KN%K8?<6t
%iV\l(c^ArN]hCd@Op#5?OPQ^EIOO/`Fh!rKF"NR?rgYKhO>Rmu3-9$qOX1WkEtDnVT5U-&J5^b991.diQ\W@f9ZU-B?Q?`FU?4bj
%d?upO;R8XN'Fb[+n<19A5!6TaV7IQ#Pne)GQ:;"`@d?E8QVf).&K")\i%:Bc&GpIq`Q*7`8fY.7?\\CTcRk+IP1Y<%;]e+u`nWol
%0ggcG1KTHHLo)Wl/6Pp%bA#g&$S$&/il"<`3)^UE3R,<rB&n'Bb"`Us,_\!`7W^.8%QV8(B-c.#jno$^d*Qm[/8Y*dW>(o)HNuo$
%pNhsi',+X/4_/Zae2]>IjhceI:ei%6\'g`mQb$lhQ\6!ZE&A%o1o<]g:V@Jemu\mb(OZ$(:4duU"s/4&<&D34=-6REpF7d'hPJG9
%(/M!Y<4fZAg1Wk(X`6.Oj"AF^S;6k%MZN's*R]6uT\2GE9"UYE)Nlmi\#Q4$A:L*C8haVp8%0qglQqh#r"VVh@t/FkYmLS>b/LaB
%4LpBfg2>SB\@Z^TN_S=goq0&W%\G&\?1=:MrLk_MGQs/U>/d@@+g*_'O%6[Z49D,PrtCc*WA*^Vp7n!WJ`m5tEhC@31V2Ft=/ngB
%#M\J3FF"WsO4>_#3cA#kWQC(.&s_,[VpR(Df!#UHB;Kj%!ug*&fE5AZeKJ'uYSEKZ.]QM+%Y7-11Xf!>$GG&g@"br2V.`d>[p!Y9
%OX^p(U)"Nl!g*c_Wl4ra(feedH5N#OANt1fiU"3-!97^6BSup"oe8/&gcF9AVQC!m/GuJn$!Yk25t'+Agrht/k!DL4d>ScV33AV`
%LKe4))NO:f5]H*r>tFIBiHMC\lcff^g^XEk[]3!n2?Um"j*I=%J-mKX\KSE+8;8H0<D?MEd<Zlei[+rIQ\e24;Q'$4m?T9+#oI`j
%h:%F-U)K0qE4teIS8?5:8pn>>>SKb0f@tGE<?8*r-8bfA,:I$7X32b1^94QSda;Y$,c2%:OXL,h75r5Vi6%ERhkB%Mqu[`J2c@u'
%MhTbjlF8=dN[7+YW(Khc?c-GO)qUER6:EdK/KCCW\mFbH!XRLT3`_s_Zj$m#3?HHpGq1[XVmqa@[:YqIA#$&%FaF&BMT"$oZoqTW
%E^cHKnoe<OB7i);1?:8\XdVk_C6K`Q3u8+!*Cf-q!]Aq.RF-,ZU(6JjkKj"8MDt'PHSqq1V5^Y(g)/[BC\KimnaKe=jm:__j4)8(
%R8%,YHFZ$"knS.)8%XrgSA.+]"Apg^+&49S^f#,XSnGX%BOo]ceCInYlS"h:ET!Ct&DRm/bhB_X,H-r%31PrhUOacM*9f/NO]0u1
%0QF!m<H)cZ/FbjB<X^d2IsFoYU%grt.)L)2W\-)D:_C&/_X:,Bm,[kaCe*ee$#-/g7;qepNFl@".?9[.impcpRO4FFF<W7+;V%ZS
%TBBGD]O4&;(!n4p;BnCDF[H>u5`=ntQGeel^8VTt$jNS,Q7Rf0>Gk-A3e\YK?30$'+"`]F;X.W?NH]R.#%0g9'Os-DEfmRHEi7-P
%k@m6A%/N(1/(7g&l48&m#ROS?LRmCL9Ej]i^;=i^_1d[1mGrUoi,uB,np]kGarY7#n$UX;ad^5jl;UntK3htb7$c;l%F_X@de`t)
%((73]NP[?a9So<ACa=f%aHkoeVrc]_2U)`U>@l"W6oQ#R]P_<,HTcB?`P[.jZ2^j$J8s<nX0>3^b)!cGT8Z@4iefVP5]CKX/sA]m
%T%n!Ze/=`%QZ\Q=&B:<"!#_qWDbs"31r^fVA<'JB2G6*pLNWZB?J]jkYBM^-PC$Kpr:i%R[=@9)6P>IO?2NAZPjLmIc^+.!gEAQ[
%1`0!8%Rj+N2K7=i\*(BKn@4S'Y$MtbN<eI=;jH]OHWE2:TL0g,+gNWnAD.H/1op6%kt^`RCa0*6E#jpAdqK08;\<DHar<b:H@;b:
%hMTY@^m*kbi#r`tjtb5aoTqo-E93M+p3+sd*j!Dj?+$C05h9,"$XG6IAWYLm_+.d5(TtGmM=b3&Bdc_jTtqaim;*Vdr'D^=c^2g7
%EioKSRn%-+JfBKX-<[[CcL5eV.[0"q_em$4gC_`29BKsu\DTB7(?fW]D_YVg"3-^$9hNNr'fcY=kLW+%0Fa6Ai6EFZ$C[.tdDAc>
%SH$5+Znb8D!Cp;9%h:!pX<'QK2/SfU8b!`?c"8:Od<L"HF3?i>Pni$W"o+(@N%e.rLW<A)W1XJdnf?V`71>s,/SVo#!&NAM4>W(T
%7KtIFc'kn*I&itm_RCV8qj[FMOKkl5og,(4Q)W3(-H)>%0:4f".i]EILI'p7F_*UYfG'[6hSO1n?E&[1ik@C+M&@Ptds%CX7AlKC
%?%_E'XnX<,5Z\+iFEggmN=ZCWk"rUi359t?d<DWU+:P_PN/./``1cT?k\F1;%E"'s(V-uN_h^bg&dXKDE7eX]3,KBb6V^!d`RYB[
%')]M&Mt]<2)q@*iFi*rT"W4&bO*=Y+K:+8&1l=R2Rmhdu%]&!2nBL<W3\9UR<+Z_Td\/EDNN,lq%r!cSE(P3^/k[a5\_PEH25TNp
%.2+$(F?Fgm]p/PI@8kBX*@V-E`/V:j)RW_q5XXF@.X%JIq]0Dba$G+/l.,n.EnQLsYE6h:IB"Xl17WPT1@p(jk-rr!>^h)odl+ad
%0C3+_8_C&0ENr4C/p&Fs:\(((gH6P+!QC/I3R7&ZEni]tNSm"^am?jEoF3kL`R*W2J-IR1Y@C:j=`/eCg+=&A%lQ2G'f&4?*S3m6
%_H444hS"=3$mt)<1>mg!0]/oJl?+WqpK@iR$$1j_M`YoE"()Zamp"!q=O/6DWmk9R*#8fAm_JO.8o"nI[QKTp5=DQ%h^2]e@"S+u
%0M;7)`*-Y656q9f1r8EoUKpnkf%;.QAA,Zg#JqR==>!Cb<>_r6NoK,.dpEUfl7.q&M!/hU'dZ%YnV.CVYYk\5#V?bh*lD?L7)7Hn
%JYO8A`J>ZuY#K;0g(6AY8Ga/E3Ice=0$UfaHuYiNoIJ"1=3%b>aSI[BhGpnOU!c=(W=Ln,\02MQcl9),glS1`Sgl[adEVDKnK,t.
%Ib!LtU*g'8Gu>O`Ip7469WWR-1#uYA<*A_67Y?,*)8<2i%@J;=&9fF>cgCqcC]Vib-teJlC@E7dTE`PpmsH[fV;]fP(n\dh%uI3d
%C4F:/nqipXes1$l$Ijm2&`P%n/qRf*?LG_%iXtD1BoBM/On1sK@4EKn$mSM3E/dIeKK/R"G[efb5KtcI3?a-<q_u=td-Iqf>Bfk0
%Lsq.;SRM;Smc9tKl8WqBKQlf>N2Fo&T,DjM/<UE;is';(Os2/fA1Y`$kO%cD7oL`Hrfo8dR96kn!r1i="kUZu,cSUU]`^+/2b@c>
%A^ukQ$BORdc2oLrdbch%F4GAuWq'?*`oF3j=_mAMm8fnXLPG5VBh0lR]3#\L@E7.+&g%*(Y_58sZW,pgWE*/kE\XHt^T^ba%pdI)
%*V.`6LGmsYe$WEGWjsgQI;EJS1F629C]8:5+Vuq5RmnWE>)XW/?Z=1UO4ApjJSUp7=6_!_-,7F7:(.)5Ellno!)*D1<"T8)?eWJL
%<?Bj_L`K=)5IZpPT?L]_KFeBtb+deV+t#0scr5Cpl"lMK"Y:d<%=U_)"fSZ'dYb$oYVun,s.^>65htqU$fQH,/^su#,ml@U#o97L
%a5;%fj%f+:g,'M^Y_4pZ?#F\jS`l$9'+hb"BcFpJI%..lh/8\7GTX+u:jlj*?Cu7_GP$@XC^I_>/M]Ln!Zm#<atXe87#=KoY$J8J
%J^u'R5h<X\ZFC2I1M!)(oH-;o7R:X&?P]7\c0)(&puoe6GER+Dpeg(TB`)+pG'T'QngARiOCoZtg=>U*GF'(E`BRJj8[Q+`]-J!_
%4G70-q%C(Si9,>+XqP/gRQQ88LN@7$!?)[B;r.QVD#M3Vmb1r7<d1QLog#j`/m@IuT=5V1gcH#;%Wei3\/F#a!0XT_f4@=5#k:Lj
%e<._IQ2[_W=EU<Me,eu#j$D@@_aUg5GK&M):,Q_qcbi5b+q2RcG@Y7X14u\NVY/s\`M(N$hU<M(M!(b[)3G.7D$d>#`]'K3@S]pB
%28$:a:H2-(EO#kW]aTkoCB_k,;JI'mJ-[@KelO0@bi%KrhBaQ_p*!_u'MGFUR$b<s;cHl;6]n"^L,:D5=4*n:Mb0tbTe9RT\5OZP
%X3a@P@eul9PdY@+"GlB"4?^f0^t1:VFUC3_Vk*EJ,2daG?Mmdq7'u0*k>NlNjN+@.R1*g-N6@lN\54-PDaRjE``3/%D#q]b#]#]#
%6DU/I'#Gi?NgY]a:mAX?cOJbb<<TGsQ2:URUrS2SjkO&"o0hKPi@Y>A<_$@D\T8Lk'`>OrPf26FkBX1-Zq.hqZKS]rJl`_08%2I>
%nLf/cL_uqF8?IZL7nNP!m\C8Y,86?.*RcJ2X]bnl_$k;()=r\jgb^$*Ja&Kt`*OBoOBYK]!]3Jk@dmsV:$Q)8DA*d+/Xb"9hB\C<
%-;@1kB$@L>),4M"][8gW)E]K^7&/K7%UJr+>YY[F>m+cV\t^d:M)]#3]Fn$"Pq[@i3]k4Xc66#=<8#T$*SIbk$Q^]Fae#YKXkf;%
%=p$W-/ERRR_C2X?hN=fZ=9o>(%-=(b3,(-RN"s@!+ZO5g7i3Q<_5eCUCc2CoM$j=ll]q[R7It$$P?og'@5m,5$CnAQ,/nKr==amf
%Vs4DiCkK]RlD[TF>5l%9=i3VH*uEA2$AXB?/7dL/)'E$8-(l""6VBiD<eK_5mTI%uaY,KVa*jMtX3a+0HnQuoGkqEn74gc_A9b`f
%ShA`33?>j_`Nc3WZQ:Lr`p1jGNWeZ8M&j_!g')H'g9pra3V<:AOOkB!K!u=+*W)/&diQ].N+UDTY;?Z@F&gQ=aB;JeM>/:O-d5IL
%<'iF<[*)P.N/jF/U_`K@5GFffoL%/H0ZYq3$ZW[ZX??j,S3Ic70Cl#2;aBF)9=j+E!Y%V2Ws!=3r1K'ib1!/ZhRT@eL4PiISqfk;
%&)aC3S11@q5@aCLQH4?[70PBEZ7R?_+\r(C7TBG^A73EhhLA^TL1mAh\:hG44pj^MmR'X<e$;/^CQ]&Vl]Ys9@<?_^gj3sb74I"s
%T=oVe34+#WlBK2a\nQle`#W,9b9On<LH;R!>72Ys7n)3(5.K3^f$Va6Ij]oXCuMq*3=m=_r.sFkMC)c3+AN[AUbfYle98gZJ6WIi
%:SY83"d3Nh6BOAQTTLGrKC4e/K<A24YjMV"HMr]QJ*#!dUWTmYDKq5baqWO\*5<!&NWg97%c^/OSj>#L1<r3UhdoWK;e<`Z73F,O
%1'B^E/:*'JYgC(a:kN@$jfeW8RC)QYZt$J^flZ'&TD3+4.hj;F;FY;%n!-CN+"c[?J?$-/W<@=m<D-Q(57Su&ZfpqQ,Arel/iqt*
%DcJn>TM)PSj%e!tN4,`QA'3aL^6#q@a-AELq2;=G,MC[YAg&*S"p":M`f1KFO^Gh-\QMK+DZ2o&`"(bJ3j/_!HOl2uA(FJ-_9N6H
%,qLqHBFfEhR/NUYXs0Ao%,f?QhmO"I.Z?Tu]'ea$Hctun`!'mA&hMB(`@ZM1fc?3!_s*u?;?3.cQ<1+$kU=:aoc$C.AI@:(RinrO
%d55BUZ##Qo77c]YcH./">2S)O[/S#KT2i)'de#7q0=12-#/>PW2f=h;KRUQW!*RmC\bo*_Jo[ZRH^Ro;`7"mq3*(.ND8f"[0ckOV
%5aRLZg#bop_2b\n;ilTe%R3u;*=)Dh:,l)=pBWl1L$)F*gp#-SpCL7V@Nn_VOdq>j`Fn[0ABKN/n]URPr]b*i"W$lhQuMgMLuCPb
%F4NU#6>R#%Jcj[aUCsIlXWAe9FN420e=a>(h0(f!i`#IC-mMM0ZSkKD)AsbN;Lf!M%tY3q`g@N>:+l@d;;W*kl;-<8V::GQD@)e-
%RqDGMf2_r1VUMV:m[5g230mEnh>gA2r"a(4hs"CH*?Eopk4A=l,MMoB07,V;V&<doRS=(H9;d[P29h>eU`4g\_3_/(llO`Ln4$WZ
%KHT-s^3`\=Nf1eb]i,Nd<QG%i=Vo5op=iW]^8VIsD+Lbk_Y8:$*Wce:aa2W0&5<BBlVb5qUS^.OdYH=jhgY("D](F!Il/uh?L!h2
%850\t9IUf4.\+l^pRbKO#;hV"=g%79.90bmK^aDrU56pLLEoc`F?dq,ZJM/RNV9+@]LVO(Z@$Pc#OTV;I-)if&"u_.:FGjr;`Pb;
%SGa+Ka3(`)N@\MCr8d7^8;&!fI4T/,fo(Z,QrDm4!\2CfmL4asThM24bE8i=l:Mo)>g;gWQ87?+VJqquU98P#Ys#l^-I$4Ll:j;M
%l)3-5n+s@H?PEddO'%u1"@0j_K4)&^X2h8+E11PS@:QgoZQachOS!L;qCL$BX?uLonl2n-fbboI%[D2:N<]q__`W(-ZDc6^hj;[o
%hLLQ1<=[=g:Y(;^:$&VIm,8@@]S[Fq1Y_Zk8"[Gi]&dkq..m&Y&hhNlJEiLcO;'osDf925YhQG2LD7@7jPHeQo,FA@A>V@m;[".,
%6S/'%lrP6Q9Rf[2gi13SVk[PK8lBAioqT&[]NES=Ie;=]Np2ON/t>8/G*K[@gM$o.F/:=V*H2[um8dt+rNbOij_Xk7T+QNa.u*pk
%PRN:!4FD5VFGu[H*g$hJLRlW3_CSV!BN6n,d%QZ`<`J7mQ5,C/I/D<HZU=`J^G.\npN+RkYgW[>l*D]T_H%dX7oB?)im5@[.ak8>
%`N;obX2V:fUN%3aGq[#o_L-oB]u@'AbVWpr5fNMfJI:-E`,8?107C()B;\mg\A[!;HMlto2(O.TO,Rc8dPJfS@97J1%DcaR.Gg6a
%6S+E*;?>teGWHcoC_?fl9WI)W&kP+%Oc@@Qn<Lo*kV8s6So]Z[+A%/Z-WT>=U[J^`*"G20abK"[Cj9=%n+!06IM6i@4nAEl51C?C
%b+TM+>(e!FcX)(\0SFA!IO!#Aq1<+BoUc^A(4r2j,re;i"du@81DK;5!b*B,X`%Lh><o3+*Zqq)d(li!6=F/+]H`=ei)XrUD;Atb
%bS\^.q8;123r6I\IeWctrUXCpp!<[-pVB'XeM!S0M]gSn%-rZsEQGJ?bb0Tg+j?6e&FXV*_J8JXbhiiSA=`<]$*/5/fnj7l?jdh`
%eBecs36XhH0&`&3l"+l'C+1fUNh<b4U1uT68=$OWXm*hAA!FY]GR_2EhX]*Gp:Ra*Xi`Q6>.QC3>q"oBD\/U@ZJ+?:LSP?\8p*VI
%,!$PcqAb@@.WK2a)/?sZWb1la-48NVRm">bT-*#Za1=X-V3L!W2nJ4l2d'C\O%g<kjM*F*LNaolEQRJ96#qKG-0-?0_p@ikYaZ==
%@AaST[c2BRV20\K.5DSEhOS*j=1uO#L\XabU:K2i-ZM]U$ID!mSbTrmnBOdGa3bQhW=#,CLe<X$ISAWB-?3+1X,j*$YPE;[-2.9+
%T1:\m=Q*rcO5N_UFBPA+pdrnn*)lcDf:*iQ>RIRT4lE=O;R<7q5Y.+CmJ*2d<`kY`)-o!CnaA8p;=T5TDHgUbkb>'$1P8r-M_4j<
%g:S)gI`@ftQtqo(Se8`"6P=D%QpotZ1R3rd')^i:en&rs=HI00nZIDr@/0Y%E.`GM;>&Gd`=20,S`-hQl9h@"D?=.K/j_Ddq;[%M
%bgTAs_Gfu;S?J#1M0q]%8oRI(!?q""E7d[VSRW7"OEX6k'Q7o'(-m]%:E-f'E#B8+I/_rlPLA5,Yq(T\&\&Y7I)I?T*Fh4!W&DJ/
%#-q$FKc6!emeJ3U@%=68d'OOJo?8,qY]5e90ah*]"C/lYjQgb7MPDH`Qn/cm19M3qLK+#eP:L8?)"R1%?n*5Z3)9IQdVe%Q)L!V;
%\QOr;PaYji.2g-&"A!aDHk]"^'M]bC8pE7mZM9A*/-p4f=IA.g>QVh$D]a?Z@:/pOb_2j92lg8cS[f-jCGd[Xlei9^7#6FKdY2m!
%?Z1gn2-NQR)=KN<OjTZ.(_%@>;5aq@e46EG#k!;hGmZ]d-^dbh1;WlV^Rb^:po#ls.R/s.aV_83^KRMu]'I[]AG#%0,C-&(B8@$2
%ZhG)uA$hLjF>3Fa'!_/H^>TH^gRE]ER:eg_@PH1!0i49iodJhm_Ib"JO+rn#3JOG%F`e+DbV2=.XfmB1384ci(^Q!Z*)kH3au%)0
%f)\qXc9!mWSGXF9"(A15_SZeu&a,04ZmEhkNACmo2Ff"i)eVIWcqta=fs!R/HA8Ys0^7P2LP3dTJ4bf\o?O+p10*A93BnbELPBb%
%'S1ohki?WV"lnjE?R$m8A"XUZq86N85%jgWPqpQ1RBF1)E"4+m;!9';@,R$diV\h2=mI]nYWZ]9_t'EDZK#N61>j\g)iTNf!/g)F
%?n*kimQj$.^dUNeMSI9Jjg<NYAdgg[GHi1-[NpA'7S=_!!6^BY`]J9@DgEq$BiJu!IY.J#Rlq$ZiPXa\SHm26S&Xcaj#k7VLU/ji
%OqokDk*lel:Z56l*]U#[a$8LAa%T`/-T5T;YBP#F4#'q!p-,QMiZn$/8ta?*\1gLXHmVpcf/5b[b(M1pkg0p]#pAuh-/Ia4KfD>Y
%Mi\p!a<+38+hXa13Ne/Pb,ELm<#kNSkRi8Bp`hC80d']9_9IttP4spe]#];@#lOM-/LD7Y\4Dj'38FM;0_8Dq$>@$Q7BUEm!e:Mq
%Ejf]7ZcEHQ>K7co\46tLA-mRlHSMRm.mNmUl*R-TFS[,a(;-]ZEsT88^;NHqgk?S6TK>5J#/$@AGBI..:A"W67s^YA9X2Fod^5TV
%5+Kd?i]#(6C^iL.J""?HgMjr?oQ0Bo+5m=A0u?EiHtn'#-.^QW=:)_ri$OfQ,n@t_>)=)`JaaE,DS/YbR*`m28Hnk`HT72D=s4[o
%RVIrob*R`GDbLcs+nSb@H\82W/j$Ro&)l3VIJH3`C0V_oO*=DEl2Y>C_Is-#`.^3+6gC]$#QnUM0krBeg]3hk<+_GFBI=ho2f^S4
%87-E'aK3?S1C"[$O9hgo=G_*CR9,GP6:10%G1s:>1O:t=iCX^C@f5qp%q\>1)WmFR8+f3e/d>;(U@b=)`,UkIVa%4\O)*k=Ze.AY
%08a]VFG&W(F$2r^'X)>i8FZ1TKW'e&SBKf8`8Yf-mCYV`jWN>,p(5g8`*6<6nW@jg$c2FJ*jbKMhnFIg45a!rE`Aae5GF,AY`etm
%"Eh4MZ,A:F(kcNN%M+ZKi<C)JPreRIa0?ZPJi2P#\!lN9945s)96]b+9siMFC=d,QA.&Q`3Zf*Qi(LTQ\-kum;laRc,>[Q(G_F#S
%87!92CkTI(DAVtN3Ej7!ck_g(^J]1*Mp`I$LO8oY`RohIPa>P7rn-#WYlf7#e"XFJX7;,u5XZYZ:??IJ"X`^H^A@G04D'c<qIMo6
%dbL"'V$6?QU5cd/YLWoo\39lC]$%jpk%pTGUH-&>&3luK*WA%/8+p^%+(^]5,prkPlF6lP'5I\9OFCfH[NU;\6>%iB_-J9sdn^(/
%n!.;_`-81H2[T4i]ei9"YgA!cXGBe!]f%c+8I"ugK67&0KCan;!OC]#M00@MNi4(+#fkSD:JDO>^nEPE'RK0m!?ln+MrRccU0jtr
%;NhU0e$0M3<33KV'b_ZsfDB6<>cKWr^!fU>#CVs@*W`+oEe6A:fgSuE$5-`-&-i)Yc7h"pP(3hO:nH@6kn1lLNYJ1n`i/+r4ImHL
%K;GL>cBJc$LNQVA;B:XK*iCN#_'>#FV$[7h#K6gGEB'_0O+KXP&Q![>M,hjHdZmpZDWS:-\i,G6gq&ELD=ge"6[\S;)>@&#>aR6M
%X+iM:b#?"hkjYal3-K9sqQ0ND_#mn1>9MJ8![K!:HF&fnZ,DToB6BLr;U$lfGO/UDh5IPXXM*tBDF3ML1W=hNfRG7MhU*Ytkpk;#
%lMJHqC;eNVMAnVkKc:E]]MBEU?3c,;J-<olq]jl6iX61l#!Fre%k?!5=te(bB'en#@[U)e,",t.AHstRi7cIioK-*XP]D(`WW^d9
%H8.`[[^eec@ehZ3*>G<:EsZEX5Y#R)?tmU6K:#1,645;:-oO*@YWLKFIq4GnU.l!`_A^T=09&&J]s7WaA:"$VMaJc(P^'&QGDi$K
%ELM=&S3oj$L3TRmBHbGoJrM:`@.gqsNuR7pC<WE:r'b;5_c4NimdAL+ApUtc[nj*)c9WP=";k4*PnA29h_,Y"AdXC"EN].a+)CUk
%/`Z,*brEE@kDk<Dr9\\4LP8@>A=1qmp,'Iil$_aZ6[Z3_[`PAj$\m?YH7e0%8:9DigYNJbJa`+RC7u_</2DP1pm\i:;%_G]QTG7m
%O[GMSWj4=EH?RR@>0U[$@m1.fi>-pMWr.\WSadcKC\P[^!rj!S]:0*Vmk'=c]\D>H#Ep0TRl?dYN^Oh'iD*s4",<\JI_q2jQ,6q3
%PI_N'Q(=mI<BOUD-()+UoJ0"&a\pJ"n`0rbJ,Gu,f>qha%98,P\j]gokKB\<8$0>>Qln)?EfkS"Wfaf%Kr_fd)n3IsKXAX4a@MV,
%g]mc:,&?]d*/lts3LjWfN?XDH'E\Z(:^(X*-7Zkm)QJMr_JU(t7t^cm'eg@g<7Nub_?pm?YS-'k3\eu"9n_+)PW.lieJ<GYY00oR
%c4>[i%LY3EQ8&He2/s]m5W2M=A+arc1H_$:E?Y)'&0(Qm!e$$f2,WLpK$9=$fC;4@Q:KMHbbNEe$l2c+NC;,tiI/?bMfbtX"/\M%
%5/>S)@#5/Ho.S#;#Do*EaO*?34ip.%`0gE9qon^Pds$K&2]'W]fr%$%2!YdS^W$2rJBb>UDa=r0[k@(rc\+`g4kE6\"6RUKN['QM
%7WdZpLrLh*$r9aV8`e4o/^C8SD>9Sj*L9L;'f#A'"O]cjobQB4\DM`?gG<?ea,u)!1B@O;+o9702oe4.hCjI>G6aN*J5><)&MLJR
%!T)PM+]pEVY)<=fIQK.mB;A<X4N@l.Di3Go,B6+k/qH+RTA[Uo662c*%e*5AQ:.d#$"JXfs/mg$Y98!L'%uHJ8mt!lgkUE'0`j'U
%U;j=XZd"ot1ui2>qj)<]TA1oPE/=nTn"JdG@-D8Hbsl&a$]F%D3#Z%'.#4>?@YY*_/OWCkUSU?@F#n@'ENh7M*??04pdO4uO0d^(
%(%r,1->^Jo!eIn:>^mK`PCa]HCnW)Aq3(5ZT5pTB"U=IhaA+lB/jm"b'R:@!DaXU1fA[Y2CP23g(LXh>J4>nSAg/!-D503AfLBl5
%SN<nD;t&I>;oDB\FeE0>[E/$!]a$S-k#dTe<g:db@l;mb`_448*[=N&1m;8$TO^Fr$Sb*#@t\\_<)M2!*aB8/Q%o"B;UiVKa?sdg
%m;I6oR?]f#'LU'gkn((Gc=ONF,4,HPb[S5/Z(]UflB\_2)WDk)o2bN['@$+8;uk\aEio!g+q2npY8J-,jCb2163>kj@2/!IYt](>
%,:]NO1dpHraTti\(&bs(j:O-NiZ<Qc/K"o^Qsl@eh`\DE*A3]9U1&"D@g&t`jn%1(d37ob:^9MmE>W3drA'3R!^/T9<q7sg*^u'>
%<AF.<1"!j(VmT,cJo;G94te\/6M3/=)c?@2P,TP<;=LHT\aec!b7YI+'C)H)7[uR$"'(`b;p-,@K>DIa("89lCGIkm"2_Im3<4K4
%'UX053^9:)%oK!`TnW,4l+Gk+j_s_&1'K=;%PP.L]3B\$d+rrb^!+@c&b%ihnMZ_1Z'&\a.07P.W=lWj8KVUu`+!2]4%d\*oedbu
%G=.h#Zec0@Dju-rYfRdElP-tiZ*.=T/5dp)M*qZs`o4(KV&4u=?4*0D_(s>%rVbM)4d+<l#H'4Z'UDDr=fB,g4cDA,e7o!/Br]*:
%gm7%+>g1\)LI[4/,6uZ8XC6t.8B7Ma@@)'V\fmh,Nc?mmTO#e'-6K#s-'0muHoJ&p1pJ\)bIfoc>,W;Rk,j!`1h*;+@ErH9-_.*2
%`"W_b84LG!TUHJE$Bp?oW&PH;Z^6B?S")./>Ola'68.N!Fc\o,Xc6l6^8dAF`0C:]n\Q+b'q[Gp.duM&)KOS6<W^jI.#c!-Wd/lM
%4Rl'gqb"W*#uh<*JC'\S)Ec!HeClmfg8'^lGa>ng]@]em?l&/.b@!o[<=A%*;so94+^JTLjl')<k#qNcCCA5<Lh3!@Qt9Ef5CJBI
%M2%Q@1$ISW[LpX0Z<JFD&L/B8EOPfaq:cN;cRi).4PJQ$$i$/'U[J=/e8l@0E68u:/C#\9(ns=!Q"F;XLJgRaE"DNjXpF`Il+I<;
%[Vr`;)"ja:MTI`X9HjZe_kH-4b0W,DS?"i?Pi%+e%I-Yil+/WeO:"$#neOl1q`t5PPi`?V-6=F#i'Z2`e)\lY4W*<r;jur9%@kiN
%&+#S#%%E8U_oQSNLVH@-Rtecb]h;jY#)i%2VSt4EL3YC%5W2%I^;mRjTUJuII;3$+UkD<adD^ME1l6<b0%WY%^cMGHDkFe-Ma_;-
%]OLZ6+6tnV`bJaH<TWf16#@:k)OiWU3+2a?<=++IU`aPAhsljT]A/V=!N5.NOud\A_JaCiNdOt^anP!LmYTW[LYkK*P&F^B;.&/s
%l#P/oIed6;1EOgoro?U5P*WU_5WE;^)6.[X=d4V*#I;*\]):Zm`UJ:!Hgip%_K9E#7%Z=&,'C<MitJr=k"'(-=nKgS?b]N/dT5+/
%dDok4/i+nU7QR;qXjb>#&lm_gj+!I[BhSk5k?X-gjP^g$H'gZos$!KR1".J?9sGBCj70B[NT<b;+pItB=S(<Aa-gM6ZptS3*XS08
%IhO2nJ+H#O3rah*V!KHj2bldG^$Q>O,cbb$0LbO@f4K,G'so1rZQm*EpCK@5g\J?B^S+pJG3A-Cl6Veb&iC<0&e=`Z:@BDc(S,@!
%=o3'Ibo630[r,>Ue%Eao#[>7Hld&obbX79P:8E^p(q=Z^bF-jN)9XI@AC7Mlc-"Zm['<4M6eXDl.nCmQ[-"jeIu=sN@Y?aoXmc*-
%c]50@7#CQ`6^;c<0ZcpB]BAUF1[']h%G35GrSTKhln7FO`3fSH/k`RWb]Z]H]%0l*mWS9#$`eTHhPO8(pp\>;d1:<s?1=U5G;Q]1
%^Ls!PM?<#^Gud0.'(16V5R=`Ne$g]Y@ak5JK+EAd+uagp.N\>hQJO4a@iJ0rR/<gc&beVMjeR&peLTAL;s<;co\:cV&l4;;L1Bm>
%lrR`UD@mr%P.@GOU0:WG_mD)G#l1!b3pMqg(VfM3#B&lt*Bc1co\flm\2';1'KiK;QL%e[R+'1!^t'OdF\EC(<Abbn%?;YFpPgsH
%Ts3H6C7-9Cb&eU@;R_[4O$(3?f7=9*l'+DmfPeNPal<V5kP>J=h$'6%i8k`NER:X-qC%KU?j4e`-+.?Dlr<u1KTo]?]fI1LXBEQW
%&s/*_VhFJ\I!"ile4;cI.IPj677]Sem3QqJ%%r+GT#VAUE?fNCqOioFG\mc#JG`T6LP:0GhsX%>Y7'Es7MIs5.3'qX8*sD&+VSke
%C"B!eI)`3Uesf;HgbB4fBN4:f'BRZFHnt,C^SA$Q,>;pl[&41qE4'1hVV$cu3oKNqP%(XX;7/;Y).u`:P08HK/iSMjT9>:(BuVc:
%&PZk?C5P%EY55,trRF\:0DE]a)\NJu&b5r3NiC;o39=H_+#(AdM_M"h9N)\r044<i3EXpcj6(peDpTf]HN<;^6UPP;T7m%HK&Zp.
%!3&d35rD:EI!MeKVJ^_We._uQVj9fH?dQ[&7N"4Q6fL9ro&XnsH&5Fo-,*o*R=A>Xk4b`32T5_Ke"r_&EBngC=LM)$*pL"OV]9O(
%[RUMmXP4XH?AfPprJjmgZ3U7Yi$c"C1c3B5UELIKg"BAZFlKEpWpN5e$hF6i5nqVL<FT,boO.>u!mZ0HQ)j'3WtNthQ$meZ6k?U:
%5`Zd4IIsIla0&pknZ<toiiD$1(u8qbB]!uG7ID;rcd'4%=O+;SgkLP'gQ9VB9q\)9+8B5P!`jpIj.Y:9NMN<:]1WkA0'r'XFp:;7
%W/=dQ?"]BeP9Cm'J0,SXZ6">KCZ??QX$L<Z%RH#gJ5WnnmGlks*kZGBqqCi=(E*Su0C65#=o_r6ei#d2Xd#=^?1O.,),<>]/jpq)
%.NH.)3G.WS?7V&sBFNm6=-Z]@KO;@f>sETP$am[I!(94A6bR4R`'ZS0)!4qXa4s-a"keLG*+O6ao(<'e]mt$B](g($gL"W)l1\2[
%>qSU,lk^')pjlH#[SttF\QV5]j%#)IJ#P.l/%_eecGO%4/;QjW*m5N!g;mT]^KGkGHi2l4CrR>i\+&oC8eU`:&J2S_)9Rc8#0ua@
%Edh@7[2K+WBN3tp=oQrTI##ErDC-$WQ_5r!bdDki^.!:##HN&&M-QibNL!+(7J64eIp?][epd5Mo%sl7l8+f?/kSs)Xs1Tjr@O5<
%-HP@.h-UBMUmn_t;0HDQho)\3^8@t1A:Ks1@?I:,0:+2eU+Ls+]j.V`$J/3oPJ%<=i"haJ<#8qOH>c[BQ*"W,pM,X-p>p5+B/+_!
%4."ffmne_%hmP0!Bs9'qe=cR]76*1ZrDNlcIq)u1&[jJr)9UcVh7[SlX/*23TP:d5Gf&+&l&jN]EpZRmI)"6bFW2ME&0$%_(DFF;
%jr?(;'M'pi,3nl94-i'iK^7!Z_9s+"$XXk1?5bj!BSb`;OiG#2-(u_''8jJj<TO*%G-tX[dZ+.Rp;XPF?C8`shDnU052aiT].U6q
%9,Q5<=MbH]p>H\ki&/.;Z[r%ZDnc8Km6CO@]ANYcs4mXphu;+)I/DrB^\m>7roVo'qu?N5J,JECs65UEqq#3So[E:.nR):jrKj/V
%peUq^ci<j^J,SL/4TEmVs7iL!roIMeq+nd'r%J*9TDpQJE)Bs2qqqG@J,)l)rU0[de;G],~>
%AI9_PrivateDataEnd
